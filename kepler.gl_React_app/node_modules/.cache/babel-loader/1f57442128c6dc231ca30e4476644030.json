{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DEFAULT_COLOR_RANGE = exports.COLOR_RANGES = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _colorbrewer = _interopRequireDefault(require(\"colorbrewer\"));\nvar _customColorRanges = require(\"./custom-color-ranges\");\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\n\n// Add colorbrewer color schemes (Data Science requirement)\n// See http://colorbrewer2.org/\nvar colorBrewerMap = Object.entries(_colorbrewer[\"default\"].schemeGroups).reduce(function (accu, _ref) {\n  var _ref2 = (0, _slicedToArray2[\"default\"])(_ref, 2),\n    type = _ref2[0],\n    palettes = _ref2[1];\n  return _objectSpread(_objectSpread({}, accu), palettes.reduce(function (group, name) {\n    return _objectSpread(_objectSpread({}, group), {}, (0, _defineProperty2[\"default\"])({}, name, type));\n  }, {}));\n}, {});\nvar colorRanges = (0, _toConsumableArray2[\"default\"])(_customColorRanges.VizColorPalette);\nfor (var _i = 0, _Object$entries = Object.entries(_colorbrewer[\"default\"]); _i < _Object$entries.length; _i++) {\n  var _Object$entries$_i = (0, _slicedToArray2[\"default\"])(_Object$entries[_i], 2),\n    keyName = _Object$entries$_i[0],\n    colorScheme = _Object$entries$_i[1];\n  if (keyName !== 'schemeGroups') {\n    for (var _i2 = 0, _Object$entries2 = Object.entries(colorScheme); _i2 < _Object$entries2.length; _i2++) {\n      var _Object$entries2$_i = (0, _slicedToArray2[\"default\"])(_Object$entries2[_i2], 2),\n        lenKey = _Object$entries2$_i[0],\n        colors = _Object$entries2$_i[1];\n      colorRanges.push({\n        name: \"ColorBrewer \".concat(keyName, \"-\").concat(lenKey),\n        type: colorBrewerMap[keyName],\n        category: 'ColorBrewer',\n        colors: colors\n      });\n    }\n  }\n}\nvar COLOR_RANGES = colorRanges;\nexports.COLOR_RANGES = COLOR_RANGES;\nvar DEFAULT_COLOR_RANGE = colorRanges.find(function (_ref3) {\n  var name = _ref3.name;\n  return name === 'Global Warming';\n}) || {\n  name: 'Global Warming',\n  type: 'SEQ',\n  category: 'Uber',\n  colors: ['#5A1846', '#900C3F', '#C70039', '#E3611C', '#F1920E', '#FFC300']\n};\nexports.DEFAULT_COLOR_RANGE = DEFAULT_COLOR_RANGE;","map":{"version":3,"sources":["../../src/constants/color-ranges.js"],"names":["colorBrewerMap","entries","colorbrewer","schemeGroups","reduce","accu","type","palettes","group","name","colorRanges","VizColorPalette","keyName","colorScheme","Object","lenKey","colors","push","category","COLOR_RANGES","DEFAULT_COLOR_RANGE","find"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport colorbrewer from 'colorbrewer';\nimport {VizColorPalette} from './custom-color-ranges';\n\n// Add colorbrewer color schemes (Data Science requirement)\n// See http://colorbrewer2.org/\n\nconst colorBrewerMap = Object.entries(colorbrewer.schemeGroups).reduce(\n  (accu, [type, palettes]) => ({\n    ...accu,\n    ...palettes.reduce(\n      (group, name) => ({\n        ...group,\n        [name]: type\n      }),\n      {}\n    )\n  }),\n  {}\n);\n\nconst colorRanges = [...VizColorPalette];\n\nfor (const [keyName, colorScheme] of Object.entries(colorbrewer)) {\n  if (keyName !== 'schemeGroups') {\n    for (const [lenKey, colors] of Object.entries(colorScheme)) {\n      colorRanges.push({\n        name: `ColorBrewer ${keyName}-${lenKey}`,\n        type: colorBrewerMap[keyName],\n        category: 'ColorBrewer',\n        colors\n      });\n    }\n  }\n}\n\nexport const COLOR_RANGES = colorRanges;\n\nexport const DEFAULT_COLOR_RANGE = colorRanges.find(({name}) => name === 'Global Warming') || {\n  name: 'Global Warming',\n  type: 'SEQ',\n  category: 'Uber',\n  colors: ['#5A1846', '#900C3F', '#C70039', '#E3611C', '#F1920E', '#FFC300']\n};\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import { Model } from '@luma.gl/engine';\nimport ScenegraphNode from './scenegraph-node';\nexport default class ModelNode extends ScenegraphNode {\n  constructor(gl) {\n    let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super(props);\n    this.onBeforeRender = null;\n    this.AfterRender = null;\n    if (gl instanceof Model) {\n      this.model = gl;\n      this._setModelNodeProps(props);\n    } else {\n      this.model = new Model(gl, props);\n    }\n    this.managedResources = props.managedResources || [];\n  }\n  setProps(props) {\n    super.setProps(props);\n    this._setModelNodeProps(props);\n    return this;\n  }\n  delete() {\n    if (this.model) {\n      this.model.delete();\n      this.model = null;\n    }\n    this.managedResources.forEach(resource => resource.delete());\n    this.managedResources = [];\n  }\n  draw() {\n    return this.model.draw(...arguments);\n  }\n  setUniforms() {\n    this.model.setUniforms(...arguments);\n    return this;\n  }\n  setAttributes() {\n    this.model.setAttributes(...arguments);\n    return this;\n  }\n  updateModuleSettings() {\n    this.model.updateModuleSettings(...arguments);\n    return this;\n  }\n  _setModelNodeProps(props) {\n    this.model.setProps(props);\n  }\n}","map":{"version":3,"sources":["../../../src/scenegraph/model-node.js"],"names":["Model","ScenegraphNode","ModelNode","constructor","gl","props","onBeforeRender","AfterRender","model","_setModelNodeProps","managedResources","setProps","delete","forEach","resource","draw","setUniforms","setAttributes","updateModuleSettings"],"mappings":"AAAA,SAAQA,KAAR,QAAoB,iBAApB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AAEA,eAAe,MAAMC,SAAN,SAAwBD,cAAxB,CAAuC;EACpDE,WAAW,CAACC,EAAD,EAAiB;IAAA,IAAZC,KAAY,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,CAAA,CAAI;IAC1B,KAAA,CAAMA,KAAN,CAAA;IAGA,IAAA,CAAKC,cAAL,GAAsB,IAAtB;IACA,IAAA,CAAKC,WAAL,GAAmB,IAAnB;IAGA,IAAIH,EAAE,YAAYJ,KAAlB,EAAyB;MACvB,IAAA,CAAKQ,KAAL,GAAaJ,EAAb;MACA,IAAA,CAAKK,kBAAL,CAAwBJ,KAAxB,CAAA;IACD,CAHD,MAGO;MACL,IAAA,CAAKG,KAAL,GAAa,IAAIR,KAAJ,CAAUI,EAAV,EAAcC,KAAd,CAAb;IACD;IAED,IAAA,CAAKK,gBAAL,GAAwBL,KAAK,CAACK,gBAANL,IAA0B,EAAlD;EACD;EAEDM,QAAQ,CAACN,KAAD,EAAQ;IACd,KAAA,CAAMM,QAAN,CAAeN,KAAf,CAAA;IACA,IAAA,CAAKI,kBAAL,CAAwBJ,KAAxB,CAAA;IACA,OAAO,IAAP;EACD;EAEDO,MAAM,GAAG;IACP,IAAI,IAAA,CAAKJ,KAAT,EAAgB;MACd,IAAA,CAAKA,KAAL,CAAWI,MAAX,EAAA;MACA,IAAA,CAAKJ,KAAL,GAAa,IAAb;IACD;IAED,IAAA,CAAKE,gBAAL,CAAsBG,OAAtB,CAA8BC,QAAQ,IAAIA,QAAQ,CAACF,MAATE,EAA1C,CAAA;IACA,IAAA,CAAKJ,gBAAL,GAAwB,EAAxB;EACD;EAGDK,IAAI,GAAU;IAEZ,OAAO,IAAA,CAAKP,KAAL,CAAWO,IAAX,CAAgB,GAAA,SAAhB,CAAP;EACD;EAEDC,WAAW,GAAU;IACnB,IAAA,CAAKR,KAAL,CAAWQ,WAAX,CAAuB,GAAA,SAAvB,CAAA;IACA,OAAO,IAAP;EACD;EAEDC,aAAa,GAAU;IACrB,IAAA,CAAKT,KAAL,CAAWS,aAAX,CAAyB,GAAA,SAAzB,CAAA;IACA,OAAO,IAAP;EACD;EAEDC,oBAAoB,GAAU;IAC5B,IAAA,CAAKV,KAAL,CAAWU,oBAAX,CAAgC,GAAA,SAAhC,CAAA;IACA,OAAO,IAAP;EACD;EAIDT,kBAAkB,CAACJ,KAAD,EAAQ;IACxB,IAAA,CAAKG,KAAL,CAAWG,QAAX,CAAoBN,KAApB,CAAA;EACD;AA5DmD","sourcesContent":["import {Model} from '@luma.gl/engine';\nimport ScenegraphNode from './scenegraph-node';\n\nexport default class ModelNode extends ScenegraphNode {\n  constructor(gl, props = {}) {\n    super(props);\n\n    // pverride callbacks to make sure we call them with this\n    this.onBeforeRender = null;\n    this.AfterRender = null;\n\n    // Create new Model or used supplied Model\n    if (gl instanceof Model) {\n      this.model = gl;\n      this._setModelNodeProps(props);\n    } else {\n      this.model = new Model(gl, props);\n    }\n\n    this.managedResources = props.managedResources || [];\n  }\n\n  setProps(props) {\n    super.setProps(props);\n    this._setModelNodeProps(props);\n    return this;\n  }\n\n  delete() {\n    if (this.model) {\n      this.model.delete();\n      this.model = null;\n    }\n\n    this.managedResources.forEach(resource => resource.delete());\n    this.managedResources = [];\n  }\n\n  // Forward node methods\n  draw(...args) {\n    // Return value indicates if something was actually drawn\n    return this.model.draw(...args);\n  }\n\n  setUniforms(...args) {\n    this.model.setUniforms(...args);\n    return this;\n  }\n\n  setAttributes(...args) {\n    this.model.setAttributes(...args);\n    return this;\n  }\n\n  updateModuleSettings(...args) {\n    this.model.updateModuleSettings(...args);\n    return this;\n  }\n\n  // PRIVATE\n\n  _setModelNodeProps(props) {\n    this.model.setProps(props);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
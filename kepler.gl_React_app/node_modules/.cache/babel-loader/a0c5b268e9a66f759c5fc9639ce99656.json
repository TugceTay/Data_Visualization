{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.provideInitialState = provideInitialState;\nexports[\"default\"] = void 0;\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _reduxActions = require(\"redux-actions\");\nvar _actionWrapper = require(\"../actions/action-wrapper\");\nvar _actions = require(\"../actions/actions\");\nvar _core = require(\"./core\");\nvar _actionTypes = _interopRequireDefault(require(\"../constants/action-types\"));\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\n\n// INITIAL_STATE\nvar initialCoreState = {};\nfunction provideInitialState(initialState) {\n  var coreReducer = (0, _core.coreReducerFactory)(initialState);\n  var handleRegisterEntry = function handleRegisterEntry(state, _ref) {\n    var _ref$payload = _ref.payload,\n      id = _ref$payload.id,\n      mint = _ref$payload.mint,\n      mapboxApiAccessToken = _ref$payload.mapboxApiAccessToken,\n      mapboxApiUrl = _ref$payload.mapboxApiUrl,\n      mapStylesReplaceDefault = _ref$payload.mapStylesReplaceDefault,\n      initialUiState = _ref$payload.initialUiState;\n    // by default, always create a mint state even if the same id already exist\n    // if state.id exist and mint=false, keep the existing state\n    var previousState = state[id] && mint === false ? state[id] : undefined;\n    return _objectSpread(_objectSpread({}, state), {}, (0, _defineProperty2[\"default\"])({}, id, coreReducer(previousState, (0, _actions.keplerGlInit)({\n      mapboxApiAccessToken: mapboxApiAccessToken,\n      mapboxApiUrl: mapboxApiUrl,\n      mapStylesReplaceDefault: mapStylesReplaceDefault,\n      initialUiState: initialUiState\n    }))));\n  };\n  var handleDeleteEntry = function handleDeleteEntry(state, _ref2) {\n    var id = _ref2.payload;\n    return Object.keys(state).reduce(function (accu, curr) {\n      return _objectSpread(_objectSpread({}, accu), curr === id ? {} : (0, _defineProperty2[\"default\"])({}, curr, state[curr]));\n    }, {});\n  };\n  var handleRenameEntry = function handleRenameEntry(state, _ref4) {\n    var _ref4$payload = _ref4.payload,\n      oldId = _ref4$payload.oldId,\n      newId = _ref4$payload.newId;\n    return Object.keys(state).reduce(function (accu, curr) {\n      return _objectSpread(_objectSpread({}, accu), (0, _defineProperty2[\"default\"])({}, curr === oldId ? newId : curr, state[curr]));\n    }, {});\n  };\n  return function () {\n    var _handlers;\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialCoreState;\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n    // update child states\n    Object.keys(state).forEach(function (id) {\n      var updateItemState = coreReducer(state[id], (0, _actionWrapper._actionFor)(id, action));\n      state = (0, _actionWrapper._updateProperty)(state, id, updateItemState);\n    }); // perform additional state reducing (e.g. switch action.type etc...)\n\n    var handlers = (_handlers = {}, (0, _defineProperty2[\"default\"])(_handlers, _actionTypes[\"default\"].REGISTER_ENTRY, handleRegisterEntry), (0, _defineProperty2[\"default\"])(_handlers, _actionTypes[\"default\"].DELETE_ENTRY, handleDeleteEntry), (0, _defineProperty2[\"default\"])(_handlers, _actionTypes[\"default\"].RENAME_ENTRY, handleRenameEntry), _handlers); // @ts-ignore\n\n    return (0, _reduxActions.handleActions)(handlers, initialCoreState)(state, action);\n  };\n}\nvar _keplerGlReducer = provideInitialState();\nfunction mergeInitialState() {\n  var saved = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var provided = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var keys = ['mapState', 'mapStyle', 'visState', 'uiState']; // shallow merge each reducer\n\n  return keys.reduce(function (accu, key) {\n    return _objectSpread(_objectSpread({}, accu), saved[key] && provided[key] ? (0, _defineProperty2[\"default\"])({}, key, _objectSpread(_objectSpread({}, saved[key]), provided[key])) : (0, _defineProperty2[\"default\"])({}, key, saved[key] || provided[key] || {}));\n  }, {});\n}\nfunction decorate(target) {\n  var savedInitialState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var targetInitialState = savedInitialState;\n  /**\n   * Returns a kepler.gl reducer that will also pass each action through additional reducers spiecified.\n   * The parameter should be either a reducer map or a reducer function.\n   * The state passed into the additional action handler is the instance state.\n   * It will include all the subreducers `visState`, `uiState`, `mapState` and `mapStyle`.\n   * `.plugin` is only meant to be called once when mounting the keplerGlReducer to the store.\n   * **Note** This is an advanced option to give you more freedom to modify the internal state of the kepler.gl instance.\n   * You should only use this to adding additional actions instead of replacing default actions.\n   *\n   * @mixin keplerGlReducer.plugin\n   * @memberof keplerGlReducer\n   * @param {Object|Function} customReducer - A reducer map or a reducer\n   * @public\n   * @example\n   * const myKeplerGlReducer = keplerGlReducer\n   *  .plugin({\n   *    // 1. as reducer map\n   *    HIDE_AND_SHOW_SIDE_PANEL: (state, action) => ({\n   *      ...state,\n   *      uiState: {\n   *        ...state.uiState,\n   *        readOnly: !state.uiState.readOnly\n   *      }\n   *    })\n   *  })\n   * .plugin(handleActions({\n   *   // 2. as reducer\n   *   'HIDE_MAP_CONTROLS': (state, action) => ({\n   *     ...state,\n   *     uiState: {\n   *       ...state.uiState,\n   *       mapControls: hiddenMapControl\n   *     }\n   *   })\n   * }, {}));\n   */\n\n  target.plugin = function plugin(customReducer) {\n    var _this = this;\n    if ((0, _typeof2[\"default\"])(customReducer) === 'object') {\n      // if only provided a reducerMap, wrap it in a reducer\n      customReducer = (0, _reduxActions.handleActions)(customReducer, {});\n    } // use 'function' keyword to enable 'this'\n\n    return decorate(function () {\n      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var nextState = _this(state, action); // for each entry in the staten\n\n      Object.keys(nextState).forEach(function (id) {\n        // update child states\n        nextState = (0, _actionWrapper._updateProperty)(nextState, id, customReducer(nextState[id], (0, _actionWrapper._actionFor)(id, action)));\n      });\n      return nextState;\n    });\n  };\n  /**\n   * Return a reducer that initiated with custom initial state.\n   * The parameter should be an object mapping from `subreducer` name to custom subreducer state,\n   * which will be shallow **merged** with default initial state.\n   *\n   * Default subreducer state:\n   *  - [`visState`](./vis-state.md#INITIAL_VIS_STATE)\n   *  - [`mapState`](./map-state.md#INITIAL_MAP_STATE)\n   *  - [`mapStyle`](./map-style.md#INITIAL_MAP_STYLE)\n   *  - [`uiState`](./ui-state.md#INITIAL_UI_STATE)\n   * @mixin keplerGlReducer.initialState\n   * @memberof keplerGlReducer\n   * @param {Object} iniSt - custom state to be merged with default initial state\n   * @public\n   * @example\n   * const myKeplerGlReducer = keplerGlReducer\n   *  .initialState({\n   *    uiState: {readOnly: true}\n   *  });\n   */\n\n  target.initialState = function initialState(iniSt) {\n    var merged = mergeInitialState(targetInitialState, iniSt);\n    var targetReducer = provideInitialState(merged);\n    return decorate(targetReducer, merged);\n  };\n  return target;\n}\n/**\n * Kepler.gl reducer to be mounted to your store. You can mount `keplerGlReducer` at property `keplerGl`, if you choose\n * to mount it at another address e.g. `foo` you will need to specify it when you mount `KeplerGl` component in your app with `getState: state => state.foo`\n * @public\n * @example\n * import keplerGlReducer from 'kepler.gl/reducers';\n * import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\n * import {taskMiddleware} from 'react-palm/tasks';\n *\n * const initialState = {};\n * const reducers = combineReducers({\n *   // <-- mount kepler.gl reducer in your app\n *   keplerGl: keplerGlReducer,\n *\n *   // Your other reducers here\n *   app: appReducer\n * });\n *\n * // using createStore\n * export default createStore(reducer, initialState, applyMiddleware(taskMiddleware));\n */\n\nvar keplerGlReducer = decorate(_keplerGlReducer);\nvar _default = keplerGlReducer;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../src/reducers/root.js"],"names":["initialCoreState","provideInitialState","initialState","coreReducer","handleRegisterEntry","state","payload","id","mint","mapboxApiAccessToken","mapboxApiUrl","mapStylesReplaceDefault","initialUiState","previousState","undefined","handleDeleteEntry","keys","reduce","accu","curr","handleRenameEntry","oldId","newId","action","Object","forEach","updateItemState","handlers","ActionTypes","REGISTER_ENTRY","DELETE_ENTRY","RENAME_ENTRY","_keplerGlReducer","mergeInitialState","saved","provided","key","decorate","target","savedInitialState","targetInitialState","plugin","customReducer","nextState","iniSt","merged","targetReducer","keplerGlReducer"],"mappings":";;;;;;;;;;AAoBA,IAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;AAEA,IAAA,cAAA,GAAA,OAAA,CAAA,2BAAA,CAAA;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;AACA,IAAA,KAAA,GAAA,OAAA,CAAA,QAAA,CAAA;AACA,IAAA,YAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,2BAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA,IAAMA,gBAAgB,GAAG,CAAA,CAAzB;AAEO,SAASC,mBAAT,CAA6BC,YAA7B,EAA2C;EAChD,IAAMC,WAAW,GAAG,CAAA,CAAA,EAAA,KAAA,CAAA,kBAAA,EAAmBD,YAAnB,CAApB;EAEA,IAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,CAC1BC,KAD0B,EAAA,IAAA,EAYvB;IAAA,IAAA,YAAA,GAAA,IAAA,CATDC,OASC;MARCC,EAQD,GAAA,YAAA,CARCA,EAQD;MAPCC,IAOD,GAAA,YAAA,CAPCA,IAOD;MANCC,oBAMD,GAAA,YAAA,CANCA,oBAMD;MALCC,YAKD,GAAA,YAAA,CALCA,YAKD;MAJCC,uBAID,GAAA,YAAA,CAJCA,uBAID;MAHCC,cAGD,GAAA,YAAA,CAHCA,cAGD;IACH;IACA;IACA,IAAMC,aAAa,GAAGR,KAAK,CAACE,EAAD,CAALF,IAAaG,IAAI,KAAK,KAAtBH,GAA8BA,KAAK,CAACE,EAAD,CAAnCF,GAA0CS,SAAhE;IAEA,OAAA,aAAA,CAAA,aAAA,CAAA,CAAA,CAAA,EAEKT,KAFL,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAGGE,EAHH,EAGQJ,WAAW,CACfU,aADe,EAEf,CAAA,CAAA,EAAA,QAAA,CAAA,YAAA,EAAa;MAACJ,oBAAoB,EAApBA,oBAAD;MAAuBC,YAAY,EAAZA,YAAvB;MAAqCC,uBAAuB,EAAvBA,uBAArC;MAA8DC,cAAc,EAAdA;IAA9D,CAAb,CAFe,CAHnB,CAAA,CAAA;EAQD,CAzBD;EA2BA,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,CAACV,KAAD,EAAA,KAAA,EAAA;IAAA,IAAkBE,EAAlB,GAAA,KAAA,CAASD,OAAT;IAAA,OACxB,MAAM,CAACU,IAAP,CAAYX,KAAZ,CAAA,CAAmBY,MAAnB,CACE,UAACC,IAAD,EAAOC,IAAP,EAAA;MAAA,OAAA,aAAA,CAAA,aAAA,CAAA,CAAA,CAAA,EACKD,IADL,CAAA,EAEMC,IAAI,KAAKZ,EAATY,GAAc,CAAA,CAAdA,GAAAA,CAAAA,CAAAA,EAAAA,gBAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAAA,CAAAA,EAAqBA,IAArBA,EAA4Bd,KAAK,CAACc,IAAD,CAAjCA,CAFN,CAAA;IAAA,CADF,EAKE,CAAA,CALF,CADwB;EAAA,CAA1B;EASA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACf,KAAD,EAAA,KAAA,EAAA;IAAA,IAAA,aAAA,GAAA,KAAA,CAASC,OAAT;MAAmBe,KAAnB,GAAA,aAAA,CAAmBA,KAAnB;MAA0BC,KAA1B,GAAA,aAAA,CAA0BA,KAA1B;IAAA,OACxB,MAAM,CAACN,IAAP,CAAYX,KAAZ,CAAA,CAAmBY,MAAnB,CACE,UAACC,IAAD,EAAOC,IAAP,EAAA;MAAA,OAAA,aAAA,CAAA,aAAA,CAAA,CAAA,CAAA,EACKD,IADL,CAAA,EAAA,CAAA,CAAA,EAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAEOC,IAAI,KAAKE,KAATF,GAAiBG,KAAjBH,GAAyBA,IAFhC,EAEuCd,KAAK,CAACc,IAAD,CAF5C,CAAA,CAAA;IAAA,CADF,EAKE,CAAA,CALF,CADwB;EAAA,CAA1B;EASA,OAAO,YAAsC;IAAA,IAAA,SAAA;IAAA,IAArCd,KAAqC,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAA7BL,gBAA6B;IAAA,IAAXuB,MAAW,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA,SAAA;IAC3C;IACAC,MAAM,CAACR,IAAPQ,CAAYnB,KAAZmB,CAAAA,CAAmBC,OAAnBD,CAA2B,UAAA,EAAE,EAAI;MAC/B,IAAME,eAAe,GAAGvB,WAAW,CAACE,KAAK,CAACE,EAAD,CAAN,EAAY,CAAA,CAAA,EAAA,cAAA,CAAA,UAAA,EAAWA,EAAX,EAAegB,MAAf,CAAZ,CAAnC;MACAlB,KAAK,GAAG,CAAA,CAAA,EAAA,cAAA,CAAA,eAAA,EAAgBA,KAAhB,EAAuBE,EAAvB,EAA2BmB,eAA3B,CAARrB;IACD,CAHDmB,CAAAA,CAF2C,CAO3C;;IACA,IAAMG,QAAQ,IAAA,SAAA,GAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,SAAA,EACXC,YAAAA,CAAAA,SAAAA,CAAAA,CAAYC,cADD,EACkBzB,mBADlB,CAAA,EAAA,CAAA,CAAA,EAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,SAAA,EAEXwB,YAAAA,CAAAA,SAAAA,CAAAA,CAAYE,YAFD,EAEgBf,iBAFhB,CAAA,EAAA,CAAA,CAAA,EAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,SAAA,EAGXa,YAAAA,CAAAA,SAAAA,CAAAA,CAAYG,YAHD,EAGgBX,iBAHhB,CAAA,EAAA,SAAA,CAAd,CAR2C,CAc3C;;IACA,OAAO,CAAA,CAAA,EAAA,aAAA,CAAA,aAAA,EAAcO,QAAd,EAAwB3B,gBAAxB,CAAA,CAA0CK,KAA1C,EAAiDkB,MAAjD,CAAP;EACD,CAhBD;AAiBD;AAED,IAAMS,gBAAgB,GAAG/B,mBAAmB,EAA5C;AAEA,SAASgC,iBAAT,GAAsD;EAAA,IAA3BC,KAA2B,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAnB,CAAA,CAAmB;EAAA,IAAfC,QAAe,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,CAAA,CAAI;EACpD,IAAMnB,IAAI,GAAG,CAAC,UAAD,EAAa,UAAb,EAAyB,UAAzB,EAAqC,SAArC,CAAb,CADoD,CAGpD;;EACA,OAAO,IAAI,CAACC,MAAL,CACL,UAACC,IAAD,EAAOkB,GAAP,EAAA;IAAA,OAAA,aAAA,CAAA,aAAA,CAAA,CAAA,CAAA,EACKlB,IADL,CAAA,EAEMgB,KAAK,CAACE,GAAD,CAALF,IAAcC,QAAQ,CAACC,GAAD,CAAtBF,GAAAA,CAAAA,CAAAA,EAAAA,gBAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAAA,CAAAA,EACEE,GADFF,EAAAA,aAAAA,CAAAA,aAAAA,CAAAA,CAAAA,CAAAA,EACYA,KAAK,CAACE,GAAD,CADjBF,CAAAA,EAC2BC,QAAQ,CAACC,GAAD,CADnCF,CAAAA,CAAAA,GAAAA,CAAAA,CAAAA,EAAAA,gBAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAAA,CAAAA,EAEEE,GAFFF,EAEQA,KAAK,CAACE,GAAD,CAALF,IAAcC,QAAQ,CAACC,GAAD,CAAtBF,IAA+B,CAAA,CAFvCA,CAFN,CAAA;EAAA,CADK,EAOL,CAAA,CAPK,CAAP;AASD;AAED,SAASG,QAAT,CAAkBC,MAAlB,EAAkD;EAAA,IAAxBC,iBAAwB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,CAAA,CAAI;EAChD,IAAMC,kBAAkB,GAAGD,iBAA3B;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACED,MAAM,CAACG,MAAPH,GAAgB,SAASG,MAAT,CAAgBC,aAAhB,EAA+B;IAAA,IAAA,KAAA,GAAA,IAAA;IAC7C,IAAI,CAAA,CAAA,EAAA,QAAA,CAAA,SAAA,CAAA,EAAOA,aAAP,CAAA,KAAyB,QAA7B,EAAuC;MACrC;MACAA,aAAa,GAAG,CAAA,CAAA,EAAA,aAAA,CAAA,aAAA,EAAcA,aAAd,EAA6B,CAAA,CAA7B,CAAhBA;IACD,CAJ4C,CAM7C;;IACA,OAAOL,QAAQ,CAAC,YAA6B;MAAA,IAA5BhC,KAA4B,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAApB,CAAA,CAAoB;MAAA,IAAhBkB,MAAgB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAP,CAAA,CAAO;MAC3C,IAAIoB,SAAS,GAAG,KAAI,CAACtC,KAAD,EAAQkB,MAAR,CAApB,CAD2C,CAG3C;;MACAC,MAAM,CAACR,IAAPQ,CAAYmB,SAAZnB,CAAAA,CAAuBC,OAAvBD,CAA+B,UAAA,EAAE,EAAI;QACnC;QACAmB,SAAS,GAAG,CAAA,CAAA,EAAA,cAAA,CAAA,eAAA,EACVA,SADU,EAEVpC,EAFU,EAGVmC,aAAa,CAACC,SAAS,CAACpC,EAAD,CAAV,EAAgB,CAAA,CAAA,EAAA,cAAA,CAAA,UAAA,EAAWA,EAAX,EAAegB,MAAf,CAAhB,CAHH,CAAZoB;MAKD,CAPDnB,CAAAA;MASA,OAAOmB,SAAP;IACD,CAdc,CAAf;EAeD,CAtBDL;EAwBA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACEA,MAAM,CAACpC,YAAPoC,GAAsB,SAASpC,YAAT,CAAsB0C,KAAtB,EAA6B;IACjD,IAAMC,MAAM,GAAGZ,iBAAiB,CAACO,kBAAD,EAAqBI,KAArB,CAAhC;IACA,IAAME,aAAa,GAAG7C,mBAAmB,CAAC4C,MAAD,CAAzC;IAEA,OAAOR,QAAQ,CAACS,aAAD,EAAgBD,MAAhB,CAAf;EACD,CALDP;EAOA,OAAOA,MAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMS,eAAe,GAAGV,QAAQ,CAACL,gBAAD,CAAhC;eACee,e","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {handleActions} from 'redux-actions';\n\nimport {_actionFor, _updateProperty} from '../actions/action-wrapper';\nimport {keplerGlInit} from '../actions/actions';\nimport {coreReducerFactory} from './core';\nimport ActionTypes from 'constants/action-types';\n\n// INITIAL_STATE\nconst initialCoreState = {};\n\nexport function provideInitialState(initialState) {\n  const coreReducer = coreReducerFactory(initialState);\n\n  const handleRegisterEntry = (\n    state,\n    {\n      payload: {\n        id,\n        mint,\n        mapboxApiAccessToken,\n        mapboxApiUrl,\n        mapStylesReplaceDefault,\n        initialUiState\n      }\n    }\n  ) => {\n    // by default, always create a mint state even if the same id already exist\n    // if state.id exist and mint=false, keep the existing state\n    const previousState = state[id] && mint === false ? state[id] : undefined;\n\n    return {\n      // register entry to kepler.gl passing in mapbox config to mapStyle\n      ...state,\n      [id]: coreReducer(\n        previousState,\n        keplerGlInit({mapboxApiAccessToken, mapboxApiUrl, mapStylesReplaceDefault, initialUiState})\n      )\n    };\n  };\n\n  const handleDeleteEntry = (state, {payload: id}) =>\n    Object.keys(state).reduce(\n      (accu, curr) => ({\n        ...accu,\n        ...(curr === id ? {} : {[curr]: state[curr]})\n      }),\n      {}\n    );\n\n  const handleRenameEntry = (state, {payload: {oldId, newId}}) =>\n    Object.keys(state).reduce(\n      (accu, curr) => ({\n        ...accu,\n        ...{[curr === oldId ? newId : curr]: state[curr]}\n      }),\n      {}\n    );\n\n  return (state = initialCoreState, action) => {\n    // update child states\n    Object.keys(state).forEach(id => {\n      const updateItemState = coreReducer(state[id], _actionFor(id, action));\n      state = _updateProperty(state, id, updateItemState);\n    });\n\n    // perform additional state reducing (e.g. switch action.type etc...)\n    const handlers = {\n      [ActionTypes.REGISTER_ENTRY]: handleRegisterEntry,\n      [ActionTypes.DELETE_ENTRY]: handleDeleteEntry,\n      [ActionTypes.RENAME_ENTRY]: handleRenameEntry\n    };\n\n    // @ts-ignore\n    return handleActions(handlers, initialCoreState)(state, action);\n  };\n}\n\nconst _keplerGlReducer = provideInitialState();\n\nfunction mergeInitialState(saved = {}, provided = {}) {\n  const keys = ['mapState', 'mapStyle', 'visState', 'uiState'];\n\n  // shallow merge each reducer\n  return keys.reduce(\n    (accu, key) => ({\n      ...accu,\n      ...(saved[key] && provided[key]\n        ? {[key]: {...saved[key], ...provided[key]}}\n        : {[key]: saved[key] || provided[key] || {}})\n    }),\n    {}\n  );\n}\n\nfunction decorate(target, savedInitialState = {}) {\n  const targetInitialState = savedInitialState;\n\n  /**\n   * Returns a kepler.gl reducer that will also pass each action through additional reducers spiecified.\n   * The parameter should be either a reducer map or a reducer function.\n   * The state passed into the additional action handler is the instance state.\n   * It will include all the subreducers `visState`, `uiState`, `mapState` and `mapStyle`.\n   * `.plugin` is only meant to be called once when mounting the keplerGlReducer to the store.\n   * **Note** This is an advanced option to give you more freedom to modify the internal state of the kepler.gl instance.\n   * You should only use this to adding additional actions instead of replacing default actions.\n   *\n   * @mixin keplerGlReducer.plugin\n   * @memberof keplerGlReducer\n   * @param {Object|Function} customReducer - A reducer map or a reducer\n   * @public\n   * @example\n   * const myKeplerGlReducer = keplerGlReducer\n   *  .plugin({\n   *    // 1. as reducer map\n   *    HIDE_AND_SHOW_SIDE_PANEL: (state, action) => ({\n   *      ...state,\n   *      uiState: {\n   *        ...state.uiState,\n   *        readOnly: !state.uiState.readOnly\n   *      }\n   *    })\n   *  })\n   * .plugin(handleActions({\n   *   // 2. as reducer\n   *   'HIDE_MAP_CONTROLS': (state, action) => ({\n   *     ...state,\n   *     uiState: {\n   *       ...state.uiState,\n   *       mapControls: hiddenMapControl\n   *     }\n   *   })\n   * }, {}));\n   */\n  target.plugin = function plugin(customReducer) {\n    if (typeof customReducer === 'object') {\n      // if only provided a reducerMap, wrap it in a reducer\n      customReducer = handleActions(customReducer, {});\n    }\n\n    // use 'function' keyword to enable 'this'\n    return decorate((state = {}, action = {}) => {\n      let nextState = this(state, action);\n\n      // for each entry in the staten\n      Object.keys(nextState).forEach(id => {\n        // update child states\n        nextState = _updateProperty(\n          nextState,\n          id,\n          customReducer(nextState[id], _actionFor(id, action))\n        );\n      });\n\n      return nextState;\n    });\n  };\n\n  /**\n   * Return a reducer that initiated with custom initial state.\n   * The parameter should be an object mapping from `subreducer` name to custom subreducer state,\n   * which will be shallow **merged** with default initial state.\n   *\n   * Default subreducer state:\n   *  - [`visState`](./vis-state.md#INITIAL_VIS_STATE)\n   *  - [`mapState`](./map-state.md#INITIAL_MAP_STATE)\n   *  - [`mapStyle`](./map-style.md#INITIAL_MAP_STYLE)\n   *  - [`uiState`](./ui-state.md#INITIAL_UI_STATE)\n   * @mixin keplerGlReducer.initialState\n   * @memberof keplerGlReducer\n   * @param {Object} iniSt - custom state to be merged with default initial state\n   * @public\n   * @example\n   * const myKeplerGlReducer = keplerGlReducer\n   *  .initialState({\n   *    uiState: {readOnly: true}\n   *  });\n   */\n  target.initialState = function initialState(iniSt) {\n    const merged = mergeInitialState(targetInitialState, iniSt);\n    const targetReducer = provideInitialState(merged);\n\n    return decorate(targetReducer, merged);\n  };\n\n  return target;\n}\n\n/**\n * Kepler.gl reducer to be mounted to your store. You can mount `keplerGlReducer` at property `keplerGl`, if you choose\n * to mount it at another address e.g. `foo` you will need to specify it when you mount `KeplerGl` component in your app with `getState: state => state.foo`\n * @public\n * @example\n * import keplerGlReducer from 'kepler.gl/reducers';\n * import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\n * import {taskMiddleware} from 'react-palm/tasks';\n *\n * const initialState = {};\n * const reducers = combineReducers({\n *   // <-- mount kepler.gl reducer in your app\n *   keplerGl: keplerGlReducer,\n *\n *   // Your other reducers here\n *   app: appReducer\n * });\n *\n * // using createStore\n * export default createStore(reducer, initialState, applyMiddleware(taskMiddleware));\n */\nconst keplerGlReducer = decorate(_keplerGlReducer);\nexport default keplerGlReducer;\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTextOffsetByRadius = getTextOffsetByRadius;\nexports.formatTextLabelData = exports.textLabelAccessor = exports.defaultPadding = void 0;\nvar _viewportMercatorProject = require(\"viewport-mercator-project\");\nvar _dataUtils = require(\"../utils/data-utils\");\nvar _lodash = _interopRequireDefault(require(\"lodash.uniq\"));\n\n// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nvar defaultPadding = 20;\nexports.defaultPadding = defaultPadding;\nfunction getTextOffsetByRadius(radiusScale, getRadius, mapState) {\n  return function (textLabel) {\n    var distanceScale = (0, _viewportMercatorProject.getDistanceScales)(mapState);\n    var xMult = textLabel.anchor === 'middle' ? 0 : textLabel.anchor === 'start' ? 1 : -1;\n    var yMult = textLabel.alignment === 'center' ? 0 : textLabel.alignment === 'bottom' ? 1 : -1;\n    var sizeOffset = textLabel.alignment === 'center' ? 0 : textLabel.alignment === 'bottom' ? textLabel.size : textLabel.size;\n    var pixelRadius = radiusScale * distanceScale.pixelsPerMeter[0];\n    var padding = defaultPadding;\n    return typeof getRadius === 'function' ? function (d) {\n      return [xMult * (getRadius(d) * pixelRadius + padding), yMult * (getRadius(d) * pixelRadius + padding + sizeOffset)];\n    } : [xMult * (getRadius * pixelRadius + padding), yMult * (getRadius * pixelRadius + padding + sizeOffset)];\n  };\n}\nvar textLabelAccessor = function textLabelAccessor(textLabel) {\n  return function (dc) {\n    return function (d) {\n      var val = textLabel.field.valueAccessor(d);\n      return (0, _dataUtils.notNullorUndefined)(val) ? String(val) : '';\n    };\n  };\n};\nexports.textLabelAccessor = textLabelAccessor;\nvar formatTextLabelData = function formatTextLabelData(_ref) {\n  var textLabel = _ref.textLabel,\n    triggerChanged = _ref.triggerChanged,\n    oldLayerData = _ref.oldLayerData,\n    data = _ref.data,\n    dataContainer = _ref.dataContainer;\n  return textLabel.map(function (tl, i) {\n    if (!tl.field) {\n      // if no field selected,\n      return {\n        getText: null,\n        characterSet: []\n      };\n    }\n    var getText = textLabelAccessor(tl)(dataContainer);\n    var characterSet;\n    if (!triggerChanged[\"getLabelCharacterSet-\".concat(i)] && oldLayerData && oldLayerData.textLabels && oldLayerData.textLabels[i]) {\n      characterSet = oldLayerData.textLabels[i].characterSet;\n    } else {\n      var allLabels = tl.field ? data.map(getText) : [];\n      characterSet = (0, _lodash[\"default\"])(allLabels.join(''));\n    }\n    return {\n      characterSet: characterSet,\n      getText: getText\n    };\n  });\n};\nexports.formatTextLabelData = formatTextLabelData;","map":{"version":3,"sources":["../../src/layers/layer-text-label.js"],"names":["defaultPadding","getTextOffsetByRadius","radiusScale","getRadius","mapState","distanceScale","xMult","textLabel","anchor","yMult","alignment","sizeOffset","size","pixelRadius","pixelsPerMeter","padding","d","textLabelAccessor","val","field","valueAccessor","String","formatTextLabelData","triggerChanged","oldLayerData","data","dataContainer","map","tl","i","getText","characterSet","textLabels","allLabels","join"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {getDistanceScales} from 'viewport-mercator-project';\nimport {notNullorUndefined} from 'utils/data-utils';\nimport uniq from 'lodash.uniq';\n\nexport const defaultPadding = 20;\n\nexport function getTextOffsetByRadius(radiusScale, getRadius, mapState) {\n  return textLabel => {\n    const distanceScale = getDistanceScales(mapState);\n    const xMult = textLabel.anchor === 'middle' ? 0 : textLabel.anchor === 'start' ? 1 : -1;\n    const yMult = textLabel.alignment === 'center' ? 0 : textLabel.alignment === 'bottom' ? 1 : -1;\n\n    const sizeOffset =\n      textLabel.alignment === 'center'\n        ? 0\n        : textLabel.alignment === 'bottom'\n        ? textLabel.size\n        : textLabel.size;\n\n    const pixelRadius = radiusScale * distanceScale.pixelsPerMeter[0];\n    const padding = defaultPadding;\n\n    return typeof getRadius === 'function'\n      ? d => [\n          xMult * (getRadius(d) * pixelRadius + padding),\n          yMult * (getRadius(d) * pixelRadius + padding + sizeOffset)\n        ]\n      : [\n          xMult * (getRadius * pixelRadius + padding),\n          yMult * (getRadius * pixelRadius + padding + sizeOffset)\n        ];\n  };\n}\n\nexport const textLabelAccessor = textLabel => dc => d => {\n  const val = textLabel.field.valueAccessor(d);\n  return notNullorUndefined(val) ? String(val) : '';\n};\n\nexport const formatTextLabelData = ({\n  textLabel,\n  triggerChanged,\n  oldLayerData,\n  data,\n  dataContainer\n}) => {\n  return textLabel.map((tl, i) => {\n    if (!tl.field) {\n      // if no field selected,\n      return {\n        getText: null,\n        characterSet: []\n      };\n    }\n\n    const getText = textLabelAccessor(tl)(dataContainer);\n    let characterSet;\n\n    if (\n      !triggerChanged[`getLabelCharacterSet-${i}`] &&\n      oldLayerData &&\n      oldLayerData.textLabels &&\n      oldLayerData.textLabels[i]\n    ) {\n      characterSet = oldLayerData.textLabels[i].characterSet;\n    } else {\n      const allLabels = tl.field ? data.map(getText) : [];\n      characterSet = uniq(allLabels.join(''));\n    }\n\n    return {\n      characterSet,\n      getText\n    };\n  });\n};\n"]},"metadata":{},"sourceType":"script"}
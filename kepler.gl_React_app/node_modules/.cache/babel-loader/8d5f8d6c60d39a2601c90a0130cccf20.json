{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LoadDataModalFactory = LoadDataModalFactory;\nexports[\"default\"] = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\nvar _lodash = _interopRequireDefault(require(\"lodash.get\"));\nvar _reactIntl = require(\"react-intl\");\nvar _fileUpload = _interopRequireDefault(require(\"../common/file-uploader/file-upload\"));\nvar _loadStorageMap = _interopRequireDefault(require(\"./load-storage-map\"));\nvar _modalTabs = _interopRequireDefault(require(\"./modal-tabs\"));\nvar _loadingDialog = _interopRequireDefault(require(\"./loading-dialog\"));\nvar _defaultSettings = require(\"../../constants/default-settings\");\nvar _templateObject;\n\n/** @typedef {import('./load-data-modal').LoadDataModalProps} LoadDataModalProps */\nvar StyledLoadDataModal = _styledComponents[\"default\"].div.attrs({\n  className: 'load-data-modal'\n})(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  padding: \", \";\\n  min-height: 440px;\\n  display: flex;\\n  flex-direction: column;\\n\"])), function (props) {\n  return props.theme.modalPadding;\n});\nvar noop = function noop() {};\nvar getDefaultMethod = function getDefaultMethod(methods) {\n  return Array.isArray(methods) ? (0, _lodash[\"default\"])(methods, [0]) : null;\n};\nLoadDataModalFactory.deps = [_modalTabs[\"default\"], _fileUpload[\"default\"], _loadStorageMap[\"default\"]];\nfunction LoadDataModalFactory(ModalTabs, FileUpload, LoadStorageMap) {\n  /** @type {React.FunctionComponent<LoadDataModalProps>} */\n  var LoadDataModal = function LoadDataModal(props) {\n    var intl = (0, _reactIntl.useIntl)();\n    var loadingMethods = props.loadingMethods,\n      isCloudMapLoading = props.isCloudMapLoading;\n    var _useState = (0, _react.useState)(getDefaultMethod(loadingMethods)),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      currentMethod = _useState2[0],\n      toggleMethod = _useState2[1];\n    var ElementType = currentMethod.elementType;\n    return /*#__PURE__*/_react[\"default\"].createElement(StyledLoadDataModal, null, /*#__PURE__*/_react[\"default\"].createElement(ModalTabs, {\n      currentMethod: currentMethod.id,\n      loadingMethods: loadingMethods,\n      toggleMethod: toggleMethod\n    }), isCloudMapLoading ? /*#__PURE__*/_react[\"default\"].createElement(_loadingDialog[\"default\"], {\n      size: 64\n    }) : currentMethod && /*#__PURE__*/_react[\"default\"].createElement(ElementType, (0, _extends2[\"default\"])({\n      key: currentMethod.id,\n      intl: intl\n    }, props)));\n  };\n  LoadDataModal.defaultProps = {\n    onFileUpload: noop,\n    fileLoading: false,\n    loadingMethods: [{\n      id: _defaultSettings.LOADING_METHODS.upload,\n      label: 'modal.loadData.upload',\n      elementType: FileUpload\n    }, {\n      id: _defaultSettings.LOADING_METHODS.storage,\n      label: 'modal.loadData.storage',\n      elementType: LoadStorageMap\n    }]\n  };\n  return LoadDataModal;\n}\nvar _default = LoadDataModalFactory;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../src/components/modals/load-data-modal.js"],"names":["StyledLoadDataModal","div","attrs","className","props","theme","modalPadding","noop","getDefaultMethod","Array","isArray","methods","LoadDataModalFactory","deps","ModalTabsFactory","FileUploadFactory","LoadStorageMapFactory","ModalTabs","FileUpload","LoadStorageMap","LoadDataModal","intl","loadingMethods","isCloudMapLoading","currentMethod","toggleMethod","ElementType","elementType","id","defaultProps","onFileUpload","fileLoading","LOADING_METHODS","upload","label","storage"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {useState} from 'react';\nimport styled from 'styled-components';\nimport get from 'lodash.get';\nimport {useIntl} from 'react-intl';\n\nimport FileUploadFactory from 'components/common/file-uploader/file-upload';\nimport LoadStorageMapFactory from './load-storage-map';\nimport ModalTabsFactory from './modal-tabs';\nimport LoadingDialog from './loading-dialog';\n\nimport {LOADING_METHODS} from 'constants/default-settings';\n\n/** @typedef {import('./load-data-modal').LoadDataModalProps} LoadDataModalProps */\n\nconst StyledLoadDataModal = styled.div.attrs({\n  className: 'load-data-modal'\n})`\n  padding: ${props => props.theme.modalPadding};\n  min-height: 440px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst noop = () => {};\nconst getDefaultMethod = methods => (Array.isArray(methods) ? get(methods, [0]) : null);\n\nLoadDataModalFactory.deps = [ModalTabsFactory, FileUploadFactory, LoadStorageMapFactory];\n\nexport function LoadDataModalFactory(ModalTabs, FileUpload, LoadStorageMap) {\n  /** @type {React.FunctionComponent<LoadDataModalProps>} */\n  const LoadDataModal = props => {\n    const intl = useIntl();\n    const {loadingMethods, isCloudMapLoading} = props;\n    const [currentMethod, toggleMethod] = useState(getDefaultMethod(loadingMethods));\n\n    const ElementType = currentMethod.elementType;\n\n    return (\n      <StyledLoadDataModal>\n        <ModalTabs\n          currentMethod={currentMethod.id}\n          loadingMethods={loadingMethods}\n          toggleMethod={toggleMethod}\n        />\n        {isCloudMapLoading ? (\n          <LoadingDialog size={64} />\n        ) : (\n          currentMethod && <ElementType key={currentMethod.id} intl={intl} {...props} />\n        )}\n      </StyledLoadDataModal>\n    );\n  };\n\n  LoadDataModal.defaultProps = {\n    onFileUpload: noop,\n    fileLoading: false,\n    loadingMethods: [\n      {\n        id: LOADING_METHODS.upload,\n        label: 'modal.loadData.upload',\n        elementType: FileUpload\n      },\n      {\n        id: LOADING_METHODS.storage,\n        label: 'modal.loadData.storage',\n        elementType: LoadStorageMap\n      }\n    ]\n  };\n\n  return LoadDataModal;\n}\n\nexport default LoadDataModalFactory;\n"]},"metadata":{},"sourceType":"script"}
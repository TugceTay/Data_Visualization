{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LayerLegendHeaderFactory = LayerLegendHeaderFactory;\nexports.LayerLegendContentFactory = LayerLegendContentFactory;\nexports[\"default\"] = exports.LayerColorLegend = exports.SingleColorLegend = exports.LayerSizeLegend = exports.VisualChannelMetric = exports.StyledMapControlLegend = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\nvar _d3Color = require(\"d3-color\");\nvar _colorLegend = _interopRequireDefault(require(\"../common/color-legend\"));\nvar _defaultSettings = require(\"../../constants/default-settings\");\nvar _localization = require(\"../../localization\");\nvar _templateObject;\nvar StyledMapControlLegend = _styledComponents[\"default\"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  padding: 10px \", \"px 10px\\n    \", \"px;\\n  font-size: 11px;\\n  border-bottom-color: \", \";\\n  border-bottom-style: solid;\\n  border-bottom-width: \", \";\\n  width: \", \"px;\\n\\n  .legend--layer_name {\\n    font-size: 12px;\\n    padding-right: \", \"px;\\n    color: \", \";\\n    font-weight: 500;\\n  }\\n  .legend--layer_type {\\n    color: \", \";\\n    font-weight: 500;\\n    font-size: 11px;\\n    padding-right: \", \"px;\\n  }\\n\\n  .legend--layer__title {\\n    padding-right: \", \"px;\\n  }\\n\\n  .legend--layer_by {\\n    color: \", \";\\n  }\\n\\n  .legend--layer_color_field {\\n    color: \", \";\\n    font-weight: 500;\\n  }\\n\\n  .legend--layer_color-legend {\\n    margin-top: 6px;\\n  }\\n\"])), function (props) {\n  return props.theme.mapControl.padding;\n}, function (props) {\n  return props.theme.mapControl.padding;\n}, function (props) {\n  return props.theme.panelBorderColor;\n}, function (props) {\n  return props.last ? 0 : '1px';\n}, function (props) {\n  return props.width;\n}, function (props) {\n  return props.theme.mapControl.padding;\n}, function (props) {\n  return props.theme.textColor;\n}, function (props) {\n  return props.theme.subtextColor;\n}, function (props) {\n  return props.theme.mapControl.padding;\n}, function (props) {\n  return props.theme.mapControl.padding;\n}, function (props) {\n  return props.theme.subtextColor;\n}, function (props) {\n  return props.theme.textColorHl;\n});\nexports.StyledMapControlLegend = StyledMapControlLegend;\nvar VisualChannelMetric = function VisualChannelMetric(_ref) {\n  var name = _ref.name;\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"legend--layer__title\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n    className: \"legend--layer_color_field\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_localization.FormattedMessage, {\n    id: name\n  })));\n};\n/** @type {typeof import('./map-legend').LayerSizeLegend} */\n\nexports.VisualChannelMetric = VisualChannelMetric;\nvar LayerSizeLegend = function LayerSizeLegend(_ref2) {\n  var label = _ref2.label,\n    name = _ref2.name;\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"legend--layer_size-schema\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"p\", null, /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n    className: \"legend--layer_by\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_localization.FormattedMessage, {\n    id: label\n  })), /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n    className: \"legend--layer_by\"\n  }, \" by \")), /*#__PURE__*/_react[\"default\"].createElement(VisualChannelMetric, {\n    name: name\n  }));\n};\nexports.LayerSizeLegend = LayerSizeLegend;\nvar SINGLE_COLOR_DOMAIN = [''];\n/** @type {typeof import('./map-legend').SingleColorLegend} */\n\nvar SingleColorLegend = /*#__PURE__*/_react[\"default\"].memo(function (_ref3) {\n  var width = _ref3.width,\n    color = _ref3.color;\n  return /*#__PURE__*/_react[\"default\"].createElement(_colorLegend[\"default\"], {\n    scaleType: \"ordinal\",\n    displayLabel: false,\n    domain: SINGLE_COLOR_DOMAIN,\n    fieldType: null,\n    range: {\n      colors: [_d3Color.rgb.apply(void 0, (0, _toConsumableArray2[\"default\"])(color)).toString()]\n    },\n    width: width\n  });\n});\nexports.SingleColorLegend = SingleColorLegend;\nSingleColorLegend.displayName = 'SingleColorLegend';\n/** @type {typeof import('./map-legend').LayerColorLegend} */\n\nvar LayerColorLegend = /*#__PURE__*/_react[\"default\"].memo(function (_ref4) {\n  var description = _ref4.description,\n    config = _ref4.config,\n    width = _ref4.width,\n    colorChannel = _ref4.colorChannel;\n  var enableColorBy = description.measure;\n  var scale = colorChannel.scale,\n    field = colorChannel.field,\n    domain = colorChannel.domain,\n    range = colorChannel.range,\n    property = colorChannel.property;\n  var _map = [scale, field, domain].map(function (k) {\n      return config[k];\n    }),\n    _map2 = (0, _slicedToArray2[\"default\"])(_map, 3),\n    colorScale = _map2[0],\n    colorField = _map2[1],\n    colorDomain = _map2[2];\n  var colorRange = config.visConfig[range];\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"legend--layer_color-schema\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, enableColorBy ? /*#__PURE__*/_react[\"default\"].createElement(VisualChannelMetric, {\n    name: enableColorBy\n  }) : null, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"legend--layer_color-legend\"\n  }, enableColorBy ? /*#__PURE__*/_react[\"default\"].createElement(_colorLegend[\"default\"], {\n    scaleType: colorScale,\n    displayLabel: true,\n    domain: colorDomain,\n    fieldType: colorField && colorField.type || 'real',\n    range: colorRange,\n    width: width\n  }) : /*#__PURE__*/_react[\"default\"].createElement(SingleColorLegend, {\n    color: config.visConfig[property] || config[property] || config.color,\n    width: width\n  })))));\n});\nexports.LayerColorLegend = LayerColorLegend;\nLayerColorLegend.displayName = 'LayerColorLegend';\nvar isColorChannel = function isColorChannel(visualChannel) {\n  return [_defaultSettings.CHANNEL_SCALES.color, _defaultSettings.CHANNEL_SCALES.colorAggr].includes(visualChannel.channelScaleType);\n};\nfunction LayerLegendHeaderFactory() {\n  /** @type {typeof import('./map-legend').LayerLegendHeader }> */\n  var LayerLegendHeader = function LayerLegendHeader(_ref5) {\n    var options = _ref5.options,\n      layer = _ref5.layer;\n    return (options === null || options === void 0 ? void 0 : options.showLayerName) !== false ? /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n      className: \"legend--layer_name\"\n    }, layer.config.label) : null;\n  };\n  return LayerLegendHeader;\n}\nfunction LayerLegendContentFactory() {\n  /** @type {typeof import('./map-legend').LayerLegendContent }> */\n  var LayerLegendContent = function LayerLegendContent(_ref6) {\n    var layer = _ref6.layer,\n      containerW = _ref6.containerW;\n    var colorChannels = Object.values(layer.visualChannels).filter(isColorChannel);\n    var nonColorChannels = Object.values(layer.visualChannels).filter(function (vc) {\n      return !isColorChannel(vc);\n    });\n    return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, colorChannels.map(function (colorChannel) {\n      return !colorChannel.condition || colorChannel.condition(layer.config) ? /*#__PURE__*/_react[\"default\"].createElement(LayerColorLegend, {\n        key: colorChannel.key,\n        description: layer.getVisualChannelDescription(colorChannel.key),\n        config: layer.config,\n        width: containerW - 2 * _defaultSettings.DIMENSIONS.mapControl.padding,\n        colorChannel: colorChannel\n      }) : null;\n    }), nonColorChannels.map(function (visualChannel) {\n      var matchCondition = !visualChannel.condition || visualChannel.condition(layer.config);\n      var enabled = layer.config[visualChannel.field] || visualChannel.defaultMeasure;\n      var description = layer.getVisualChannelDescription(visualChannel.key);\n      return matchCondition && enabled ? /*#__PURE__*/_react[\"default\"].createElement(LayerSizeLegend, {\n        key: visualChannel.key,\n        label: description.label,\n        name: description.measure\n      }) : null;\n    }));\n  };\n  return LayerLegendContent;\n}\nMapLegendFactory.deps = [LayerLegendHeaderFactory, LayerLegendContentFactory];\nfunction MapLegendFactory(LayerLegendHeader, LayerLegendContent) {\n  /** @type {typeof import('./map-legend').MapLegend }> */\n  var MapLegend = function MapLegend(_ref7) {\n    var _ref7$layers = _ref7.layers,\n      layers = _ref7$layers === void 0 ? [] : _ref7$layers,\n      width = _ref7.width,\n      options = _ref7.options;\n    return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n      className: \"map-legend\"\n    }, layers.map(function (layer, index) {\n      if (!layer.isValidToSave() || layer.config.hidden) {\n        return null;\n      }\n      var containerW = width || _defaultSettings.DIMENSIONS.mapControl.width;\n      return /*#__PURE__*/_react[\"default\"].createElement(StyledMapControlLegend, {\n        className: \"legend--layer\",\n        last: index === layers.length - 1,\n        key: index,\n        width: containerW\n      }, /*#__PURE__*/_react[\"default\"].createElement(LayerLegendHeader, {\n        options: options,\n        layer: layer\n      }), /*#__PURE__*/_react[\"default\"].createElement(LayerLegendContent, {\n        containerW: containerW,\n        layer: layer\n      }));\n    }));\n  };\n  MapLegend.displayName = 'MapLegend';\n  return MapLegend;\n}\nvar _default = MapLegendFactory;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../src/components/map/map-legend.js"],"names":["StyledMapControlLegend","styled","div","props","theme","mapControl","padding","panelBorderColor","last","width","textColor","subtextColor","textColorHl","VisualChannelMetric","name","LayerSizeLegend","label","SINGLE_COLOR_DOMAIN","SingleColorLegend","memo","color","colors","rgb","toString","displayName","LayerColorLegend","description","config","colorChannel","enableColorBy","measure","scale","field","domain","range","property","colorScale","colorField","colorDomain","map","k","colorRange","visConfig","type","isColorChannel","CHANNEL_SCALES","colorAggr","includes","visualChannel","channelScaleType","LayerLegendHeaderFactory","LayerLegendHeader","options","layer","showLayerName","LayerLegendContentFactory","LayerLegendContent","containerW","colorChannels","Object","values","visualChannels","filter","nonColorChannels","vc","condition","key","getVisualChannelDescription","DIMENSIONS","matchCondition","enabled","defaultMeasure","MapLegendFactory","deps","MapLegend","layers","index","isValidToSave","hidden","length"],"mappings":";;;;;;;;;;;;AAoBA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;AACA,IAAA,iBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;AACA,IAAA,YAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,wBAAA,CAAA,CAAA;AACA,IAAA,gBAAA,GAAA,OAAA,CAAA,kCAAA,CAAA;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AAEO,IAAMA,sBAAsB,GAAGC,iBAAAA,CAAAA,SAAAA,CAAAA,CAAOC,GAAV,CAAA,eAAA,KAAA,eAAA,GAAA,CAAA,CAAA,EAAA,uBAAA,CAAA,SAAA,CAAA,EAAA,CAAA,oBAAA,EAAA,eAAA,EAAA,kDAAA,EAAA,2DAAA,EAAA,cAAA,EAAA,2EAAA,EAAA,kBAAA,EAAA,qEAAA,EAAA,qEAAA,EAAA,4DAAA,EAAA,gDAAA,EAAA,uDAAA,EAAA,+FAAA,CAAA,CAAA,CAAA,EACjB,UAAA,KAAK,EAAA;EAAA,OAAIC,KAAK,CAACC,KAAND,CAAYE,UAAZF,CAAuBG,OAA3B;AAAA,CADY,EAE7B,UAAA,KAAK,EAAA;EAAA,OAAIH,KAAK,CAACC,KAAND,CAAYE,UAAZF,CAAuBG,OAA3B;AAAA,CAFwB,EAIV,UAAA,KAAK,EAAA;EAAA,OAAIH,KAAK,CAACC,KAAND,CAAYI,gBAAhB;AAAA,CAJK,EAMV,UAAA,KAAK,EAAA;EAAA,OAAKJ,KAAK,CAACK,IAANL,GAAa,CAAbA,GAAiB,KAAtB;AAAA,CANK,EAOxB,UAAA,KAAK,EAAA;EAAA,OAAIA,KAAK,CAACM,KAAV;AAAA,CAPmB,EAWd,UAAA,KAAK,EAAA;EAAA,OAAIN,KAAK,CAACC,KAAND,CAAYE,UAAZF,CAAuBG,OAA3B;AAAA,CAXS,EAYtB,UAAA,KAAK,EAAA;EAAA,OAAIH,KAAK,CAACC,KAAND,CAAYO,SAAhB;AAAA,CAZiB,EAgBtB,UAAA,KAAK,EAAA;EAAA,OAAIP,KAAK,CAACC,KAAND,CAAYQ,YAAhB;AAAA,CAhBiB,EAmBd,UAAA,KAAK,EAAA;EAAA,OAAIR,KAAK,CAACC,KAAND,CAAYE,UAAZF,CAAuBG,OAA3B;AAAA,CAnBS,EAuBd,UAAA,KAAK,EAAA;EAAA,OAAIH,KAAK,CAACC,KAAND,CAAYE,UAAZF,CAAuBG,OAA3B;AAAA,CAvBS,EA2BtB,UAAA,KAAK,EAAA;EAAA,OAAIH,KAAK,CAACC,KAAND,CAAYQ,YAAhB;AAAA,CA3BiB,EA+BtB,UAAA,KAAK,EAAA;EAAA,OAAIR,KAAK,CAACC,KAAND,CAAYS,WAAhB;AAAA,CA/BiB,CAA5B;;AAwCA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAA,IAAA,EAAY;EAAA,IAAVC,IAAU,GAAA,IAAA,CAAVA,IAAU;EAC7C,OAAA,aACE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAC;EAAf,CAAA,EAAA,aACE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,MAAA,EAAA;IAAM,SAAS,EAAC;EAAhB,CAAA,EAAA,aACE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,aAAA,CAAA,gBAAD,EAAA;IAAkB,EAAE,EAAEA;EAAtB,CAAA,CADF,CADF,CADF;AAOD,CARM;AAUP;;;AACO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAA,KAAA,EAAA;EAAA,IAAEC,KAAF,GAAA,KAAA,CAAEA,KAAF;IAASF,IAAT,GAAA,KAAA,CAASA,IAAT;EAAA,OAAA,aAC7B,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAC;EAAf,CAAA,EAAA,aACE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,GAAA,EAAA,IAAA,EAAA,aACE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,MAAA,EAAA;IAAM,SAAS,EAAC;EAAhB,CAAA,EAAA,aACE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,aAAA,CAAA,gBAAD,EAAA;IAAkB,EAAE,EAAEE;EAAtB,CAAA,CADF,CADF,EAAA,aAIE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,MAAA,EAAA;IAAM,SAAS,EAAC;EAAhB,CAAA,EAAA,MAAA,CAJF,CADF,EAAA,aAOE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,mBAAD,EAAA;IAAqB,IAAI,EAAEF;EAA3B,CAAA,CAPF,CAD6B;AAAA,CAAxB;;AAYP,IAAMG,mBAAmB,GAAG,CAAC,EAAD,CAA5B;AAEA;;AACO,IAAMC,iBAAiB,GAAA,aAAG,MAAA,CAAA,SAAA,CAAA,CAAMC,IAAN,CAAW,UAAA,KAAA,EAAA;EAAA,IAAEV,KAAF,GAAA,KAAA,CAAEA,KAAF;IAASW,KAAT,GAAA,KAAA,CAASA,KAAT;EAAA,OAAA,aAC1C,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,YAAA,CAAA,SAAA,CAAD,EAAA;IACE,SAAS,EAAC,SADZ;IAEE,YAAY,EAAE,KAFhB;IAGE,MAAM,EAAEH,mBAHV;IAIE,SAAS,EAAE,IAJb;IAKE,KAAK,EAAE;MAACI,MAAM,EAAE,CAACC,QAAAA,CAAAA,GAAAA,CAAAA,KAAAA,CAAAA,KAAAA,CAAAA,EAAAA,CAAAA,CAAAA,EAAAA,mBAAAA,CAAAA,SAAAA,CAAAA,EAAOF,KAAPE,CAAAA,CAAAA,CAAcC,QAAdD,EAAD;IAAT,CALT;IAME,KAAK,EAAEb;EANT,CAAA,CAD0C;AAAA,CAAX,CAA1B;;AAWPS,iBAAiB,CAACM,WAAlBN,GAAgC,mBAAhCA;AAEA;;AACO,IAAMO,gBAAgB,GAAA,aAAG,MAAA,CAAA,SAAA,CAAA,CAAMN,IAAN,CAAW,UAAA,KAAA,EAAgD;EAAA,IAA9CO,WAA8C,GAAA,KAAA,CAA9CA,WAA8C;IAAjCC,MAAiC,GAAA,KAAA,CAAjCA,MAAiC;IAAzBlB,KAAyB,GAAA,KAAA,CAAzBA,KAAyB;IAAlBmB,YAAkB,GAAA,KAAA,CAAlBA,YAAkB;EACzF,IAAMC,aAAa,GAAGH,WAAW,CAACI,OAAlC;EADyF,IAElFC,KAFkF,GAEzCH,YAFyC,CAElFG,KAFkF;IAE3EC,KAF2E,GAEzCJ,YAFyC,CAE3EI,KAF2E;IAEpEC,MAFoE,GAEzCL,YAFyC,CAEpEK,MAFoE;IAE5DC,KAF4D,GAEzCN,YAFyC,CAE5DM,KAF4D;IAErDC,QAFqD,GAEzCP,YAFyC,CAErDO,QAFqD;EAAA,IAAA,IAAA,GAG3C,CAACJ,KAAD,EAAQC,KAAR,EAAeC,MAAf,CAAA,CAAuBM,GAAvB,CAA2B,UAAA,CAAC,EAAA;MAAA,OAAIZ,MAAM,CAACa,CAAD,CAAV;IAAA,CAA5B,CAH2C;IAAA,KAAA,GAAA,CAAA,CAAA,EAAA,eAAA,CAAA,SAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA;IAGlFJ,UAHkF,GAAA,KAAA,CAAA,CAAA,CAAA;IAGtEC,UAHsE,GAAA,KAAA,CAAA,CAAA,CAAA;IAG1DC,WAH0D,GAAA,KAAA,CAAA,CAAA,CAAA;EAIzF,IAAMG,UAAU,GAAGd,MAAM,CAACe,SAAPf,CAAiBO,KAAjBP,CAAnB;EAEA,OAAA,aACE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EAAA,aACE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAC;EAAf,CAAA,EAAA,aACE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EACGE,aAAa,GAAA,aAAG,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,mBAAD,EAAA;IAAqB,IAAI,EAAEA;EAA3B,CAAA,CAAH,GAAkD,IADlE,EAAA,aAEE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAC;EAAf,CAAA,EACGA,aAAa,GAAA,aACZ,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,YAAA,CAAA,SAAA,CAAD,EAAA;IACE,SAAS,EAAEO,UADb;IAEE,YAAY,EAAA,IAFd;IAGE,MAAM,EAAEE,WAHV;IAIE,SAAS,EAAGD,UAAU,IAAIA,UAAU,CAACM,IAA1B,IAAmC,MAJhD;IAKE,KAAK,EAAEF,UALT;IAME,KAAK,EAAEhC;EANT,CAAA,CADY,GAAA,aAUZ,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,iBAAD,EAAA;IACE,KAAK,EAAEkB,MAAM,CAACe,SAAPf,CAAiBQ,QAAjBR,CAAAA,IAA8BA,MAAM,CAACQ,QAAD,CAApCR,IAAkDA,MAAM,CAACP,KADlE;IAEE,KAAK,EAAEX;EAFT,CAAA,CAXJ,CAFF,CADF,CADF,CADF;AA0BD,CAhC+B,CAAzB;;AAkCPgB,gBAAgB,CAACD,WAAjBC,GAA+B,kBAA/BA;AAEA,IAAMmB,cAAc,GAAG,SAAjBA,cAAiB,CAAA,aAAa,EAAA;EAAA,OAClC,CAACC,gBAAAA,CAAAA,cAAAA,CAAezB,KAAhB,EAAuByB,gBAAAA,CAAAA,cAAAA,CAAeC,SAAtC,CAAA,CAAiDC,QAAjD,CAA0DC,aAAa,CAACC,gBAAxE,CADkC;AAAA,CAApC;AAGO,SAASC,wBAAT,GAAoC;EACzC;EACA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA,KAAA,EAAsB;IAAA,IAApBC,OAAoB,GAAA,KAAA,CAApBA,OAAoB;MAAXC,KAAW,GAAA,KAAA,CAAXA,KAAW;IAC9C,OAAO,CAAA,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAA,KAAA,CAAA,GAAA,OAAO,CAAEC,aAAT,MAA2B,KAA3B,GAAA,aACL,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,KAAA,EAAA;MAAK,SAAS,EAAC;IAAf,CAAA,EAAqCD,KAAK,CAAC1B,MAAN0B,CAAarC,KAAlD,CADK,GAEH,IAFJ;EAGD,CAJD;EAKA,OAAOmC,iBAAP;AACD;AAEM,SAASI,yBAAT,GAAqC;EAC1C;EACA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAA,KAAA,EAAyB;IAAA,IAAvBH,KAAuB,GAAA,KAAA,CAAvBA,KAAuB;MAAhBI,UAAgB,GAAA,KAAA,CAAhBA,UAAgB;IAClD,IAAMC,aAAa,GAAGC,MAAM,CAACC,MAAPD,CAAcN,KAAK,CAACQ,cAApBF,CAAAA,CAAoCG,MAApCH,CAA2Cf,cAA3Ce,CAAtB;IACA,IAAMI,gBAAgB,GAAG,MAAM,CAACH,MAAP,CAAcP,KAAK,CAACQ,cAApB,CAAA,CAAoCC,MAApC,CAA2C,UAAA,EAAE,EAAA;MAAA,OAAI,CAAClB,cAAc,CAACoB,EAAD,CAAnB;IAAA,CAA7C,CAAzB;IAEA,OAAA,aACE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,MAAA,CAAA,SAAA,CAAA,CAAA,QAAA,EAAA,IAAA,EACG,aAAa,CAACzB,GAAd,CAAkB,UAAA,YAAY,EAAA;MAAA,OAC7B,CAACX,YAAY,CAACqC,SAAd,IAA2BrC,YAAY,CAACqC,SAAbrC,CAAuByB,KAAK,CAAC1B,MAA7BC,CAA3B,GAAA,aACE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,gBAAD,EAAA;QACE,GAAG,EAAEA,YAAY,CAACsC,GADpB;QAEE,WAAW,EAAEb,KAAK,CAACc,2BAANd,CAAkCzB,YAAY,CAACsC,GAA/Cb,CAFf;QAGE,MAAM,EAAEA,KAAK,CAAC1B,MAHhB;QAIE,KAAK,EAAE8B,UAAU,GAAG,CAAA,GAAIW,gBAAAA,CAAAA,UAAAA,CAAW/D,UAAX+D,CAAsB9D,OAJhD;QAKE,YAAY,EAAEsB;MALhB,CAAA,CADF,GAQI,IATyB;IAAA,CAA9B,CADH,EAYG,gBAAgB,CAACW,GAAjB,CAAqB,UAAA,aAAa,EAAI;MACrC,IAAM8B,cAAc,GAAG,CAACrB,aAAa,CAACiB,SAAf,IAA4BjB,aAAa,CAACiB,SAAdjB,CAAwBK,KAAK,CAAC1B,MAA9BqB,CAAnD;MACA,IAAMsB,OAAO,GAAGjB,KAAK,CAAC1B,MAAN0B,CAAaL,aAAa,CAAChB,KAA3BqB,CAAAA,IAAqCL,aAAa,CAACuB,cAAnE;MAEA,IAAM7C,WAAW,GAAG2B,KAAK,CAACc,2BAANd,CAAkCL,aAAa,CAACkB,GAAhDb,CAApB;MAEA,OAAO,cAAc,IAAIiB,OAAlB,GAAA,aACL,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,eAAD,EAAA;QACE,GAAG,EAAEtB,aAAa,CAACkB,GADrB;QAEE,KAAK,EAAExC,WAAW,CAACV,KAFrB;QAGE,IAAI,EAAEU,WAAW,CAACI;MAHpB,CAAA,CADK,GAMH,IANJ;IAOD,CAbA,CAZH,CADF;EA6BD,CAjCD;EAmCA,OAAO0B,kBAAP;AACD;AAEDgB,gBAAgB,CAACC,IAAjBD,GAAwB,CAACtB,wBAAD,EAA2BK,yBAA3B,CAAxBiB;AACA,SAASA,gBAAT,CAA0BrB,iBAA1B,EAA6CK,kBAA7C,EAAiE;EAC/D;EACA,IAAMkB,SAAS,GAAG,SAAZA,SAAY,CAAA,KAAA,EAAA;IAAA,IAAA,YAAA,GAAA,KAAA,CAAEC,MAAF;MAAEA,MAAF,GAAA,YAAA,KAAA,KAAA,CAAA,GAAW,EAAX,GAAA,YAAA;MAAelE,KAAf,GAAA,KAAA,CAAeA,KAAf;MAAsB2C,OAAtB,GAAA,KAAA,CAAsBA,OAAtB;IAAA,OAAA,aAChB,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,KAAA,EAAA;MAAK,SAAS,EAAC;IAAf,CAAA,EACG,MAAM,CAACb,GAAP,CAAW,UAACc,KAAD,EAAQuB,KAAR,EAAkB;MAC5B,IAAI,CAACvB,KAAK,CAACwB,aAANxB,EAAD,IAA0BA,KAAK,CAAC1B,MAAN0B,CAAayB,MAA3C,EAAmD;QACjD,OAAO,IAAP;MACD;MACD,IAAMrB,UAAU,GAAGhD,KAAK,IAAI2D,gBAAAA,CAAAA,UAAAA,CAAW/D,UAAX+D,CAAsB3D,KAAlD;MAEA,OAAA,aACE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,sBAAD,EAAA;QACE,SAAS,EAAC,eADZ;QAEE,IAAI,EAAEmE,KAAK,KAAKD,MAAM,CAACI,MAAPJ,GAAgB,CAFlC;QAGE,GAAG,EAAEC,KAHP;QAIE,KAAK,EAAEnB;MAJT,CAAA,EAAA,aAME,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,iBAAD,EAAA;QAAmB,OAAO,EAAEL,OAA5B;QAAqC,KAAK,EAAEC;MAA5C,CAAA,CANF,EAAA,aAOE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,kBAAD,EAAA;QAAoB,UAAU,EAAEI,UAAhC;QAA4C,KAAK,EAAEJ;MAAnD,CAAA,CAPF,CADF;IAWD,CAjBA,CADH,CADgB;EAAA,CAAlB;EAuBAqB,SAAS,CAAClD,WAAVkD,GAAwB,WAAxBA;EAEA,OAAOA,SAAP;AACD;eAEcF,gB","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport {rgb} from 'd3-color';\nimport ColorLegend from 'components/common/color-legend';\nimport {CHANNEL_SCALES, DIMENSIONS} from 'constants/default-settings';\nimport {FormattedMessage} from 'localization';\n\nexport const StyledMapControlLegend = styled.div`\n  padding: 10px ${props => props.theme.mapControl.padding}px 10px\n    ${props => props.theme.mapControl.padding}px;\n  font-size: 11px;\n  border-bottom-color: ${props => props.theme.panelBorderColor};\n  border-bottom-style: solid;\n  border-bottom-width: ${props => (props.last ? 0 : '1px')};\n  width: ${props => props.width}px;\n\n  .legend--layer_name {\n    font-size: 12px;\n    padding-right: ${props => props.theme.mapControl.padding}px;\n    color: ${props => props.theme.textColor};\n    font-weight: 500;\n  }\n  .legend--layer_type {\n    color: ${props => props.theme.subtextColor};\n    font-weight: 500;\n    font-size: 11px;\n    padding-right: ${props => props.theme.mapControl.padding}px;\n  }\n\n  .legend--layer__title {\n    padding-right: ${props => props.theme.mapControl.padding}px;\n  }\n\n  .legend--layer_by {\n    color: ${props => props.theme.subtextColor};\n  }\n\n  .legend--layer_color_field {\n    color: ${props => props.theme.textColorHl};\n    font-weight: 500;\n  }\n\n  .legend--layer_color-legend {\n    margin-top: 6px;\n  }\n`;\n\nexport const VisualChannelMetric = ({name}) => {\n  return (\n    <div className=\"legend--layer__title\">\n      <span className=\"legend--layer_color_field\">\n        <FormattedMessage id={name} />\n      </span>\n    </div>\n  );\n};\n\n/** @type {typeof import('./map-legend').LayerSizeLegend} */\nexport const LayerSizeLegend = ({label, name}) => (\n  <div className=\"legend--layer_size-schema\">\n    <p>\n      <span className=\"legend--layer_by\">\n        <FormattedMessage id={label} />\n      </span>\n      <span className=\"legend--layer_by\"> by </span>\n    </p>\n    <VisualChannelMetric name={name} />\n  </div>\n);\n\nconst SINGLE_COLOR_DOMAIN = [''];\n\n/** @type {typeof import('./map-legend').SingleColorLegend} */\nexport const SingleColorLegend = React.memo(({width, color}) => (\n  <ColorLegend\n    scaleType=\"ordinal\"\n    displayLabel={false}\n    domain={SINGLE_COLOR_DOMAIN}\n    fieldType={null}\n    range={{colors: [rgb(...color).toString()]}}\n    width={width}\n  />\n));\n\nSingleColorLegend.displayName = 'SingleColorLegend';\n\n/** @type {typeof import('./map-legend').LayerColorLegend} */\nexport const LayerColorLegend = React.memo(({description, config, width, colorChannel}) => {\n  const enableColorBy = description.measure;\n  const {scale, field, domain, range, property} = colorChannel;\n  const [colorScale, colorField, colorDomain] = [scale, field, domain].map(k => config[k]);\n  const colorRange = config.visConfig[range];\n\n  return (\n    <div>\n      <div className=\"legend--layer_color-schema\">\n        <div>\n          {enableColorBy ? <VisualChannelMetric name={enableColorBy} /> : null}\n          <div className=\"legend--layer_color-legend\">\n            {enableColorBy ? (\n              <ColorLegend\n                scaleType={colorScale}\n                displayLabel\n                domain={colorDomain}\n                fieldType={(colorField && colorField.type) || 'real'}\n                range={colorRange}\n                width={width}\n              />\n            ) : (\n              <SingleColorLegend\n                color={config.visConfig[property] || config[property] || config.color}\n                width={width}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nLayerColorLegend.displayName = 'LayerColorLegend';\n\nconst isColorChannel = visualChannel =>\n  [CHANNEL_SCALES.color, CHANNEL_SCALES.colorAggr].includes(visualChannel.channelScaleType);\n\nexport function LayerLegendHeaderFactory() {\n  /** @type {typeof import('./map-legend').LayerLegendHeader }> */\n  const LayerLegendHeader = ({options, layer}) => {\n    return options?.showLayerName !== false ? (\n      <div className=\"legend--layer_name\">{layer.config.label}</div>\n    ) : null;\n  };\n  return LayerLegendHeader;\n}\n\nexport function LayerLegendContentFactory() {\n  /** @type {typeof import('./map-legend').LayerLegendContent }> */\n  const LayerLegendContent = ({layer, containerW}) => {\n    const colorChannels = Object.values(layer.visualChannels).filter(isColorChannel);\n    const nonColorChannels = Object.values(layer.visualChannels).filter(vc => !isColorChannel(vc));\n\n    return (\n      <>\n        {colorChannels.map(colorChannel =>\n          !colorChannel.condition || colorChannel.condition(layer.config) ? (\n            <LayerColorLegend\n              key={colorChannel.key}\n              description={layer.getVisualChannelDescription(colorChannel.key)}\n              config={layer.config}\n              width={containerW - 2 * DIMENSIONS.mapControl.padding}\n              colorChannel={colorChannel}\n            />\n          ) : null\n        )}\n        {nonColorChannels.map(visualChannel => {\n          const matchCondition = !visualChannel.condition || visualChannel.condition(layer.config);\n          const enabled = layer.config[visualChannel.field] || visualChannel.defaultMeasure;\n\n          const description = layer.getVisualChannelDescription(visualChannel.key);\n\n          return matchCondition && enabled ? (\n            <LayerSizeLegend\n              key={visualChannel.key}\n              label={description.label}\n              name={description.measure}\n            />\n          ) : null;\n        })}\n      </>\n    );\n  };\n\n  return LayerLegendContent;\n}\n\nMapLegendFactory.deps = [LayerLegendHeaderFactory, LayerLegendContentFactory];\nfunction MapLegendFactory(LayerLegendHeader, LayerLegendContent) {\n  /** @type {typeof import('./map-legend').MapLegend }> */\n  const MapLegend = ({layers = [], width, options}) => (\n    <div className=\"map-legend\">\n      {layers.map((layer, index) => {\n        if (!layer.isValidToSave() || layer.config.hidden) {\n          return null;\n        }\n        const containerW = width || DIMENSIONS.mapControl.width;\n\n        return (\n          <StyledMapControlLegend\n            className=\"legend--layer\"\n            last={index === layers.length - 1}\n            key={index}\n            width={containerW}\n          >\n            <LayerLegendHeader options={options} layer={layer} />\n            <LayerLegendContent containerW={containerW} layer={layer} />\n          </StyledMapControlLegend>\n        );\n      })}\n    </div>\n  );\n\n  MapLegend.displayName = 'MapLegend';\n\n  return MapLegend;\n}\n\nexport default MapLegendFactory;\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import * as React from 'react';\nimport * as hoistNonReactStatics_ from 'hoist-non-react-statics';\n// Since rollup cannot deal with namespace being a function,\n// this is to interop with TypeScript since `invariant`\n// does not export a default\n// https://github.com/rollup/rollup/issues/1267\nconst hoistNonReactStatics = hoistNonReactStatics_.default || hoistNonReactStatics_;\nimport { invariantIntlContext } from '../utils';\nfunction getDisplayName(Component) {\n  return Component.displayName || Component.name || 'Component';\n}\n// TODO: We should provide initial value here\nconst IntlContext = React.createContext(null);\nconst {\n  Consumer: IntlConsumer,\n  Provider: IntlProvider\n} = IntlContext;\nexport const Provider = IntlProvider;\nexport const Context = IntlContext;\nexport default function injectIntl(WrappedComponent, options) {\n  const {\n    intlPropName = 'intl',\n    forwardRef = false,\n    enforceContext = true\n  } = options || {};\n  const WithIntl = props => React.createElement(IntlConsumer, null, intl => {\n    if (enforceContext) {\n      invariantIntlContext(intl);\n    }\n    return React.createElement(WrappedComponent, Object.assign({}, props, {\n      [intlPropName]: intl\n    }, {\n      ref: forwardRef ? props.forwardedRef : null\n    }));\n  });\n  WithIntl.displayName = `injectIntl(${getDisplayName(WrappedComponent)})`;\n  WithIntl.WrappedComponent = WrappedComponent;\n  if (forwardRef) {\n    return hoistNonReactStatics(React.forwardRef((props, ref) => React.createElement(WithIntl, Object.assign({}, props, {\n      forwardedRef: ref\n    }))), WrappedComponent);\n  }\n  return hoistNonReactStatics(WithIntl, WrappedComponent);\n}","map":{"version":3,"names":["React","hoistNonReactStatics_","hoistNonReactStatics","default","invariantIntlContext","getDisplayName","Component","displayName","name","IntlContext","createContext","Consumer","IntlConsumer","Provider","IntlProvider","Context","injectIntl","WrappedComponent","options","intlPropName","forwardRef","enforceContext","WithIntl","props","createElement","intl","Object","assign","ref","forwardedRef"],"sources":["C:/Users/tugcetay/Documents/github/Data/Data_Visualization/kepler.gl_React_app/node_modules/react-intl/lib/components/injectIntl.js"],"sourcesContent":["import * as React from 'react';\nimport * as hoistNonReactStatics_ from 'hoist-non-react-statics';\n// Since rollup cannot deal with namespace being a function,\n// this is to interop with TypeScript since `invariant`\n// does not export a default\n// https://github.com/rollup/rollup/issues/1267\nconst hoistNonReactStatics = hoistNonReactStatics_.default || hoistNonReactStatics_;\nimport { invariantIntlContext } from '../utils';\nfunction getDisplayName(Component) {\n    return Component.displayName || Component.name || 'Component';\n}\n// TODO: We should provide initial value here\nconst IntlContext = React.createContext(null);\nconst { Consumer: IntlConsumer, Provider: IntlProvider } = IntlContext;\nexport const Provider = IntlProvider;\nexport const Context = IntlContext;\nexport default function injectIntl(WrappedComponent, options) {\n    const { intlPropName = 'intl', forwardRef = false, enforceContext = true } = options || {};\n    const WithIntl = props => (React.createElement(IntlConsumer, null, (intl) => {\n        if (enforceContext) {\n            invariantIntlContext(intl);\n        }\n        return (React.createElement(WrappedComponent, Object.assign({}, props, {\n            [intlPropName]: intl,\n        }, { ref: forwardRef ? props.forwardedRef : null })));\n    }));\n    WithIntl.displayName = `injectIntl(${getDisplayName(WrappedComponent)})`;\n    WithIntl.WrappedComponent = WrappedComponent;\n    if (forwardRef) {\n        return hoistNonReactStatics(React.forwardRef((props, ref) => (React.createElement(WithIntl, Object.assign({}, props, { forwardedRef: ref })))), WrappedComponent);\n    }\n    return hoistNonReactStatics(WithIntl, WrappedComponent);\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAO,KAAKC,qBAAqB,MAAM,yBAAyB;AAChE;AACA;AACA;AACA;AACA,MAAMC,oBAAoB,GAAGD,qBAAqB,CAACE,OAAO,IAAIF,qBAAqB;AACnF,SAASG,oBAAoB,QAAQ,UAAU;AAC/C,SAASC,cAAc,CAACC,SAAS,EAAE;EAC/B,OAAOA,SAAS,CAACC,WAAW,IAAID,SAAS,CAACE,IAAI,IAAI,WAAW;AACjE;AACA;AACA,MAAMC,WAAW,GAAGT,KAAK,CAACU,aAAa,CAAC,IAAI,CAAC;AAC7C,MAAM;EAAEC,QAAQ,EAAEC,YAAY;EAAEC,QAAQ,EAAEC;AAAa,CAAC,GAAGL,WAAW;AACtE,OAAO,MAAMI,QAAQ,GAAGC,YAAY;AACpC,OAAO,MAAMC,OAAO,GAAGN,WAAW;AAClC,eAAe,SAASO,UAAU,CAACC,gBAAgB,EAAEC,OAAO,EAAE;EAC1D,MAAM;IAAEC,YAAY,GAAG,MAAM;IAAEC,UAAU,GAAG,KAAK;IAAEC,cAAc,GAAG;EAAK,CAAC,GAAGH,OAAO,IAAI,CAAC,CAAC;EAC1F,MAAMI,QAAQ,GAAGC,KAAK,IAAKvB,KAAK,CAACwB,aAAa,CAACZ,YAAY,EAAE,IAAI,EAAGa,IAAI,IAAK;IACzE,IAAIJ,cAAc,EAAE;MAChBjB,oBAAoB,CAACqB,IAAI,CAAC;IAC9B;IACA,OAAQzB,KAAK,CAACwB,aAAa,CAACP,gBAAgB,EAAES,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEJ,KAAK,EAAE;MACnE,CAACJ,YAAY,GAAGM;IACpB,CAAC,EAAE;MAAEG,GAAG,EAAER,UAAU,GAAGG,KAAK,CAACM,YAAY,GAAG;IAAK,CAAC,CAAC,CAAC;EACxD,CAAC,CAAE;EACHP,QAAQ,CAACf,WAAW,GAAI,cAAaF,cAAc,CAACY,gBAAgB,CAAE,GAAE;EACxEK,QAAQ,CAACL,gBAAgB,GAAGA,gBAAgB;EAC5C,IAAIG,UAAU,EAAE;IACZ,OAAOlB,oBAAoB,CAACF,KAAK,CAACoB,UAAU,CAAC,CAACG,KAAK,EAAEK,GAAG,KAAM5B,KAAK,CAACwB,aAAa,CAACF,QAAQ,EAAEI,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEJ,KAAK,EAAE;MAAEM,YAAY,EAAED;IAAI,CAAC,CAAC,CAAE,CAAC,EAAEX,gBAAgB,CAAC;EACrK;EACA,OAAOf,oBAAoB,CAACoB,QAAQ,EAAEL,gBAAgB,CAAC;AAC3D"},"metadata":{},"sourceType":"module"}
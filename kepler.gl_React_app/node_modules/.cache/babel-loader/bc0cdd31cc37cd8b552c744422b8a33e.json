{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { getOSMTileIndices } from './tile-2d-traversal';\nvar TILE_SIZE = 512;\nvar DEFAULT_EXTENT = [-Infinity, -Infinity, Infinity, Infinity];\nexport var urlType = {\n  type: 'url',\n  value: '',\n  validate: function validate(value) {\n    return typeof value === 'string' || Array.isArray(value) && value.every(function (url) {\n      return typeof url === 'string';\n    });\n  },\n  equals: function equals(value1, value2) {\n    if (value1 === value2) {\n      return true;\n    }\n    if (!Array.isArray(value1) || !Array.isArray(value2)) {\n      return false;\n    }\n    var len = value1.length;\n    if (len !== value2.length) {\n      return false;\n    }\n    for (var i = 0; i < len; i++) {\n      if (value1[i] !== value2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n};\nexport function getURLFromTemplate(template, properties) {\n  if (!template || !template.length) {\n    return null;\n  }\n  if (Array.isArray(template)) {\n    var index = Math.abs(properties.x + properties.y) % template.length;\n    template = template[index];\n  }\n  return template.replace ? template.replace(/\\{ *([\\w_-]+) *\\}/g, function (_, property) {\n    return properties[property];\n  }) : null;\n}\nfunction getBoundingBox(viewport, zRange, extent) {\n  var bounds;\n  if (zRange && zRange.length === 2) {\n    var _zRange = _slicedToArray(zRange, 2),\n      minZ = _zRange[0],\n      maxZ = _zRange[1];\n    var bounds0 = viewport.getBounds({\n      z: minZ\n    });\n    var bounds1 = viewport.getBounds({\n      z: maxZ\n    });\n    bounds = [Math.min(bounds0[0], bounds1[0]), Math.min(bounds0[1], bounds1[1]), Math.max(bounds0[2], bounds1[2]), Math.max(bounds0[3], bounds1[3])];\n  } else {\n    bounds = viewport.getBounds();\n  }\n  return [Math.max(bounds[0], extent[0]), Math.max(bounds[1], extent[1]), Math.min(bounds[2], extent[2]), Math.min(bounds[3], extent[3])];\n}\nfunction getTileIndex(_ref, scale) {\n  var _ref2 = _slicedToArray(_ref, 2),\n    x = _ref2[0],\n    y = _ref2[1];\n  return [x * scale / TILE_SIZE, y * scale / TILE_SIZE];\n}\nfunction getScale(z) {\n  return Math.pow(2, z);\n}\nfunction osmTile2lngLat(x, y, z) {\n  var scale = getScale(z);\n  var lng = x / scale * 360 - 180;\n  var n = Math.PI - 2 * Math.PI * y / scale;\n  var lat = 180 / Math.PI * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n  return [lng, lat];\n}\nfunction tile2XY(x, y, z) {\n  var scale = getScale(z);\n  return [x / scale * TILE_SIZE, y / scale * TILE_SIZE];\n}\nexport function tileToBoundingBox(viewport, x, y, z) {\n  if (viewport.isGeospatial) {\n    var _osmTile2lngLat = osmTile2lngLat(x, y, z),\n      _osmTile2lngLat2 = _slicedToArray(_osmTile2lngLat, 2),\n      west = _osmTile2lngLat2[0],\n      north = _osmTile2lngLat2[1];\n    var _osmTile2lngLat3 = osmTile2lngLat(x + 1, y + 1, z),\n      _osmTile2lngLat4 = _slicedToArray(_osmTile2lngLat3, 2),\n      east = _osmTile2lngLat4[0],\n      south = _osmTile2lngLat4[1];\n    return {\n      west: west,\n      north: north,\n      east: east,\n      south: south\n    };\n  }\n  var _tile2XY = tile2XY(x, y, z),\n    _tile2XY2 = _slicedToArray(_tile2XY, 2),\n    left = _tile2XY2[0],\n    top = _tile2XY2[1];\n  var _tile2XY3 = tile2XY(x + 1, y + 1, z),\n    _tile2XY4 = _slicedToArray(_tile2XY3, 2),\n    right = _tile2XY4[0],\n    bottom = _tile2XY4[1];\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom\n  };\n}\nfunction getIdentityTileIndices(viewport, z, extent) {\n  var bbox = getBoundingBox(viewport, null, extent);\n  var scale = getScale(z);\n  var _getTileIndex = getTileIndex([bbox[0], bbox[1]], scale),\n    _getTileIndex2 = _slicedToArray(_getTileIndex, 2),\n    minX = _getTileIndex2[0],\n    minY = _getTileIndex2[1];\n  var _getTileIndex3 = getTileIndex([bbox[2], bbox[3]], scale),\n    _getTileIndex4 = _slicedToArray(_getTileIndex3, 2),\n    maxX = _getTileIndex4[0],\n    maxY = _getTileIndex4[1];\n  var indices = [];\n  for (var x = Math.floor(minX); x < maxX; x++) {\n    for (var y = Math.floor(minY); y < maxY; y++) {\n      indices.push({\n        x: x,\n        y: y,\n        z: z\n      });\n    }\n  }\n  return indices;\n}\nexport function getTileIndices(_ref3) {\n  var viewport = _ref3.viewport,\n    maxZoom = _ref3.maxZoom,\n    minZoom = _ref3.minZoom,\n    zRange = _ref3.zRange,\n    extent = _ref3.extent,\n    _ref3$tileSize = _ref3.tileSize,\n    tileSize = _ref3$tileSize === void 0 ? TILE_SIZE : _ref3$tileSize;\n  var z = Math.round(viewport.zoom + Math.log2(TILE_SIZE / tileSize));\n  if (Number.isFinite(minZoom) && z < minZoom) {\n    if (!extent) {\n      return [];\n    }\n    z = minZoom;\n  }\n  if (Number.isFinite(maxZoom) && z > maxZoom) {\n    z = maxZoom;\n  }\n  return viewport.isGeospatial ? getOSMTileIndices(viewport, z, zRange, extent || DEFAULT_EXTENT) : getIdentityTileIndices(viewport, z, extent || DEFAULT_EXTENT);\n}","map":{"version":3,"sources":["../../../src/tile-layer/utils.js"],"names":["getOSMTileIndices","TILE_SIZE","DEFAULT_EXTENT","Infinity","urlType","type","value","validate","Array","isArray","every","url","equals","value1","value2","len","length","i","getURLFromTemplate","template","properties","index","Math","abs","x","y","replace","_","property","getBoundingBox","viewport","zRange","extent","bounds","minZ","maxZ","bounds0","getBounds","z","bounds1","min","max","getTileIndex","scale","getScale","pow","osmTile2lngLat","lng","n","PI","lat","atan","exp","tile2XY","tileToBoundingBox","isGeospatial","west","north","east","south","left","top","right","bottom","getIdentityTileIndices","bbox","minX","minY","maxX","maxY","indices","floor","push","getTileIndices","maxZoom","minZoom","tileSize","round","zoom","log2","Number","isFinite"],"mappings":"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","sourcesContent":["import {getOSMTileIndices} from './tile-2d-traversal';\n\nconst TILE_SIZE = 512;\nconst DEFAULT_EXTENT = [-Infinity, -Infinity, Infinity, Infinity];\n\nexport const urlType = {\n  type: 'url',\n  value: '',\n  validate: value =>\n    typeof value === 'string' ||\n    (Array.isArray(value) && value.every(url => typeof url === 'string')),\n  equals: (value1, value2) => {\n    if (value1 === value2) {\n      return true;\n    }\n    if (!Array.isArray(value1) || !Array.isArray(value2)) {\n      return false;\n    }\n    const len = value1.length;\n    if (len !== value2.length) {\n      return false;\n    }\n    for (let i = 0; i < len; i++) {\n      if (value1[i] !== value2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n};\n\nexport function getURLFromTemplate(template, properties) {\n  if (!template || !template.length) {\n    return null;\n  }\n  if (Array.isArray(template)) {\n    const index = Math.abs(properties.x + properties.y) % template.length;\n    template = template[index];\n  }\n  return template.replace\n    ? template.replace(/\\{ *([\\w_-]+) *\\}/g, (_, property) => properties[property])\n    : null;\n}\n\n/**\n * gets the bounding box of a viewport\n */\nfunction getBoundingBox(viewport, zRange, extent) {\n  let bounds;\n  if (zRange && zRange.length === 2) {\n    const [minZ, maxZ] = zRange;\n    const bounds0 = viewport.getBounds({z: minZ});\n    const bounds1 = viewport.getBounds({z: maxZ});\n    bounds = [\n      Math.min(bounds0[0], bounds1[0]),\n      Math.min(bounds0[1], bounds1[1]),\n      Math.max(bounds0[2], bounds1[2]),\n      Math.max(bounds0[3], bounds1[3])\n    ];\n  } else {\n    bounds = viewport.getBounds();\n  }\n  return [\n    Math.max(bounds[0], extent[0]),\n    Math.max(bounds[1], extent[1]),\n    Math.min(bounds[2], extent[2]),\n    Math.min(bounds[3], extent[3])\n  ];\n}\n\nfunction getTileIndex([x, y], scale) {\n  return [(x * scale) / TILE_SIZE, (y * scale) / TILE_SIZE];\n}\n\nfunction getScale(z) {\n  return Math.pow(2, z);\n}\n\n// https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#Lon..2Flat._to_tile_numbers_2\nfunction osmTile2lngLat(x, y, z) {\n  const scale = getScale(z);\n  const lng = (x / scale) * 360 - 180;\n  const n = Math.PI - (2 * Math.PI * y) / scale;\n  const lat = (180 / Math.PI) * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n  return [lng, lat];\n}\n\nfunction tile2XY(x, y, z) {\n  const scale = getScale(z);\n  return [(x / scale) * TILE_SIZE, (y / scale) * TILE_SIZE];\n}\n\nexport function tileToBoundingBox(viewport, x, y, z) {\n  if (viewport.isGeospatial) {\n    const [west, north] = osmTile2lngLat(x, y, z);\n    const [east, south] = osmTile2lngLat(x + 1, y + 1, z);\n    return {west, north, east, south};\n  }\n  const [left, top] = tile2XY(x, y, z);\n  const [right, bottom] = tile2XY(x + 1, y + 1, z);\n  return {left, top, right, bottom};\n}\n\nfunction getIdentityTileIndices(viewport, z, extent) {\n  const bbox = getBoundingBox(viewport, null, extent);\n  const scale = getScale(z);\n\n  const [minX, minY] = getTileIndex([bbox[0], bbox[1]], scale);\n  const [maxX, maxY] = getTileIndex([bbox[2], bbox[3]], scale);\n  const indices = [];\n\n  /*\n      |  TILE  |  TILE  |  TILE  |\n        |(minX)            |(maxX)\n   */\n  for (let x = Math.floor(minX); x < maxX; x++) {\n    for (let y = Math.floor(minY); y < maxY; y++) {\n      indices.push({x, y, z});\n    }\n  }\n  return indices;\n}\n\n/**\n * Returns all tile indices in the current viewport. If the current zoom level is smaller\n * than minZoom, return an empty array. If the current zoom level is greater than maxZoom,\n * return tiles that are on maxZoom.\n */\nexport function getTileIndices({viewport, maxZoom, minZoom, zRange, extent, tileSize = TILE_SIZE}) {\n  let z = Math.round(viewport.zoom + Math.log2(TILE_SIZE / tileSize));\n  if (Number.isFinite(minZoom) && z < minZoom) {\n    if (!extent) {\n      return [];\n    }\n    z = minZoom;\n  }\n  if (Number.isFinite(maxZoom) && z > maxZoom) {\n    z = maxZoom;\n  }\n  return viewport.isGeospatial\n    ? getOSMTileIndices(viewport, z, zRange, extent || DEFAULT_EXTENT)\n    : getIdentityTileIndices(viewport, z, extent || DEFAULT_EXTENT);\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"export default function getShaderVersion(source) {\n  let version = 100;\n  const words = source.match(/[^\\s]+/g);\n  if (words.length >= 2 && words[0] === '#version') {\n    const v = parseInt(words[1], 10);\n    if (Number.isFinite(v)) {\n      version = v;\n    }\n  }\n  return version;\n}","map":{"version":3,"sources":["../../../src/glsl-utils/get-shader-version.js"],"names":["getShaderVersion","source","version","words","match","length","v","parseInt","Number","isFinite"],"mappings":"AACA,eAAe,SAASA,gBAAT,CAA0BC,MAA1B,EAAkC;EAC/C,IAAIC,OAAO,GAAG,GAAd;EACA,MAAMC,KAAK,GAAGF,MAAM,CAACG,KAAPH,CAAa,SAAbA,CAAd;EACA,IAAIE,KAAK,CAACE,MAANF,IAAgB,CAAhBA,IAAqBA,KAAK,CAAC,CAAD,CAALA,KAAa,UAAtC,EAAkD;IAChD,MAAMG,CAAC,GAAGC,QAAQ,CAACJ,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAlB;IACA,IAAIK,MAAM,CAACC,QAAPD,CAAgBF,CAAhBE,CAAJ,EAAwB;MACtBN,OAAO,GAAGI,CAAVJ;IACD;EACF;EACD,OAAOA,OAAP;AACD","sourcesContent":["// returns GLSL shader version of given shader string\nexport default function getShaderVersion(source) {\n  let version = 100;\n  const words = source.match(/[^\\s]+/g);\n  if (words.length >= 2 && words[0] === '#version') {\n    const v = parseInt(words[1], 10);\n    if (Number.isFinite(v)) {\n      version = v;\n    }\n  }\n  return version;\n}\n"]},"metadata":{},"sourceType":"module"}
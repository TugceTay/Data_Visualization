{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport assert from '../utils/assert';\nvar ViewState = function () {\n  function ViewState(opts) {\n    _classCallCheck(this, ViewState);\n    assert(Number.isFinite(opts.width), '`width` must be supplied');\n    assert(Number.isFinite(opts.height), '`height` must be supplied');\n    this._viewportProps = this._applyConstraints(opts);\n  }\n  _createClass(ViewState, [{\n    key: \"getViewportProps\",\n    value: function getViewportProps() {\n      return this._viewportProps;\n    }\n  }, {\n    key: \"shortestPathFrom\",\n    value: function shortestPathFrom(viewState) {\n      return this._viewportProps;\n    }\n  }, {\n    key: \"_applyConstraints\",\n    value: function _applyConstraints(props) {\n      return props;\n    }\n  }]);\n  return ViewState;\n}();\nexport { ViewState as default };","map":{"version":3,"sources":["../../../src/controllers/view-state.js"],"names":["assert","ViewState","opts","Number","isFinite","width","height","_viewportProps","_applyConstraints","viewState","props"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,iBAAnB;IAIqBC,S;EACnB,SAAA,SAAA,CAAYC,IAAZ,EAAkB;IAAA,eAAA,CAAA,IAAA,EAAA,SAAA,CAAA;IAChBF,MAAM,CAACG,MAAM,CAACC,QAAPD,CAAgBD,IAAI,CAACG,KAArBF,CAAD,EAA8B,0BAA9B,CAANH;IACAA,MAAM,CAACG,MAAM,CAACC,QAAPD,CAAgBD,IAAI,CAACI,MAArBH,CAAD,EAA+B,2BAA/B,CAANH;IAEA,IAAA,CAAKO,cAAL,GAAsB,IAAA,CAAKC,iBAAL,CAAuBN,IAAvB,CAAtB;EACD;;;uCAEkB;MACjB,OAAO,IAAA,CAAKK,cAAZ;IACD;;;qCAEgBE,S,EAAW;MAC1B,OAAO,IAAA,CAAKF,cAAZ;IACD;;;sCAIiBG,K,EAAO;MACvB,OAAOA,KAAP;IACD;;;;SApBkBT,S","sourcesContent":["import assert from '../utils/assert';\n\n/* Helpers */\n\nexport default class ViewState {\n  constructor(opts) {\n    assert(Number.isFinite(opts.width), '`width` must be supplied');\n    assert(Number.isFinite(opts.height), '`height` must be supplied');\n\n    this._viewportProps = this._applyConstraints(opts);\n  }\n\n  getViewportProps() {\n    return this._viewportProps;\n  }\n\n  shortestPathFrom(viewState) {\n    return this._viewportProps;\n  }\n\n  // Redefined by subclass\n  // Apply any constraints (mathematical or defined by _viewportProps) to map state\n  _applyConstraints(props) {\n    return props;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
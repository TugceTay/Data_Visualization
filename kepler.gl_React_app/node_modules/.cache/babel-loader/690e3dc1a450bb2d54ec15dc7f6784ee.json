{"ast":null,"code":"export function isObjectEmpty(object) {\n  for (const key in object) {\n    return false;\n  }\n  return true;\n}\nexport function deepArrayEqual(x, y) {\n  if (x === y) {\n    return true;\n  }\n  const isArrayX = Array.isArray(x) || ArrayBuffer.isView(x);\n  const isArrayY = Array.isArray(y) || ArrayBuffer.isView(y);\n  if (isArrayX && isArrayY && x.length === y.length) {\n    for (let i = 0; i < x.length; ++i) {\n      if (x[i] !== y[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}","map":{"version":3,"sources":["../../../src/utils/utils.js"],"names":["isObjectEmpty","object","key","deepArrayEqual","x","y","isArrayX","Array","isArray","ArrayBuffer","isView","isArrayY","length","i"],"mappings":"AACA,OAAO,SAASA,aAAT,CAAuBC,MAAvB,EAA+B;EACpC,KAAK,MAAMC,GAAX,IAAkBD,MAAlB,EAA0B;IACxB,OAAO,KAAP;EACD;EACD,OAAO,IAAP;AACD;AAED,OAAO,SAASE,cAAT,CAAwBC,CAAxB,EAA2BC,CAA3B,EAA8B;EACnC,IAAID,CAAC,KAAKC,CAAV,EAAa;IACX,OAAO,IAAP;EACD;EACD,MAAMC,QAAQ,GAAGC,KAAK,CAACC,OAAND,CAAcH,CAAdG,CAAAA,IAAoBE,WAAW,CAACC,MAAZD,CAAmBL,CAAnBK,CAArC;EACA,MAAME,QAAQ,GAAGJ,KAAK,CAACC,OAAND,CAAcF,CAAdE,CAAAA,IAAoBE,WAAW,CAACC,MAAZD,CAAmBJ,CAAnBI,CAArC;EAGA,IAAIH,QAAQ,IAAIK,QAAZL,IAAwBF,CAAC,CAACQ,MAAFR,KAAaC,CAAC,CAACO,MAA3C,EAAmD;IAEjD,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,CAAC,CAACQ,MAAtB,EAA8B,EAAEC,CAAhC,EAAmC;MACjC,IAAIT,CAAC,CAACS,CAAD,CAADT,KAASC,CAAC,CAACQ,CAAD,CAAd,EAAmB;QACjB,OAAO,KAAP;MACD;IACF;IACD,OAAO,IAAP;EACD;EACD,OAAO,KAAP;AACD","sourcesContent":["// Returns true if given object is empty, false otherwise.\nexport function isObjectEmpty(object) {\n  for (const key in object) {\n    return false;\n  }\n  return true;\n}\n\nexport function deepArrayEqual(x, y) {\n  if (x === y) {\n    return true;\n  }\n  const isArrayX = Array.isArray(x) || ArrayBuffer.isView(x);\n  const isArrayY = Array.isArray(y) || ArrayBuffer.isView(y);\n\n  // @ts-expect-error DataView...\n  if (isArrayX && isArrayY && x.length === y.length) {\n    // @ts-expect-error DataView...\n    for (let i = 0; i < x.length; ++i) {\n      if (x[i] !== y[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n"]},"metadata":{},"sourceType":"module"}
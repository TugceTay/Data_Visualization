{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateBounds = validateBounds;\nexports.getCenterAndZoomFromBounds = getCenterAndZoomFromBounds;\nvar _geoViewport = _interopRequireDefault(require(\"@mapbox/geo-viewport\"));\nvar _console = _interopRequireDefault(require(\"global/console\"));\n\n// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nvar MAPBOX_TILE_SIZE = 512;\nfunction isLat(num) {\n  return Number.isFinite(num) && num <= 90 && num >= -90;\n}\nfunction isLng(num) {\n  return Number.isFinite(num) && num <= 180 && num >= -180;\n}\n/**\n * bounds should be [minLng, minLat, maxLng, maxLat]\n * @param {*} bounds\n */\n\nfunction validateBounds(bounds) {\n  // array: [ -180, -85.05112877980659, 180, 85.0511287798066 ]\n  // validate bounds\n  if (Array.isArray(bounds) && bounds.length === 4 && [bounds[0], bounds[2]].every(isLng) && [bounds[1], bounds[3]].every(isLat)) {\n    return bounds;\n  }\n  return null;\n}\nfunction getCenterAndZoomFromBounds(bounds, _ref) {\n  var width = _ref.width,\n    height = _ref.height;\n  var validBounds = validateBounds(bounds);\n  if (!validBounds) {\n    _console[\"default\"].warn('invalid map bounds provided');\n    return null;\n  } // viewport(bounds, dimensions, minzoom, maxzoom, tileSize, allowFloat)\n\n  var _geoViewport$viewport = _geoViewport[\"default\"].viewport(bounds, [width, height], undefined, undefined, MAPBOX_TILE_SIZE),\n    zoom = _geoViewport$viewport.zoom; // center being calculated by geo-vieweport.viewport has a complex logic that\n  // projects and then unprojects the coordinates to determine the center\n  // Calculating a simple average instead as that is the expected behavior in most of cases\n\n  var center = [(bounds[0] + bounds[2]) / 2, (bounds[1] + bounds[3]) / 2];\n  return {\n    zoom: zoom,\n    center: center\n  };\n}","map":{"version":3,"sources":["../../src/utils/projection-utils.js"],"names":["MAPBOX_TILE_SIZE","isLat","num","Number","isFinite","isLng","validateBounds","bounds","Array","isArray","length","every","getCenterAndZoomFromBounds","width","height","validBounds","Console","warn","zoom","geoViewport","viewport","undefined","center"],"mappings":";;;;;;;;AAoBA,IAAA,YAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,sBAAA,CAAA,CAAA;AACA,IAAA,QAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;;AArBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA,IAAMA,gBAAgB,GAAG,GAAzB;AAEA,SAASC,KAAT,CAAeC,GAAf,EAAoB;EAClB,OAAOC,MAAM,CAACC,QAAPD,CAAgBD,GAAhBC,CAAAA,IAAwBD,GAAG,IAAI,EAA/BC,IAAqCD,GAAG,IAAI,CAAC,EAApD;AACD;AACD,SAASG,KAAT,CAAeH,GAAf,EAAoB;EAClB,OAAOC,MAAM,CAACC,QAAPD,CAAgBD,GAAhBC,CAAAA,IAAwBD,GAAG,IAAI,GAA/BC,IAAsCD,GAAG,IAAI,CAAC,GAArD;AACD;AAED;AACA;AACA;AACA;;AACO,SAASI,cAAT,CAAwBC,MAAxB,EAAgC;EACrC;EACA;EACA,IACEC,KAAK,CAACC,OAAND,CAAcD,MAAdC,CAAAA,IACAD,MAAM,CAACG,MAAPH,KAAkB,CADlBC,IAEA,CAACD,MAAM,CAAC,CAAD,CAAP,EAAYA,MAAM,CAAC,CAAD,CAAlB,CAAA,CAAuBI,KAAvB,CAA6BN,KAA7B,CAFAG,IAGA,CAACD,MAAM,CAAC,CAAD,CAAP,EAAYA,MAAM,CAAC,CAAD,CAAlB,CAAA,CAAuBI,KAAvB,CAA6BV,KAA7B,CAJF,EAKE;IACA,OAAOM,MAAP;EACD;EACD,OAAO,IAAP;AACD;AAEM,SAASK,0BAAT,CAAoCL,MAApC,EAAA,IAAA,EAA6D;EAAA,IAAhBM,KAAgB,GAAA,IAAA,CAAhBA,KAAgB;IAATC,MAAS,GAAA,IAAA,CAATA,MAAS;EAClE,IAAMC,WAAW,GAAGT,cAAc,CAACC,MAAD,CAAlC;EACA,IAAI,CAACQ,WAAL,EAAkB;IAChBC,QAAAA,CAAAA,SAAAA,CAAAA,CAAQC,IAARD,CAAa,6BAAbA,CAAAA;IACA,OAAO,IAAP;EACD,CALiE,CAOlE;;EAPkE,IAAA,qBAAA,GAQnDG,YAAAA,CAAAA,SAAAA,CAAAA,CAAYC,QAAZD,CACbZ,MADaY,EAEb,CAACN,KAAD,EAAQC,MAAR,CAFaK,EAGbE,SAHaF,EAIbE,SAJaF,EAKbnB,gBALamB,CARmD;IAQ3DD,IAR2D,GAAA,qBAAA,CAQ3DA,IAR2D,CAAA,CAelE;EACA;EACA;;EACA,IAAMI,MAAM,GAAG,CAAC,CAACf,MAAM,CAAC,CAAD,CAANA,GAAYA,MAAM,CAAC,CAAD,CAAnB,IAA0B,CAA3B,EAA8B,CAACA,MAAM,CAAC,CAAD,CAANA,GAAYA,MAAM,CAAC,CAAD,CAAnB,IAA0B,CAAxD,CAAf;EAEA,OAAO;IAACW,IAAI,EAAJA,IAAD;IAAOI,MAAM,EAANA;EAAP,CAAP;AACD","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport geoViewport from '@mapbox/geo-viewport';\nimport Console from 'global/console';\n\nconst MAPBOX_TILE_SIZE = 512;\n\nfunction isLat(num) {\n  return Number.isFinite(num) && num <= 90 && num >= -90;\n}\nfunction isLng(num) {\n  return Number.isFinite(num) && num <= 180 && num >= -180;\n}\n\n/**\n * bounds should be [minLng, minLat, maxLng, maxLat]\n * @param {*} bounds\n */\nexport function validateBounds(bounds) {\n  // array: [ -180, -85.05112877980659, 180, 85.0511287798066 ]\n  // validate bounds\n  if (\n    Array.isArray(bounds) &&\n    bounds.length === 4 &&\n    [bounds[0], bounds[2]].every(isLng) &&\n    [bounds[1], bounds[3]].every(isLat)\n  ) {\n    return bounds;\n  }\n  return null;\n}\n\nexport function getCenterAndZoomFromBounds(bounds, {width, height}) {\n  const validBounds = validateBounds(bounds);\n  if (!validBounds) {\n    Console.warn('invalid map bounds provided');\n    return null;\n  }\n\n  // viewport(bounds, dimensions, minzoom, maxzoom, tileSize, allowFloat)\n  const {zoom} = geoViewport.viewport(\n    bounds,\n    [width, height],\n    undefined,\n    undefined,\n    MAPBOX_TILE_SIZE\n  );\n  // center being calculated by geo-vieweport.viewport has a complex logic that\n  // projects and then unprojects the coordinates to determine the center\n  // Calculating a simple average instead as that is the expected behavior in most of cases\n  const center = [(bounds[0] + bounds[2]) / 2, (bounds[1] + bounds[3]) / 2];\n\n  return {zoom, center};\n}\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = GeocoderPanelFactory;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\nvar _processors = _interopRequireDefault(require(\"../processors\"));\nvar _core = require(\"@deck.gl/core\");\nvar _schemas = _interopRequireDefault(require(\"../schemas\"));\nvar _projectionUtils = require(\"../utils/projection-utils\");\nvar _geocoder = _interopRequireDefault(require(\"./geocoder/geocoder\"));\nvar _defaultSettings = require(\"../constants/default-settings\");\nvar _templateObject;\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar ICON_LAYER = {\n  id: _defaultSettings.GEOCODER_LAYER_ID,\n  type: 'icon',\n  config: {\n    label: 'Geocoder Layer',\n    color: _defaultSettings.GEOCODER_ICON_COLOR,\n    dataId: _defaultSettings.GEOCODER_DATASET_NAME,\n    columns: {\n      lat: 'lt',\n      lng: 'ln',\n      icon: 'icon',\n      label: 'text'\n    },\n    isVisible: true,\n    hidden: true,\n    visConfig: {\n      radius: _defaultSettings.GEOCODER_ICON_SIZE\n    }\n  }\n};\nvar PARSED_CONFIG = _schemas[\"default\"].parseSavedConfig({\n  version: 'v1',\n  config: {\n    visState: {\n      layers: [ICON_LAYER]\n    }\n  }\n});\nvar StyledGeocoderPanel = _styledComponents[\"default\"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  position: absolute;\\n  top: \", \"px;\\n  right: \", \"px;\\n  width: \", \"px;\\n  box-shadow: \", \";\\n  z-index: 100;\\n\"])), function (props) {\n  return props.theme.geocoderTop;\n}, function (props) {\n  return props.theme.geocoderRight;\n}, function (props) {\n  return Number.isFinite(props.width) ? props.width : props.theme.geocoderWidth;\n}, function (props) {\n  return props.theme.boxShadow;\n});\nfunction generateGeocoderDataset(lat, lon, text) {\n  return {\n    data: _processors[\"default\"].processRowObject([{\n      lt: lat,\n      ln: lon,\n      icon: 'place',\n      text: text\n    }]),\n    id: _defaultSettings.GEOCODER_DATASET_NAME,\n    info: {\n      hidden: true,\n      id: _defaultSettings.GEOCODER_DATASET_NAME,\n      label: _defaultSettings.GEOCODER_DATASET_NAME\n    }\n  };\n}\nfunction isValid(key) {\n  return /pk\\..*\\..*/.test(key);\n}\nfunction GeocoderPanelFactory() {\n  var GeocoderPanel = /*#__PURE__*/function (_Component) {\n    (0, _inherits2[\"default\"])(GeocoderPanel, _Component);\n    var _super = _createSuper(GeocoderPanel);\n    function GeocoderPanel() {\n      var _this;\n      (0, _classCallCheck2[\"default\"])(this, GeocoderPanel);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _super.call.apply(_super, [this].concat(args));\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onSelected\", function () {\n        var viewport = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        var geoItem = arguments.length > 1 ? arguments[1] : undefined;\n        var _geoItem$center = (0, _slicedToArray2[\"default\"])(geoItem.center, 2),\n          lon = _geoItem$center[0],\n          lat = _geoItem$center[1],\n          text = geoItem.text,\n          bbox = geoItem.bbox;\n        _this.removeGeocoderDataset();\n        _this.props.updateVisData([generateGeocoderDataset(lat, lon, text)], {\n          keepExistingConfig: true\n        }, PARSED_CONFIG);\n        var bounds = bbox || [lon - _defaultSettings.GEOCODER_GEO_OFFSET, lat - _defaultSettings.GEOCODER_GEO_OFFSET, lon + _defaultSettings.GEOCODER_GEO_OFFSET, lat + _defaultSettings.GEOCODER_GEO_OFFSET];\n        var centerAndZoom = (0, _projectionUtils.getCenterAndZoomFromBounds)(bounds, {\n          width: _this.props.mapState.width,\n          height: _this.props.mapState.height\n        });\n        if (!centerAndZoom) {\n          // failed to fit bounds\n          return;\n        }\n        _this.props.updateMap(_objectSpread(_objectSpread({\n          latitude: centerAndZoom.center[1],\n          longitude: centerAndZoom.center[0]\n        }, Number.isFinite(centerAndZoom.zoom) ? {\n          zoom: centerAndZoom.zoom\n        } : {}), {}, {\n          pitch: 0,\n          bearing: 0,\n          transitionDuration: _this.props.transitionDuration,\n          transitionInterpolator: new _core.FlyToInterpolator()\n        }));\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"removeMarker\", function () {\n        _this.removeGeocoderDataset();\n      });\n      return _this;\n    }\n    (0, _createClass2[\"default\"])(GeocoderPanel, [{\n      key: \"removeGeocoderDataset\",\n      value: function removeGeocoderDataset() {\n        this.props.removeDataset(_defaultSettings.GEOCODER_DATASET_NAME);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n          isGeocoderEnabled = _this$props.isGeocoderEnabled,\n          mapboxApiAccessToken = _this$props.mapboxApiAccessToken,\n          width = _this$props.width;\n        return /*#__PURE__*/_react[\"default\"].createElement(StyledGeocoderPanel, {\n          className: \"geocoder-panel\",\n          width: width,\n          style: {\n            display: isGeocoderEnabled ? 'block' : 'none'\n          }\n        }, isValid(mapboxApiAccessToken) && /*#__PURE__*/_react[\"default\"].createElement(_geocoder[\"default\"], {\n          mapboxApiAccessToken: mapboxApiAccessToken,\n          onSelected: this.onSelected,\n          onDeleteMarker: this.removeMarker,\n          width: width\n        }));\n      }\n    }]);\n    return GeocoderPanel;\n  }(_react.Component);\n  (0, _defineProperty2[\"default\"])(GeocoderPanel, \"propTypes\", {\n    isGeocoderEnabled: _propTypes[\"default\"].bool.isRequired,\n    mapboxApiAccessToken: _propTypes[\"default\"].string.isRequired,\n    mapState: _propTypes[\"default\"].object.isRequired,\n    updateVisData: _propTypes[\"default\"].func.isRequired,\n    removeDataset: _propTypes[\"default\"].func.isRequired,\n    updateMap: _propTypes[\"default\"].func.isRequired,\n    transitionDuration: _propTypes[\"default\"].number,\n    width: _propTypes[\"default\"].number\n  });\n  GeocoderPanel.defaultProps = {\n    transitionDuration: 3000\n  };\n  return GeocoderPanel;\n}","map":{"version":3,"sources":["../../src/components/geocoder-panel.js"],"names":["ICON_LAYER","id","GEOCODER_LAYER_ID","type","config","label","color","GEOCODER_ICON_COLOR","dataId","GEOCODER_DATASET_NAME","columns","lat","lng","icon","isVisible","hidden","visConfig","radius","GEOCODER_ICON_SIZE","PARSED_CONFIG","parseSavedConfig","version","visState","layers","StyledGeocoderPanel","styled","div","props","theme","geocoderTop","geocoderRight","Number","isFinite","width","geocoderWidth","boxShadow","generateGeocoderDataset","lon","text","data","processRowObject","lt","ln","info","isValid","key","test","GeocoderPanelFactory","GeocoderPanel","Component","isGeocoderEnabled","PropTypes","bool","isRequired","mapboxApiAccessToken","string","mapState","object","updateVisData","func","removeDataset","updateMap","transitionDuration","number","viewport","geoItem","center","bbox","removeGeocoderDataset","keepExistingConfig","bounds","GEOCODER_GEO_OFFSET","centerAndZoom","height","latitude","longitude","zoom","pitch","bearing","transitionInterpolator","FlyToInterpolator","display","onSelected","removeMarker","defaultProps"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Processors from 'processors';\nimport {FlyToInterpolator} from '@deck.gl/core';\nimport KeplerGlSchema from 'schemas';\nimport {getCenterAndZoomFromBounds} from 'utils/projection-utils';\n\nimport Geocoder from './geocoder/geocoder';\nimport {\n  GEOCODER_DATASET_NAME,\n  GEOCODER_LAYER_ID,\n  GEOCODER_GEO_OFFSET,\n  GEOCODER_ICON_COLOR,\n  GEOCODER_ICON_SIZE\n} from 'constants/default-settings';\n\nconst ICON_LAYER = {\n  id: GEOCODER_LAYER_ID,\n  type: 'icon',\n  config: {\n    label: 'Geocoder Layer',\n    color: GEOCODER_ICON_COLOR,\n    dataId: GEOCODER_DATASET_NAME,\n    columns: {\n      lat: 'lt',\n      lng: 'ln',\n      icon: 'icon',\n      label: 'text'\n    },\n    isVisible: true,\n    hidden: true,\n    visConfig: {\n      radius: GEOCODER_ICON_SIZE\n    }\n  }\n};\n\nconst PARSED_CONFIG = KeplerGlSchema.parseSavedConfig({\n  version: 'v1',\n  config: {\n    visState: {\n      layers: [ICON_LAYER]\n    }\n  }\n});\n\nconst StyledGeocoderPanel = styled.div`\n  position: absolute;\n  top: ${props => props.theme.geocoderTop}px;\n  right: ${props => props.theme.geocoderRight}px;\n  width: ${props => (Number.isFinite(props.width) ? props.width : props.theme.geocoderWidth)}px;\n  box-shadow: ${props => props.theme.boxShadow};\n  z-index: 100;\n`;\n\nfunction generateGeocoderDataset(lat, lon, text) {\n  return {\n    data: Processors.processRowObject([\n      {\n        lt: lat,\n        ln: lon,\n        icon: 'place',\n        text\n      }\n    ]),\n    id: GEOCODER_DATASET_NAME,\n    info: {\n      hidden: true,\n      id: GEOCODER_DATASET_NAME,\n      label: GEOCODER_DATASET_NAME\n    }\n  };\n}\n\nfunction isValid(key) {\n  return /pk\\..*\\..*/.test(key);\n}\n\nexport default function GeocoderPanelFactory() {\n  class GeocoderPanel extends Component {\n    static propTypes = {\n      isGeocoderEnabled: PropTypes.bool.isRequired,\n      mapboxApiAccessToken: PropTypes.string.isRequired,\n      mapState: PropTypes.object.isRequired,\n      updateVisData: PropTypes.func.isRequired,\n      removeDataset: PropTypes.func.isRequired,\n      updateMap: PropTypes.func.isRequired,\n\n      transitionDuration: PropTypes.number,\n      width: PropTypes.number\n    };\n\n    removeGeocoderDataset() {\n      this.props.removeDataset(GEOCODER_DATASET_NAME);\n    }\n\n    onSelected = (viewport = null, geoItem) => {\n      const {\n        center: [lon, lat],\n        text,\n        bbox\n      } = geoItem;\n      this.removeGeocoderDataset();\n      this.props.updateVisData(\n        [generateGeocoderDataset(lat, lon, text)],\n        {\n          keepExistingConfig: true\n        },\n        PARSED_CONFIG\n      );\n      const bounds = bbox || [\n        lon - GEOCODER_GEO_OFFSET,\n        lat - GEOCODER_GEO_OFFSET,\n        lon + GEOCODER_GEO_OFFSET,\n        lat + GEOCODER_GEO_OFFSET\n      ];\n      const centerAndZoom = getCenterAndZoomFromBounds(bounds, {\n        width: this.props.mapState.width,\n        height: this.props.mapState.height\n      });\n\n      if (!centerAndZoom) {\n        // failed to fit bounds\n        return;\n      }\n\n      this.props.updateMap({\n        latitude: centerAndZoom.center[1],\n        longitude: centerAndZoom.center[0],\n        // For marginal or invalid bounds, zoom may be NaN. Make sure to provide a valid value in order\n        // to avoid corrupt state and potential crashes as zoom is expected to be a number\n        ...(Number.isFinite(centerAndZoom.zoom) ? {zoom: centerAndZoom.zoom} : {}),\n        pitch: 0,\n        bearing: 0,\n        transitionDuration: this.props.transitionDuration,\n        transitionInterpolator: new FlyToInterpolator()\n      });\n    };\n\n    removeMarker = () => {\n      this.removeGeocoderDataset();\n    };\n\n    render() {\n      const {isGeocoderEnabled, mapboxApiAccessToken, width} = this.props;\n      return (\n        <StyledGeocoderPanel\n          className=\"geocoder-panel\"\n          width={width}\n          style={{display: isGeocoderEnabled ? 'block' : 'none'}}\n        >\n          {isValid(mapboxApiAccessToken) && (\n            <Geocoder\n              mapboxApiAccessToken={mapboxApiAccessToken}\n              onSelected={this.onSelected}\n              onDeleteMarker={this.removeMarker}\n              width={width}\n            />\n          )}\n        </StyledGeocoderPanel>\n      );\n    }\n  }\n\n  GeocoderPanel.defaultProps = {\n    transitionDuration: 3000\n  };\n\n  return GeocoderPanel;\n}\n"]},"metadata":{},"sourceType":"script"}
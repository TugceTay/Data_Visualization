{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"@babel/runtime/helpers/esm/get\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nimport { default as LayersPass } from './layers-pass';\nimport { Framebuffer, Texture2D, Renderbuffer, withParameters, cssToDeviceRatio } from '@luma.gl/core';\nvar ShadowPass = function (_LayersPass) {\n  _inherits(ShadowPass, _LayersPass);\n  function ShadowPass(gl, props) {\n    var _parameters, _attachments;\n    var _this;\n    _classCallCheck(this, ShadowPass);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ShadowPass).call(this, gl, props));\n    _this.shadowMap = new Texture2D(gl, {\n      width: 1,\n      height: 1,\n      parameters: (_parameters = {}, _defineProperty(_parameters, 10241, 9729), _defineProperty(_parameters, 10240, 9729), _defineProperty(_parameters, 10242, 33071), _defineProperty(_parameters, 10243, 33071), _parameters)\n    });\n    _this.depthBuffer = new Renderbuffer(gl, {\n      format: 33189,\n      width: 1,\n      height: 1\n    });\n    _this.fbo = new Framebuffer(gl, {\n      id: 'shadowmap',\n      width: 1,\n      height: 1,\n      attachments: (_attachments = {}, _defineProperty(_attachments, 36064, _this.shadowMap), _defineProperty(_attachments, 36096, _this.depthBuffer), _attachments)\n    });\n    return _this;\n  }\n  _createClass(ShadowPass, [{\n    key: \"render\",\n    value: function render(params) {\n      var _this2 = this;\n      var target = this.fbo;\n      withParameters(this.gl, {\n        depthRange: [0, 1],\n        depthTest: true,\n        blend: false,\n        clearColor: [1, 1, 1, 1]\n      }, function () {\n        var viewport = params.viewports[0];\n        var pixelRatio = cssToDeviceRatio(_this2.gl);\n        var width = viewport.width * pixelRatio;\n        var height = viewport.height * pixelRatio;\n        if (width !== target.width || height !== target.height) {\n          target.resize({\n            width: width,\n            height: height\n          });\n        }\n        _get(_getPrototypeOf(ShadowPass.prototype), \"render\", _this2).call(_this2, _objectSpread({}, params, {\n          target: target,\n          pass: 'shadow'\n        }));\n      });\n    }\n  }, {\n    key: \"shouldDrawLayer\",\n    value: function shouldDrawLayer(layer) {\n      return layer.props.shadowEnabled !== false;\n    }\n  }, {\n    key: \"getModuleParameters\",\n    value: function getModuleParameters() {\n      return {\n        drawToShadowMap: true\n      };\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      if (this.fbo) {\n        this.fbo[\"delete\"]();\n        this.fbo = null;\n      }\n      if (this.shadowMap) {\n        this.shadowMap[\"delete\"]();\n        this.shadowMap = null;\n      }\n      if (this.depthBuffer) {\n        this.depthBuffer[\"delete\"]();\n        this.depthBuffer = null;\n      }\n    }\n  }]);\n  return ShadowPass;\n}(LayersPass);\nexport { ShadowPass as default };","map":{"version":3,"sources":["../../../src/passes/shadow-pass.js"],"names":["default","LayersPass","Framebuffer","Texture2D","Renderbuffer","withParameters","cssToDeviceRatio","ShadowPass","gl","props","shadowMap","width","height","parameters","depthBuffer","format","fbo","id","attachments","params","target","depthRange","depthTest","blend","clearColor","viewport","viewports","pixelRatio","resize","pass","layer","shadowEnabled","drawToShadowMap"],"mappings":"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","sourcesContent":["import {default as LayersPass} from './layers-pass';\nimport {\n  Framebuffer,\n  Texture2D,\n  Renderbuffer,\n  withParameters,\n  cssToDeviceRatio\n} from '@luma.gl/core';\n\nexport default class ShadowPass extends LayersPass {\n  constructor(gl, props) {\n    super(gl, props);\n\n    // The shadowMap texture\n    this.shadowMap = new Texture2D(gl, {\n      width: 1,\n      height: 1,\n      parameters: {\n        [gl.TEXTURE_MIN_FILTER]: gl.LINEAR,\n        [gl.TEXTURE_MAG_FILTER]: gl.LINEAR,\n        [gl.TEXTURE_WRAP_S]: gl.CLAMP_TO_EDGE,\n        [gl.TEXTURE_WRAP_T]: gl.CLAMP_TO_EDGE\n      }\n    });\n\n    this.depthBuffer = new Renderbuffer(gl, {\n      format: gl.DEPTH_COMPONENT16,\n      width: 1,\n      height: 1\n    });\n\n    this.fbo = new Framebuffer(gl, {\n      id: 'shadowmap',\n      width: 1,\n      height: 1,\n      attachments: {\n        [gl.COLOR_ATTACHMENT0]: this.shadowMap,\n        // Depth attachment has to be specified for depth test to work\n        [gl.DEPTH_ATTACHMENT]: this.depthBuffer\n      }\n    });\n  }\n\n  render(params) {\n    const target = this.fbo;\n\n    withParameters(\n      this.gl,\n      {\n        depthRange: [0, 1],\n        depthTest: true,\n        blend: false,\n        clearColor: [1, 1, 1, 1]\n      },\n      () => {\n        const viewport = params.viewports[0];\n        const pixelRatio = cssToDeviceRatio(this.gl);\n        const width = viewport.width * pixelRatio;\n        const height = viewport.height * pixelRatio;\n        if (width !== target.width || height !== target.height) {\n          target.resize({width, height});\n        }\n\n        super.render({...params, target, pass: 'shadow'});\n      }\n    );\n  }\n\n  shouldDrawLayer(layer) {\n    return layer.props.shadowEnabled !== false;\n  }\n\n  getModuleParameters() {\n    return {\n      drawToShadowMap: true\n    };\n  }\n\n  delete() {\n    if (this.fbo) {\n      this.fbo.delete();\n      this.fbo = null;\n    }\n\n    if (this.shadowMap) {\n      this.shadowMap.delete();\n      this.shadowMap = null;\n    }\n\n    if (this.depthBuffer) {\n      this.depthBuffer.delete();\n      this.depthBuffer = null;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IndexedDataContainer = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _dataRow = require(\"./data-row\");\nvar _marked = /*#__PURE__*/_regenerator[\"default\"].mark(rowsIterator),\n  _marked2 = /*#__PURE__*/_regenerator[\"default\"].mark(columnIterator);\n\n/**\n * @param {import('./data-container-interface').DataContainerInterface} dataContainer\n * @param {number[]} indices\n * @param {import('./data-row').SharedRowOptions} sharedRow\n * @returns {Generator<DataRow, void, unknown>}\n */\nfunction rowsIterator(dataContainer, indices, sharedRow) {\n  var numRows, rowIndex, mappedRowIndex;\n  return _regenerator[\"default\"].wrap(function rowsIterator$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          numRows = indices.length;\n          rowIndex = 0;\n        case 2:\n          if (!(rowIndex < numRows)) {\n            _context.next = 9;\n            break;\n          }\n          mappedRowIndex = indices[rowIndex];\n          _context.next = 6;\n          return dataContainer.row(mappedRowIndex, sharedRow);\n        case 6:\n          ++rowIndex;\n          _context.next = 2;\n          break;\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n/**\n * @param {import('./data-container-interface').DataContainerInterface} dataContainer\n * @param {number[]} indices\n * @param {number} columnIndex\n * @returns {Generator<any, void, unknown>}\n */\n\nfunction columnIterator(dataContainer, indices, columnIndex) {\n  var numRows, rowIndex, mappedRowIndex;\n  return _regenerator[\"default\"].wrap(function columnIterator$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          numRows = indices.length;\n          rowIndex = 0;\n        case 2:\n          if (!(rowIndex < numRows)) {\n            _context2.next = 9;\n            break;\n          }\n          mappedRowIndex = indices[rowIndex];\n          _context2.next = 6;\n          return dataContainer.valueAt(mappedRowIndex, columnIndex);\n        case 6:\n          ++rowIndex;\n          _context2.next = 2;\n          break;\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\nvar IndexedDataContainer = /*#__PURE__*/function () {\n  function IndexedDataContainer(parentDataContainer, indices) {\n    (0, _classCallCheck2[\"default\"])(this, IndexedDataContainer);\n    this._parentDataContainer = parentDataContainer;\n    this._indices = indices;\n  }\n  (0, _createClass2[\"default\"])(IndexedDataContainer, [{\n    key: \"numRows\",\n    value: function numRows() {\n      return this._indices.length;\n    }\n  }, {\n    key: \"numColumns\",\n    value: function numColumns() {\n      return this._parentDataContainer.numColumns();\n    }\n    /**\n     * Remaps a local index to an index in the parent dataset\n     * @param {number} rowIndex\n     * @returns number\n     */\n  }, {\n    key: \"_mappedRowIndex\",\n    value: function _mappedRowIndex(rowIndex) {\n      return this._indices[rowIndex];\n    }\n  }, {\n    key: \"valueAt\",\n    value: function valueAt(rowIndex, columnIndex) {\n      return this._parentDataContainer.valueAt(this._mappedRowIndex(rowIndex), columnIndex);\n    }\n  }, {\n    key: \"row\",\n    value: function row(rowIndex, sharedRow) {\n      return this._parentDataContainer.row(this._mappedRowIndex(rowIndex), sharedRow);\n    }\n  }, {\n    key: \"rowAsArray\",\n    value: function rowAsArray(rowIndex) {\n      return this._parentDataContainer.rowAsArray(this._mappedRowIndex(rowIndex));\n    }\n  }, {\n    key: \"rows\",\n    value: function rows(sharedRow) {\n      return rowsIterator(this._parentDataContainer, this._indices, sharedRow);\n    }\n  }, {\n    key: \"column\",\n    value: function column(columnIndex) {\n      return columnIterator(this._parentDataContainer, this._indices, columnIndex);\n    }\n  }, {\n    key: \"getPlainIndex\",\n    value: function getPlainIndex() {\n      return this._indices.map(function (_, i) {\n        return i;\n      });\n    }\n  }, {\n    key: \"flattenData\",\n    value: function flattenData() {\n      var _this = this;\n      var tSharedRow = _dataRow.DataRow.createSharedRow(true);\n      return this._indices.map(function (_, i) {\n        return _this.row(i, tSharedRow).values();\n      }, this);\n    }\n  }, {\n    key: \"map\",\n    value: function map(func, sharedRow) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var _options$start = options.start,\n        start = _options$start === void 0 ? 0 : _options$start,\n        _options$end = options.end,\n        end = _options$end === void 0 ? this.numRows() : _options$end;\n      var endRow = Math.min(this.numRows(), end);\n      var tSharedRow = _dataRow.DataRow.createSharedRow(sharedRow);\n      var out = [];\n      for (var rowIndex = start; rowIndex < endRow; ++rowIndex) {\n        var row = this.row(rowIndex, tSharedRow);\n        out.push(func(row, rowIndex));\n      }\n      return out;\n    }\n  }, {\n    key: \"mapIndex\",\n    value: function mapIndex(func) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var _options$start2 = options.start,\n        start = _options$start2 === void 0 ? 0 : _options$start2,\n        _options$end2 = options.end,\n        end = _options$end2 === void 0 ? this.numRows() : _options$end2;\n      var endRow = Math.min(this.numRows(), end);\n      var out = [];\n      for (var rowIndex = start; rowIndex < endRow; ++rowIndex) {\n        out.push(func({\n          index: this._mappedRowIndex(rowIndex)\n        }, this._parentDataContainer));\n      }\n      return out;\n    }\n  }, {\n    key: \"find\",\n    value: function find(func, sharedRow) {\n      var tSharedRow = _dataRow.DataRow.createSharedRow(sharedRow);\n      for (var rowIndex = 0; rowIndex < this.numRows(); ++rowIndex) {\n        var row = this.row(rowIndex, tSharedRow);\n        if (func(row, rowIndex)) {\n          return row;\n        }\n      }\n      return undefined;\n    }\n  }, {\n    key: \"reduce\",\n    value: function reduce(func, initialValue, sharedRow) {\n      var tSharedRow = _dataRow.DataRow.createSharedRow(sharedRow);\n      for (var rowIndex = 0; rowIndex < this._indices.length; ++rowIndex) {\n        var row = this.row(rowIndex, tSharedRow);\n        initialValue = func(initialValue, row, rowIndex);\n      }\n      return initialValue;\n    }\n  }]);\n  return IndexedDataContainer;\n}();\nexports.IndexedDataContainer = IndexedDataContainer;","map":{"version":3,"sources":["../../../src/utils/table-utils/indexed-data-container.js"],"names":["rowsIterator","dataContainer","indices","sharedRow","numRows","length","rowIndex","mappedRowIndex","row","columnIterator","columnIndex","valueAt","IndexedDataContainer","parentDataContainer","_parentDataContainer","_indices","numColumns","_mappedRowIndex","rowAsArray","map","_","i","tSharedRow","DataRow","createSharedRow","values","func","options","start","end","endRow","Math","min","out","push","index","undefined","initialValue"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {DataRow} from './data-row';\n\n/**\n * @param {import('./data-container-interface').DataContainerInterface} dataContainer\n * @param {number[]} indices\n * @param {import('./data-row').SharedRowOptions} sharedRow\n * @returns {Generator<DataRow, void, unknown>}\n */\nfunction* rowsIterator(dataContainer, indices, sharedRow) {\n  const numRows = indices.length;\n  for (let rowIndex = 0; rowIndex < numRows; ++rowIndex) {\n    const mappedRowIndex = indices[rowIndex];\n    yield dataContainer.row(mappedRowIndex, sharedRow);\n  }\n}\n\n/**\n * @param {import('./data-container-interface').DataContainerInterface} dataContainer\n * @param {number[]} indices\n * @param {number} columnIndex\n * @returns {Generator<any, void, unknown>}\n */\nfunction* columnIterator(dataContainer, indices, columnIndex) {\n  const numRows = indices.length;\n  for (let rowIndex = 0; rowIndex < numRows; ++rowIndex) {\n    const mappedRowIndex = indices[rowIndex];\n    yield dataContainer.valueAt(mappedRowIndex, columnIndex);\n  }\n}\n\nexport class IndexedDataContainer {\n  constructor(parentDataContainer, indices) {\n    this._parentDataContainer = parentDataContainer;\n    this._indices = indices;\n  }\n\n  numRows() {\n    return this._indices.length;\n  }\n\n  numColumns() {\n    return this._parentDataContainer.numColumns();\n  }\n\n  /**\n   * Remaps a local index to an index in the parent dataset\n   * @param {number} rowIndex\n   * @returns number\n   */\n  _mappedRowIndex(rowIndex) {\n    return this._indices[rowIndex];\n  }\n\n  valueAt(rowIndex, columnIndex) {\n    return this._parentDataContainer.valueAt(this._mappedRowIndex(rowIndex), columnIndex);\n  }\n\n  row(rowIndex, sharedRow) {\n    return this._parentDataContainer.row(this._mappedRowIndex(rowIndex), sharedRow);\n  }\n\n  rowAsArray(rowIndex) {\n    return this._parentDataContainer.rowAsArray(this._mappedRowIndex(rowIndex));\n  }\n\n  rows(sharedRow) {\n    return rowsIterator(this._parentDataContainer, this._indices, sharedRow);\n  }\n\n  column(columnIndex) {\n    return columnIterator(this._parentDataContainer, this._indices, columnIndex);\n  }\n\n  getPlainIndex() {\n    return this._indices.map((_, i) => i);\n  }\n\n  flattenData() {\n    const tSharedRow = DataRow.createSharedRow(true);\n\n    return this._indices.map((_, i) => {\n      return this.row(i, tSharedRow).values();\n    }, this);\n  }\n\n  map(func, sharedRow, options = {}) {\n    const {start = 0, end = this.numRows()} = options;\n    const endRow = Math.min(this.numRows(), end);\n\n    const tSharedRow = DataRow.createSharedRow(sharedRow);\n\n    const out = [];\n    for (let rowIndex = start; rowIndex < endRow; ++rowIndex) {\n      const row = this.row(rowIndex, tSharedRow);\n      out.push(func(row, rowIndex));\n    }\n    return out;\n  }\n\n  mapIndex(func, options = {}) {\n    const {start = 0, end = this.numRows()} = options;\n    const endRow = Math.min(this.numRows(), end);\n\n    const out = [];\n    for (let rowIndex = start; rowIndex < endRow; ++rowIndex) {\n      out.push(func({index: this._mappedRowIndex(rowIndex)}, this._parentDataContainer));\n    }\n    return out;\n  }\n\n  find(func, sharedRow) {\n    const tSharedRow = DataRow.createSharedRow(sharedRow);\n\n    for (let rowIndex = 0; rowIndex < this.numRows(); ++rowIndex) {\n      const row = this.row(rowIndex, tSharedRow);\n      if (func(row, rowIndex)) {\n        return row;\n      }\n    }\n    return undefined;\n  }\n\n  reduce(func, initialValue, sharedRow) {\n    const tSharedRow = DataRow.createSharedRow(sharedRow);\n\n    for (let rowIndex = 0; rowIndex < this._indices.length; ++rowIndex) {\n      const row = this.row(rowIndex, tSharedRow);\n      initialValue = func(initialValue, row, rowIndex);\n    }\n    return initialValue;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _core = require(\"@deck.gl/core\");\nvar _geoLayers = require(\"@deck.gl/geo-layers\");\nvar _dBuildingUtils = require(\"./3d-building-utils\");\nvar _layers = require(\"@deck.gl/layers\");\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar ThreeDBuildingLayer = /*#__PURE__*/function (_CompositeLayer) {\n  (0, _inherits2[\"default\"])(ThreeDBuildingLayer, _CompositeLayer);\n  var _super = _createSuper(ThreeDBuildingLayer);\n  function ThreeDBuildingLayer() {\n    (0, _classCallCheck2[\"default\"])(this, ThreeDBuildingLayer);\n    return _super.apply(this, arguments);\n  }\n  (0, _createClass2[\"default\"])(ThreeDBuildingLayer, [{\n    key: \"renderSubLayers\",\n    value:\n    // this layer add its subLayers to the redux store, and push sample data\n    function renderSubLayers(props) {\n      return new _layers.SolidPolygonLayer(_objectSpread(_objectSpread({}, props), {}, {\n        parameter: {\n          blendFunc: ['SRC_ALPHA', 'ONE_MINUS_SRC_ALPHA', 'ONE', 'ONE_MINUS_SRC_ALPHA'],\n          blendEquation: ['FUNC_ADD', 'FUNC_ADD']\n        },\n        extruded: true,\n        opacity: 1,\n        filled: true,\n        getElevation: function getElevation(feature) {\n          return feature.properties.height || 0;\n        },\n        getPolygon: function getPolygon(feature) {\n          return feature.coordinates;\n        },\n        getFillColor: this.props.threeDBuildingColor\n      }));\n    }\n  }, {\n    key: \"renderLayers\",\n    value: function renderLayers() {\n      var _this = this;\n      return [new _geoLayers.TileLayer({\n        getTileData: function getTileData(args) {\n          return (0, _dBuildingUtils.getTileData)(_this.props.mapboxApiUrl, _this.props.mapboxApiAccessToken, args);\n        },\n        minZoom: 13,\n        renderSubLayers: this.renderSubLayers.bind(this),\n        updateTriggers: this.props.updateTriggers\n      })];\n    }\n  }]);\n  return ThreeDBuildingLayer;\n}(_core.CompositeLayer);\nexports[\"default\"] = ThreeDBuildingLayer;","map":{"version":3,"sources":["../../../src/deckgl-layers/3d-building-layer/3d-building-layer.js"],"names":["ThreeDBuildingLayer","CompositeLayer","props","SolidPolygonLayer","parameter","blendFunc","blendEquation","extruded","opacity","filled","getElevation","feature","properties","height","getPolygon","coordinates","getFillColor","threeDBuildingColor","DeckGLTileLayer","getTileData","mapboxApiUrl","mapboxApiAccessToken","args","minZoom","renderSubLayers","bind","updateTriggers"],"mappings":";;;;;;;;;;;;;AAoBA,IAAA,KAAA,GAAA,OAAA,CAAA,eAAA,CAAA;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;AACA,IAAA,eAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEqBA,mB;;;;;;;;;;IACnB;IAEA,SAAA,eAAA,CAAgBE,KAAhB,EAAuB;MACrB,OAAO,IAAIC,OAAAA,CAAAA,iBAAJ,CAAA,aAAA,CAAA,aAAA,CAAA,CAAA,CAAA,EACFD,KADE,CAAA,EAAA,CAAA,CAAA,EAAA;QAELE,SAAS,EAAE;UACTC,SAAS,EAAE,CAAC,WAAD,EAAc,qBAAd,EAAqC,KAArC,EAA4C,qBAA5C,CADF;UAETC,aAAa,EAAE,CAAC,UAAD,EAAa,UAAb;QAFN,CAFN;QAMLC,QAAQ,EAAE,IANL;QAOLC,OAAO,EAAE,CAPJ;QAQLC,MAAM,EAAE,IARH;QASLC,YAAY,EAAE,SAAA,YAAA,CAAA,OAAO,EAAA;UAAA,OAAIC,OAAO,CAACC,UAARD,CAAmBE,MAAnBF,IAA6B,CAAjC;QAAA,CAThB;QAULG,UAAU,EAAE,SAAA,UAAA,CAAA,OAAO,EAAA;UAAA,OAAIH,OAAO,CAACI,WAAZ;QAAA,CAVd;QAWLC,YAAY,EAAE,IAAA,CAAKd,KAAL,CAAWe;MAXpB,CAAA,CAAA,CAAP;IAaD;;;WAED,SAAA,YAAA,GAAe;MAAA,IAAA,KAAA,GAAA,IAAA;MACb,OAAO,CACL,IAAIC,UAAAA,CAAAA,SAAJ,CAAoB;QAClBC,WAAW,EAAE,SAAA,WAAA,CAAA,IAAI,EAAA;UAAA,OACf,CAAA,CAAA,EAAA,eAAA,CAAA,WAAA,EAAY,KAAI,CAACjB,KAAL,CAAWkB,YAAvB,EAAqC,KAAI,CAAClB,KAAL,CAAWmB,oBAAhD,EAAsEC,IAAtE,CADe;QAAA,CADC;QAGlBC,OAAO,EAAE,EAHS;QAIlBC,eAAe,EAAE,IAAA,CAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAJC;QAKlBC,cAAc,EAAE,IAAA,CAAKxB,KAAL,CAAWwB;MALT,CAApB,CADK,CAAP;IASD;;;EA7B8CzB,KAAAA,CAAAA,c","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {CompositeLayer} from '@deck.gl/core';\nimport {TileLayer as DeckGLTileLayer} from '@deck.gl/geo-layers';\nimport {getTileData} from './3d-building-utils';\nimport {SolidPolygonLayer} from '@deck.gl/layers';\n\nexport default class ThreeDBuildingLayer extends CompositeLayer {\n  // this layer add its subLayers to the redux store, and push sample data\n\n  renderSubLayers(props) {\n    return new SolidPolygonLayer({\n      ...props,\n      parameter: {\n        blendFunc: ['SRC_ALPHA', 'ONE_MINUS_SRC_ALPHA', 'ONE', 'ONE_MINUS_SRC_ALPHA'],\n        blendEquation: ['FUNC_ADD', 'FUNC_ADD']\n      },\n      extruded: true,\n      opacity: 1,\n      filled: true,\n      getElevation: feature => feature.properties.height || 0,\n      getPolygon: feature => feature.coordinates,\n      getFillColor: this.props.threeDBuildingColor\n    });\n  }\n\n  renderLayers() {\n    return [\n      new DeckGLTileLayer({\n        getTileData: args =>\n          getTileData(this.props.mapboxApiUrl, this.props.mapboxApiAccessToken, args),\n        minZoom: 13,\n        renderSubLayers: this.renderSubLayers.bind(this),\n        updateTriggers: this.props.updateTriggers\n      })\n    ];\n  }\n}\n"]},"metadata":{},"sourceType":"script"}
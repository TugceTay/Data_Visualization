{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport VectorTileFeature from './vector-tile-feature.js';\nvar VectorTileLayer = function () {\n  function VectorTileLayer(pbf, end) {\n    _classCallCheck(this, VectorTileLayer);\n    this.version = 1;\n    this.name = null;\n    this.extent = 4096;\n    this.length = 0;\n    this._pbf = pbf;\n    this._keys = [];\n    this._values = [];\n    this._features = [];\n    pbf.readFields(readLayer, this, end);\n    this.length = this._features.length;\n  }\n  _createClass(VectorTileLayer, [{\n    key: \"feature\",\n    value: function feature(i) {\n      if (i < 0 || i >= this._features.length) {\n        throw new Error('feature index out of bounds');\n      }\n      this._pbf.pos = this._features[i];\n      var end = this._pbf.readVarint() + this._pbf.pos;\n      return new VectorTileFeature(this._pbf, end, this.extent, this._keys, this._values);\n    }\n  }]);\n  return VectorTileLayer;\n}();\nexport { VectorTileLayer as default };\nfunction readLayer(tag, layer, pbf) {\n  if (tag === 15) layer.version = pbf.readVarint();else if (tag === 1) layer.name = pbf.readString();else if (tag === 5) layer.extent = pbf.readVarint();else if (tag === 2) layer._features.push(pbf.pos);else if (tag === 3) layer._keys.push(pbf.readString());else if (tag === 4) layer._values.push(readValueMessage(pbf));\n}\nfunction readValueMessage(pbf) {\n  var value = null;\n  var end = pbf.readVarint() + pbf.pos;\n  while (pbf.pos < end) {\n    var tag = pbf.readVarint() >> 3;\n    value = tag === 1 ? pbf.readString() : tag === 2 ? pbf.readFloat() : tag === 3 ? pbf.readDouble() : tag === 4 ? pbf.readVarint64() : tag === 5 ? pbf.readVarint() : tag === 6 ? pbf.readSVarint() : tag === 7 ? pbf.readBoolean() : null;\n  }\n  return value;\n}","map":{"version":3,"sources":["../../../../src/lib/mapbox-vector-tile/vector-tile-layer.js"],"names":["VectorTileFeature","VectorTileLayer","pbf","end","version","name","extent","length","_pbf","_keys","_values","_features","readFields","readLayer","i","Error","pos","readVarint","tag","layer","readString","push","readValueMessage","value","readFloat","readDouble","readVarint64","readSVarint","readBoolean"],"mappings":"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","sourcesContent":["// This code is forked from https://github.com/mapbox/vector-tile-js under BSD 3-clause license.\n\nimport VectorTileFeature from './vector-tile-feature.js';\n\nexport default class VectorTileLayer {\n  constructor(pbf, end) {\n    // Public\n    this.version = 1;\n    this.name = null;\n    this.extent = 4096;\n    this.length = 0;\n\n    // Private\n    this._pbf = pbf;\n    this._keys = [];\n    this._values = [];\n    this._features = [];\n\n    pbf.readFields(readLayer, this, end);\n\n    this.length = this._features.length;\n  }\n\n  // return feature `i` from this layer as a `VectorTileFeature`\n  feature(i) {\n    if (i < 0 || i >= this._features.length) {\n      throw new Error('feature index out of bounds');\n    }\n\n    this._pbf.pos = this._features[i];\n\n    const end = this._pbf.readVarint() + this._pbf.pos;\n    return new VectorTileFeature(this._pbf, end, this.extent, this._keys, this._values);\n  }\n}\n\nfunction readLayer(tag, layer, pbf) {\n  if (tag === 15) layer.version = pbf.readVarint();\n  else if (tag === 1) layer.name = pbf.readString();\n  else if (tag === 5) layer.extent = pbf.readVarint();\n  else if (tag === 2) layer._features.push(pbf.pos);\n  else if (tag === 3) layer._keys.push(pbf.readString());\n  else if (tag === 4) layer._values.push(readValueMessage(pbf));\n}\n\nfunction readValueMessage(pbf) {\n  let value = null;\n  const end = pbf.readVarint() + pbf.pos;\n\n  while (pbf.pos < end) {\n    const tag = pbf.readVarint() >> 3;\n\n    value =\n      tag === 1\n        ? pbf.readString()\n        : tag === 2\n          ? pbf.readFloat()\n          : tag === 3\n            ? pbf.readDouble()\n            : tag === 4\n              ? pbf.readVarint64()\n              : tag === 5\n                ? pbf.readVarint()\n                : tag === 6\n                  ? pbf.readSVarint()\n                  : tag === 7\n                    ? pbf.readBoolean()\n                    : null;\n  }\n\n  return value;\n}\n"]},"metadata":{},"sourceType":"module"}
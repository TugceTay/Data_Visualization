{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = MapContainerFactory;\nexports.Attribution = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _reactMapGl = _interopRequireDefault(require(\"react-map-gl\"));\nvar _react2 = _interopRequireDefault(require(\"@deck.gl/react\"));\nvar _reselect = require(\"reselect\");\nvar _viewportMercatorProject = _interopRequireDefault(require(\"viewport-mercator-project\"));\nvar _notificationsUtils = require(\"../utils/notifications-utils\");\nvar _mapPopover = _interopRequireDefault(require(\"./map/map-popover\"));\nvar _mapControl = _interopRequireDefault(require(\"./map/map-control\"));\nvar _styledComponents = require(\"./common/styled-components\");\nvar _editor = _interopRequireDefault(require(\"./editor/editor\"));\nvar _mapboxUtils = require(\"../layers/mapbox-utils\");\nvar _glUtils = require(\"../utils/gl-utils\");\nvar _mapboxUtils2 = require(\"../utils/map-style-utils/mapbox-utils\");\nvar _layerUtils = require(\"../utils/layer-utils\");\nvar _dBuildingLayer = _interopRequireDefault(require(\"../deckgl-layers/3d-building-layer/3d-building-layer\"));\nvar _defaultSettings = require(\"../constants/default-settings\");\nvar _errorBoundary = _interopRequireDefault(require(\"./common/error-boundary\"));\nvar _observeDimensions = require(\"../utils/observe-dimensions\");\nvar _locales = require(\"../localization/locales\");\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/** @type {{[key: string]: React.CSSProperties}} */\nvar MAP_STYLE = {\n  container: {\n    display: 'inline-block',\n    position: 'relative',\n    width: '100%',\n    height: '100%'\n  },\n  top: {\n    position: 'absolute',\n    top: '0px',\n    pointerEvents: 'none',\n    width: '100%',\n    height: '100%'\n  }\n};\nvar MAPBOXGL_STYLE_UPDATE = 'style.load';\nvar MAPBOXGL_RENDER = 'render';\nvar TRANSITION_DURATION = 0;\nvar Attribution = function Attribution() {\n  return /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.StyledAttrbution, null, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"attrition-logo\"\n  }, \"Basemap by:\", /*#__PURE__*/_react[\"default\"].createElement(\"a\", {\n    className: \"mapboxgl-ctrl-logo\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: \"https://www.mapbox.com/\",\n    \"aria-label\": \"Mapbox logo\"\n  })), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"attrition-link\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"a\", {\n    href: \"https://kepler.gl/policy/\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, \"\\xA9 kepler.gl |\", ' '), /*#__PURE__*/_react[\"default\"].createElement(\"a\", {\n    href: \"https://www.mapbox.com/about/maps/\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, \"\\xA9 Mapbox |\", ' '), /*#__PURE__*/_react[\"default\"].createElement(\"a\", {\n    href: \"http://www.openstreetmap.org/copyright\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, \"\\xA9 OpenStreetMap |\", ' '), /*#__PURE__*/_react[\"default\"].createElement(\"a\", {\n    href: \"https://www.mapbox.com/map-feedback/\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"strong\", null, \"Improve this map\"))));\n};\nexports.Attribution = Attribution;\nMapContainerFactory.deps = [_mapPopover[\"default\"], _mapControl[\"default\"], _editor[\"default\"]];\nfunction MapContainerFactory(MapPopover, MapControl, Editor) {\n  var MapContainer = /*#__PURE__*/function (_Component) {\n    (0, _inherits2[\"default\"])(MapContainer, _Component);\n    var _super = _createSuper(MapContainer);\n    function MapContainer(_props) {\n      var _this;\n      (0, _classCallCheck2[\"default\"])(this, MapContainer);\n      _this = _super.call(this, _props);\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_handleResize\", function (dimensions) {\n        var primary = _this.props.primary;\n        if (primary) {\n          var mapStateActions = _this.props.mapStateActions;\n          if (dimensions && dimensions.width > 0 && dimensions.height > 0) {\n            mapStateActions.updateMap(dimensions);\n          }\n        }\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"layersSelector\", function (props) {\n        return props.layers;\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"layerDataSelector\", function (props) {\n        return props.layerData;\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"mapLayersSelector\", function (props) {\n        return props.mapLayers;\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"layerOrderSelector\", function (props) {\n        return props.layerOrder;\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"layersToRenderSelector\", (0, _reselect.createSelector)(_this.layersSelector, _this.layerDataSelector, _this.mapLayersSelector, _layerUtils.prepareLayersToRender));\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"layersForDeckSelector\", (0, _reselect.createSelector)(_this.layersSelector, _this.layerDataSelector, _layerUtils.prepareLayersForDeck));\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"filtersSelector\", function (props) {\n        return props.filters;\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"polygonFilters\", (0, _reselect.createSelector)(_this.filtersSelector, function (filters) {\n        return filters.filter(function (f) {\n          return f.type === _defaultSettings.FILTER_TYPES.polygon;\n        });\n      }));\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"mapboxLayersSelector\", (0, _reselect.createSelector)(_this.layersSelector, _this.layerDataSelector, _this.layerOrderSelector, _this.layersToRenderSelector, _mapboxUtils.generateMapboxLayers));\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onCloseMapPopover\", function () {\n        _this.props.visStateActions.onLayerClick(null);\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onLayerSetDomain\", function (idx, colorDomain) {\n        _this.props.visStateActions.layerConfigChange(_this.props.layers[idx], {\n          colorDomain: colorDomain\n        });\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_handleMapToggleLayer\", function (layerId) {\n        var _this$props = _this.props,\n          _this$props$index = _this$props.index,\n          mapIndex = _this$props$index === void 0 ? 0 : _this$props$index,\n          visStateActions = _this$props.visStateActions;\n        visStateActions.toggleLayerForMap(mapIndex, layerId);\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onMapboxStyleUpdate\", function () {\n        // force refresh mapboxgl layers\n        _this.previousLayers = {};\n        _this._updateMapboxLayers();\n        if (typeof _this.props.onMapStyleLoaded === 'function') {\n          _this.props.onMapStyleLoaded(_this._map);\n        }\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_setMapboxMap\", function (mapbox) {\n        if (!_this._map && mapbox) {\n          _this._map = mapbox.getMap(); // i noticed in certain context we don't access the actual map element\n\n          if (!_this._map) {\n            return;\n          } // bind mapboxgl event listener\n\n          _this._map.on(MAPBOXGL_STYLE_UPDATE, _this._onMapboxStyleUpdate);\n          _this._map.on(MAPBOXGL_RENDER, function () {\n            if (typeof _this.props.onMapRender === 'function') {\n              _this.props.onMapRender(_this._map);\n            }\n          });\n        }\n        if (_this.props.getMapboxRef) {\n          // The parent component can gain access to our MapboxGlMap by\n          // providing this callback. Note that 'mapbox' will be null when the\n          // ref is unset (e.g. when a split map is closed).\n          _this.props.getMapboxRef(mapbox, _this.props.index);\n        }\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onBeforeRender\", function (_ref) {\n        var gl = _ref.gl;\n        (0, _glUtils.setLayerBlending)(gl, _this.props.layerBlending);\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onDeckError\", function (error, layer) {\n        var errorMessage = \"An error in deck.gl: \".concat(error.message, \" in \").concat(layer.id);\n        var notificationId = \"\".concat(layer.id, \"-\").concat(error.message); // Throttle error notifications, as React doesn't like too many state changes from here.\n\n        _this._deckGLErrorsElapsed = _this._deckGLErrorsElapsed || {};\n        var lastShown = _this._deckGLErrorsElapsed[notificationId];\n        if (!lastShown || lastShown < Date.now() - _defaultSettings.THROTTLE_NOTIFICATION_TIME) {\n          _this._deckGLErrorsElapsed[notificationId] = Date.now(); // Create new error notification or update existing one with same id.\n          // Update is required to preserve the order of notifications as they probably are going to \"jump\" based on order of errors.\n\n          var uiStateActions = _this.props.uiStateActions;\n          uiStateActions.addNotification((0, _notificationsUtils.errorNotification)({\n            message: errorMessage,\n            id: notificationId\n          }));\n        }\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onViewportChange\", function (viewState) {\n        var width = viewState.width,\n          height = viewState.height,\n          restViewState = (0, _objectWithoutProperties2[\"default\"])(viewState, [\"width\", \"height\"]);\n        var primary = _this.props.primary; // react-map-gl sends 0,0 dimensions during initialization\n        // after we have received proper dimensions from observeDimensions\n\n        var next = _objectSpread(_objectSpread({}, width > 0 && height > 0 ? viewState : restViewState), {}, {\n          // enabling transition in two maps may lead to endless update loops\n          transitionDuration: primary ? TRANSITION_DURATION : 0\n        });\n        if (typeof _this.props.onViewStateChange === 'function') {\n          _this.props.onViewStateChange(next);\n        }\n        _this.props.mapStateActions.updateMap(next);\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_toggleMapControl\", function (panelId) {\n        var _this$props2 = _this.props,\n          index = _this$props2.index,\n          uiStateActions = _this$props2.uiStateActions;\n        uiStateActions.toggleMapControl(panelId, index);\n      });\n      _this.previousLayers = {// [layers.id]: mapboxLayerConfig\n      };\n      _this._deck = null;\n      _this._ref = /*#__PURE__*/(0, _react.createRef)();\n      return _this;\n    }\n    (0, _createClass2[\"default\"])(MapContainer, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        (0, _observeDimensions.observeDimensions)(this._ref.current, this._handleResize);\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        // unbind mapboxgl event listener\n        if (this._map) {\n          this._map.off(MAPBOXGL_STYLE_UPDATE);\n          this._map.off(MAPBOXGL_RENDER);\n        }\n        (0, _observeDimensions.unobserveDimensions)(this._ref.current);\n      }\n    }, {\n      key: \"_onDeckInitialized\",\n      value: function _onDeckInitialized(gl) {\n        if (this.props.onDeckInitialized) {\n          this.props.onDeckInitialized(this._deck, gl);\n        }\n      }\n    }, {\n      key: \"_renderMapPopover\",\n      value: /* component render functions */\n\n      /* eslint-disable complexity */\n      function _renderMapPopover(layersToRender) {\n        // TODO: move this into reducer so it can be tested\n        var _this$props3 = this.props,\n          mapState = _this$props3.mapState,\n          hoverInfo = _this$props3.hoverInfo,\n          clicked = _this$props3.clicked,\n          datasets = _this$props3.datasets,\n          interactionConfig = _this$props3.interactionConfig,\n          layers = _this$props3.layers,\n          _this$props3$mousePos = _this$props3.mousePos,\n          mousePosition = _this$props3$mousePos.mousePosition,\n          coordinate = _this$props3$mousePos.coordinate,\n          pinned = _this$props3$mousePos.pinned;\n        if (!mousePosition || !interactionConfig.tooltip) {\n          return null;\n        }\n        var layerHoverProp = (0, _layerUtils.getLayerHoverProp)({\n          interactionConfig: interactionConfig,\n          hoverInfo: hoverInfo,\n          layers: layers,\n          layersToRender: layersToRender,\n          datasets: datasets\n        });\n        var compareMode = interactionConfig.tooltip.config ? interactionConfig.tooltip.config.compareMode : false;\n        var pinnedPosition = {};\n        var layerPinnedProp = null;\n        if (pinned || clicked) {\n          // project lnglat to screen so that tooltip follows the object on zoom\n          var viewport = new _viewportMercatorProject[\"default\"](mapState);\n          var lngLat = clicked ? clicked.lngLat : pinned.coordinate;\n          pinnedPosition = this._getHoverXY(viewport, lngLat);\n          layerPinnedProp = (0, _layerUtils.getLayerHoverProp)({\n            interactionConfig: interactionConfig,\n            hoverInfo: clicked,\n            layers: layers,\n            layersToRender: layersToRender,\n            datasets: datasets\n          });\n          if (layerHoverProp && layerPinnedProp) {\n            layerHoverProp.primaryData = layerPinnedProp.data;\n            layerHoverProp.compareType = interactionConfig.tooltip.config.compareType;\n          }\n        }\n        var commonProp = {\n          onClose: this._onCloseMapPopover,\n          zoom: mapState.zoom,\n          container: this._deck ? this._deck.canvas : undefined\n        };\n        return /*#__PURE__*/_react[\"default\"].createElement(_errorBoundary[\"default\"], null, layerPinnedProp && /*#__PURE__*/_react[\"default\"].createElement(MapPopover, (0, _extends2[\"default\"])({}, pinnedPosition, commonProp, {\n          layerHoverProp: layerPinnedProp,\n          coordinate: interactionConfig.coordinate.enabled && (pinned || {}).coordinate,\n          frozen: true,\n          isBase: compareMode\n        })), layerHoverProp && (!layerPinnedProp || compareMode) && /*#__PURE__*/_react[\"default\"].createElement(MapPopover, (0, _extends2[\"default\"])({\n          x: mousePosition[0],\n          y: mousePosition[1]\n        }, commonProp, {\n          layerHoverProp: layerHoverProp,\n          frozen: false,\n          coordinate: interactionConfig.coordinate.enabled && coordinate\n        })));\n      }\n      /* eslint-enable complexity */\n    }, {\n      key: \"_getHoverXY\",\n      value: function _getHoverXY(viewport, lngLat) {\n        var screenCoord = !viewport || !lngLat ? null : viewport.project(lngLat);\n        return screenCoord && {\n          x: screenCoord[0],\n          y: screenCoord[1]\n        };\n      }\n    }, {\n      key: \"_renderDeckOverlay\",\n      value: function _renderDeckOverlay(layersForDeck) {\n        var _this$props$deckGlPro,\n          _this2 = this;\n        var _this$props4 = this.props,\n          mapState = _this$props4.mapState,\n          mapStyle = _this$props4.mapStyle,\n          layerData = _this$props4.layerData,\n          layerOrder = _this$props4.layerOrder,\n          layers = _this$props4.layers,\n          visStateActions = _this$props4.visStateActions,\n          mapboxApiAccessToken = _this$props4.mapboxApiAccessToken,\n          mapboxApiUrl = _this$props4.mapboxApiUrl; // initialise layers from props if exists\n\n        var deckGlLayers = ((_this$props$deckGlPro = this.props.deckGlProps) === null || _this$props$deckGlPro === void 0 ? void 0 : _this$props$deckGlPro.layers) || []; // wait until data is ready before render data layers\n\n        if (layerData && layerData.length) {\n          // last layer render first\n          var dataLayers = layerOrder.slice().reverse().filter(function (idx) {\n            return layersForDeck[layers[idx].id];\n          }).reduce(function (overlays, idx) {\n            var layerCallbacks = {\n              onSetLayerDomain: function onSetLayerDomain(val) {\n                return _this2._onLayerSetDomain(idx, val);\n              }\n            };\n            var layerOverlay = (0, _layerUtils.renderDeckGlLayer)(_this2.props, layerCallbacks, idx);\n            return overlays.concat(layerOverlay || []);\n          }, []);\n          deckGlLayers = deckGlLayers.concat(dataLayers);\n        }\n        if (mapStyle.visibleLayerGroups['3d building']) {\n          deckGlLayers.push(new _dBuildingLayer[\"default\"]({\n            id: '_keplergl_3d-building',\n            mapboxApiAccessToken: mapboxApiAccessToken,\n            mapboxApiUrl: mapboxApiUrl,\n            threeDBuildingColor: mapStyle.threeDBuildingColor,\n            updateTriggers: {\n              getFillColor: mapStyle.threeDBuildingColor\n            }\n          }));\n        }\n        return /*#__PURE__*/_react[\"default\"].createElement(_react2[\"default\"], (0, _extends2[\"default\"])({}, this.props.deckGlProps, {\n          viewState: mapState,\n          id: \"default-deckgl-overlay\",\n          layers: deckGlLayers,\n          onBeforeRender: this._onBeforeRender,\n          onHover: visStateActions.onLayerHover,\n          onClick: visStateActions.onLayerClick,\n          onError: this._onDeckError,\n          ref: function ref(comp) {\n            if (comp && comp.deck && !_this2._deck) {\n              _this2._deck = comp.deck;\n            }\n          },\n          onWebGLInitialized: function onWebGLInitialized(gl) {\n            return _this2._onDeckInitialized(gl);\n          }\n        }));\n      }\n    }, {\n      key: \"_updateMapboxLayers\",\n      value: function _updateMapboxLayers() {\n        var mapboxLayers = this.mapboxLayersSelector(this.props);\n        if (!Object.keys(mapboxLayers).length && !Object.keys(this.previousLayers).length) {\n          return;\n        }\n        (0, _mapboxUtils.updateMapboxLayers)(this._map, mapboxLayers, this.previousLayers);\n        this.previousLayers = mapboxLayers;\n      }\n    }, {\n      key: \"_renderMapboxOverlays\",\n      value: function _renderMapboxOverlays() {\n        if (this._map && this._map.isStyleLoaded()) {\n          this._updateMapboxLayers();\n        }\n      }\n    }, {\n      key: \"_renderMap\",\n      value: /* eslint-disable complexity */\n      function _renderMap() {\n        var _this$props5 = this.props,\n          mapState = _this$props5.mapState,\n          mapStyle = _this$props5.mapStyle,\n          mapStateActions = _this$props5.mapStateActions,\n          layers = _this$props5.layers,\n          MapComponent = _this$props5.MapComponent,\n          datasets = _this$props5.datasets,\n          mapboxApiAccessToken = _this$props5.mapboxApiAccessToken,\n          mapboxApiUrl = _this$props5.mapboxApiUrl,\n          mapControls = _this$props5.mapControls,\n          isExport = _this$props5.isExport,\n          locale = _this$props5.locale,\n          uiStateActions = _this$props5.uiStateActions,\n          visStateActions = _this$props5.visStateActions,\n          interactionConfig = _this$props5.interactionConfig,\n          editor = _this$props5.editor,\n          index = _this$props5.index,\n          primary = _this$props5.primary;\n        var layersToRender = this.layersToRenderSelector(this.props);\n        var layersForDeck = this.layersForDeckSelector(this.props);\n        var mapProps = _objectSpread(_objectSpread({}, mapState), {}, {\n          width: '100%',\n          height: '100%',\n          preserveDrawingBuffer: true,\n          mapboxApiAccessToken: mapboxApiAccessToken,\n          mapboxApiUrl: mapboxApiUrl,\n          onViewportChange: this._onViewportChange,\n          transformRequest: _mapboxUtils2.transformRequest\n        });\n        var isEdit = (mapControls.mapDraw || {}).active;\n        var hasGeocoderLayer = layers.find(function (l) {\n          return l.id === _defaultSettings.GEOCODER_LAYER_ID;\n        });\n        var isSplit = Boolean(mapState.isSplit);\n        return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(MapControl, {\n          datasets: datasets,\n          availableLocales: Object.keys(_locales.LOCALE_CODES),\n          dragRotate: mapState.dragRotate,\n          isSplit: isSplit,\n          primary: primary,\n          isExport: isExport,\n          layers: layers,\n          layersToRender: layersToRender,\n          mapIndex: index,\n          mapControls: mapControls,\n          readOnly: this.props.readOnly,\n          scale: mapState.scale || 1,\n          top: interactionConfig.geocoder && interactionConfig.geocoder.enabled ? 52 : 0,\n          editor: editor,\n          locale: locale,\n          onTogglePerspective: mapStateActions.togglePerspective,\n          onToggleSplitMap: mapStateActions.toggleSplitMap,\n          onMapToggleLayer: this._handleMapToggleLayer,\n          onToggleMapControl: this._toggleMapControl,\n          onSetEditorMode: visStateActions.setEditorMode,\n          onSetLocale: uiStateActions.setLocale,\n          onToggleEditorVisibility: visStateActions.toggleEditorVisibility\n        }), /*#__PURE__*/_react[\"default\"].createElement(MapComponent, (0, _extends2[\"default\"])({}, mapProps, {\n          key: \"bottom\",\n          ref: this._setMapboxMap,\n          mapStyle: mapStyle.bottomMapStyle,\n          getCursor: this.props.hoverInfo ? function () {\n            return 'pointer';\n          } : undefined,\n          onMouseMove: this.props.visStateActions.onMouseMove\n        }), this._renderDeckOverlay(layersForDeck), this._renderMapboxOverlays(), /*#__PURE__*/_react[\"default\"].createElement(Editor, {\n          index: index,\n          datasets: datasets,\n          editor: editor,\n          filters: this.polygonFilters(this.props),\n          isEnabled: isEdit,\n          layers: layers,\n          layersToRender: layersToRender,\n          onDeleteFeature: visStateActions.deleteFeature,\n          onSelect: visStateActions.setSelectedFeature,\n          onUpdate: visStateActions.setFeatures,\n          onTogglePolygonFilter: visStateActions.setPolygonFilterLayer,\n          style: {\n            pointerEvents: isEdit ? 'all' : 'none',\n            position: 'absolute',\n            display: editor.visible ? 'block' : 'none'\n          }\n        })), mapStyle.topMapStyle || hasGeocoderLayer ? /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          style: MAP_STYLE.top\n        }, /*#__PURE__*/_react[\"default\"].createElement(MapComponent, (0, _extends2[\"default\"])({}, mapProps, {\n          key: \"top\",\n          mapStyle: mapStyle.topMapStyle\n        }), this._renderDeckOverlay((0, _defineProperty2[\"default\"])({}, _defaultSettings.GEOCODER_LAYER_ID, true)))) : null, this._renderMapPopover(layersToRender), !isSplit || index === 1 ? /*#__PURE__*/_react[\"default\"].createElement(Attribution, null) : null);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props6 = this.props,\n          mapState = _this$props6.mapState,\n          mapStyle = _this$props6.mapStyle;\n        return /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.StyledMapContainer, {\n          ref: this._ref,\n          style: MAP_STYLE.container,\n          globe: mapState.globe\n        }, mapStyle.bottomMapStyle && this._renderMap());\n      }\n    }]);\n    return MapContainer;\n  }(_react.Component);\n  (0, _defineProperty2[\"default\"])(MapContainer, \"propTypes\", {\n    // required\n    datasets: _propTypes[\"default\"].object,\n    interactionConfig: _propTypes[\"default\"].object.isRequired,\n    layerBlending: _propTypes[\"default\"].string.isRequired,\n    layerOrder: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].any).isRequired,\n    layerData: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].any).isRequired,\n    layers: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].any).isRequired,\n    filters: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].any).isRequired,\n    mapState: _propTypes[\"default\"].object.isRequired,\n    mapControls: _propTypes[\"default\"].object.isRequired,\n    mapStyle: _propTypes[\"default\"].object.isRequired,\n    mousePos: _propTypes[\"default\"].object.isRequired,\n    mapboxApiAccessToken: _propTypes[\"default\"].string.isRequired,\n    mapboxApiUrl: _propTypes[\"default\"].string,\n    visStateActions: _propTypes[\"default\"].object.isRequired,\n    mapStateActions: _propTypes[\"default\"].object.isRequired,\n    uiStateActions: _propTypes[\"default\"].object.isRequired,\n    // optional\n    primary: _propTypes[\"default\"].bool,\n    // primary one will be reporting its size to appState\n    readOnly: _propTypes[\"default\"].bool,\n    isExport: _propTypes[\"default\"].bool,\n    clicked: _propTypes[\"default\"].object,\n    hoverInfo: _propTypes[\"default\"].object,\n    mapLayers: _propTypes[\"default\"].object,\n    onMapToggleLayer: _propTypes[\"default\"].func,\n    onMapStyleLoaded: _propTypes[\"default\"].func,\n    onMapRender: _propTypes[\"default\"].func,\n    getMapboxRef: _propTypes[\"default\"].func,\n    index: _propTypes[\"default\"].number\n  });\n  (0, _defineProperty2[\"default\"])(MapContainer, \"defaultProps\", {\n    MapComponent: _reactMapGl[\"default\"],\n    deckGlProps: {},\n    index: 0,\n    primary: true\n  });\n  MapContainer.displayName = 'MapContainer';\n  return MapContainer;\n}","map":{"version":3,"sources":["../../src/components/map-container.js"],"names":["MAP_STYLE","container","display","position","width","height","top","pointerEvents","MAPBOXGL_STYLE_UPDATE","MAPBOXGL_RENDER","TRANSITION_DURATION","Attribution","MapContainerFactory","deps","MapPopoverFactory","MapControlFactory","EditorFactory","MapPopover","MapControl","Editor","MapContainer","Component","datasets","PropTypes","object","interactionConfig","isRequired","layerBlending","string","layerOrder","arrayOf","any","layerData","layers","filters","mapState","mapControls","mapStyle","mousePos","mapboxApiAccessToken","mapboxApiUrl","visStateActions","mapStateActions","uiStateActions","primary","bool","readOnly","isExport","clicked","hoverInfo","mapLayers","onMapToggleLayer","func","onMapStyleLoaded","onMapRender","getMapboxRef","index","number","MapComponent","MapboxGLMap","deckGlProps","props","previousLayers","_deck","_ref","current","_handleResize","_map","off","dimensions","updateMap","layersSelector","layerDataSelector","mapLayersSelector","prepareLayersToRender","prepareLayersForDeck","filtersSelector","filter","f","type","FILTER_TYPES","polygon","layerOrderSelector","layersToRenderSelector","generateMapboxLayers","onLayerClick","idx","colorDomain","layerConfigChange","mapIndex","toggleLayerForMap","layerId","_updateMapboxLayers","mapbox","getMap","on","_onMapboxStyleUpdate","gl","onDeckInitialized","error","layer","errorMessage","message","id","notificationId","_deckGLErrorsElapsed","lastShown","Date","now","THROTTLE_NOTIFICATION_TIME","addNotification","layersToRender","mousePosition","coordinate","pinned","tooltip","layerHoverProp","compareMode","config","pinnedPosition","layerPinnedProp","viewport","WebMercatorViewport","lngLat","_getHoverXY","primaryData","data","compareType","commonProp","onClose","_onCloseMapPopover","zoom","canvas","undefined","enabled","screenCoord","project","x","y","layersForDeck","deckGlLayers","length","dataLayers","slice","reverse","reduce","overlays","layerCallbacks","onSetLayerDomain","_onLayerSetDomain","val","layerOverlay","concat","visibleLayerGroups","push","ThreeDBuildingLayer","threeDBuildingColor","updateTriggers","getFillColor","_onBeforeRender","onLayerHover","_onDeckError","comp","deck","_onDeckInitialized","mapboxLayers","mapboxLayersSelector","Object","keys","isStyleLoaded","restViewState","viewState","next","transitionDuration","onViewStateChange","toggleMapControl","panelId","locale","editor","layersForDeckSelector","mapProps","preserveDrawingBuffer","onViewportChange","_onViewportChange","transformRequest","isEdit","mapDraw","active","hasGeocoderLayer","find","l","GEOCODER_LAYER_ID","isSplit","Boolean","LOCALE_CODES","dragRotate","scale","geocoder","togglePerspective","toggleSplitMap","_handleMapToggleLayer","_toggleMapControl","setEditorMode","setLocale","toggleEditorVisibility","_setMapboxMap","bottomMapStyle","onMouseMove","_renderDeckOverlay","_renderMapboxOverlays","polygonFilters","deleteFeature","setSelectedFeature","setFeatures","setPolygonFilterLayer","visible","topMapStyle","_renderMapPopover","globe","_renderMap","displayName"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// libraries\nimport React, {Component, createRef} from 'react';\nimport PropTypes from 'prop-types';\nimport MapboxGLMap from 'react-map-gl';\nimport DeckGL from '@deck.gl/react';\nimport {createSelector} from 'reselect';\nimport WebMercatorViewport from 'viewport-mercator-project';\nimport {errorNotification} from 'utils/notifications-utils';\n\n// components\nimport MapPopoverFactory from 'components/map/map-popover';\nimport MapControlFactory from 'components/map/map-control';\nimport {StyledMapContainer, StyledAttrbution} from 'components/common/styled-components';\n\nimport EditorFactory from './editor/editor';\n\n// utils\nimport {generateMapboxLayers, updateMapboxLayers} from 'layers/mapbox-utils';\nimport {setLayerBlending} from 'utils/gl-utils';\nimport {transformRequest} from 'utils/map-style-utils/mapbox-utils';\nimport {\n  getLayerHoverProp,\n  renderDeckGlLayer,\n  prepareLayersToRender,\n  prepareLayersForDeck\n} from 'utils/layer-utils';\n\n// default-settings\nimport ThreeDBuildingLayer from 'deckgl-layers/3d-building-layer/3d-building-layer';\nimport {\n  FILTER_TYPES,\n  GEOCODER_LAYER_ID,\n  THROTTLE_NOTIFICATION_TIME\n} from 'constants/default-settings';\n\nimport ErrorBoundary from 'components/common/error-boundary';\nimport {observeDimensions, unobserveDimensions} from '../utils/observe-dimensions';\nimport {LOCALE_CODES} from 'localization/locales';\n\n/** @type {{[key: string]: React.CSSProperties}} */\nconst MAP_STYLE = {\n  container: {\n    display: 'inline-block',\n    position: 'relative',\n    width: '100%',\n    height: '100%'\n  },\n  top: {\n    position: 'absolute',\n    top: '0px',\n    pointerEvents: 'none',\n    width: '100%',\n    height: '100%'\n  }\n};\n\nconst MAPBOXGL_STYLE_UPDATE = 'style.load';\nconst MAPBOXGL_RENDER = 'render';\nconst TRANSITION_DURATION = 0;\n\nexport const Attribution = () => (\n  <StyledAttrbution>\n    <div className=\"attrition-logo\">\n      Basemap by:\n      <a\n        className=\"mapboxgl-ctrl-logo\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://www.mapbox.com/\"\n        aria-label=\"Mapbox logo\"\n      />\n    </div>\n    <div className=\"attrition-link\">\n      <a href=\"https://kepler.gl/policy/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        © kepler.gl |{' '}\n      </a>\n      <a href=\"https://www.mapbox.com/about/maps/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        © Mapbox |{' '}\n      </a>\n      <a href=\"http://www.openstreetmap.org/copyright\" target=\"_blank\" rel=\"noopener noreferrer\">\n        © OpenStreetMap |{' '}\n      </a>\n      <a href=\"https://www.mapbox.com/map-feedback/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>Improve this map</strong>\n      </a>\n    </div>\n  </StyledAttrbution>\n);\n\nMapContainerFactory.deps = [MapPopoverFactory, MapControlFactory, EditorFactory];\n\nexport default function MapContainerFactory(MapPopover, MapControl, Editor) {\n  class MapContainer extends Component {\n    static propTypes = {\n      // required\n      datasets: PropTypes.object,\n      interactionConfig: PropTypes.object.isRequired,\n      layerBlending: PropTypes.string.isRequired,\n      layerOrder: PropTypes.arrayOf(PropTypes.any).isRequired,\n      layerData: PropTypes.arrayOf(PropTypes.any).isRequired,\n      layers: PropTypes.arrayOf(PropTypes.any).isRequired,\n      filters: PropTypes.arrayOf(PropTypes.any).isRequired,\n      mapState: PropTypes.object.isRequired,\n      mapControls: PropTypes.object.isRequired,\n      mapStyle: PropTypes.object.isRequired,\n      mousePos: PropTypes.object.isRequired,\n      mapboxApiAccessToken: PropTypes.string.isRequired,\n      mapboxApiUrl: PropTypes.string,\n      visStateActions: PropTypes.object.isRequired,\n      mapStateActions: PropTypes.object.isRequired,\n      uiStateActions: PropTypes.object.isRequired,\n\n      // optional\n      primary: PropTypes.bool, // primary one will be reporting its size to appState\n      readOnly: PropTypes.bool,\n      isExport: PropTypes.bool,\n      clicked: PropTypes.object,\n      hoverInfo: PropTypes.object,\n      mapLayers: PropTypes.object,\n      onMapToggleLayer: PropTypes.func,\n      onMapStyleLoaded: PropTypes.func,\n      onMapRender: PropTypes.func,\n      getMapboxRef: PropTypes.func,\n      index: PropTypes.number\n    };\n\n    static defaultProps = {\n      MapComponent: MapboxGLMap,\n      deckGlProps: {},\n      index: 0,\n      primary: true\n    };\n\n    constructor(props) {\n      super(props);\n\n      this.previousLayers = {\n        // [layers.id]: mapboxLayerConfig\n      };\n\n      this._deck = null;\n      this._ref = createRef();\n    }\n\n    componentDidMount() {\n      observeDimensions(this._ref.current, this._handleResize);\n    }\n\n    componentWillUnmount() {\n      // unbind mapboxgl event listener\n      if (this._map) {\n        this._map.off(MAPBOXGL_STYLE_UPDATE);\n        this._map.off(MAPBOXGL_RENDER);\n      }\n      unobserveDimensions(this._ref.current);\n    }\n\n    _handleResize = dimensions => {\n      const {primary} = this.props;\n      if (primary) {\n        const {mapStateActions} = this.props;\n        if (dimensions && dimensions.width > 0 && dimensions.height > 0) {\n          mapStateActions.updateMap(dimensions);\n        }\n      }\n    };\n\n    layersSelector = props => props.layers;\n    layerDataSelector = props => props.layerData;\n    mapLayersSelector = props => props.mapLayers;\n    layerOrderSelector = props => props.layerOrder;\n    layersToRenderSelector = createSelector(\n      this.layersSelector,\n      this.layerDataSelector,\n      this.mapLayersSelector,\n      prepareLayersToRender\n    );\n    layersForDeckSelector = createSelector(\n      this.layersSelector,\n      this.layerDataSelector,\n      prepareLayersForDeck\n    );\n    filtersSelector = props => props.filters;\n    polygonFilters = createSelector(this.filtersSelector, filters =>\n      filters.filter(f => f.type === FILTER_TYPES.polygon)\n    );\n\n    mapboxLayersSelector = createSelector(\n      this.layersSelector,\n      this.layerDataSelector,\n      this.layerOrderSelector,\n      this.layersToRenderSelector,\n      generateMapboxLayers\n    );\n\n    /* component private functions */\n    _onCloseMapPopover = () => {\n      this.props.visStateActions.onLayerClick(null);\n    };\n\n    _onLayerSetDomain = (idx, colorDomain) => {\n      this.props.visStateActions.layerConfigChange(this.props.layers[idx], {\n        colorDomain\n      });\n    };\n\n    _handleMapToggleLayer = layerId => {\n      const {index: mapIndex = 0, visStateActions} = this.props;\n      visStateActions.toggleLayerForMap(mapIndex, layerId);\n    };\n\n    _onMapboxStyleUpdate = () => {\n      // force refresh mapboxgl layers\n      this.previousLayers = {};\n      this._updateMapboxLayers();\n\n      if (typeof this.props.onMapStyleLoaded === 'function') {\n        this.props.onMapStyleLoaded(this._map);\n      }\n    };\n\n    _setMapboxMap = mapbox => {\n      if (!this._map && mapbox) {\n        this._map = mapbox.getMap();\n        // i noticed in certain context we don't access the actual map element\n        if (!this._map) {\n          return;\n        }\n        // bind mapboxgl event listener\n        this._map.on(MAPBOXGL_STYLE_UPDATE, this._onMapboxStyleUpdate);\n\n        this._map.on(MAPBOXGL_RENDER, () => {\n          if (typeof this.props.onMapRender === 'function') {\n            this.props.onMapRender(this._map);\n          }\n        });\n      }\n\n      if (this.props.getMapboxRef) {\n        // The parent component can gain access to our MapboxGlMap by\n        // providing this callback. Note that 'mapbox' will be null when the\n        // ref is unset (e.g. when a split map is closed).\n        this.props.getMapboxRef(mapbox, this.props.index);\n      }\n    };\n\n    _onDeckInitialized(gl) {\n      if (this.props.onDeckInitialized) {\n        this.props.onDeckInitialized(this._deck, gl);\n      }\n    }\n\n    _onBeforeRender = ({gl}) => {\n      setLayerBlending(gl, this.props.layerBlending);\n    };\n\n    _onDeckError = (error, layer) => {\n      const errorMessage = `An error in deck.gl: ${error.message} in ${layer.id}`;\n      const notificationId = `${layer.id}-${error.message}`;\n\n      // Throttle error notifications, as React doesn't like too many state changes from here.\n      this._deckGLErrorsElapsed = this._deckGLErrorsElapsed || {};\n      const lastShown = this._deckGLErrorsElapsed[notificationId];\n      if (!lastShown || lastShown < Date.now() - THROTTLE_NOTIFICATION_TIME) {\n        this._deckGLErrorsElapsed[notificationId] = Date.now();\n\n        // Create new error notification or update existing one with same id.\n        // Update is required to preserve the order of notifications as they probably are going to \"jump\" based on order of errors.\n        const {uiStateActions} = this.props;\n        uiStateActions.addNotification(\n          errorNotification({\n            message: errorMessage,\n            id: notificationId\n          })\n        );\n      }\n    };\n\n    /* component render functions */\n\n    /* eslint-disable complexity */\n    _renderMapPopover(layersToRender) {\n      // TODO: move this into reducer so it can be tested\n      const {\n        mapState,\n        hoverInfo,\n        clicked,\n        datasets,\n        interactionConfig,\n        layers,\n        mousePos: {mousePosition, coordinate, pinned}\n      } = this.props;\n\n      if (!mousePosition || !interactionConfig.tooltip) {\n        return null;\n      }\n\n      const layerHoverProp = getLayerHoverProp({\n        interactionConfig,\n        hoverInfo,\n        layers,\n        layersToRender,\n        datasets\n      });\n\n      const compareMode = interactionConfig.tooltip.config\n        ? interactionConfig.tooltip.config.compareMode\n        : false;\n\n      let pinnedPosition = {};\n      let layerPinnedProp = null;\n      if (pinned || clicked) {\n        // project lnglat to screen so that tooltip follows the object on zoom\n        const viewport = new WebMercatorViewport(mapState);\n        const lngLat = clicked ? clicked.lngLat : pinned.coordinate;\n        pinnedPosition = this._getHoverXY(viewport, lngLat);\n        layerPinnedProp = getLayerHoverProp({\n          interactionConfig,\n          hoverInfo: clicked,\n          layers,\n          layersToRender,\n          datasets\n        });\n        if (layerHoverProp && layerPinnedProp) {\n          layerHoverProp.primaryData = layerPinnedProp.data;\n          layerHoverProp.compareType = interactionConfig.tooltip.config.compareType;\n        }\n      }\n\n      const commonProp = {\n        onClose: this._onCloseMapPopover,\n        zoom: mapState.zoom,\n        container: this._deck ? this._deck.canvas : undefined\n      };\n\n      return (\n        <ErrorBoundary>\n          {layerPinnedProp && (\n            <MapPopover\n              {...pinnedPosition}\n              {...commonProp}\n              layerHoverProp={layerPinnedProp}\n              coordinate={interactionConfig.coordinate.enabled && (pinned || {}).coordinate}\n              frozen={true}\n              isBase={compareMode}\n            />\n          )}\n          {layerHoverProp && (!layerPinnedProp || compareMode) && (\n            <MapPopover\n              x={mousePosition[0]}\n              y={mousePosition[1]}\n              {...commonProp}\n              layerHoverProp={layerHoverProp}\n              frozen={false}\n              coordinate={interactionConfig.coordinate.enabled && coordinate}\n            />\n          )}\n        </ErrorBoundary>\n      );\n    }\n\n    /* eslint-enable complexity */\n\n    _getHoverXY(viewport, lngLat) {\n      const screenCoord = !viewport || !lngLat ? null : viewport.project(lngLat);\n      return screenCoord && {x: screenCoord[0], y: screenCoord[1]};\n    }\n\n    _renderDeckOverlay(layersForDeck) {\n      const {\n        mapState,\n        mapStyle,\n        layerData,\n        layerOrder,\n        layers,\n        visStateActions,\n        mapboxApiAccessToken,\n        mapboxApiUrl\n      } = this.props;\n\n      // initialise layers from props if exists\n      let deckGlLayers = this.props.deckGlProps?.layers || [];\n\n      // wait until data is ready before render data layers\n      if (layerData && layerData.length) {\n        // last layer render first\n        const dataLayers = layerOrder\n          .slice()\n          .reverse()\n          .filter(idx => layersForDeck[layers[idx].id])\n          .reduce((overlays, idx) => {\n            const layerCallbacks = {\n              onSetLayerDomain: val => this._onLayerSetDomain(idx, val)\n            };\n            const layerOverlay = renderDeckGlLayer(this.props, layerCallbacks, idx);\n            return overlays.concat(layerOverlay || []);\n          }, []);\n        deckGlLayers = deckGlLayers.concat(dataLayers);\n      }\n\n      if (mapStyle.visibleLayerGroups['3d building']) {\n        deckGlLayers.push(\n          new ThreeDBuildingLayer({\n            id: '_keplergl_3d-building',\n            mapboxApiAccessToken,\n            mapboxApiUrl,\n            threeDBuildingColor: mapStyle.threeDBuildingColor,\n            updateTriggers: {\n              getFillColor: mapStyle.threeDBuildingColor\n            }\n          })\n        );\n      }\n\n      return (\n        <DeckGL\n          {...this.props.deckGlProps}\n          viewState={mapState}\n          id=\"default-deckgl-overlay\"\n          layers={deckGlLayers}\n          onBeforeRender={this._onBeforeRender}\n          onHover={visStateActions.onLayerHover}\n          onClick={visStateActions.onLayerClick}\n          onError={this._onDeckError}\n          ref={comp => {\n            if (comp && comp.deck && !this._deck) {\n              this._deck = comp.deck;\n            }\n          }}\n          onWebGLInitialized={gl => this._onDeckInitialized(gl)}\n        />\n      );\n    }\n\n    _updateMapboxLayers() {\n      const mapboxLayers = this.mapboxLayersSelector(this.props);\n      if (!Object.keys(mapboxLayers).length && !Object.keys(this.previousLayers).length) {\n        return;\n      }\n\n      updateMapboxLayers(this._map, mapboxLayers, this.previousLayers);\n\n      this.previousLayers = mapboxLayers;\n    }\n\n    _renderMapboxOverlays() {\n      if (this._map && this._map.isStyleLoaded()) {\n        this._updateMapboxLayers();\n      }\n    }\n\n    _onViewportChange = viewState => {\n      const {width, height, ...restViewState} = viewState;\n      const {primary} = this.props;\n      // react-map-gl sends 0,0 dimensions during initialization\n      // after we have received proper dimensions from observeDimensions\n      const next = {\n        ...(width > 0 && height > 0 ? viewState : restViewState),\n        // enabling transition in two maps may lead to endless update loops\n        transitionDuration: primary ? TRANSITION_DURATION : 0\n      };\n      if (typeof this.props.onViewStateChange === 'function') {\n        this.props.onViewStateChange(next);\n      }\n      this.props.mapStateActions.updateMap(next);\n    };\n\n    _toggleMapControl = panelId => {\n      const {index, uiStateActions} = this.props;\n\n      uiStateActions.toggleMapControl(panelId, index);\n    };\n\n    /* eslint-disable complexity */\n    _renderMap() {\n      const {\n        mapState,\n        mapStyle,\n        mapStateActions,\n        layers,\n        MapComponent,\n        datasets,\n        mapboxApiAccessToken,\n        mapboxApiUrl,\n        mapControls,\n        isExport,\n        locale,\n        uiStateActions,\n        visStateActions,\n        interactionConfig,\n        editor,\n        index,\n        primary\n      } = this.props;\n\n      const layersToRender = this.layersToRenderSelector(this.props);\n      const layersForDeck = this.layersForDeckSelector(this.props);\n\n      const mapProps = {\n        ...mapState,\n        width: '100%',\n        height: '100%',\n        preserveDrawingBuffer: true,\n        mapboxApiAccessToken,\n        mapboxApiUrl,\n        onViewportChange: this._onViewportChange,\n        transformRequest\n      };\n\n      const isEdit = (mapControls.mapDraw || {}).active;\n\n      const hasGeocoderLayer = layers.find(l => l.id === GEOCODER_LAYER_ID);\n      const isSplit = Boolean(mapState.isSplit);\n\n      return (\n        <>\n          <MapControl\n            datasets={datasets}\n            availableLocales={Object.keys(LOCALE_CODES)}\n            dragRotate={mapState.dragRotate}\n            isSplit={isSplit}\n            primary={primary}\n            isExport={isExport}\n            layers={layers}\n            layersToRender={layersToRender}\n            mapIndex={index}\n            mapControls={mapControls}\n            readOnly={this.props.readOnly}\n            scale={mapState.scale || 1}\n            top={interactionConfig.geocoder && interactionConfig.geocoder.enabled ? 52 : 0}\n            editor={editor}\n            locale={locale}\n            onTogglePerspective={mapStateActions.togglePerspective}\n            onToggleSplitMap={mapStateActions.toggleSplitMap}\n            onMapToggleLayer={this._handleMapToggleLayer}\n            onToggleMapControl={this._toggleMapControl}\n            onSetEditorMode={visStateActions.setEditorMode}\n            onSetLocale={uiStateActions.setLocale}\n            onToggleEditorVisibility={visStateActions.toggleEditorVisibility}\n          />\n          <MapComponent\n            {...mapProps}\n            key=\"bottom\"\n            ref={this._setMapboxMap}\n            mapStyle={mapStyle.bottomMapStyle}\n            getCursor={this.props.hoverInfo ? () => 'pointer' : undefined}\n            onMouseMove={this.props.visStateActions.onMouseMove}\n          >\n            {this._renderDeckOverlay(layersForDeck)}\n            {this._renderMapboxOverlays()}\n            <Editor\n              index={index}\n              datasets={datasets}\n              editor={editor}\n              filters={this.polygonFilters(this.props)}\n              isEnabled={isEdit}\n              layers={layers}\n              layersToRender={layersToRender}\n              onDeleteFeature={visStateActions.deleteFeature}\n              onSelect={visStateActions.setSelectedFeature}\n              onUpdate={visStateActions.setFeatures}\n              onTogglePolygonFilter={visStateActions.setPolygonFilterLayer}\n              style={{\n                pointerEvents: isEdit ? 'all' : 'none',\n                position: 'absolute',\n                display: editor.visible ? 'block' : 'none'\n              }}\n            />\n          </MapComponent>\n          {mapStyle.topMapStyle || hasGeocoderLayer ? (\n            <div style={MAP_STYLE.top}>\n              <MapComponent {...mapProps} key=\"top\" mapStyle={mapStyle.topMapStyle}>\n                {this._renderDeckOverlay({[GEOCODER_LAYER_ID]: true})}\n              </MapComponent>\n            </div>\n          ) : null}\n          {this._renderMapPopover(layersToRender)}\n          {!isSplit || index === 1 ? <Attribution /> : null}\n        </>\n      );\n    }\n\n    render() {\n      const {mapState, mapStyle} = this.props;\n      return (\n        <StyledMapContainer ref={this._ref} style={MAP_STYLE.container} globe={mapState.globe}>\n          {mapStyle.bottomMapStyle && this._renderMap()}\n        </StyledMapContainer>\n      );\n    }\n  }\n\n  MapContainer.displayName = 'MapContainer';\n\n  return MapContainer;\n}\n"]},"metadata":{},"sourceType":"script"}
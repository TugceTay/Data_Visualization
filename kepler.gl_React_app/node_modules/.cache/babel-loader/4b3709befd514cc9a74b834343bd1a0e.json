{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\nvar _defaultSettings = require(\"../../constants/default-settings\");\nvar _templateObject;\nfunction FieldTokenFactory(fieldTypeDisplay, fieldColors) {\n  var FieldTag = _styledComponents[\"default\"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n    background-color: rgba(\", \", 0.2);\\n    border-radius: 2px;\\n    border: 1px solid rgb(\", \");\\n    color: rgb(\", \");\\n    display: inline-block;\\n    font-size: 10px;\\n    font-weight: 400;\\n    padding: 0 5px;\\n    text-align: center;\\n    width: 40px;\\n    line-height: 20px;\\n  \"])), function (props) {\n    return props.color;\n  }, function (props) {\n    return props.color;\n  }, function (props) {\n    return props.color;\n  });\n  var FieldToken = function FieldToken(_ref) {\n    var type = _ref.type;\n    return /*#__PURE__*/_react[\"default\"].createElement(FieldTag, {\n      color: fieldTypeDisplay[type] && fieldTypeDisplay[type].color || fieldColors[\"default\"]\n    }, fieldTypeDisplay[type].label);\n  };\n  return FieldToken;\n}\nfunction getFieldTypes() {\n  return _defaultSettings.FILED_TYPE_DISPLAY;\n}\nfunction getFieldColors() {\n  return _defaultSettings.FIELD_COLORS;\n}\nFieldTokenFactory.deps = [getFieldTypes, getFieldColors];\nvar _default = FieldTokenFactory;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../src/components/common/field-token.js"],"names":["FieldTokenFactory","fieldTypeDisplay","fieldColors","FieldTag","styled","div","props","color","FieldToken","type","label","getFieldTypes","FILED_TYPE_DISPLAY","getFieldColors","FIELD_COLORS","deps"],"mappings":";;;;;;;;AAoBA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;AACA,IAAA,iBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;AACA,IAAA,gBAAA,GAAA,OAAA,CAAA,kCAAA,CAAA;;AACA,SAASA,iBAAT,CAA2BC,gBAA3B,EAA6CC,WAA7C,EAA0D;EACxD,IAAMC,QAAQ,GAAGC,iBAAAA,CAAAA,SAAAA,CAAAA,CAAOC,GAAV,CAAA,eAAA,KAAA,eAAA,GAAA,CAAA,CAAA,EAAA,uBAAA,CAAA,SAAA,CAAA,EAAA,CAAA,+BAAA,EAAA,8DAAA,EAAA,qBAAA,EAAA,yKAAA,CAAA,CAAA,CAAA,EACa,UAAA,KAAK,EAAA;IAAA,OAAIC,KAAK,CAACC,KAAV;EAAA,CADlB,EAGY,UAAA,KAAK,EAAA;IAAA,OAAID,KAAK,CAACC,KAAV;EAAA,CAHjB,EAIC,UAAA,KAAK,EAAA;IAAA,OAAID,KAAK,CAACC,KAAV;EAAA,CAJN,CAAd;EAcA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAA,IAAA,EAAA;IAAA,IAAEC,IAAF,GAAA,IAAA,CAAEA,IAAF;IAAA,OAAA,aACjB,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,QAAD,EAAA;MACE,KAAK,EAAGR,gBAAgB,CAACQ,IAAD,CAAhBR,IAA0BA,gBAAgB,CAACQ,IAAD,CAAhBR,CAAuBM,KAAlD,IAA4DL,WAAW,CAAA,SAAA;IADhF,CAAA,EAGGD,gBAAgB,CAACQ,IAAD,CAAhBR,CAAuBS,KAH1B,CADiB;EAAA,CAAnB;EAOA,OAAOF,UAAP;AACD;AAED,SAASG,aAAT,GAAyB;EACvB,OAAOC,gBAAAA,CAAAA,kBAAP;AACD;AAED,SAASC,cAAT,GAA0B;EACxB,OAAOC,gBAAAA,CAAAA,YAAP;AACD;AACDd,iBAAiB,CAACe,IAAlBf,GAAyB,CAACW,aAAD,EAAgBE,cAAhB,CAAzBb;eACeA,iB","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport {FILED_TYPE_DISPLAY, FIELD_COLORS} from 'constants/default-settings';\nfunction FieldTokenFactory(fieldTypeDisplay, fieldColors) {\n  const FieldTag = styled.div`\n    background-color: rgba(${props => props.color}, 0.2);\n    border-radius: 2px;\n    border: 1px solid rgb(${props => props.color});\n    color: rgb(${props => props.color});\n    display: inline-block;\n    font-size: 10px;\n    font-weight: 400;\n    padding: 0 5px;\n    text-align: center;\n    width: 40px;\n    line-height: 20px;\n  `;\n\n  const FieldToken = ({type}) => (\n    <FieldTag\n      color={(fieldTypeDisplay[type] && fieldTypeDisplay[type].color) || fieldColors.default}\n    >\n      {fieldTypeDisplay[type].label}\n    </FieldTag>\n  );\n  return FieldToken;\n}\n\nfunction getFieldTypes() {\n  return FILED_TYPE_DISPLAY;\n}\n\nfunction getFieldColors() {\n  return FIELD_COLORS;\n}\nFieldTokenFactory.deps = [getFieldTypes, getFieldColors];\nexport default FieldTokenFactory;\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = SidePanelFactory;\nexports.StyledSidePanelContent = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _localization = require(\"../localization\");\nvar _defaultSettings = require(\"../constants/default-settings\");\nvar _sideBar = _interopRequireDefault(require(\"./side-panel/side-bar\"));\nvar _panelHeader = _interopRequireDefault(require(\"./side-panel/panel-header\"));\nvar _panelToggle = _interopRequireDefault(require(\"./side-panel/panel-toggle\"));\nvar _layerManager = _interopRequireDefault(require(\"./side-panel/layer-manager\"));\nvar _filterManager = _interopRequireDefault(require(\"./side-panel/filter-manager\"));\nvar _interactionManager = _interopRequireDefault(require(\"./side-panel/interaction-manager\"));\nvar _mapManager = _interopRequireDefault(require(\"./side-panel/map-manager\"));\nvar _customPanel = _interopRequireDefault(require(\"./side-panel/custom-panel\"));\nvar _panelTitle = _interopRequireDefault(require(\"./side-panel/panel-title\"));\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\nvar _lodash = _interopRequireDefault(require(\"lodash.get\"));\nvar _templateObject;\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nvar StyledSidePanelContent = _styledComponents[\"default\"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  \", \";\\n  flex-grow: 1;\\n  padding: \", \"px;\\n  overflow-y: scroll;\\n  overflow-x: hidden;\\n\\n  .side-panel__content__inner {\\n    display: flex;\\n    height: 100%;\\n    flex-direction: column;\\n  }\\n\"])), function (props) {\n  return props.theme.sidePanelScrollBar;\n}, function (props) {\n  return props.theme.sidePanelInnerPadding;\n});\nexports.StyledSidePanelContent = StyledSidePanelContent;\nSidePanelFactory.deps = [_sideBar[\"default\"], _panelHeader[\"default\"], _panelToggle[\"default\"], _panelTitle[\"default\"], _layerManager[\"default\"], _filterManager[\"default\"], _interactionManager[\"default\"], _mapManager[\"default\"], _customPanel[\"default\"]];\n/**\n * Vertical sidebar containing input components for the rendering layers\n */\n\nfunction SidePanelFactory(Sidebar, PanelHeader, PanelToggle, PanelTitle, LayerManager, FilterManager, InteractionManager, MapManager, CustomPanels) {\n  // inject components\n  var SIDEBAR_COMPONENTS = {\n    layer: LayerManager,\n    filter: FilterManager,\n    interaction: InteractionManager,\n    map: MapManager\n  }; // We should defined sidebar panels here but keeping them for backward compatible\n\n  var fullPanels = _defaultSettings.SIDEBAR_PANELS.map(function (component) {\n    return _objectSpread(_objectSpread({}, component), {}, {\n      component: SIDEBAR_COMPONENTS[component.id]\n    });\n  });\n  var getCustomPanelProps = (0, _lodash[\"default\"])(CustomPanels, ['defaultProps', 'getProps']) || function () {\n    return {};\n  };\n  /** @type {typeof import('./side-panel').SidePanel} */\n  // eslint-disable-next-line max-statements\n\n  var SidePanel = function SidePanel(props) {\n    var appName = props.appName,\n      appWebsite = props.appWebsite,\n      availableProviders = props.availableProviders,\n      datasets = props.datasets,\n      filters = props.filters,\n      layers = props.layers,\n      layerBlending = props.layerBlending,\n      layerClasses = props.layerClasses,\n      layerOrder = props.layerOrder,\n      interactionConfig = props.interactionConfig,\n      panels = props.panels,\n      mapInfo = props.mapInfo,\n      mapSaved = props.mapSaved,\n      mapStateActions = props.mapStateActions,\n      mapStyle = props.mapStyle,\n      mapStyleActions = props.mapStyleActions,\n      onSaveMap = props.onSaveMap,\n      uiState = props.uiState,\n      uiStateActions = props.uiStateActions,\n      visStateActions = props.visStateActions,\n      version = props.version,\n      width = props.width;\n    var openDeleteModal = uiStateActions.openDeleteModal,\n      toggleModal = uiStateActions.toggleModal,\n      toggleSidePanel = uiStateActions.toggleSidePanel;\n    var activeSidePanel = uiState.activeSidePanel;\n    var setMapInfo = visStateActions.setMapInfo,\n      showDatasetTable = visStateActions.showDatasetTable;\n    var hasShare = availableProviders.hasShare,\n      hasStorage = availableProviders.hasStorage;\n    var title = mapInfo.title;\n    var isOpen = Boolean(activeSidePanel);\n    var _onOpenOrClose = (0, _react.useCallback)(function () {\n      return toggleSidePanel(activeSidePanel ? null : 'layer');\n    }, [activeSidePanel, toggleSidePanel]);\n    var onClickExportImage = (0, _react.useCallback)(function () {\n      return toggleModal(_defaultSettings.EXPORT_IMAGE_ID);\n    }, [toggleModal]);\n    var onClickExportData = (0, _react.useCallback)(function () {\n      return toggleModal(_defaultSettings.EXPORT_DATA_ID);\n    }, [toggleModal]);\n    var onClickExportMap = (0, _react.useCallback)(function () {\n      return toggleModal(_defaultSettings.EXPORT_MAP_ID);\n    }, [toggleModal]);\n    var onClickSaveToStorage = (0, _react.useCallback)(function () {\n      return toggleModal(mapSaved ? _defaultSettings.OVERWRITE_MAP_ID : _defaultSettings.SAVE_MAP_ID);\n    }, [mapSaved, toggleModal]);\n    var onClickSaveAsToStorage = (0, _react.useCallback)(function () {\n      setMapInfo({\n        title: \"\".concat(title || 'Kepler.gl', \" (Copy)\")\n      });\n      toggleModal(_defaultSettings.SAVE_MAP_ID);\n    }, [title, setMapInfo, toggleModal]);\n    var onClickShareMap = (0, _react.useCallback)(function () {\n      return toggleModal(_defaultSettings.SHARE_MAP_ID);\n    }, [toggleModal]);\n    var onShowDatasetTable = (0, _react.useCallback)(function (dataId) {\n      return showDatasetTable(dataId);\n    }, [showDatasetTable]);\n    var onShowAddDataModal = (0, _react.useCallback)(function () {\n      return toggleModal(_defaultSettings.ADD_DATA_ID);\n    }, [toggleModal]);\n    var onShowAddMapStyleModal = (0, _react.useCallback)(function () {\n      return toggleModal(_defaultSettings.ADD_MAP_STYLE_ID);\n    }, [toggleModal]);\n    var onRemoveDataset = (0, _react.useCallback)(function (dataId) {\n      return openDeleteModal(dataId);\n    }, [openDeleteModal]);\n    var onSaveToStorage = (0, _react.useMemo)(function () {\n      return hasStorage ? onClickSaveToStorage : null;\n    }, [hasStorage, onClickSaveToStorage]);\n    var onSaveAsToStorage = (0, _react.useMemo)(function () {\n      return hasStorage && mapSaved ? onClickSaveAsToStorage : null;\n    }, [hasStorage, mapSaved, onClickSaveAsToStorage]);\n    var currentPanel = (0, _react.useMemo)(function () {\n      return panels.find(function (_ref) {\n        var id = _ref.id;\n        return id === activeSidePanel;\n      }) || {};\n    }, [activeSidePanel, panels]);\n    var onShareMap = (0, _react.useMemo)(function () {\n      return hasShare ? onClickShareMap : null;\n    }, [hasShare, onClickShareMap]);\n    var customPanelProps = (0, _react.useMemo)(function () {\n      return getCustomPanelProps(props);\n    }, [props]);\n    var PanelComponent = currentPanel.component;\n    return /*#__PURE__*/_react[\"default\"].createElement(Sidebar, {\n      width: width,\n      isOpen: isOpen,\n      minifiedWidth: 0,\n      onOpenOrClose: _onOpenOrClose\n    }, /*#__PURE__*/_react[\"default\"].createElement(PanelHeader, {\n      appName: appName,\n      version: version,\n      appWebsite: appWebsite,\n      visibleDropdown: uiState.visibleDropdown,\n      showExportDropdown: uiStateActions.showExportDropdown,\n      hideExportDropdown: uiStateActions.hideExportDropdown,\n      onExportImage: onClickExportImage,\n      onExportData: onClickExportData,\n      onExportMap: onClickExportMap,\n      onSaveMap: onSaveMap,\n      onSaveToStorage: onSaveToStorage,\n      onSaveAsToStorage: onSaveAsToStorage,\n      onShareMap: onShareMap\n    }), /*#__PURE__*/_react[\"default\"].createElement(PanelToggle, {\n      panels: panels,\n      activePanel: activeSidePanel,\n      togglePanel: uiStateActions.toggleSidePanel\n    }), /*#__PURE__*/_react[\"default\"].createElement(StyledSidePanelContent, {\n      className: \"side-panel__content\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n      className: \"side-panel__content__inner\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(PanelTitle, {\n      className: \"side-panel__content__title\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(_localization.FormattedMessage, {\n      id: currentPanel.label\n    })), PanelComponent ? /*#__PURE__*/_react[\"default\"].createElement(PanelComponent, {\n      datasets: datasets,\n      filters: filters,\n      layers: layers,\n      layerClasses: layerClasses,\n      layerOrder: layerOrder,\n      layerBlending: layerBlending,\n      mapStyle: mapStyle,\n      mapStyleActions: mapStyleActions,\n      mapStateActions: mapStateActions,\n      interactionConfig: interactionConfig,\n      removeDataset: onRemoveDataset,\n      showDatasetTable: onShowDatasetTable,\n      showAddDataModal: onShowAddDataModal,\n      showAddMapStyleModal: onShowAddMapStyleModal,\n      uiStateActions: uiStateActions,\n      visStateActions: visStateActions\n    }) : null, /*#__PURE__*/_react[\"default\"].createElement(CustomPanels, (0, _extends2[\"default\"])({}, customPanelProps, {\n      activeSidePanel: activeSidePanel\n    })))));\n  };\n  SidePanel.defaultProps = {\n    panels: fullPanels,\n    sidebarComponents: SIDEBAR_COMPONENTS,\n    uiState: {},\n    visStateActions: {},\n    mapStyleActions: {},\n    uiStateActions: {},\n    availableProviders: {},\n    mapInfo: {}\n  };\n  return SidePanel;\n}","map":{"version":3,"sources":["../../src/components/side-panel.js"],"names":["StyledSidePanelContent","styled","div","props","theme","sidePanelScrollBar","sidePanelInnerPadding","SidePanelFactory","deps","SidebarFactory","PanelHeaderFactory","PanelToggleFactory","PanelTitleFactory","LayerManagerFactory","FilterManagerFactory","InteractionManagerFactory","MapManagerFactory","CustomPanelsFactory","Sidebar","PanelHeader","PanelToggle","PanelTitle","LayerManager","FilterManager","InteractionManager","MapManager","CustomPanels","SIDEBAR_COMPONENTS","layer","filter","interaction","map","fullPanels","component","id","getCustomPanelProps","SidePanel","appName","appWebsite","availableProviders","datasets","filters","layers","layerBlending","layerClasses","layerOrder","interactionConfig","panels","mapInfo","mapSaved","mapStateActions","mapStyle","mapStyleActions","onSaveMap","uiState","uiStateActions","visStateActions","version","width","openDeleteModal","toggleModal","toggleSidePanel","activeSidePanel","setMapInfo","showDatasetTable","hasShare","hasStorage","title","isOpen","Boolean","_onOpenOrClose","onClickExportImage","EXPORT_IMAGE_ID","onClickExportData","EXPORT_DATA_ID","onClickExportMap","EXPORT_MAP_ID","onClickSaveToStorage","OVERWRITE_MAP_ID","SAVE_MAP_ID","onClickSaveAsToStorage","onClickShareMap","SHARE_MAP_ID","onShowDatasetTable","dataId","onShowAddDataModal","ADD_DATA_ID","onShowAddMapStyleModal","ADD_MAP_STYLE_ID","onRemoveDataset","onSaveToStorage","onSaveAsToStorage","currentPanel","find","onShareMap","customPanelProps","PanelComponent","visibleDropdown","showExportDropdown","hideExportDropdown","label","defaultProps","sidebarComponents"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {useCallback, useMemo} from 'react';\nimport {FormattedMessage} from 'localization';\n\nimport {\n  EXPORT_DATA_ID,\n  EXPORT_MAP_ID,\n  SHARE_MAP_ID,\n  SIDEBAR_PANELS,\n  OVERWRITE_MAP_ID,\n  SAVE_MAP_ID,\n  EXPORT_IMAGE_ID,\n  ADD_DATA_ID,\n  ADD_MAP_STYLE_ID\n} from 'constants/default-settings';\n\nimport SidebarFactory from './side-panel/side-bar';\nimport PanelHeaderFactory from './side-panel/panel-header';\nimport PanelToggleFactory from './side-panel/panel-toggle';\nimport LayerManagerFactory from './side-panel/layer-manager';\nimport FilterManagerFactory from './side-panel/filter-manager';\nimport InteractionManagerFactory from './side-panel/interaction-manager';\nimport MapManagerFactory from './side-panel/map-manager';\nimport CustomPanelsFactory from './side-panel/custom-panel';\nimport PanelTitleFactory from './side-panel/panel-title';\n\nimport styled from 'styled-components';\nimport get from 'lodash.get';\n\nexport const StyledSidePanelContent = styled.div`\n  ${props => props.theme.sidePanelScrollBar};\n  flex-grow: 1;\n  padding: ${props => props.theme.sidePanelInnerPadding}px;\n  overflow-y: scroll;\n  overflow-x: hidden;\n\n  .side-panel__content__inner {\n    display: flex;\n    height: 100%;\n    flex-direction: column;\n  }\n`;\n\nSidePanelFactory.deps = [\n  SidebarFactory,\n  PanelHeaderFactory,\n  PanelToggleFactory,\n  PanelTitleFactory,\n  LayerManagerFactory,\n  FilterManagerFactory,\n  InteractionManagerFactory,\n  MapManagerFactory,\n  CustomPanelsFactory\n];\n\n/**\n * Vertical sidebar containing input components for the rendering layers\n */\nexport default function SidePanelFactory(\n  Sidebar,\n  PanelHeader,\n  PanelToggle,\n  PanelTitle,\n  LayerManager,\n  FilterManager,\n  InteractionManager,\n  MapManager,\n  CustomPanels\n) {\n  // inject components\n  const SIDEBAR_COMPONENTS = {\n    layer: LayerManager,\n    filter: FilterManager,\n    interaction: InteractionManager,\n    map: MapManager\n  };\n\n  // We should defined sidebar panels here but keeping them for backward compatible\n  const fullPanels = SIDEBAR_PANELS.map(component => ({\n    ...component,\n    component: SIDEBAR_COMPONENTS[component.id]\n  }));\n\n  const getCustomPanelProps = get(CustomPanels, ['defaultProps', 'getProps']) || (() => ({}));\n\n  /** @type {typeof import('./side-panel').SidePanel} */\n  // eslint-disable-next-line max-statements\n  const SidePanel = props => {\n    const {\n      appName,\n      appWebsite,\n      availableProviders,\n      datasets,\n      filters,\n      layers,\n      layerBlending,\n      layerClasses,\n      layerOrder,\n      interactionConfig,\n      panels,\n      mapInfo,\n      mapSaved,\n      mapStateActions,\n      mapStyle,\n      mapStyleActions,\n      onSaveMap,\n      uiState,\n      uiStateActions,\n      visStateActions,\n      version,\n      width\n    } = props;\n    const {openDeleteModal, toggleModal, toggleSidePanel} = uiStateActions;\n    const {activeSidePanel} = uiState;\n    const {setMapInfo, showDatasetTable} = visStateActions;\n    const {hasShare, hasStorage} = availableProviders;\n\n    const {title} = mapInfo;\n\n    const isOpen = Boolean(activeSidePanel);\n\n    const _onOpenOrClose = useCallback(() => toggleSidePanel(activeSidePanel ? null : 'layer'), [\n      activeSidePanel,\n      toggleSidePanel\n    ]);\n\n    const onClickExportImage = useCallback(() => toggleModal(EXPORT_IMAGE_ID), [toggleModal]);\n    const onClickExportData = useCallback(() => toggleModal(EXPORT_DATA_ID), [toggleModal]);\n    const onClickExportMap = useCallback(() => toggleModal(EXPORT_MAP_ID), [toggleModal]);\n    const onClickSaveToStorage = useCallback(\n      () => toggleModal(mapSaved ? OVERWRITE_MAP_ID : SAVE_MAP_ID),\n      [mapSaved, toggleModal]\n    );\n    const onClickSaveAsToStorage = useCallback(() => {\n      setMapInfo({\n        title: `${title || 'Kepler.gl'} (Copy)`\n      });\n\n      toggleModal(SAVE_MAP_ID);\n    }, [title, setMapInfo, toggleModal]);\n    const onClickShareMap = useCallback(() => toggleModal(SHARE_MAP_ID), [toggleModal]);\n    const onShowDatasetTable = useCallback(dataId => showDatasetTable(dataId), [showDatasetTable]);\n    const onShowAddDataModal = useCallback(() => toggleModal(ADD_DATA_ID), [toggleModal]);\n    const onShowAddMapStyleModal = useCallback(() => toggleModal(ADD_MAP_STYLE_ID), [toggleModal]);\n    const onRemoveDataset = useCallback(dataId => openDeleteModal(dataId), [openDeleteModal]);\n    const onSaveToStorage = useMemo(() => ((hasStorage ? onClickSaveToStorage : null)), [\n      hasStorage,\n      onClickSaveToStorage\n    ]);\n    const onSaveAsToStorage = useMemo(\n      () => ((hasStorage && mapSaved ? onClickSaveAsToStorage : null)),\n      [hasStorage, mapSaved, onClickSaveAsToStorage]\n    );\n    const currentPanel = useMemo(() => panels.find(({id}) => id === activeSidePanel) || {}, [\n      activeSidePanel,\n      panels\n    ]);\n    const onShareMap = useMemo(() => ((hasShare ? onClickShareMap : null)), [\n      hasShare,\n      onClickShareMap\n    ]);\n    const customPanelProps = useMemo(() => getCustomPanelProps(props), [props]);\n\n    const PanelComponent = currentPanel.component;\n\n    return (\n      <Sidebar width={width} isOpen={isOpen} minifiedWidth={0} onOpenOrClose={_onOpenOrClose}>\n        <PanelHeader\n          appName={appName}\n          version={version}\n          appWebsite={appWebsite}\n          visibleDropdown={uiState.visibleDropdown}\n          showExportDropdown={uiStateActions.showExportDropdown}\n          hideExportDropdown={uiStateActions.hideExportDropdown}\n          onExportImage={onClickExportImage}\n          onExportData={onClickExportData}\n          onExportMap={onClickExportMap}\n          onSaveMap={onSaveMap}\n          onSaveToStorage={onSaveToStorage}\n          onSaveAsToStorage={onSaveAsToStorage}\n          onShareMap={onShareMap}\n        />\n        {/* the next two components should be moved into one */}\n        {/* but i am keeping them because of backward compatibility */}\n        <PanelToggle\n          panels={panels}\n          activePanel={activeSidePanel}\n          togglePanel={uiStateActions.toggleSidePanel}\n        />\n        <StyledSidePanelContent className=\"side-panel__content\">\n          <div className=\"side-panel__content__inner\">\n            <PanelTitle className=\"side-panel__content__title\">\n              <FormattedMessage id={currentPanel.label} />\n            </PanelTitle>\n            {PanelComponent ? (\n              <PanelComponent\n                datasets={datasets}\n                filters={filters}\n                layers={layers}\n                layerClasses={layerClasses}\n                layerOrder={layerOrder}\n                layerBlending={layerBlending}\n                mapStyle={mapStyle}\n                mapStyleActions={mapStyleActions}\n                mapStateActions={mapStateActions}\n                interactionConfig={interactionConfig}\n                removeDataset={onRemoveDataset}\n                showDatasetTable={onShowDatasetTable}\n                showAddDataModal={onShowAddDataModal}\n                showAddMapStyleModal={onShowAddMapStyleModal}\n                uiStateActions={uiStateActions}\n                visStateActions={visStateActions}\n              />\n            ) : null}\n            <CustomPanels {...customPanelProps} activeSidePanel={activeSidePanel} />\n          </div>\n        </StyledSidePanelContent>\n      </Sidebar>\n    );\n  };\n\n  SidePanel.defaultProps = {\n    panels: fullPanels,\n    sidebarComponents: SIDEBAR_COMPONENTS,\n    uiState: {},\n    visStateActions: {},\n    mapStyleActions: {},\n    uiStateActions: {},\n    availableProviders: {},\n    mapInfo: {}\n  };\n\n  return SidePanel;\n}\n"]},"metadata":{},"sourceType":"script"}
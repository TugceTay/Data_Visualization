{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nimport { TILE3D_OPTIMIZATION_HINT, TILE_REFINEMENT } from '../../constants';\nimport TilesetTraverser from './tileset-traverser';\nvar Tileset3DTraverser = function (_TilesetTraverser) {\n  _inherits(Tileset3DTraverser, _TilesetTraverser);\n  var _super = _createSuper(Tileset3DTraverser);\n  function Tileset3DTraverser() {\n    _classCallCheck(this, Tileset3DTraverser);\n    return _super.apply(this, arguments);\n  }\n  _createClass(Tileset3DTraverser, [{\n    key: \"compareDistanceToCamera\",\n    value: function compareDistanceToCamera(a, b) {\n      return b._distanceToCamera === 0 && a._distanceToCamera === 0 ? b._centerZDepth - a._centerZDepth : b._distanceToCamera - a._distanceToCamera;\n    }\n  }, {\n    key: \"updateTileVisibility\",\n    value: function updateTileVisibility(tile, frameState) {\n      tile.updateVisibility(frameState);\n      if (!tile.isVisibleAndInRequestVolume) {\n        return;\n      }\n      var hasChildren = tile.children.length > 0;\n      if (tile.hasTilesetContent && hasChildren) {\n        var firstChild = tile.children[0];\n        this.updateTileVisibility(firstChild, frameState);\n        tile._visible = firstChild._visible;\n        return;\n      }\n      if (this.meetsScreenSpaceErrorEarly(tile, frameState)) {\n        tile._visible = false;\n        return;\n      }\n      var replace = tile.refine === TILE_REFINEMENT.REPLACE;\n      var useOptimization = tile._optimChildrenWithinParent === TILE3D_OPTIMIZATION_HINT.USE_OPTIMIZATION;\n      if (replace && useOptimization && hasChildren) {\n        if (!this.anyChildrenVisible(tile, frameState)) {\n          tile._visible = false;\n          return;\n        }\n      }\n    }\n  }, {\n    key: \"meetsScreenSpaceErrorEarly\",\n    value: function meetsScreenSpaceErrorEarly(tile, frameState) {\n      var parent = tile.parent;\n      if (!parent || parent.hasTilesetContent || parent.refine !== TILE_REFINEMENT.ADD) {\n        return false;\n      }\n      return !this.shouldRefine(tile, frameState, true);\n    }\n  }]);\n  return Tileset3DTraverser;\n}(TilesetTraverser);\nexport { Tileset3DTraverser as default };","map":{"version":3,"sources":["../../../../src/tileset/traversers/tileset-3d-traverser.js"],"names":["TILE3D_OPTIMIZATION_HINT","TILE_REFINEMENT","TilesetTraverser","Tileset3DTraverser","a","b","_distanceToCamera","_centerZDepth","tile","frameState","updateVisibility","isVisibleAndInRequestVolume","hasChildren","children","length","hasTilesetContent","firstChild","updateTileVisibility","_visible","meetsScreenSpaceErrorEarly","replace","refine","REPLACE","useOptimization","_optimChildrenWithinParent","USE_OPTIMIZATION","anyChildrenVisible","parent","ADD","shouldRefine"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,SAAQA,wBAAR,EAAkCC,eAAlC,QAAwD,iBAAxD;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;IAEqBC,kB;;;;;;;;;4CACKC,C,EAAGC,C,EAAG;MAE5B,OAAOA,CAAC,CAACC,iBAAFD,KAAwB,CAAxBA,IAA6BD,CAAC,CAACE,iBAAFF,KAAwB,CAArDC,GACHA,CAAC,CAACE,aAAFF,GAAkBD,CAAC,CAACG,aADjBF,GAEHA,CAAC,CAACC,iBAAFD,GAAsBD,CAAC,CAACE,iBAF5B;IAGD;;;yCAEoBE,I,EAAMC,U,EAAY;MACrCD,IAAI,CAACE,gBAALF,CAAsBC,UAAtBD,CAAAA;MAGA,IAAI,CAACA,IAAI,CAACG,2BAAV,EAAuC;QACrC;MACD;MAED,IAAMC,WAAW,GAAGJ,IAAI,CAACK,QAALL,CAAcM,MAAdN,GAAuB,CAA3C;MACA,IAAIA,IAAI,CAACO,iBAALP,IAA0BI,WAA9B,EAA2C;QAIzC,IAAMI,UAAU,GAAGR,IAAI,CAACK,QAALL,CAAc,CAAdA,CAAnB;QACA,IAAA,CAAKS,oBAAL,CAA0BD,UAA1B,EAAsCP,UAAtC,CAAA;QACAD,IAAI,CAACU,QAALV,GAAgBQ,UAAU,CAACE,QAA3BV;QACA;MACD;MAED,IAAI,IAAA,CAAKW,0BAAL,CAAgCX,IAAhC,EAAsCC,UAAtC,CAAJ,EAAuD;QACrDD,IAAI,CAACU,QAALV,GAAgB,KAAhBA;QACA;MACD;MAED,IAAMY,OAAO,GAAGZ,IAAI,CAACa,MAALb,KAAgBP,eAAe,CAACqB,OAAhD;MACA,IAAMC,eAAe,GACnBf,IAAI,CAACgB,0BAALhB,KAAoCR,wBAAwB,CAACyB,gBAD/D;MAEA,IAAIL,OAAO,IAAIG,eAAXH,IAA8BR,WAAlC,EAA+C;QAC7C,IAAI,CAAC,IAAA,CAAKc,kBAAL,CAAwBlB,IAAxB,EAA8BC,UAA9B,CAAL,EAAgD;UAC9CD,IAAI,CAACU,QAALV,GAAgB,KAAhBA;UACA;QACD;MACF;IACF;;;+CAE0BA,I,EAAMC,U,EAAY;MAAA,IACpCkB,MADoC,GAC1BnB,IAD0B,CACpCmB,MADoC;MAE3C,IAAI,CAACA,MAAD,IAAWA,MAAM,CAACZ,iBAAlB,IAAuCY,MAAM,CAACN,MAAPM,KAAkB1B,eAAe,CAAC2B,GAA7E,EAAkF;QAChF,OAAO,KAAP;MACD;MAGD,OAAO,CAAC,IAAA,CAAKC,YAAL,CAAkBrB,IAAlB,EAAwBC,UAAxB,EAAoC,IAApC,CAAR;IACD;;;EAnD6CP,gB;SAA3BC,kB","sourcesContent":["// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {TILE3D_OPTIMIZATION_HINT, TILE_REFINEMENT} from '../../constants';\nimport TilesetTraverser from './tileset-traverser';\n\nexport default class Tileset3DTraverser extends TilesetTraverser {\n  compareDistanceToCamera(a, b) {\n    // Sort by farthest child first since this is going on a stack\n    return b._distanceToCamera === 0 && a._distanceToCamera === 0\n      ? b._centerZDepth - a._centerZDepth\n      : b._distanceToCamera - a._distanceToCamera;\n  }\n\n  updateTileVisibility(tile, frameState) {\n    tile.updateVisibility(frameState);\n\n    //  Optimization - if none of the tile's children are visible then this tile isn't visible\n    if (!tile.isVisibleAndInRequestVolume) {\n      return;\n    }\n\n    const hasChildren = tile.children.length > 0;\n    if (tile.hasTilesetContent && hasChildren) {\n      // Use the root tile's visibility instead of this tile's visibility.\n      // The root tile may be culled by the children bounds optimization in which\n      // case this tile should also be culled.\n      const firstChild = tile.children[0];\n      this.updateTileVisibility(firstChild, frameState);\n      tile._visible = firstChild._visible;\n      return;\n    }\n\n    if (this.meetsScreenSpaceErrorEarly(tile, frameState)) {\n      tile._visible = false;\n      return;\n    }\n\n    const replace = tile.refine === TILE_REFINEMENT.REPLACE;\n    const useOptimization =\n      tile._optimChildrenWithinParent === TILE3D_OPTIMIZATION_HINT.USE_OPTIMIZATION;\n    if (replace && useOptimization && hasChildren) {\n      if (!this.anyChildrenVisible(tile, frameState)) {\n        tile._visible = false;\n        return;\n      }\n    }\n  }\n\n  meetsScreenSpaceErrorEarly(tile, frameState) {\n    const {parent} = tile;\n    if (!parent || parent.hasTilesetContent || parent.refine !== TILE_REFINEMENT.ADD) {\n      return false;\n    }\n\n    // Use parent's geometric error with child's box to see if the tile already meet the SSE\n    return !this.shouldRefine(tile, frameState, true);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
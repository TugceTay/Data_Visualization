{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _itemSelector = _interopRequireDefault(require(\"../common/item-selector/item-selector\"));\nvar _components = require(\"./components\");\nvar _types = require(\"../../layers/types\");\n\n// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nvar layerFilter = function layerFilter(layer) {\n  return layer.type === _types.LAYER_TYPES.point;\n};\nvar isAlreadySelected = function isAlreadySelected(selectedLayers, layerId) {\n  return selectedLayers.findIndex(function (l) {\n    return l.id === layerId;\n  }) === -1;\n};\nfunction PolygonFilterFactory() {\n  /** @type {typeof import('./polygon-filter').PolygonFilter} */\n  var PolygonFilter = /*#__PURE__*/_react[\"default\"].memo(function (_ref) {\n    var filter = _ref.filter,\n      layers = _ref.layers,\n      setLayers = _ref.setLayers;\n    var setNewLayers = (0, _react.useCallback)(function (newLayers) {\n      return setLayers(newLayers.map(function (l) {\n        return l.id;\n      }));\n    }, [setLayers]);\n    var selectedLayers = (0, _react.useMemo)(function () {\n      return layers.filter(function (l) {\n        var _filter$layerId;\n        return (_filter$layerId = filter.layerId) === null || _filter$layerId === void 0 ? void 0 : _filter$layerId.includes(l.id);\n      });\n    }, [filter, layers]);\n    var availableLayers = (0, _react.useMemo)(function () {\n      // remove already added layers and filter out non point layers\n      return layers.filter(function (layer) {\n        return layerFilter(layer) && isAlreadySelected(selectedLayers, layer.id);\n      });\n    }, [layers, selectedLayers]);\n    return /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, /*#__PURE__*/_react[\"default\"].createElement(_components.StyledFilterPanel, {\n      htmlFor: \"filter-\".concat(filter.id)\n    }, \"Layers:\"), /*#__PURE__*/_react[\"default\"].createElement(_itemSelector[\"default\"], {\n      options: availableLayers,\n      selectedItems: selectedLayers,\n      onChange: setNewLayers,\n      searchable: false,\n      multiSelect: true,\n      getOptionValue: function getOptionValue(l) {\n        return l.id;\n      },\n      displayOption: function displayOption(l) {\n        return l.config.label;\n      }\n    }));\n  });\n  PolygonFilter.displayName = 'PolygonFilter';\n  return PolygonFilter;\n}\nvar _default = PolygonFilterFactory;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../src/components/filters/polygon-filter.js"],"names":["layerFilter","layer","type","LAYER_TYPES","point","isAlreadySelected","selectedLayers","layerId","findIndex","l","id","PolygonFilterFactory","PolygonFilter","memo","filter","layers","setLayers","setNewLayers","map","includes","availableLayers","config","label","displayName"],"mappings":";;;;;;;;AAoBA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;AACA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,uCAAA,CAAA,CAAA;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,cAAA,CAAA;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AAvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAAA,KAAK,EAAA;EAAA,OAAIC,KAAK,CAACC,IAAND,KAAeE,MAAAA,CAAAA,WAAAA,CAAYC,KAA/B;AAAA,CAAzB;AACA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,cAAD,EAAiBC,OAAjB,EAAA;EAAA,OACxB,cAAc,CAACC,SAAf,CAAyB,UAAA,CAAC,EAAA;IAAA,OAAIC,CAAC,CAACC,EAAFD,KAASF,OAAb;EAAA,CAA1B,CAAA,KAAoD,CAAC,CAD7B;AAAA,CAA1B;AAGA,SAASI,oBAAT,GAAgC;EAC9B;EACA,IAAMC,aAAa,GAAA,aAAG,MAAA,CAAA,SAAA,CAAA,CAAMC,IAAN,CAAW,UAAA,IAAA,EAAiC;IAAA,IAA/BC,MAA+B,GAAA,IAAA,CAA/BA,MAA+B;MAAvBC,MAAuB,GAAA,IAAA,CAAvBA,MAAuB;MAAfC,SAAe,GAAA,IAAA,CAAfA,SAAe;IAChE,IAAMC,YAAY,GAAG,CAAA,CAAA,EAAA,MAAA,CAAA,WAAA,EACnB,UAAA,SAAS,EAAI;MACX,OAAOD,SAAS,CAAC,SAAS,CAACE,GAAV,CAAc,UAAA,CAAC,EAAA;QAAA,OAAIT,CAAC,CAACC,EAAN;MAAA,CAAf,CAAD,CAAhB;IACD,CAHkB,EAInB,CAACM,SAAD,CAJmB,CAArB;IAOA,IAAMV,cAAc,GAAG,CAAA,CAAA,EAAA,MAAA,CAAA,OAAA,EAAQ,YAAA;MAAA,OAAM,MAAM,CAACQ,MAAP,CAAc,UAAA,CAAC,EAAA;QAAA,IAAA,eAAA;QAAA,OAAA,CAAA,eAAA,GAAIA,MAAM,CAACP,OAAX,MAAA,IAAA,IAAA,eAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAIO,eAAAA,CAAgBK,QAAhBL,CAAyBL,CAAC,CAACC,EAA3BI,CAAJ;MAAA,CAAf,CAAN;IAAA,CAAR,EAAkE,CACvFA,MADuF,EAEvFC,MAFuF,CAAlE,CAAvB;IAKA,IAAMK,eAAe,GAAG,CAAA,CAAA,EAAA,MAAA,CAAA,OAAA,EAAQ,YAAM;MACpC;MACA,OAAO,MAAM,CAACN,MAAP,CACL,UAAA,KAAK,EAAA;QAAA,OAAId,WAAW,CAACC,KAAD,CAAXD,IAAsBK,iBAAiB,CAACC,cAAD,EAAiBL,KAAK,CAACS,EAAvB,CAA3C;MAAA,CADA,CAAP;IAGD,CALuB,EAKrB,CAACK,MAAD,EAAST,cAAT,CALqB,CAAxB;IAOA,OAAA,aACE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EAAA,aACE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,WAAA,CAAA,iBAAD,EAAA;MAAmB,OAAO,EAAA,SAAA,CAAA,MAAA,CAAYQ,MAAM,CAACJ,EAAnB;IAA1B,CAAA,EAAA,SAAA,CADF,EAAA,aAEE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,aAAA,CAAA,SAAA,CAAD,EAAA;MACE,OAAO,EAAEU,eADX;MAEE,aAAa,EAAEd,cAFjB;MAGE,QAAQ,EAAEW,YAHZ;MAIE,UAAU,EAAE,KAJd;MAKE,WAAW,EAAE,IALf;MAME,cAAc,EAAE,SAAA,cAAA,CAAA,CAAC,EAAA;QAAA,OAAIR,CAAC,CAACC,EAAN;MAAA,CANnB;MAOE,aAAa,EAAE,SAAA,aAAA,CAAA,CAAC,EAAA;QAAA,OAAID,CAAC,CAACY,MAAFZ,CAASa,KAAb;MAAA;IAPlB,CAAA,CAFF,CADF;EAcD,CAlCqB,CAAtB;EAoCAV,aAAa,CAACW,WAAdX,GAA4B,eAA5BA;EAEA,OAAOA,aAAP;AACD;eAEcD,oB","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {useMemo, useCallback} from 'react';\nimport ItemSelector from 'components/common/item-selector/item-selector';\nimport {StyledFilterPanel} from './components';\nimport {LAYER_TYPES} from 'layers/types';\n\nconst layerFilter = layer => layer.type === LAYER_TYPES.point;\nconst isAlreadySelected = (selectedLayers, layerId) =>\n  selectedLayers.findIndex(l => l.id === layerId) === -1;\n\nfunction PolygonFilterFactory() {\n  /** @type {typeof import('./polygon-filter').PolygonFilter} */\n  const PolygonFilter = React.memo(({filter, layers, setLayers}) => {\n    const setNewLayers = useCallback(\n      newLayers => {\n        return setLayers(newLayers.map(l => l.id));\n      },\n      [setLayers]\n    );\n\n    const selectedLayers = useMemo(() => layers.filter(l => filter.layerId?.includes(l.id)), [\n      filter,\n      layers\n    ]);\n\n    const availableLayers = useMemo(() => {\n      // remove already added layers and filter out non point layers\n      return layers.filter(\n        layer => layerFilter(layer) && isAlreadySelected(selectedLayers, layer.id)\n      );\n    }, [layers, selectedLayers]);\n\n    return (\n      <div>\n        <StyledFilterPanel htmlFor={`filter-${filter.id}`}>Layers:</StyledFilterPanel>\n        <ItemSelector\n          options={availableLayers}\n          selectedItems={selectedLayers}\n          onChange={setNewLayers}\n          searchable={false}\n          multiSelect={true}\n          getOptionValue={l => l.id}\n          displayOption={l => l.config.label}\n        />\n      </div>\n    );\n  });\n\n  PolygonFilter.displayName = 'PolygonFilter';\n\n  return PolygonFilter;\n}\n\nexport default PolygonFilterFactory;\n"]},"metadata":{},"sourceType":"script"}
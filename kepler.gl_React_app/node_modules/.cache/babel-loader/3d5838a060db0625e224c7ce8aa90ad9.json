{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport { LayerExtension } from '@deck.gl/core';\nimport { shaderModule, shaderModule64 } from './shader-module';\nvar defaultProps = {\n  getFilterValue: {\n    type: 'accessor',\n    value: 0\n  },\n  filterEnabled: true,\n  filterRange: [-1, 1],\n  filterSoftRange: null,\n  filterTransformSize: true,\n  filterTransformColor: true\n};\nvar DATA_TYPE_FROM_SIZE = {\n  1: 'float',\n  2: 'vec2',\n  3: 'vec3',\n  4: 'vec4'\n};\nvar DataFilterExtension = function (_LayerExtension) {\n  _inherits(DataFilterExtension, _LayerExtension);\n  function DataFilterExtension() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$filterSize = _ref.filterSize,\n      filterSize = _ref$filterSize === void 0 ? 1 : _ref$filterSize,\n      _ref$fp = _ref.fp64,\n      fp64 = _ref$fp === void 0 ? false : _ref$fp;\n    _classCallCheck(this, DataFilterExtension);\n    if (!DATA_TYPE_FROM_SIZE[filterSize]) {\n      throw new Error('filterSize out of range');\n    }\n    return _possibleConstructorReturn(this, _getPrototypeOf(DataFilterExtension).call(this, {\n      filterSize: filterSize,\n      fp64: fp64\n    }));\n  }\n  _createClass(DataFilterExtension, [{\n    key: \"getShaders\",\n    value: function getShaders(extension) {\n      var _extension$opts = extension.opts,\n        filterSize = _extension$opts.filterSize,\n        fp64 = _extension$opts.fp64;\n      return {\n        modules: [fp64 ? shaderModule64 : shaderModule],\n        defines: {\n          DATAFILTER_TYPE: DATA_TYPE_FROM_SIZE[filterSize],\n          DATAFILTER_DOUBLE: Boolean(fp64)\n        }\n      };\n    }\n  }, {\n    key: \"initializeState\",\n    value: function initializeState(context, extension) {\n      var attributeManager = this.getAttributeManager();\n      if (attributeManager) {\n        attributeManager.add({\n          filterValues: {\n            size: extension.opts.filterSize,\n            type: extension.opts.fp64 ? 5130 : 5126,\n            accessor: 'getFilterValue',\n            shaderAttributes: {\n              filterValues: {\n                divisor: 0\n              },\n              instanceFilterValues: {\n                divisor: 1\n              }\n            }\n          }\n        });\n      }\n    }\n  }]);\n  return DataFilterExtension;\n}(LayerExtension);\nexport { DataFilterExtension as default };\nDataFilterExtension.extensionName = 'DataFilterExtension';\nDataFilterExtension.defaultProps = defaultProps;","map":{"version":3,"sources":["../../../src/data-filter/data-filter.js"],"names":["LayerExtension","shaderModule","shaderModule64","defaultProps","getFilterValue","type","value","filterEnabled","filterRange","filterSoftRange","filterTransformSize","filterTransformColor","DATA_TYPE_FROM_SIZE","DataFilterExtension","filterSize","fp64","Error","extension","opts","modules","defines","DATAFILTER_TYPE","DATAFILTER_DOUBLE","Boolean","context","attributeManager","getAttributeManager","add","filterValues","size","accessor","shaderAttributes","divisor","instanceFilterValues","extensionName"],"mappings":";;;;;AAoBA,SAAQA,cAAR,QAA6B,eAA7B;AACA,SAAQC,YAAR,EAAsBC,cAAtB,QAA2C,iBAA3C;AAGA,IAAMC,YAAY,GAAG;EACnBC,cAAc,EAAE;IAACC,IAAI,EAAE,UAAP;IAAmBC,KAAK,EAAE;EAA1B,CADG;EAGnBC,aAAa,EAAE,IAHI;EAInBC,WAAW,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,CAJM;EAKnBC,eAAe,EAAE,IALE;EAMnBC,mBAAmB,EAAE,IANF;EAOnBC,oBAAoB,EAAE;AAPH,CAArB;AAUA,IAAMC,mBAAmB,GAAG;EAC1B,CAAA,EAAG,OADuB;EAE1B,CAAA,EAAG,MAFuB;EAG1B,CAAA,EAAG,MAHuB;EAI1B,CAAA,EAAG;AAJuB,CAA5B;IAOqBC,mB;;EACnB,SAAA,mBAAA,GAAiD;IAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,CAAA,CAAI;MAAA,eAAA,GAAA,IAAA,CAApCC,UAAoC;MAApCA,UAAoC,GAAA,eAAA,KAAA,KAAA,CAAA,GAAvB,CAAuB,GAAA,eAAA;MAAA,OAAA,GAAA,IAAA,CAApBC,IAAoB;MAApBA,IAAoB,GAAA,OAAA,KAAA,KAAA,CAAA,GAAb,KAAa,GAAA,OAAA;IAAA,eAAA,CAAA,IAAA,EAAA,mBAAA,CAAA;IAC/C,IAAI,CAACH,mBAAmB,CAACE,UAAD,CAAxB,EAAsC;MACpC,MAAM,IAAIE,KAAJ,CAAU,yBAAV,CAAN;IACD;IAH8C,OAAA,0BAAA,CAAA,IAAA,EAAA,eAAA,CAAA,mBAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAKzC;MAACF,UAAU,EAAVA,UAAD;MAAaC,IAAI,EAAJA;IAAb,CALyC,CAAA,CAAA;EAMhD;;;+BAEUE,S,EAAW;MAAA,IAAA,eAAA,GACOA,SAAS,CAACC,IADjB;QACbJ,UADa,GAAA,eAAA,CACbA,UADa;QACDC,IADC,GAAA,eAAA,CACDA,IADC;MAGpB,OAAO;QACLI,OAAO,EAAE,CAACJ,IAAI,GAAGb,cAAH,GAAoBD,YAAzB,CADJ;QAELmB,OAAO,EAAE;UACPC,eAAe,EAAET,mBAAmB,CAACE,UAAD,CAD7B;UAEPQ,iBAAiB,EAAEC,OAAO,CAACR,IAAD;QAFnB;MAFJ,CAAP;IAOD;;;oCAEeS,O,EAASP,S,EAAW;MAClC,IAAMQ,gBAAgB,GAAG,IAAA,CAAKC,mBAAL,EAAzB;MACA,IAAID,gBAAJ,EAAsB;QACpBA,gBAAgB,CAACE,GAAjBF,CAAqB;UACnBG,YAAY,EAAE;YACZC,IAAI,EAAEZ,SAAS,CAACC,IAAVD,CAAeH,UADT;YAEZT,IAAI,EAAEY,SAAS,CAACC,IAAVD,CAAeF,IAAfE,GAAAA,IAAAA,GAAAA,IAFM;YAGZa,QAAQ,EAAE,gBAHE;YAIZC,gBAAgB,EAAE;cAChBH,YAAY,EAAE;gBACZI,OAAO,EAAE;cADG,CADE;cAIhBC,oBAAoB,EAAE;gBACpBD,OAAO,EAAE;cADW;YAJN;UAJN;QADK,CAArBP,CAAAA;MAeD;IACF;;;EAxC8CzB,c;SAA5Ba,mB;AA2CrBA,mBAAmB,CAACqB,aAApBrB,GAAoC,qBAApCA;AACAA,mBAAmB,CAACV,YAApBU,GAAmCV,YAAnCU","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {LayerExtension} from '@deck.gl/core';\nimport {shaderModule, shaderModule64} from './shader-module';\nimport GL from '@luma.gl/constants';\n\nconst defaultProps = {\n  getFilterValue: {type: 'accessor', value: 0},\n\n  filterEnabled: true,\n  filterRange: [-1, 1],\n  filterSoftRange: null,\n  filterTransformSize: true,\n  filterTransformColor: true\n};\n\nconst DATA_TYPE_FROM_SIZE = {\n  1: 'float',\n  2: 'vec2',\n  3: 'vec3',\n  4: 'vec4'\n};\n\nexport default class DataFilterExtension extends LayerExtension {\n  constructor({filterSize = 1, fp64 = false} = {}) {\n    if (!DATA_TYPE_FROM_SIZE[filterSize]) {\n      throw new Error('filterSize out of range');\n    }\n\n    super({filterSize, fp64});\n  }\n\n  getShaders(extension) {\n    const {filterSize, fp64} = extension.opts;\n\n    return {\n      modules: [fp64 ? shaderModule64 : shaderModule],\n      defines: {\n        DATAFILTER_TYPE: DATA_TYPE_FROM_SIZE[filterSize],\n        DATAFILTER_DOUBLE: Boolean(fp64)\n      }\n    };\n  }\n\n  initializeState(context, extension) {\n    const attributeManager = this.getAttributeManager();\n    if (attributeManager) {\n      attributeManager.add({\n        filterValues: {\n          size: extension.opts.filterSize,\n          type: extension.opts.fp64 ? GL.DOUBLE : GL.FLOAT,\n          accessor: 'getFilterValue',\n          shaderAttributes: {\n            filterValues: {\n              divisor: 0\n            },\n            instanceFilterValues: {\n              divisor: 1\n            }\n          }\n        }\n      });\n    }\n  }\n}\n\nDataFilterExtension.extensionName = 'DataFilterExtension';\nDataFilterExtension.defaultProps = defaultProps;\n"]},"metadata":{},"sourceType":"module"}
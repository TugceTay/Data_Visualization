{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isMSEdge = isMSEdge;\nexports.getScaleFromImageSize = getScaleFromImageSize;\nexports.calculateExportImageSize = calculateExportImageSize;\nexports.convertToPng = convertToPng;\nexports.dataURItoBlob = dataURItoBlob;\nexports.downloadFile = downloadFile;\nexports.exportImage = exportImage;\nexports.exportToJsonString = exportToJsonString;\nexports.getMapJSON = getMapJSON;\nexports.exportJson = exportJson;\nexports.exportHtml = exportHtml;\nexports.exportData = exportData;\nexports.exportMap = exportMap;\nexports[\"default\"] = exports.DEFAULT_EXPORT_JSON_SETTINGS = exports.DEFAULT_DATA_NAME = exports.DEFAULT_JSON_NAME = exports.DEFAULT_HTML_NAME = exports.DEFAULT_IMAGE_NAME = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _domToImage = _interopRequireDefault(require(\"./dom-to-image\"));\nvar _window = require(\"global/window\");\nvar _defaultSettings = require(\"../constants/default-settings\");\nvar _exportMapHtml = require(\"../templates/export-map-html\");\nvar _dataProcessor = require(\"../processors/data-processor\");\nvar _lodash = _interopRequireDefault(require(\"lodash.get\"));\nvar _utils = require(\"./utils\");\nvar _dataContainerUtils = require(\"./table-utils/data-container-utils\");\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\n\n/**\n * Default file names\n */\nvar DEFAULT_IMAGE_NAME = 'kepler.gl.png';\nexports.DEFAULT_IMAGE_NAME = DEFAULT_IMAGE_NAME;\nvar DEFAULT_HTML_NAME = 'kepler.gl.html';\nexports.DEFAULT_HTML_NAME = DEFAULT_HTML_NAME;\nvar DEFAULT_JSON_NAME = 'kepler.gl.json';\nexports.DEFAULT_JSON_NAME = DEFAULT_JSON_NAME;\nvar DEFAULT_DATA_NAME = 'kepler.gl';\n/**\n * Default json export settings\n * @type {{hasData: boolean}}\n */\n\nexports.DEFAULT_DATA_NAME = DEFAULT_DATA_NAME;\nvar DEFAULT_EXPORT_JSON_SETTINGS = {\n  hasData: true\n};\nexports.DEFAULT_EXPORT_JSON_SETTINGS = DEFAULT_EXPORT_JSON_SETTINGS;\nvar defaultResolution = _defaultSettings.EXPORT_IMG_RESOLUTION_OPTIONS.find(function (op) {\n  return op.id === _defaultSettings.RESOLUTIONS.ONE_X;\n});\nvar defaultRatio = _defaultSettings.EXPORT_IMG_RATIO_OPTIONS.find(function (op) {\n  return op.id === _defaultSettings.EXPORT_IMG_RATIOS.FOUR_BY_THREE;\n});\nfunction isMSEdge(window) {\n  return Boolean(window.navigator && window.navigator.msSaveOrOpenBlob);\n}\nfunction getScaleFromImageSize() {\n  var imageW = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var imageH = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var mapW = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var mapH = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  if ([imageW, imageH, mapW, mapH].some(function (d) {\n    return d <= 0;\n  })) {\n    return 1;\n  }\n  var base = imageW / imageH > 1 ? imageW : imageH;\n  var mapBase = imageW / imageH > 1 ? mapW : mapH;\n  return base / mapBase;\n}\nfunction calculateExportImageSize(_ref) {\n  var mapW = _ref.mapW,\n    mapH = _ref.mapH,\n    ratio = _ref.ratio,\n    resolution = _ref.resolution;\n  if (mapW <= 0 || mapH <= 0) {\n    return null;\n  }\n  var ratioItem = _defaultSettings.EXPORT_IMG_RATIO_OPTIONS.find(function (op) {\n    return op.id === ratio;\n  }) || defaultRatio;\n  var resolutionItem = _defaultSettings.EXPORT_IMG_RESOLUTION_OPTIONS.find(function (op) {\n    return op.id === resolution;\n  }) || defaultResolution;\n  var _resolutionItem$getSi = resolutionItem.getSize(mapW, mapH),\n    scaledWidth = _resolutionItem$getSi.width,\n    scaledHeight = _resolutionItem$getSi.height;\n  var _ratioItem$getSize = ratioItem.getSize(scaledWidth, scaledHeight),\n    imageW = _ratioItem$getSize.width,\n    imageH = _ratioItem$getSize.height;\n  var _ref2 = ratioItem.id === _defaultSettings.EXPORT_IMG_RATIOS.CUSTOM ? {} : resolutionItem,\n    scale = _ref2.scale;\n  return {\n    scale: scale,\n    imageW: imageW,\n    imageH: imageH\n  };\n}\nfunction convertToPng(sourceElem, options) {\n  return _domToImage[\"default\"].toPng(sourceElem, options);\n}\nfunction dataURItoBlob(dataURI) {\n  var binary = (0, _window.atob)(dataURI.split(',')[1]); // separate out the mime component\n\n  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]; // write the bytes of the string to an ArrayBuffer\n\n  var ab = new _window.ArrayBuffer(binary.length); // create a view into the buffer\n\n  var ia = new _window.Uint8Array(ab);\n  for (var i = 0; i < binary.length; i++) {\n    ia[i] = binary.charCodeAt(i);\n  }\n  return new _window.Blob([ab], {\n    type: mimeString\n  });\n}\nfunction downloadFile(fileBlob, fileName) {\n  if (isMSEdge(window)) {\n    window.navigator.msSaveOrOpenBlob(fileBlob, fileName);\n  } else {\n    var url = _window.URL.createObjectURL(fileBlob);\n    var link = _window.document.createElement('a');\n    link.setAttribute('href', url);\n    link.setAttribute('download', fileName);\n    _window.document.body.appendChild(link);\n    link.click();\n    _window.document.body.removeChild(link);\n    _window.URL.revokeObjectURL(url);\n  }\n}\nfunction exportImage(state) {\n  var filename = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_IMAGE_NAME;\n  var imageDataUri = state.uiState.exportImage.imageDataUri;\n  if (imageDataUri) {\n    var file = dataURItoBlob(imageDataUri);\n    downloadFile(file, filename);\n  }\n}\nfunction exportToJsonString(data) {\n  try {\n    return JSON.stringify(data);\n  } catch (e) {\n    return e.description;\n  }\n}\nfunction getMapJSON(state) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_EXPORT_JSON_SETTINGS;\n  var hasData = options.hasData;\n  var schema = state.visState.schema;\n  if (!hasData) {\n    return schema.getConfigToSave(state);\n  }\n  var mapToSave = schema.save(state); // add file name if title is not provided\n\n  var title = (0, _lodash[\"default\"])(mapToSave, ['info', 'title']);\n  if (!title || !title.length) {\n    mapToSave = (0, _utils.set)(['info', 'title'], \"keplergl_\".concat((0, _utils.generateHashId)(6)), mapToSave);\n  }\n  return mapToSave;\n}\nfunction exportJson(state) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var map = getMapJSON(state, options);\n  var fileBlob = new _window.Blob([exportToJsonString(map)], {\n    type: 'application/json'\n  });\n  var fileName = state.appName ? \"\".concat(state.appName, \".json\") : DEFAULT_JSON_NAME;\n  downloadFile(fileBlob, fileName);\n}\nfunction exportHtml(state, options) {\n  var userMapboxToken = options.userMapboxToken,\n    exportMapboxAccessToken = options.exportMapboxAccessToken,\n    mode = options.mode;\n  var data = _objectSpread(_objectSpread({}, getMapJSON(state)), {}, {\n    mapboxApiAccessToken: (userMapboxToken || '') !== '' ? userMapboxToken : exportMapboxAccessToken,\n    mode: mode\n  });\n  var fileBlob = new _window.Blob([(0, _exportMapHtml.exportMapToHTML)(data)], {\n    type: 'text/html'\n  });\n  downloadFile(fileBlob, state.appName ? \"\".concat(state.appName, \".html\") : DEFAULT_HTML_NAME);\n}\nfunction exportData(state, option) {\n  var visState = state.visState,\n    appName = state.appName;\n  var datasets = visState.datasets;\n  var selectedDataset = option.selectedDataset,\n    dataType = option.dataType,\n    filtered = option.filtered; // get the selected data\n\n  var filename = appName ? appName : DEFAULT_DATA_NAME;\n  var selectedDatasets = datasets[selectedDataset] ? [datasets[selectedDataset]] : Object.values(datasets);\n  if (!selectedDatasets.length) {\n    // error: selected dataset not found.\n    return;\n  }\n  selectedDatasets.forEach(function (selectedData) {\n    var dataContainer = selectedData.dataContainer,\n      fields = selectedData.fields,\n      label = selectedData.label,\n      _selectedData$filtere = selectedData.filteredIdxCPU,\n      filteredIdxCPU = _selectedData$filtere === void 0 ? [] : _selectedData$filtere;\n    var toExport = filtered ? (0, _dataContainerUtils.createIndexedDataContainer)(dataContainer, filteredIdxCPU) : dataContainer; // start to export data according to selected data type\n\n    switch (dataType) {\n      case _defaultSettings.EXPORT_DATA_TYPE.CSV:\n        {\n          var csv = (0, _dataProcessor.formatCsv)(toExport, fields);\n          var fileBlob = new _window.Blob([csv], {\n            type: 'text/csv'\n          });\n          downloadFile(fileBlob, \"\".concat(filename, \"_\").concat(label, \".csv\"));\n          break;\n        }\n      // TODO: support more file types.\n\n      default:\n        break;\n    }\n  });\n}\nfunction exportMap(state, option) {\n  var imageDataUri = state.uiState.exportImage.imageDataUri;\n  var thumbnail = imageDataUri ? dataURItoBlob(imageDataUri) : null;\n  var mapToSave = getMapJSON(state, option);\n  return {\n    map: mapToSave,\n    thumbnail: thumbnail\n  };\n}\nvar exporters = {\n  exportImage: exportImage,\n  exportJson: exportJson,\n  exportHtml: exportHtml,\n  exportData: exportData\n};\nvar _default = exporters;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../src/utils/export-utils.js"],"names":["DEFAULT_IMAGE_NAME","DEFAULT_HTML_NAME","DEFAULT_JSON_NAME","DEFAULT_DATA_NAME","DEFAULT_EXPORT_JSON_SETTINGS","hasData","defaultResolution","find","op","id","RESOLUTIONS","ONE_X","defaultRatio","EXPORT_IMG_RATIOS","FOUR_BY_THREE","isMSEdge","window","Boolean","navigator","msSaveOrOpenBlob","getScaleFromImageSize","imageW","imageH","mapW","mapH","some","d","base","mapBase","calculateExportImageSize","ratio","resolution","ratioItem","resolutionItem","width","scaledWidth","height","scaledHeight","getSize","scale","CUSTOM","convertToPng","sourceElem","options","domtoimage","toPng","dataURItoBlob","dataURI","binary","split","mimeString","ab","ArrayBuffer","length","ia","Uint8Array","i","charCodeAt","Blob","type","downloadFile","fileBlob","fileName","url","URL","createObjectURL","link","document","createElement","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","exportImage","state","filename","imageDataUri","uiState","file","exportToJsonString","data","JSON","stringify","e","description","getMapJSON","schema","visState","getConfigToSave","mapToSave","save","title","exportJson","map","appName","exportHtml","userMapboxToken","exportMapboxAccessToken","mode","mapboxApiAccessToken","exportData","option","datasets","selectedDataset","dataType","filtered","selectedDatasets","Object","values","forEach","dataContainer","fields","label","filteredIdxCPU","selectedData","toExport","EXPORT_DATA_TYPE","CSV","csv","exportMap","thumbnail","exporters"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,eAAA,CAAA;AACA,IAAA,gBAAA,GAAA,OAAA,CAAA,+BAAA,CAAA;AAOA,IAAA,cAAA,GAAA,OAAA,CAAA,8BAAA,CAAA;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,8BAAA,CAAA;AACA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,SAAA,CAAA;AAEA,IAAA,mBAAA,GAAA,OAAA,CAAA,oCAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACO,IAAMA,kBAAkB,GAAG,eAA3B;;AACA,IAAMC,iBAAiB,GAAG,gBAA1B;;AACA,IAAMC,iBAAiB,GAAG,gBAA1B;;AACA,IAAMC,iBAAiB,GAAG,WAA1B;AAEP;AACA;AACA;AACA;;;AACO,IAAMC,4BAA4B,GAAG;EAC1CC,OAAO,EAAE;AADiC,CAArC;;AAIP,IAAMC,iBAAiB,GAAG,gBAAA,CAAA,6BAAA,CAA8BC,IAA9B,CAAmC,UAAA,EAAE,EAAA;EAAA,OAAIC,EAAE,CAACC,EAAHD,KAAUE,gBAAAA,CAAAA,WAAAA,CAAYC,KAA1B;AAAA,CAArC,CAA1B;AAEA,IAAMC,YAAY,GAAG,gBAAA,CAAA,wBAAA,CAAyBL,IAAzB,CAA8B,UAAA,EAAE,EAAA;EAAA,OAAIC,EAAE,CAACC,EAAHD,KAAUK,gBAAAA,CAAAA,iBAAAA,CAAkBC,aAAhC;AAAA,CAAhC,CAArB;AAEO,SAASC,QAAT,CAAkBC,MAAlB,EAA0B;EAC/B,OAAOC,OAAO,CAACD,MAAM,CAACE,SAAPF,IAAoBA,MAAM,CAACE,SAAPF,CAAiBG,gBAAtC,CAAd;AACD;AAEM,SAASC,qBAAT,GAA2E;EAAA,IAA5CC,MAA4C,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAnC,CAAmC;EAAA,IAAhCC,MAAgC,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAvB,CAAuB;EAAA,IAApBC,IAAoB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAb,CAAa;EAAA,IAAVC,IAAU,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAH,CAAG;EAChF,IAAI,CAACH,MAAD,EAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,CAAA,CAA6BC,IAA7B,CAAkC,UAAA,CAAC,EAAA;IAAA,OAAIC,CAAC,IAAI,CAAT;EAAA,CAAnC,CAAJ,EAAoD;IAClD,OAAO,CAAP;EACD;EAED,IAAMC,IAAI,GAAGN,MAAM,GAAGC,MAATD,GAAkB,CAAlBA,GAAsBA,MAAtBA,GAA+BC,MAA5C;EACA,IAAMM,OAAO,GAAGP,MAAM,GAAGC,MAATD,GAAkB,CAAlBA,GAAsBE,IAAtBF,GAA6BG,IAA7C;EACA,OAAOG,IAAI,GAAGC,OAAd;AACD;AAEM,SAASC,wBAAT,CAAA,IAAA,EAAmE;EAAA,IAAhCN,IAAgC,GAAA,IAAA,CAAhCA,IAAgC;IAA1BC,IAA0B,GAAA,IAAA,CAA1BA,IAA0B;IAApBM,KAAoB,GAAA,IAAA,CAApBA,KAAoB;IAAbC,UAAa,GAAA,IAAA,CAAbA,UAAa;EACxE,IAAIR,IAAI,IAAI,CAARA,IAAaC,IAAI,IAAI,CAAzB,EAA4B;IAC1B,OAAO,IAAP;EACD;EAED,IAAMQ,SAAS,GAAG,gBAAA,CAAA,wBAAA,CAAyBzB,IAAzB,CAA8B,UAAA,EAAE,EAAA;IAAA,OAAIC,EAAE,CAACC,EAAHD,KAAUsB,KAAd;EAAA,CAAhC,CAAA,IAAwDlB,YAA1E;EAEA,IAAMqB,cAAc,GAClB,gBAAA,CAAA,6BAAA,CAA8B1B,IAA9B,CAAmC,UAAA,EAAE,EAAA;IAAA,OAAIC,EAAE,CAACC,EAAHD,KAAUuB,UAAd;EAAA,CAArC,CAAA,IAAkEzB,iBADpE;EAPwE,IAAA,qBAAA,GAUrB2B,cAAc,CAACK,OAAfL,CAAuBV,IAAvBU,EAA6BT,IAA7BS,CAVqB;IAU1DE,WAV0D,GAAA,qBAAA,CAUjED,KAViE;IAUrCG,YAVqC,GAAA,qBAAA,CAU7CD,MAV6C;EAAA,IAAA,kBAAA,GAYhCJ,SAAS,CAACM,OAAVN,CAAkBG,WAAlBH,EAA+BK,YAA/BL,CAZgC;IAY1DX,MAZ0D,GAAA,kBAAA,CAYjEa,KAZiE;IAY1CZ,MAZ0C,GAAA,kBAAA,CAYlDc,MAZkD;EAAA,IAAA,KAAA,GAcxDJ,SAAS,CAACvB,EAAVuB,KAAiBnB,gBAAAA,CAAAA,iBAAAA,CAAkB2B,MAAnCR,GAA4C,CAAA,CAA5CA,GAAiDC,cAdO;IAcjEM,KAdiE,GAAA,KAAA,CAcjEA,KAdiE;EAgBxE,OAAO;IACLA,KAAK,EAALA,KADK;IAELlB,MAAM,EAANA,MAFK;IAGLC,MAAM,EAANA;EAHK,CAAP;AAKD;AAEM,SAASmB,YAAT,CAAsBC,UAAtB,EAAkCC,OAAlC,EAA2C;EAChD,OAAOC,WAAAA,CAAAA,SAAAA,CAAAA,CAAWC,KAAXD,CAAiBF,UAAjBE,EAA6BD,OAA7BC,CAAP;AACD;AAEM,SAASE,aAAT,CAAuBC,OAAvB,EAAgC;EACrC,IAAMC,MAAM,GAAG,CAAA,CAAA,EAAA,OAAA,CAAA,IAAA,EAAKD,OAAO,CAACE,KAARF,CAAc,GAAdA,CAAAA,CAAmB,CAAnBA,CAAL,CAAf,CADqC,CAGrC;;EACA,IAAMG,UAAU,GAAGH,OAAO,CACvBE,KADgBF,CACV,GADUA,CAAAA,CACL,CADKA,CAAAA,CAEhBE,KAFgBF,CAEV,GAFUA,CAAAA,CAEL,CAFKA,CAAAA,CAGhBE,KAHgBF,CAGV,GAHUA,CAAAA,CAGL,CAHKA,CAAnB,CAJqC,CASrC;;EACA,IAAMI,EAAE,GAAG,IAAIC,OAAAA,CAAAA,WAAJ,CAAgBJ,MAAM,CAACK,MAAvB,CAAX,CAVqC,CAYrC;;EACA,IAAMC,EAAE,GAAG,IAAIC,OAAAA,CAAAA,UAAJ,CAAeJ,EAAf,CAAX;EAEA,KAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,MAAM,CAACK,MAA3B,EAAmCG,CAAC,EAApC,EAAwC;IACtCF,EAAE,CAACE,CAAD,CAAFF,GAAQN,MAAM,CAACS,UAAPT,CAAkBQ,CAAlBR,CAARM;EACD;EAED,OAAO,IAAII,OAAAA,CAAAA,IAAJ,CAAS,CAACP,EAAD,CAAT,EAAe;IAACQ,IAAI,EAAET;EAAP,CAAf,CAAP;AACD;AAEM,SAASU,YAAT,CAAsBC,QAAtB,EAAgCC,QAAhC,EAA0C;EAC/C,IAAI/C,QAAQ,CAACC,MAAD,CAAZ,EAAsB;IACpBA,MAAM,CAACE,SAAPF,CAAiBG,gBAAjBH,CAAkC6C,QAAlC7C,EAA4C8C,QAA5C9C,CAAAA;EACD,CAFD,MAEO;IACL,IAAM+C,GAAG,GAAGC,OAAAA,CAAAA,GAAAA,CAAIC,eAAJD,CAAoBH,QAApBG,CAAZ;IAEA,IAAME,IAAI,GAAGC,OAAAA,CAAAA,QAAAA,CAASC,aAATD,CAAuB,GAAvBA,CAAb;IACAD,IAAI,CAACG,YAALH,CAAkB,MAAlBA,EAA0BH,GAA1BG,CAAAA;IACAA,IAAI,CAACG,YAALH,CAAkB,UAAlBA,EAA8BJ,QAA9BI,CAAAA;IAEAC,OAAAA,CAAAA,QAAAA,CAASG,IAATH,CAAcI,WAAdJ,CAA0BD,IAA1BC,CAAAA;IACAD,IAAI,CAACM,KAALN,EAAAA;IACAC,OAAAA,CAAAA,QAAAA,CAASG,IAATH,CAAcM,WAAdN,CAA0BD,IAA1BC,CAAAA;IACAH,OAAAA,CAAAA,GAAAA,CAAIU,eAAJV,CAAoBD,GAApBC,CAAAA;EACD;AACF;AAEM,SAASW,WAAT,CAAqBC,KAArB,EAA2D;EAAA,IAA/BC,QAA+B,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAApB7E,kBAAoB;EAAA,IACzD8E,YADyD,GACzCF,KAAK,CAACG,OAANH,CAAcD,WAD2B,CACzDG,YADyD;EAEhE,IAAIA,YAAJ,EAAkB;IAChB,IAAME,IAAI,GAAGlC,aAAa,CAACgC,YAAD,CAA1B;IACAlB,YAAY,CAACoB,IAAD,EAAOH,QAAP,CAAZjB;EACD;AACF;AAEM,SAASqB,kBAAT,CAA4BC,IAA5B,EAAkC;EACvC,IAAI;IACF,OAAOC,IAAI,CAACC,SAALD,CAAeD,IAAfC,CAAP;EACD,CAFD,CAEE,OAAOE,CAAP,EAAU;IACV,OAAOA,CAAC,CAACC,WAAT;EACD;AACF;AAEM,SAASC,UAAT,CAAoBX,KAApB,EAAmE;EAAA,IAAxCjC,OAAwC,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAA9BvC,4BAA8B;EAAA,IACjEC,OADiE,GACtDsC,OADsD,CACjEtC,OADiE;EAExE,IAAMmF,MAAM,GAAGZ,KAAK,CAACa,QAANb,CAAeY,MAA9B;EAEA,IAAI,CAACnF,OAAL,EAAc;IACZ,OAAOmF,MAAM,CAACE,eAAPF,CAAuBZ,KAAvBY,CAAP;EACD;EAED,IAAIG,SAAS,GAAGH,MAAM,CAACI,IAAPJ,CAAYZ,KAAZY,CAAhB,CARwE,CASxE;;EACA,IAAMK,KAAK,GAAG,CAAA,CAAA,EAAA,OAAA,CAAA,SAAA,CAAA,EAAIF,SAAJ,EAAe,CAAC,MAAD,EAAS,OAAT,CAAf,CAAd;EACA,IAAI,CAACE,KAAD,IAAU,CAACA,KAAK,CAACxC,MAArB,EAA6B;IAC3BsC,SAAS,GAAG,CAAA,CAAA,EAAA,MAAA,CAAA,GAAA,EAAI,CAAC,MAAD,EAAS,OAAT,CAAJ,EAAA,WAAA,CAAA,MAAA,CAAmC,CAAA,CAAA,EAAA,MAAA,CAAA,cAAA,EAAe,CAAf,CAAnC,CAAA,EAAwDA,SAAxD,CAAZA;EACD;EACD,OAAOA,SAAP;AACD;AAEM,SAASG,UAAT,CAAoBlB,KAApB,EAAyC;EAAA,IAAdjC,OAAc,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,CAAA,CAAI;EAC9C,IAAMoD,GAAG,GAAGR,UAAU,CAACX,KAAD,EAAQjC,OAAR,CAAtB;EAEA,IAAMkB,QAAQ,GAAG,IAAIH,OAAAA,CAAAA,IAAJ,CAAS,CAACuB,kBAAkB,CAACc,GAAD,CAAnB,CAAT,EAAoC;IAACpC,IAAI,EAAE;EAAP,CAApC,CAAjB;EACA,IAAMG,QAAQ,GAAGc,KAAK,CAACoB,OAANpB,GAAAA,EAAAA,CAAAA,MAAAA,CAAmBA,KAAK,CAACoB,OAAzBpB,EAAAA,OAAAA,CAAAA,GAA0C1E,iBAA3D;EACA0D,YAAY,CAACC,QAAD,EAAWC,QAAX,CAAZF;AACD;AAEM,SAASqC,UAAT,CAAoBrB,KAApB,EAA2BjC,OAA3B,EAAoC;EAAA,IAClCuD,eADkC,GACgBvD,OADhB,CAClCuD,eADkC;IACjBC,uBADiB,GACgBxD,OADhB,CACjBwD,uBADiB;IACQC,IADR,GACgBzD,OADhB,CACQyD,IADR;EAGzC,IAAMlB,IAAI,GAAA,aAAA,CAAA,aAAA,CAAA,CAAA,CAAA,EACLK,UAAU,CAACX,KAAD,CADL,CAAA,EAAA,CAAA,CAAA,EAAA;IAERyB,oBAAoB,EAClB,CAACH,eAAe,IAAI,EAApB,MAA4B,EAA5B,GAAiCA,eAAjC,GAAmDC,uBAH7C;IAIRC,IAAI,EAAJA;EAJQ,CAAA,CAAV;EAOA,IAAMvC,QAAQ,GAAG,IAAIH,OAAAA,CAAAA,IAAJ,CAAS,CAAC,CAAA,CAAA,EAAA,cAAA,CAAA,eAAA,EAAgBwB,IAAhB,CAAD,CAAT,EAAkC;IAACvB,IAAI,EAAE;EAAP,CAAlC,CAAjB;EACAC,YAAY,CAACC,QAAD,EAAWe,KAAK,CAACoB,OAANpB,GAAAA,EAAAA,CAAAA,MAAAA,CAAmBA,KAAK,CAACoB,OAAzBpB,EAAAA,OAAAA,CAAAA,GAA0C3E,iBAArD,CAAZ2D;AACD;AAEM,SAAS0C,UAAT,CAAoB1B,KAApB,EAA2B2B,MAA3B,EAAmC;EAAA,IACjCd,QADiC,GACZb,KADY,CACjCa,QADiC;IACvBO,OADuB,GACZpB,KADY,CACvBoB,OADuB;EAAA,IAEjCQ,QAFiC,GAErBf,QAFqB,CAEjCe,QAFiC;EAAA,IAGjCC,eAHiC,GAGMF,MAHN,CAGjCE,eAHiC;IAGhBC,QAHgB,GAGMH,MAHN,CAGhBG,QAHgB;IAGNC,QAHM,GAGMJ,MAHN,CAGNI,QAHM,CAAA,CAIxC;;EACA,IAAM9B,QAAQ,GAAGmB,OAAO,GAAGA,OAAH,GAAa7F,iBAArC;EACA,IAAMyG,gBAAgB,GAAGJ,QAAQ,CAACC,eAAD,CAARD,GACrB,CAACA,QAAQ,CAACC,eAAD,CAAT,CADqBD,GAErBK,MAAM,CAACC,MAAPD,CAAcL,QAAdK,CAFJ;EAGA,IAAI,CAACD,gBAAgB,CAACvD,MAAtB,EAA8B;IAC5B;IACA;EACD;EAEDuD,gBAAgB,CAACG,OAAjBH,CAAyB,UAAA,YAAY,EAAI;IAAA,IAChCI,aADgC,GACqBI,YADrB,CAChCJ,aADgC;MACjBC,MADiB,GACqBG,YADrB,CACjBH,MADiB;MACTC,KADS,GACqBE,YADrB,CACTF,KADS;MAAA,qBAAA,GACqBE,YADrB,CACFD,cADE;MACFA,cADE,GAAA,qBAAA,KAAA,KAAA,CAAA,GACe,EADf,GAAA,qBAAA;IAEvC,IAAME,QAAQ,GAAGV,QAAQ,GACrB,CAAA,CAAA,EAAA,mBAAA,CAAA,0BAAA,EAA2BK,aAA3B,EAA0CG,cAA1C,CADqB,GAErBH,aAFJ,CAFuC,CAMvC;;IACA,QAAQN,QAAR;MACE,KAAKY,gBAAAA,CAAAA,gBAAAA,CAAiBC,GAAtB;QAA2B;UACzB,IAAMC,GAAG,GAAG,CAAA,CAAA,EAAA,cAAA,CAAA,SAAA,EAAUH,QAAV,EAAoBJ,MAApB,CAAZ;UAEA,IAAMpD,QAAQ,GAAG,IAAIH,OAAAA,CAAAA,IAAJ,CAAS,CAAC8D,GAAD,CAAT,EAAgB;YAAC7D,IAAI,EAAE;UAAP,CAAhB,CAAjB;UACAC,YAAY,CAACC,QAAD,EAAA,EAAA,CAAA,MAAA,CAAcgB,QAAd,EAAA,GAAA,CAAA,CAAA,MAAA,CAA0BqC,KAA1B,EAAA,MAAA,CAAA,CAAZtD;UACA;QACD;MACD;;MACA;QACE;IAAA;EAEL,CAnBDgD,CAAAA;AAoBD;AAEM,SAASa,SAAT,CAAmB7C,KAAnB,EAA0B2B,MAA1B,EAAkC;EAAA,IAChCzB,YADgC,GAChBF,KAAK,CAACG,OAANH,CAAcD,WADE,CAChCG,YADgC;EAEvC,IAAM4C,SAAS,GAAG5C,YAAY,GAAGhC,aAAa,CAACgC,YAAD,CAAhB,GAAiC,IAA/D;EACA,IAAMa,SAAS,GAAGJ,UAAU,CAACX,KAAD,EAAQ2B,MAAR,CAA5B;EAEA,OAAO;IACLR,GAAG,EAAEJ,SADA;IAEL+B,SAAS,EAATA;EAFK,CAAP;AAID;AAED,IAAMC,SAAS,GAAG;EAChBhD,WAAW,EAAXA,WADgB;EAEhBmB,UAAU,EAAVA,UAFgB;EAGhBG,UAAU,EAAVA,UAHgB;EAIhBK,UAAU,EAAVA;AAJgB,CAAlB;eAOeqB,S","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// @ts-nocheck\nimport domtoimage from 'utils/dom-to-image';\nimport {Blob, URL, atob, Uint8Array, ArrayBuffer, document} from 'global/window';\nimport {\n  EXPORT_IMG_RESOLUTION_OPTIONS,\n  EXPORT_IMG_RATIO_OPTIONS,\n  RESOLUTIONS,\n  EXPORT_IMG_RATIOS,\n  EXPORT_DATA_TYPE\n} from 'constants/default-settings';\nimport {exportMapToHTML} from 'templates/export-map-html';\nimport {formatCsv} from 'processors/data-processor';\nimport get from 'lodash.get';\nimport {set, generateHashId} from 'utils/utils';\n\nimport {createIndexedDataContainer} from './table-utils/data-container-utils';\n\n/**\n * Default file names\n */\nexport const DEFAULT_IMAGE_NAME = 'kepler.gl.png';\nexport const DEFAULT_HTML_NAME = 'kepler.gl.html';\nexport const DEFAULT_JSON_NAME = 'kepler.gl.json';\nexport const DEFAULT_DATA_NAME = 'kepler.gl';\n\n/**\n * Default json export settings\n * @type {{hasData: boolean}}\n */\nexport const DEFAULT_EXPORT_JSON_SETTINGS = {\n  hasData: true\n};\n\nconst defaultResolution = EXPORT_IMG_RESOLUTION_OPTIONS.find(op => op.id === RESOLUTIONS.ONE_X);\n\nconst defaultRatio = EXPORT_IMG_RATIO_OPTIONS.find(op => op.id === EXPORT_IMG_RATIOS.FOUR_BY_THREE);\n\nexport function isMSEdge(window) {\n  return Boolean(window.navigator && window.navigator.msSaveOrOpenBlob);\n}\n\nexport function getScaleFromImageSize(imageW = 0, imageH = 0, mapW = 0, mapH = 0) {\n  if ([imageW, imageH, mapW, mapH].some(d => d <= 0)) {\n    return 1;\n  }\n\n  const base = imageW / imageH > 1 ? imageW : imageH;\n  const mapBase = imageW / imageH > 1 ? mapW : mapH;\n  return base / mapBase;\n}\n\nexport function calculateExportImageSize({mapW, mapH, ratio, resolution}) {\n  if (mapW <= 0 || mapH <= 0) {\n    return null;\n  }\n\n  const ratioItem = EXPORT_IMG_RATIO_OPTIONS.find(op => op.id === ratio) || defaultRatio;\n\n  const resolutionItem =\n    EXPORT_IMG_RESOLUTION_OPTIONS.find(op => op.id === resolution) || defaultResolution;\n\n  const {width: scaledWidth, height: scaledHeight} = resolutionItem.getSize(mapW, mapH);\n\n  const {width: imageW, height: imageH} = ratioItem.getSize(scaledWidth, scaledHeight);\n\n  const {scale} = ratioItem.id === EXPORT_IMG_RATIOS.CUSTOM ? {} : resolutionItem;\n\n  return {\n    scale,\n    imageW,\n    imageH\n  };\n}\n\nexport function convertToPng(sourceElem, options) {\n  return domtoimage.toPng(sourceElem, options);\n}\n\nexport function dataURItoBlob(dataURI) {\n  const binary = atob(dataURI.split(',')[1]);\n\n  // separate out the mime component\n  const mimeString = dataURI\n    .split(',')[0]\n    .split(':')[1]\n    .split(';')[0];\n\n  // write the bytes of the string to an ArrayBuffer\n  const ab = new ArrayBuffer(binary.length);\n\n  // create a view into the buffer\n  const ia = new Uint8Array(ab);\n\n  for (let i = 0; i < binary.length; i++) {\n    ia[i] = binary.charCodeAt(i);\n  }\n\n  return new Blob([ab], {type: mimeString});\n}\n\nexport function downloadFile(fileBlob, fileName) {\n  if (isMSEdge(window)) {\n    window.navigator.msSaveOrOpenBlob(fileBlob, fileName);\n  } else {\n    const url = URL.createObjectURL(fileBlob);\n\n    const link = document.createElement('a');\n    link.setAttribute('href', url);\n    link.setAttribute('download', fileName);\n\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  }\n}\n\nexport function exportImage(state, filename = DEFAULT_IMAGE_NAME) {\n  const {imageDataUri} = state.uiState.exportImage;\n  if (imageDataUri) {\n    const file = dataURItoBlob(imageDataUri);\n    downloadFile(file, filename);\n  }\n}\n\nexport function exportToJsonString(data) {\n  try {\n    return JSON.stringify(data);\n  } catch (e) {\n    return e.description;\n  }\n}\n\nexport function getMapJSON(state, options = DEFAULT_EXPORT_JSON_SETTINGS) {\n  const {hasData} = options;\n  const schema = state.visState.schema;\n\n  if (!hasData) {\n    return schema.getConfigToSave(state);\n  }\n\n  let mapToSave = schema.save(state);\n  // add file name if title is not provided\n  const title = get(mapToSave, ['info', 'title']);\n  if (!title || !title.length) {\n    mapToSave = set(['info', 'title'], `keplergl_${generateHashId(6)}`, mapToSave);\n  }\n  return mapToSave;\n}\n\nexport function exportJson(state, options = {}) {\n  const map = getMapJSON(state, options);\n\n  const fileBlob = new Blob([exportToJsonString(map)], {type: 'application/json'});\n  const fileName = state.appName ? `${state.appName}.json` : DEFAULT_JSON_NAME;\n  downloadFile(fileBlob, fileName);\n}\n\nexport function exportHtml(state, options) {\n  const {userMapboxToken, exportMapboxAccessToken, mode} = options;\n\n  const data = {\n    ...getMapJSON(state),\n    mapboxApiAccessToken:\n      (userMapboxToken || '') !== '' ? userMapboxToken : exportMapboxAccessToken,\n    mode\n  };\n\n  const fileBlob = new Blob([exportMapToHTML(data)], {type: 'text/html'});\n  downloadFile(fileBlob, state.appName ? `${state.appName}.html` : DEFAULT_HTML_NAME);\n}\n\nexport function exportData(state, option) {\n  const {visState, appName} = state;\n  const {datasets} = visState;\n  const {selectedDataset, dataType, filtered} = option;\n  // get the selected data\n  const filename = appName ? appName : DEFAULT_DATA_NAME;\n  const selectedDatasets = datasets[selectedDataset]\n    ? [datasets[selectedDataset]]\n    : Object.values(datasets);\n  if (!selectedDatasets.length) {\n    // error: selected dataset not found.\n    return;\n  }\n\n  selectedDatasets.forEach(selectedData => {\n    const {dataContainer, fields, label, filteredIdxCPU = []} = selectedData;\n    const toExport = filtered\n      ? createIndexedDataContainer(dataContainer, filteredIdxCPU)\n      : dataContainer;\n\n    // start to export data according to selected data type\n    switch (dataType) {\n      case EXPORT_DATA_TYPE.CSV: {\n        const csv = formatCsv(toExport, fields);\n\n        const fileBlob = new Blob([csv], {type: 'text/csv'});\n        downloadFile(fileBlob, `${filename}_${label}.csv`);\n        break;\n      }\n      // TODO: support more file types.\n      default:\n        break;\n    }\n  });\n}\n\nexport function exportMap(state, option) {\n  const {imageDataUri} = state.uiState.exportImage;\n  const thumbnail = imageDataUri ? dataURItoBlob(imageDataUri) : null;\n  const mapToSave = getMapJSON(state, option);\n\n  return {\n    map: mapToSave,\n    thumbnail\n  };\n}\n\nconst exporters = {\n  exportImage,\n  exportJson,\n  exportHtml,\n  exportData\n};\n\nexport default exporters;\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactVis = require(\"react-vis\");\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\nvar _dataUtils = require(\"../../utils/data-utils\");\nvar _templateObject, _templateObject2;\nvar LineChartWrapper = _styledComponents[\"default\"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  .rv-xy-plot {\\n    /* important for rendering hint */\\n    position: relative;\\n  }\\n  .rv-xy-plot__inner {\\n    /* important to show axis */\\n    overflow: visible;\\n  }\\n\\n  .rv-xy-plot__grid-lines__line {\\n    stroke: \", \";\\n    stroke-dasharray: 1px 4px;\\n  }\\n\\n  .rv-xy-plot__axis__tick__text {\\n    font-size: 9px;\\n    fill: \", \";\\n  }\\n\"])), function (props) {\n  return props.theme.histogramFillOutRange;\n}, function (props) {\n  return props.theme.textColor;\n});\nvar StyledHint = _styledComponents[\"default\"].div(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  background-color: #d3d8e0;\\n  border-radius: 2px;\\n  color: \", \";\\n  font-size: 9px;\\n  margin: 4px;\\n  padding: 3px 6px;\\n  pointer-events: none;\\n  user-select: none;\\n\"])), function (props) {\n  return props.theme.textColorLT;\n});\nvar HintContent = function HintContent(_ref) {\n  var x = _ref.x,\n    y = _ref.y,\n    format = _ref.format;\n  return /*#__PURE__*/_react[\"default\"].createElement(StyledHint, null, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"hint--x\"\n  }, format(x)), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"row\"\n  }, y));\n};\nvar MARGIN = {\n  top: 0,\n  bottom: 0,\n  left: 0,\n  right: 0\n};\nfunction LineChartFactory() {\n  var LineChart = function LineChart(_ref2) {\n    var brushComponent = _ref2.brushComponent,\n      brushing = _ref2.brushing,\n      color = _ref2.color,\n      enableChartHover = _ref2.enableChartHover,\n      height = _ref2.height,\n      hoveredDP = _ref2.hoveredDP,\n      isEnlarged = _ref2.isEnlarged,\n      lineChart = _ref2.lineChart,\n      margin = _ref2.margin,\n      onMouseMove = _ref2.onMouseMove,\n      width = _ref2.width,\n      timezone = _ref2.timezone,\n      timeFormat = _ref2.timeFormat;\n    var series = lineChart.series,\n      yDomain = lineChart.yDomain;\n    var brushData = (0, _react.useMemo)(function () {\n      return [{\n        x: series[0].x,\n        y: yDomain[1],\n        customComponent: function customComponent() {\n          return brushComponent;\n        }\n      }];\n    }, [series, yDomain, brushComponent]);\n    var hintFormatter = (0, _react.useMemo)(function () {\n      return (0, _dataUtils.datetimeFormatter)(timezone)(timeFormat);\n    }, [timezone, timeFormat]);\n    return /*#__PURE__*/_react[\"default\"].createElement(LineChartWrapper, {\n      style: {\n        marginTop: \"\".concat(margin.top, \"px\")\n      }\n    }, /*#__PURE__*/_react[\"default\"].createElement(_reactVis.XYPlot, {\n      xType: \"time\",\n      width: width,\n      height: height,\n      margin: MARGIN,\n      onMouseLeave: function onMouseLeave() {\n        onMouseMove(null);\n      }\n    }, /*#__PURE__*/_react[\"default\"].createElement(_reactVis.HorizontalGridLines, {\n      tickTotal: 3\n    }), /*#__PURE__*/_react[\"default\"].createElement(_reactVis.LineSeries, {\n      style: {\n        fill: 'none'\n      },\n      strokeWidth: 2,\n      color: color,\n      data: series,\n      onNearestX: enableChartHover ? onMouseMove : null\n    }), /*#__PURE__*/_react[\"default\"].createElement(_reactVis.MarkSeries, {\n      data: hoveredDP ? [hoveredDP] : [],\n      color: color,\n      size: 3\n    }), /*#__PURE__*/_react[\"default\"].createElement(_reactVis.CustomSVGSeries, {\n      data: brushData\n    }), isEnlarged && /*#__PURE__*/_react[\"default\"].createElement(_reactVis.YAxis, {\n      tickTotal: 3\n    }), hoveredDP && enableChartHover && !brushing ? /*#__PURE__*/_react[\"default\"].createElement(_reactVis.Hint, {\n      value: hoveredDP\n    }, /*#__PURE__*/_react[\"default\"].createElement(HintContent, (0, _extends2[\"default\"])({}, hoveredDP, {\n      format: hintFormatter\n    }))) : null));\n  };\n  return LineChart;\n}\nvar _default = LineChartFactory;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../src/components/common/line-chart.js"],"names":["LineChartWrapper","styled","div","props","theme","histogramFillOutRange","textColor","StyledHint","textColorLT","HintContent","x","y","format","MARGIN","top","bottom","left","right","LineChartFactory","LineChart","brushComponent","brushing","color","enableChartHover","height","hoveredDP","isEnlarged","lineChart","margin","onMouseMove","width","timezone","timeFormat","series","yDomain","brushData","customComponent","hintFormatter","marginTop","fill"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {useMemo} from 'react';\nimport {\n  HorizontalGridLines,\n  LineSeries,\n  XYPlot,\n  CustomSVGSeries,\n  Hint,\n  YAxis,\n  MarkSeries\n} from 'react-vis';\nimport styled from 'styled-components';\nimport {datetimeFormatter} from 'utils/data-utils';\n\nconst LineChartWrapper = styled.div`\n  .rv-xy-plot {\n    /* important for rendering hint */\n    position: relative;\n  }\n  .rv-xy-plot__inner {\n    /* important to show axis */\n    overflow: visible;\n  }\n\n  .rv-xy-plot__grid-lines__line {\n    stroke: ${props => props.theme.histogramFillOutRange};\n    stroke-dasharray: 1px 4px;\n  }\n\n  .rv-xy-plot__axis__tick__text {\n    font-size: 9px;\n    fill: ${props => props.theme.textColor};\n  }\n`;\n\nconst StyledHint = styled.div`\n  background-color: #d3d8e0;\n  border-radius: 2px;\n  color: ${props => props.theme.textColorLT};\n  font-size: 9px;\n  margin: 4px;\n  padding: 3px 6px;\n  pointer-events: none;\n  user-select: none;\n`;\n\nconst HintContent = ({x, y, format}) => (\n  <StyledHint>\n    <div className=\"hint--x\">{format(x)}</div>\n    <div className=\"row\">{y}</div>\n  </StyledHint>\n);\n\nconst MARGIN = {top: 0, bottom: 0, left: 0, right: 0};\nfunction LineChartFactory() {\n  const LineChart = ({\n    brushComponent,\n    brushing,\n    color,\n    enableChartHover,\n    height,\n    hoveredDP,\n    isEnlarged,\n    lineChart,\n    margin,\n    onMouseMove,\n    width,\n    timezone,\n    timeFormat\n  }) => {\n    const {series, yDomain} = lineChart;\n\n    const brushData = useMemo(() => {\n      return [{x: series[0].x, y: yDomain[1], customComponent: () => brushComponent}];\n    }, [series, yDomain, brushComponent]);\n    const hintFormatter = useMemo(() => datetimeFormatter(timezone)(timeFormat), [\n      timezone,\n      timeFormat\n    ]);\n\n    return (\n      <LineChartWrapper style={{marginTop: `${margin.top}px`}}>\n        <XYPlot\n          xType=\"time\"\n          width={width}\n          height={height}\n          margin={MARGIN}\n          onMouseLeave={() => {\n            onMouseMove(null);\n          }}\n        >\n          <HorizontalGridLines tickTotal={3} />\n          <LineSeries\n            style={{fill: 'none'}}\n            strokeWidth={2}\n            color={color}\n            data={series}\n            onNearestX={enableChartHover ? onMouseMove : null}\n          />\n          <MarkSeries data={hoveredDP ? [hoveredDP] : []} color={color} size={3} />\n          <CustomSVGSeries data={brushData} />\n          {isEnlarged && <YAxis tickTotal={3} />}\n          {hoveredDP && enableChartHover && !brushing ? (\n            <Hint value={hoveredDP}>\n              <HintContent {...hoveredDP} format={hintFormatter} />\n            </Hint>\n          ) : null}\n        </XYPlot>\n      </LineChartWrapper>\n    );\n  };\n  return LineChart;\n}\n\nexport default LineChartFactory;\n"]},"metadata":{},"sourceType":"script"}
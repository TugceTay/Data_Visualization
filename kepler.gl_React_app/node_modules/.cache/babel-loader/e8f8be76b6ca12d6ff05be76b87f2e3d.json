{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\nvar _logo = _interopRequireDefault(require(\"../common/logo\"));\nvar _splitMapButton = _interopRequireDefault(require(\"./split-map-button\"));\nvar _toggle3dButton = _interopRequireDefault(require(\"./toggle-3d-button\"));\nvar _layerSelectorPanel = _interopRequireDefault(require(\"./layer-selector-panel\"));\nvar _mapLegendPanel = _interopRequireDefault(require(\"./map-legend-panel\"));\nvar _mapDrawPanel = _interopRequireDefault(require(\"./map-draw-panel\"));\nvar _localePanel = _interopRequireDefault(require(\"./locale-panel\"));\nvar _templateObject;\nvar StyledMapControl = _styledComponents[\"default\"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  right: 0;\\n  padding: \", \"px;\\n  z-index: 10;\\n  margin-top: \", \"px;\\n  position: absolute;\\n  display: grid;\\n  row-gap: 8px;\\n  justify-items: end;\\n  pointer-events: none; /* prevent padding from blocking input */\\n  & > * {\\n    /* all children should allow input */\\n    pointer-events: all;\\n  }\\n\"])), function (props) {\n  return props.theme.mapControl.padding;\n}, function (props) {\n  return props.top || 0;\n});\nvar LegendLogo = /*#__PURE__*/_react[\"default\"].createElement(_logo[\"default\"], {\n  version: false,\n  appName: \"kepler.gl\"\n});\nMapControlFactory.deps = [_mapDrawPanel[\"default\"], _toggle3dButton[\"default\"], _splitMapButton[\"default\"], _mapLegendPanel[\"default\"], _layerSelectorPanel[\"default\"], _localePanel[\"default\"]];\nfunction MapControlFactory(MapDrawPanel, Toggle3dButton, SplitMapButton, MapLegendPanel, LayerSelectorPanel, LocalePanel) {\n  var DEFAULT_ACTIONS = [SplitMapButton, LayerSelectorPanel, Toggle3dButton, MapLegendPanel, MapDrawPanel, LocalePanel];\n  /** @type {import('./map-control').MapControl} */\n\n  var MapControl = function MapControl(_ref) {\n    var _ref$actionComponents = _ref.actionComponents,\n      actionComponents = _ref$actionComponents === void 0 ? DEFAULT_ACTIONS : _ref$actionComponents,\n      props = (0, _objectWithoutProperties2[\"default\"])(_ref, [\"actionComponents\"]);\n    return /*#__PURE__*/_react[\"default\"].createElement(StyledMapControl, {\n      className: \"map-control\",\n      top: props.top\n    }, actionComponents.map(function (ActionComponent, index) {\n      return /*#__PURE__*/_react[\"default\"].createElement(ActionComponent, (0, _extends2[\"default\"])({\n        key: index,\n        className: \"map-control-action\"\n      }, props));\n    }));\n  };\n  MapControl.defaultProps = {\n    isSplit: false,\n    top: 0,\n    mapIndex: 0,\n    logoComponent: LegendLogo\n  };\n  MapControl.displayName = 'MapControl';\n  return /*#__PURE__*/_react[\"default\"].memo(MapControl);\n}\nvar _default = MapControlFactory;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../src/components/map/map-control.js"],"names":["StyledMapControl","styled","div","props","theme","mapControl","padding","top","LegendLogo","MapControlFactory","deps","MapDrawPanelFactory","Toggle3dButtonFactory","SplitMapButtonFactory","MapLegendPanelFactory","LayerSelectorPanelFactory","LocalePanelFactory","MapDrawPanel","Toggle3dButton","SplitMapButton","MapLegendPanel","LayerSelectorPanel","LocalePanel","DEFAULT_ACTIONS","MapControl","actionComponents","map","ActionComponent","index","defaultProps","isSplit","mapIndex","logoComponent","displayName","React","memo"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport KeplerGlLogo from 'components/common/logo';\n\n// factories\nimport SplitMapButtonFactory from './split-map-button';\nimport Toggle3dButtonFactory from './toggle-3d-button';\nimport LayerSelectorPanelFactory from './layer-selector-panel';\nimport MapLegendPanelFactory from './map-legend-panel';\nimport MapDrawPanelFactory from './map-draw-panel';\nimport LocalePanelFactory from './locale-panel';\n\nconst StyledMapControl = styled.div`\n  right: 0;\n  padding: ${props => props.theme.mapControl.padding}px;\n  z-index: 10;\n  margin-top: ${props => props.top || 0}px;\n  position: absolute;\n  display: grid;\n  row-gap: 8px;\n  justify-items: end;\n  pointer-events: none; /* prevent padding from blocking input */\n  & > * {\n    /* all children should allow input */\n    pointer-events: all;\n  }\n`;\n\nconst LegendLogo = <KeplerGlLogo version={false} appName=\"kepler.gl\" />;\n\nMapControlFactory.deps = [\n  MapDrawPanelFactory,\n  Toggle3dButtonFactory,\n  SplitMapButtonFactory,\n  MapLegendPanelFactory,\n  LayerSelectorPanelFactory,\n  LocalePanelFactory\n];\n\nfunction MapControlFactory(\n  MapDrawPanel,\n  Toggle3dButton,\n  SplitMapButton,\n  MapLegendPanel,\n  LayerSelectorPanel,\n  LocalePanel\n) {\n  const DEFAULT_ACTIONS = [\n    SplitMapButton,\n    LayerSelectorPanel,\n    Toggle3dButton,\n    MapLegendPanel,\n    MapDrawPanel,\n    LocalePanel\n  ];\n\n  /** @type {import('./map-control').MapControl} */\n  const MapControl = ({actionComponents = DEFAULT_ACTIONS, ...props}) => {\n    return (\n      <StyledMapControl className=\"map-control\" top={props.top}>\n        {actionComponents.map((ActionComponent, index) => (\n          <ActionComponent key={index} className=\"map-control-action\" {...props} />\n        ))}\n      </StyledMapControl>\n    );\n  };\n\n  MapControl.defaultProps = {\n    isSplit: false,\n    top: 0,\n    mapIndex: 0,\n    logoComponent: LegendLogo\n  };\n\n  MapControl.displayName = 'MapControl';\n\n  return React.memo(MapControl);\n}\n\nexport default MapControlFactory;\n"]},"metadata":{},"sourceType":"script"}
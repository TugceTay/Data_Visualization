{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = LayerConfiguratorFactory;\nexports.ChannelByValueSelectorFactory = ChannelByValueSelectorFactory;\nexports.AggregationTypeSelector = exports.AggrScaleSelector = exports.LayerColorRangeSelector = exports.ArcLayerColorSelector = exports.LayerColorSelector = exports.HowToButton = exports.getLayerChannelConfigProps = exports.getVisConfiguratorProps = exports.getLayerConfiguratorProps = exports.getLayerDataset = exports.getLayerFields = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\nvar _localization = require(\"../../../localization\");\nvar _styledComponents2 = require(\"../../common/styled-components\");\nvar _itemSelector = _interopRequireDefault(require(\"../../common/item-selector/item-selector\"));\nvar _visConfigByFieldSelector = _interopRequireDefault(require(\"./vis-config-by-field-selector\"));\nvar _layerColumnConfig = _interopRequireDefault(require(\"./layer-column-config\"));\nvar _layerTypeSelector = _interopRequireDefault(require(\"./layer-type-selector\"));\nvar _dimensionScaleSelector = _interopRequireDefault(require(\"./dimension-scale-selector\"));\nvar _colorSelector = _interopRequireDefault(require(\"./color-selector\"));\nvar _sourceDataSelector = _interopRequireDefault(require(\"../common/source-data-selector\"));\nvar _visConfigSwitch = _interopRequireDefault(require(\"./vis-config-switch\"));\nvar _visConfigSlider = _interopRequireDefault(require(\"./vis-config-slider\"));\nvar _layerConfigGroup = _interopRequireWildcard(require(\"./layer-config-group\"));\nvar _textLabelPanel = _interopRequireDefault(require(\"./text-label-panel\"));\nvar _utils = require(\"../../../utils/utils\");\nvar _defaultSettings = require(\"../../../constants/default-settings\");\nvar _types = require(\"../../../layers/types\");\nvar _templateObject, _templateObject2, _templateObject3;\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar StyledLayerConfigurator = _styledComponents[\"default\"].div.attrs({\n  className: 'layer-panel__config'\n})(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  position: relative;\\n  margin-top: \", \";\\n  padding: \", \";\\n  border-left: \", \" dashed\\n    \", \";\\n\"])), function (props) {\n  return props.theme.layerConfiguratorMargin;\n}, function (props) {\n  return props.theme.layerConfiguratorPadding;\n}, function (props) {\n  return props.theme.layerConfiguratorBorder;\n}, function (props) {\n  return props.theme.layerConfiguratorBorderColor;\n});\nvar StyledLayerVisualConfigurator = _styledComponents[\"default\"].div.attrs({\n  className: 'layer-panel__config__visualC-config'\n})(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  margin-top: 12px;\\n\"])));\nvar getLayerFields = function getLayerFields(datasets, layer) {\n  return layer.config && datasets[layer.config.dataId] ? datasets[layer.config.dataId].fields : [];\n};\nexports.getLayerFields = getLayerFields;\nvar getLayerDataset = function getLayerDataset(datasets, layer) {\n  return layer.config && datasets[layer.config.dataId] ? datasets[layer.config.dataId] : null;\n};\nexports.getLayerDataset = getLayerDataset;\nvar getLayerConfiguratorProps = function getLayerConfiguratorProps(props) {\n  return {\n    layer: props.layer,\n    fields: getLayerFields(props.datasets, props.layer),\n    onChange: props.updateLayerConfig,\n    setColorUI: props.updateLayerColorUI\n  };\n};\nexports.getLayerConfiguratorProps = getLayerConfiguratorProps;\nvar getVisConfiguratorProps = function getVisConfiguratorProps(props) {\n  return {\n    layer: props.layer,\n    fields: getLayerFields(props.datasets, props.layer),\n    onChange: props.updateLayerVisConfig,\n    setColorUI: props.updateLayerColorUI\n  };\n};\nexports.getVisConfiguratorProps = getVisConfiguratorProps;\nvar getLayerChannelConfigProps = function getLayerChannelConfigProps(props) {\n  return {\n    layer: props.layer,\n    fields: getLayerFields(props.datasets, props.layer),\n    onChange: props.updateLayerVisualChannelConfig\n  };\n};\nexports.getLayerChannelConfigProps = getLayerChannelConfigProps;\nLayerConfiguratorFactory.deps = [_sourceDataSelector[\"default\"], _visConfigSlider[\"default\"], _textLabelPanel[\"default\"], _layerConfigGroup[\"default\"], ChannelByValueSelectorFactory, _layerColumnConfig[\"default\"], _layerTypeSelector[\"default\"], _visConfigSwitch[\"default\"]];\nfunction LayerConfiguratorFactory(SourceDataSelector, VisConfigSlider, TextLabelPanel, LayerConfigGroup, ChannelByValueSelector, LayerColumnConfig, LayerTypeSelector, VisConfigSwitch) {\n  var LayerConfigurator = /*#__PURE__*/function (_Component) {\n    (0, _inherits2[\"default\"])(LayerConfigurator, _Component);\n    var _super = _createSuper(LayerConfigurator);\n    function LayerConfigurator() {\n      (0, _classCallCheck2[\"default\"])(this, LayerConfigurator);\n      return _super.apply(this, arguments);\n    }\n    (0, _createClass2[\"default\"])(LayerConfigurator, [{\n      key: \"_renderPointLayerConfig\",\n      value: function _renderPointLayerConfig(props) {\n        return this._renderScatterplotLayerConfig(props);\n      }\n    }, {\n      key: \"_renderIconLayerConfig\",\n      value: function _renderIconLayerConfig(props) {\n        return this._renderScatterplotLayerConfig(props);\n      }\n    }, {\n      key: \"_renderScatterplotLayerConfig\",\n      value: function _renderScatterplotLayerConfig(_ref) {\n        var layer = _ref.layer,\n          visConfiguratorProps = _ref.visConfiguratorProps,\n          layerChannelConfigProps = _ref.layerChannelConfigProps,\n          layerConfiguratorProps = _ref.layerConfiguratorProps;\n        return /*#__PURE__*/_react[\"default\"].createElement(StyledLayerVisualConfigurator, null, /*#__PURE__*/_react[\"default\"].createElement(LayerConfigGroup, (0, _extends2[\"default\"])({}, layer.visConfigSettings.filled || {\n          label: 'layer.color'\n        }, visConfiguratorProps, {\n          collapsible: true\n        }), layer.config.colorField ? /*#__PURE__*/_react[\"default\"].createElement(LayerColorRangeSelector, visConfiguratorProps) : /*#__PURE__*/_react[\"default\"].createElement(LayerColorSelector, layerConfiguratorProps), /*#__PURE__*/_react[\"default\"].createElement(_layerConfigGroup.ConfigGroupCollapsibleContent, null, /*#__PURE__*/_react[\"default\"].createElement(ChannelByValueSelector, (0, _extends2[\"default\"])({\n          channel: layer.visualChannels.color\n        }, layerChannelConfigProps)), /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.opacity, visConfiguratorProps)))), layer.type === _types.LAYER_TYPES.point ? /*#__PURE__*/_react[\"default\"].createElement(LayerConfigGroup, (0, _extends2[\"default\"])({}, layer.visConfigSettings.outline, visConfiguratorProps, {\n          collapsible: true\n        }), layer.config.strokeColorField ? /*#__PURE__*/_react[\"default\"].createElement(LayerColorRangeSelector, (0, _extends2[\"default\"])({}, visConfiguratorProps, {\n          property: \"strokeColorRange\"\n        })) : /*#__PURE__*/_react[\"default\"].createElement(LayerColorSelector, (0, _extends2[\"default\"])({}, visConfiguratorProps, {\n          selectedColor: layer.config.visConfig.strokeColor,\n          property: \"strokeColor\"\n        })), /*#__PURE__*/_react[\"default\"].createElement(_layerConfigGroup.ConfigGroupCollapsibleContent, null, /*#__PURE__*/_react[\"default\"].createElement(ChannelByValueSelector, (0, _extends2[\"default\"])({\n          channel: layer.visualChannels.strokeColor\n        }, layerChannelConfigProps)), /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.thickness, visConfiguratorProps, {\n          disabled: !layer.config.visConfig.outline\n        })))) : null, /*#__PURE__*/_react[\"default\"].createElement(LayerConfigGroup, {\n          label: 'layer.radius',\n          collapsible: true\n        }, !layer.config.sizeField ? /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.radius, visConfiguratorProps, {\n          label: false,\n          disabled: Boolean(layer.config.sizeField)\n        })) : /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.radiusRange, visConfiguratorProps, {\n          label: false,\n          disabled: !layer.config.sizeField || layer.config.visConfig.fixedRadius\n        })), /*#__PURE__*/_react[\"default\"].createElement(_layerConfigGroup.ConfigGroupCollapsibleContent, null, /*#__PURE__*/_react[\"default\"].createElement(ChannelByValueSelector, (0, _extends2[\"default\"])({\n          channel: layer.visualChannels.size\n        }, layerChannelConfigProps)), layer.config.sizeField ? /*#__PURE__*/_react[\"default\"].createElement(VisConfigSwitch, (0, _extends2[\"default\"])({}, layer.visConfigSettings.fixedRadius, visConfiguratorProps)) : null)), /*#__PURE__*/_react[\"default\"].createElement(TextLabelPanel, {\n          fields: visConfiguratorProps.fields,\n          updateLayerTextLabel: this.props.updateLayerTextLabel,\n          textLabel: layer.config.textLabel,\n          colorPalette: visConfiguratorProps.colorPalette,\n          setColorPaletteUI: visConfiguratorProps.setColorPaletteUI\n        }));\n      }\n    }, {\n      key: \"_renderClusterLayerConfig\",\n      value: function _renderClusterLayerConfig(_ref2) {\n        var layer = _ref2.layer,\n          visConfiguratorProps = _ref2.visConfiguratorProps,\n          layerConfiguratorProps = _ref2.layerConfiguratorProps,\n          layerChannelConfigProps = _ref2.layerChannelConfigProps;\n        return /*#__PURE__*/_react[\"default\"].createElement(StyledLayerVisualConfigurator, null, /*#__PURE__*/_react[\"default\"].createElement(LayerConfigGroup, {\n          label: 'layer.color',\n          collapsible: true\n        }, /*#__PURE__*/_react[\"default\"].createElement(LayerColorRangeSelector, visConfiguratorProps), /*#__PURE__*/_react[\"default\"].createElement(_layerConfigGroup.ConfigGroupCollapsibleContent, null, /*#__PURE__*/_react[\"default\"].createElement(AggrScaleSelector, (0, _extends2[\"default\"])({}, layerConfiguratorProps, {\n          channel: layer.visualChannels.color\n        })), /*#__PURE__*/_react[\"default\"].createElement(ChannelByValueSelector, (0, _extends2[\"default\"])({\n          channel: layer.visualChannels.color\n        }, layerChannelConfigProps)), layer.visConfigSettings.colorAggregation.condition(layer.config) ? /*#__PURE__*/_react[\"default\"].createElement(AggregationTypeSelector, (0, _extends2[\"default\"])({}, layer.visConfigSettings.colorAggregation, layerChannelConfigProps, {\n          channel: layer.visualChannels.color\n        })) : null, /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.opacity, visConfiguratorProps)))), /*#__PURE__*/_react[\"default\"].createElement(LayerConfigGroup, {\n          label: 'layer.radius',\n          collapsible: true\n        }, /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.clusterRadius, visConfiguratorProps)), /*#__PURE__*/_react[\"default\"].createElement(_layerConfigGroup.ConfigGroupCollapsibleContent, null, /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.radiusRange, visConfiguratorProps)))));\n      }\n    }, {\n      key: \"_renderHeatmapLayerConfig\",\n      value: function _renderHeatmapLayerConfig(_ref3) {\n        var layer = _ref3.layer,\n          visConfiguratorProps = _ref3.visConfiguratorProps,\n          layerConfiguratorProps = _ref3.layerConfiguratorProps,\n          layerChannelConfigProps = _ref3.layerChannelConfigProps;\n        return /*#__PURE__*/_react[\"default\"].createElement(StyledLayerVisualConfigurator, null, /*#__PURE__*/_react[\"default\"].createElement(LayerConfigGroup, {\n          label: 'layer.color',\n          collapsible: true\n        }, /*#__PURE__*/_react[\"default\"].createElement(LayerColorRangeSelector, visConfiguratorProps), /*#__PURE__*/_react[\"default\"].createElement(_layerConfigGroup.ConfigGroupCollapsibleContent, null, /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.opacity, visConfiguratorProps)))), /*#__PURE__*/_react[\"default\"].createElement(LayerConfigGroup, {\n          label: 'layer.radius'\n        }, /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.radius, visConfiguratorProps, {\n          label: false\n        }))), /*#__PURE__*/_react[\"default\"].createElement(LayerConfigGroup, {\n          label: 'layer.weight'\n        }, /*#__PURE__*/_react[\"default\"].createElement(ChannelByValueSelector, (0, _extends2[\"default\"])({\n          channel: layer.visualChannels.weight\n        }, layerChannelConfigProps))));\n      }\n    }, {\n      key: \"_renderGridLayerConfig\",\n      value: function _renderGridLayerConfig(props) {\n        return this._renderAggregationLayerConfig(props);\n      }\n    }, {\n      key: \"_renderHexagonLayerConfig\",\n      value: function _renderHexagonLayerConfig(props) {\n        return this._renderAggregationLayerConfig(props);\n      }\n    }, {\n      key: \"_renderAggregationLayerConfig\",\n      value: function _renderAggregationLayerConfig(_ref4) {\n        var layer = _ref4.layer,\n          visConfiguratorProps = _ref4.visConfiguratorProps,\n          layerConfiguratorProps = _ref4.layerConfiguratorProps,\n          layerChannelConfigProps = _ref4.layerChannelConfigProps;\n        var config = layer.config;\n        var enable3d = config.visConfig.enable3d;\n        var elevationByDescription = 'layer.elevationByDescription';\n        var colorByDescription = 'layer.colorByDescription';\n        return /*#__PURE__*/_react[\"default\"].createElement(StyledLayerVisualConfigurator, null, /*#__PURE__*/_react[\"default\"].createElement(LayerConfigGroup, {\n          label: 'layer.color',\n          collapsible: true\n        }, /*#__PURE__*/_react[\"default\"].createElement(LayerColorRangeSelector, visConfiguratorProps), /*#__PURE__*/_react[\"default\"].createElement(_layerConfigGroup.ConfigGroupCollapsibleContent, null, /*#__PURE__*/_react[\"default\"].createElement(AggrScaleSelector, (0, _extends2[\"default\"])({}, layerConfiguratorProps, {\n          channel: layer.visualChannels.color\n        })), /*#__PURE__*/_react[\"default\"].createElement(ChannelByValueSelector, (0, _extends2[\"default\"])({\n          channel: layer.visualChannels.color\n        }, layerChannelConfigProps)), layer.visConfigSettings.colorAggregation.condition(layer.config) ? /*#__PURE__*/_react[\"default\"].createElement(AggregationTypeSelector, (0, _extends2[\"default\"])({}, layer.visConfigSettings.colorAggregation, layerChannelConfigProps, {\n          description: colorByDescription,\n          channel: layer.visualChannels.color\n        })) : null, layer.visConfigSettings.percentile && layer.visConfigSettings.percentile.condition(layer.config) ? /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.percentile, visConfiguratorProps)) : null, /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.opacity, visConfiguratorProps)))), /*#__PURE__*/_react[\"default\"].createElement(LayerConfigGroup, {\n          label: 'layer.radius',\n          collapsible: true\n        }, /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.worldUnitSize, visConfiguratorProps)), /*#__PURE__*/_react[\"default\"].createElement(_layerConfigGroup.ConfigGroupCollapsibleContent, null, /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.coverage, visConfiguratorProps)))), layer.visConfigSettings.enable3d ? /*#__PURE__*/_react[\"default\"].createElement(LayerConfigGroup, (0, _extends2[\"default\"])({}, layer.visConfigSettings.enable3d, visConfiguratorProps, {\n          collapsible: true\n        }), /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.elevationScale, visConfiguratorProps, {\n          label: \"layerVisConfigs.heightMultiplier\"\n        })), /*#__PURE__*/_react[\"default\"].createElement(_layerConfigGroup.ConfigGroupCollapsibleContent, null, /*#__PURE__*/_react[\"default\"].createElement(ChannelByValueSelector, (0, _extends2[\"default\"])({}, layerChannelConfigProps, {\n          channel: layer.visualChannels.size,\n          description: elevationByDescription,\n          disabled: !enable3d\n        })), /*#__PURE__*/_react[\"default\"].createElement(AggrScaleSelector, (0, _extends2[\"default\"])({}, layerConfiguratorProps, {\n          channel: layer.visualChannels.size\n        })), /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.sizeRange, visConfiguratorProps, {\n          label: \"layerVisConfigs.heightRange\"\n        })), /*#__PURE__*/_react[\"default\"].createElement(VisConfigSwitch, (0, _extends2[\"default\"])({}, layer.visConfigSettings.enableElevationZoomFactor, visConfiguratorProps, {\n          label: \"layerVisConfigs.enableHeightZoomFactor\"\n        })), layer.visConfigSettings.sizeAggregation.condition(layer.config) ? /*#__PURE__*/_react[\"default\"].createElement(AggregationTypeSelector, (0, _extends2[\"default\"])({}, layer.visConfigSettings.sizeAggregation, layerChannelConfigProps, {\n          channel: layer.visualChannels.size\n        })) : null, layer.visConfigSettings.elevationPercentile.condition(layer.config) ? /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.elevationPercentile, visConfiguratorProps)) : null)) : null);\n      } // TODO: Shan move these into layer class\n    }, {\n      key: \"_renderHexagonIdLayerConfig\",\n      value: function _renderHexagonIdLayerConfig(_ref5) {\n        var layer = _ref5.layer,\n          visConfiguratorProps = _ref5.visConfiguratorProps,\n          layerConfiguratorProps = _ref5.layerConfiguratorProps,\n          layerChannelConfigProps = _ref5.layerChannelConfigProps;\n        return /*#__PURE__*/_react[\"default\"].createElement(StyledLayerVisualConfigurator, null, /*#__PURE__*/_react[\"default\"].createElement(LayerConfigGroup, {\n          label: 'layer.color',\n          collapsible: true\n        }, layer.config.colorField ? /*#__PURE__*/_react[\"default\"].createElement(LayerColorRangeSelector, visConfiguratorProps) : /*#__PURE__*/_react[\"default\"].createElement(LayerColorSelector, layerConfiguratorProps), /*#__PURE__*/_react[\"default\"].createElement(_layerConfigGroup.ConfigGroupCollapsibleContent, null, /*#__PURE__*/_react[\"default\"].createElement(ChannelByValueSelector, (0, _extends2[\"default\"])({\n          channel: layer.visualChannels.color\n        }, layerChannelConfigProps)), /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.opacity, visConfiguratorProps)))), /*#__PURE__*/_react[\"default\"].createElement(LayerConfigGroup, {\n          label: 'layer.coverage',\n          collapsible: true\n        }, !layer.config.coverageField ? /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.coverage, visConfiguratorProps, {\n          label: false\n        })) : /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.coverageRange, visConfiguratorProps, {\n          label: false\n        })), /*#__PURE__*/_react[\"default\"].createElement(_layerConfigGroup.ConfigGroupCollapsibleContent, null, /*#__PURE__*/_react[\"default\"].createElement(ChannelByValueSelector, (0, _extends2[\"default\"])({\n          channel: layer.visualChannels.coverage\n        }, layerChannelConfigProps)))), /*#__PURE__*/_react[\"default\"].createElement(LayerConfigGroup, (0, _extends2[\"default\"])({}, layer.visConfigSettings.enable3d, visConfiguratorProps, {\n          collapsible: true\n        }), /*#__PURE__*/_react[\"default\"].createElement(ChannelByValueSelector, (0, _extends2[\"default\"])({\n          channel: layer.visualChannels.size\n        }, layerChannelConfigProps)), /*#__PURE__*/_react[\"default\"].createElement(_layerConfigGroup.ConfigGroupCollapsibleContent, null, /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.elevationScale, visConfiguratorProps)), /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.sizeRange, visConfiguratorProps, {\n          label: \"layerVisConfigs.heightRange\"\n        })), /*#__PURE__*/_react[\"default\"].createElement(VisConfigSwitch, (0, _extends2[\"default\"])({}, layer.visConfigSettings.enableElevationZoomFactor, visConfiguratorProps)))));\n      }\n    }, {\n      key: \"_renderArcLayerConfig\",\n      value: function _renderArcLayerConfig(args) {\n        return this._renderLineLayerConfig(args);\n      }\n    }, {\n      key: \"_renderLineLayerConfig\",\n      value: function _renderLineLayerConfig(_ref6) {\n        var layer = _ref6.layer,\n          visConfiguratorProps = _ref6.visConfiguratorProps,\n          layerConfiguratorProps = _ref6.layerConfiguratorProps,\n          layerChannelConfigProps = _ref6.layerChannelConfigProps;\n        return /*#__PURE__*/_react[\"default\"].createElement(StyledLayerVisualConfigurator, null, /*#__PURE__*/_react[\"default\"].createElement(LayerConfigGroup, {\n          label: 'layer.color',\n          collapsible: true\n        }, layer.config.colorField ? /*#__PURE__*/_react[\"default\"].createElement(LayerColorRangeSelector, visConfiguratorProps) : /*#__PURE__*/_react[\"default\"].createElement(ArcLayerColorSelector, {\n          layer: layer,\n          setColorUI: layerConfiguratorProps.setColorUI,\n          onChangeConfig: layerConfiguratorProps.onChange,\n          onChangeVisConfig: visConfiguratorProps.onChange\n        }), /*#__PURE__*/_react[\"default\"].createElement(_layerConfigGroup.ConfigGroupCollapsibleContent, null, /*#__PURE__*/_react[\"default\"].createElement(ChannelByValueSelector, (0, _extends2[\"default\"])({\n          channel: layer.visualChannels.sourceColor\n        }, layerChannelConfigProps)), /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.opacity, visConfiguratorProps)))), /*#__PURE__*/_react[\"default\"].createElement(LayerConfigGroup, {\n          label: 'layer.stroke',\n          collapsible: true\n        }, layer.config.sizeField ? /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.sizeRange, visConfiguratorProps, {\n          disabled: !layer.config.sizeField,\n          label: false\n        })) : /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.thickness, visConfiguratorProps, {\n          label: false\n        })), /*#__PURE__*/_react[\"default\"].createElement(_layerConfigGroup.ConfigGroupCollapsibleContent, null, /*#__PURE__*/_react[\"default\"].createElement(ChannelByValueSelector, (0, _extends2[\"default\"])({\n          channel: layer.visualChannels.size\n        }, layerChannelConfigProps)))), layer.visConfigSettings.elevationScale ? /*#__PURE__*/_react[\"default\"].createElement(LayerConfigGroup, {\n          label: \"layerVisConfigs.elevationScale\",\n          collapsible: true\n        }, /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.elevationScale, visConfiguratorProps))) : null);\n      }\n    }, {\n      key: \"_renderTripLayerConfig\",\n      value: function _renderTripLayerConfig(_ref7) {\n        var layer = _ref7.layer,\n          visConfiguratorProps = _ref7.visConfiguratorProps,\n          layerConfiguratorProps = _ref7.layerConfiguratorProps,\n          layerChannelConfigProps = _ref7.layerChannelConfigProps;\n        var _layer$meta$featureTy = layer.meta.featureTypes,\n          featureTypes = _layer$meta$featureTy === void 0 ? {} : _layer$meta$featureTy;\n        return /*#__PURE__*/_react[\"default\"].createElement(StyledLayerVisualConfigurator, null, /*#__PURE__*/_react[\"default\"].createElement(LayerConfigGroup, {\n          label: 'layer.color',\n          collapsible: true\n        }, layer.config.colorField ? /*#__PURE__*/_react[\"default\"].createElement(LayerColorRangeSelector, visConfiguratorProps) : /*#__PURE__*/_react[\"default\"].createElement(LayerColorSelector, layerConfiguratorProps), /*#__PURE__*/_react[\"default\"].createElement(_layerConfigGroup.ConfigGroupCollapsibleContent, null, /*#__PURE__*/_react[\"default\"].createElement(ChannelByValueSelector, (0, _extends2[\"default\"])({\n          channel: layer.visualChannels.color\n        }, layerChannelConfigProps)), /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.opacity, visConfiguratorProps)))), /*#__PURE__*/_react[\"default\"].createElement(LayerConfigGroup, (0, _extends2[\"default\"])({}, visConfiguratorProps, {\n          label: \"layer.strokeWidth\",\n          collapsible: true\n        }), layer.config.sizeField ? /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.sizeRange, visConfiguratorProps, {\n          label: false\n        })) : /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.thickness, visConfiguratorProps, {\n          label: false\n        })), /*#__PURE__*/_react[\"default\"].createElement(_layerConfigGroup.ConfigGroupCollapsibleContent, null, /*#__PURE__*/_react[\"default\"].createElement(ChannelByValueSelector, (0, _extends2[\"default\"])({\n          channel: layer.visualChannels.size\n        }, layerChannelConfigProps)))), /*#__PURE__*/_react[\"default\"].createElement(LayerConfigGroup, (0, _extends2[\"default\"])({}, visConfiguratorProps, featureTypes.polygon ? layer.visConfigSettings.stroked : {}, {\n          label: \"layer.trailLength\",\n          description: \"layer.trailLengthDescription\"\n        }), /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.trailLength, visConfiguratorProps, {\n          label: false\n        }))));\n      }\n    }, {\n      key: \"_renderGeojsonLayerConfig\",\n      value: function _renderGeojsonLayerConfig(_ref8) {\n        var layer = _ref8.layer,\n          visConfiguratorProps = _ref8.visConfiguratorProps,\n          layerConfiguratorProps = _ref8.layerConfiguratorProps,\n          layerChannelConfigProps = _ref8.layerChannelConfigProps;\n        var _layer$meta$featureTy2 = layer.meta.featureTypes,\n          featureTypes = _layer$meta$featureTy2 === void 0 ? {} : _layer$meta$featureTy2,\n          visConfig = layer.config.visConfig;\n        return /*#__PURE__*/_react[\"default\"].createElement(StyledLayerVisualConfigurator, null, featureTypes.polygon || featureTypes.point ? /*#__PURE__*/_react[\"default\"].createElement(LayerConfigGroup, (0, _extends2[\"default\"])({}, layer.visConfigSettings.filled, visConfiguratorProps, {\n          label: \"layer.fillColor\",\n          collapsible: true\n        }), layer.config.colorField ? /*#__PURE__*/_react[\"default\"].createElement(LayerColorRangeSelector, visConfiguratorProps) : /*#__PURE__*/_react[\"default\"].createElement(LayerColorSelector, layerConfiguratorProps), /*#__PURE__*/_react[\"default\"].createElement(_layerConfigGroup.ConfigGroupCollapsibleContent, null, /*#__PURE__*/_react[\"default\"].createElement(ChannelByValueSelector, (0, _extends2[\"default\"])({\n          channel: layer.visualChannels.color\n        }, layerChannelConfigProps)), /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.opacity, visConfiguratorProps)))) : null, /*#__PURE__*/_react[\"default\"].createElement(LayerConfigGroup, (0, _extends2[\"default\"])({}, layer.visConfigSettings.stroked, visConfiguratorProps, {\n          label: \"layer.strokeColor\",\n          collapsible: true\n        }), layer.config.strokeColorField ? /*#__PURE__*/_react[\"default\"].createElement(LayerColorRangeSelector, (0, _extends2[\"default\"])({}, visConfiguratorProps, {\n          property: \"strokeColorRange\"\n        })) : /*#__PURE__*/_react[\"default\"].createElement(LayerColorSelector, (0, _extends2[\"default\"])({}, visConfiguratorProps, {\n          selectedColor: layer.config.visConfig.strokeColor,\n          property: \"strokeColor\"\n        })), /*#__PURE__*/_react[\"default\"].createElement(_layerConfigGroup.ConfigGroupCollapsibleContent, null, /*#__PURE__*/_react[\"default\"].createElement(ChannelByValueSelector, (0, _extends2[\"default\"])({\n          channel: layer.visualChannels.strokeColor\n        }, layerChannelConfigProps)), /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.strokeOpacity, visConfiguratorProps)))), /*#__PURE__*/_react[\"default\"].createElement(LayerConfigGroup, (0, _extends2[\"default\"])({}, visConfiguratorProps, featureTypes.polygon ? layer.visConfigSettings.stroked : {}, {\n          label: \"layer.strokeWidth\",\n          collapsible: true\n        }), layer.config.sizeField ? /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.sizeRange, visConfiguratorProps, {\n          label: false\n        })) : /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.thickness, visConfiguratorProps, {\n          label: false\n        })), /*#__PURE__*/_react[\"default\"].createElement(_layerConfigGroup.ConfigGroupCollapsibleContent, null, /*#__PURE__*/_react[\"default\"].createElement(ChannelByValueSelector, (0, _extends2[\"default\"])({\n          channel: layer.visualChannels.size\n        }, layerChannelConfigProps)))), featureTypes.polygon ? /*#__PURE__*/_react[\"default\"].createElement(LayerConfigGroup, (0, _extends2[\"default\"])({}, visConfiguratorProps, layer.visConfigSettings.enable3d, {\n          disabled: !visConfig.filled,\n          collapsible: true\n        }), /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.elevationScale, visConfiguratorProps, {\n          label: false\n        })), /*#__PURE__*/_react[\"default\"].createElement(_layerConfigGroup.ConfigGroupCollapsibleContent, null, /*#__PURE__*/_react[\"default\"].createElement(ChannelByValueSelector, (0, _extends2[\"default\"])({\n          channel: layer.visualChannels.height\n        }, layerChannelConfigProps)), /*#__PURE__*/_react[\"default\"].createElement(VisConfigSwitch, (0, _extends2[\"default\"])({}, layer.visConfigSettings.enableElevationZoomFactor, visConfiguratorProps)), /*#__PURE__*/_react[\"default\"].createElement(VisConfigSwitch, (0, _extends2[\"default\"])({}, visConfiguratorProps, layer.visConfigSettings.wireframe)))) : null, featureTypes.point ? /*#__PURE__*/_react[\"default\"].createElement(LayerConfigGroup, {\n          label: 'layer.radius',\n          collapsible: true\n        }, !layer.config.radiusField ? /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.radius, visConfiguratorProps, {\n          label: false,\n          disabled: Boolean(layer.config.radiusField)\n        })) : /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.radiusRange, visConfiguratorProps, {\n          label: false,\n          disabled: !layer.config.radiusField\n        })), /*#__PURE__*/_react[\"default\"].createElement(_layerConfigGroup.ConfigGroupCollapsibleContent, null, /*#__PURE__*/_react[\"default\"].createElement(ChannelByValueSelector, (0, _extends2[\"default\"])({\n          channel: layer.visualChannels.radius\n        }, layerChannelConfigProps)))) : null);\n      }\n    }, {\n      key: \"_render3DLayerConfig\",\n      value: function _render3DLayerConfig(_ref9) {\n        var layer = _ref9.layer,\n          visConfiguratorProps = _ref9.visConfiguratorProps;\n        return /*#__PURE__*/_react[\"default\"].createElement(_react.Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(LayerConfigGroup, {\n          label: 'layer.3DModel',\n          collapsible: true\n        }, /*#__PURE__*/_react[\"default\"].createElement(_styledComponents2.Input, {\n          type: \"file\",\n          accept: \".glb,.gltf\",\n          onChange: function onChange(e) {\n            if (e.target.files && e.target.files[0]) {\n              var url = URL.createObjectURL(e.target.files[0]);\n              visConfiguratorProps.onChange({\n                scenegraph: url\n              });\n            }\n          }\n        })), /*#__PURE__*/_react[\"default\"].createElement(LayerConfigGroup, {\n          label: 'layer.3DModelOptions',\n          collapsible: true\n        }, /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.sizeScale, visConfiguratorProps, {\n          disabled: false\n        })), /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.angleX, visConfiguratorProps, {\n          disabled: false\n        })), /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.angleY, visConfiguratorProps, {\n          disabled: false\n        })), /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.angleZ, visConfiguratorProps, {\n          disabled: false\n        }))));\n      }\n    }, {\n      key: \"_renderS2LayerConfig\",\n      value: function _renderS2LayerConfig(_ref10) {\n        var layer = _ref10.layer,\n          visConfiguratorProps = _ref10.visConfiguratorProps,\n          layerConfiguratorProps = _ref10.layerConfiguratorProps,\n          layerChannelConfigProps = _ref10.layerChannelConfigProps;\n        var visConfig = layer.config.visConfig;\n        return /*#__PURE__*/_react[\"default\"].createElement(StyledLayerVisualConfigurator, null, /*#__PURE__*/_react[\"default\"].createElement(LayerConfigGroup, (0, _extends2[\"default\"])({}, layer.visConfigSettings.filled, visConfiguratorProps, {\n          label: \"layer.fillColor\",\n          collapsible: true\n        }), layer.config.colorField ? /*#__PURE__*/_react[\"default\"].createElement(LayerColorRangeSelector, visConfiguratorProps) : /*#__PURE__*/_react[\"default\"].createElement(LayerColorSelector, layerConfiguratorProps), /*#__PURE__*/_react[\"default\"].createElement(_layerConfigGroup.ConfigGroupCollapsibleContent, null, /*#__PURE__*/_react[\"default\"].createElement(ChannelByValueSelector, (0, _extends2[\"default\"])({\n          channel: layer.visualChannels.color\n        }, layerChannelConfigProps)), /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.opacity, visConfiguratorProps)))), /*#__PURE__*/_react[\"default\"].createElement(LayerConfigGroup, (0, _extends2[\"default\"])({}, layer.visConfigSettings.stroked, visConfiguratorProps, {\n          label: \"layer.strokeColor\",\n          collapsible: true\n        }), layer.config.strokeColorField ? /*#__PURE__*/_react[\"default\"].createElement(LayerColorRangeSelector, (0, _extends2[\"default\"])({}, visConfiguratorProps, {\n          property: \"strokeColorRange\"\n        })) : /*#__PURE__*/_react[\"default\"].createElement(LayerColorSelector, (0, _extends2[\"default\"])({}, visConfiguratorProps, {\n          selectedColor: layer.config.visConfig.strokeColor,\n          property: \"strokeColor\"\n        })), /*#__PURE__*/_react[\"default\"].createElement(_layerConfigGroup.ConfigGroupCollapsibleContent, null, /*#__PURE__*/_react[\"default\"].createElement(ChannelByValueSelector, (0, _extends2[\"default\"])({\n          channel: layer.visualChannels.strokeColor\n        }, layerChannelConfigProps)))), /*#__PURE__*/_react[\"default\"].createElement(LayerConfigGroup, (0, _extends2[\"default\"])({}, visConfiguratorProps, {\n          label: \"layer.strokeWidth\",\n          collapsible: true\n        }), layer.config.sizeField ? /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.sizeRange, visConfiguratorProps, {\n          label: false\n        })) : /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.thickness, visConfiguratorProps, {\n          label: false\n        })), /*#__PURE__*/_react[\"default\"].createElement(_layerConfigGroup.ConfigGroupCollapsibleContent, null, /*#__PURE__*/_react[\"default\"].createElement(ChannelByValueSelector, (0, _extends2[\"default\"])({\n          channel: layer.visualChannels.size\n        }, layerChannelConfigProps)))), /*#__PURE__*/_react[\"default\"].createElement(LayerConfigGroup, (0, _extends2[\"default\"])({}, visConfiguratorProps, layer.visConfigSettings.enable3d, {\n          disabled: !visConfig.filled,\n          collapsible: true\n        }), /*#__PURE__*/_react[\"default\"].createElement(ChannelByValueSelector, (0, _extends2[\"default\"])({\n          channel: layer.visualChannels.height\n        }, layerChannelConfigProps)), /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.elevationScale, visConfiguratorProps, {\n          label: \"layerVisConfigs.elevationScale\"\n        })), /*#__PURE__*/_react[\"default\"].createElement(_layerConfigGroup.ConfigGroupCollapsibleContent, null, /*#__PURE__*/_react[\"default\"].createElement(VisConfigSlider, (0, _extends2[\"default\"])({}, layer.visConfigSettings.heightRange, visConfiguratorProps, {\n          label: \"layerVisConfigs.heightRange\"\n        })), /*#__PURE__*/_react[\"default\"].createElement(VisConfigSwitch, (0, _extends2[\"default\"])({}, layer.visConfigSettings.enableElevationZoomFactor, visConfiguratorProps)), /*#__PURE__*/_react[\"default\"].createElement(VisConfigSwitch, (0, _extends2[\"default\"])({}, visConfiguratorProps, layer.visConfigSettings.wireframe)))));\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this = this;\n        var _this$props = this.props,\n          layer = _this$props.layer,\n          datasets = _this$props.datasets,\n          updateLayerConfig = _this$props.updateLayerConfig,\n          layerTypeOptions = _this$props.layerTypeOptions,\n          updateLayerType = _this$props.updateLayerType;\n        var _ref11 = layer.config.dataId ? datasets[layer.config.dataId] : {},\n          _ref11$fields = _ref11.fields,\n          fields = _ref11$fields === void 0 ? [] : _ref11$fields,\n          _ref11$fieldPairs = _ref11.fieldPairs,\n          fieldPairs = _ref11$fieldPairs === void 0 ? undefined : _ref11$fieldPairs;\n        var config = layer.config;\n        var visConfiguratorProps = getVisConfiguratorProps(this.props);\n        var layerConfiguratorProps = getLayerConfiguratorProps(this.props);\n        var layerChannelConfigProps = getLayerChannelConfigProps(this.props);\n        var dataset = getLayerDataset(datasets, layer);\n        var renderTemplate = layer.type && \"_render\".concat((0, _utils.capitalizeFirstLetter)(layer.type), \"LayerConfig\");\n        return /*#__PURE__*/_react[\"default\"].createElement(StyledLayerConfigurator, null, layer.layerInfoModal ? /*#__PURE__*/_react[\"default\"].createElement(HowToButton, {\n          onClick: function onClick() {\n            return _this.props.openModal(layer.layerInfoModal);\n          }\n        }) : null, /*#__PURE__*/_react[\"default\"].createElement(LayerConfigGroup, {\n          label: 'layer.basic',\n          collapsible: true,\n          expanded: !layer.hasAllColumns()\n        }, /*#__PURE__*/_react[\"default\"].createElement(LayerTypeSelector, {\n          datasets: datasets,\n          layer: layer,\n          layerTypeOptions: layerTypeOptions,\n          onSelect: updateLayerType\n        }), Object.keys(datasets).length > 1 && /*#__PURE__*/_react[\"default\"].createElement(SourceDataSelector, {\n          datasets: datasets,\n          id: layer.id,\n          dataId: config.dataId,\n          onSelect: function onSelect(value) {\n            return updateLayerConfig({\n              dataId: value\n            });\n          }\n        }), /*#__PURE__*/_react[\"default\"].createElement(LayerColumnConfig, {\n          columnPairs: layer.columnPairs,\n          columns: layer.config.columns,\n          assignColumnPairs: layer.assignColumnPairs.bind(layer),\n          assignColumn: layer.assignColumn.bind(layer),\n          columnLabels: layer.columnLabels,\n          fields: fields,\n          fieldPairs: fieldPairs,\n          updateLayerConfig: updateLayerConfig,\n          updateLayerType: this.props.updateLayerType\n        })), this[renderTemplate] && this[renderTemplate]({\n          layer: layer,\n          dataset: dataset,\n          visConfiguratorProps: visConfiguratorProps,\n          layerChannelConfigProps: layerChannelConfigProps,\n          layerConfiguratorProps: layerConfiguratorProps\n        }));\n      }\n    }]);\n    return LayerConfigurator;\n  }(_react.Component);\n  (0, _defineProperty2[\"default\"])(LayerConfigurator, \"propTypes\", {\n    layer: _propTypes[\"default\"].object.isRequired,\n    datasets: _propTypes[\"default\"].object.isRequired,\n    layerTypeOptions: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].any).isRequired,\n    openModal: _propTypes[\"default\"].func.isRequired,\n    updateLayerConfig: _propTypes[\"default\"].func.isRequired,\n    updateLayerType: _propTypes[\"default\"].func.isRequired,\n    updateLayerVisConfig: _propTypes[\"default\"].func.isRequired,\n    updateLayerVisualChannelConfig: _propTypes[\"default\"].func.isRequired,\n    updateLayerColorUI: _propTypes[\"default\"].func.isRequired\n  });\n  return LayerConfigurator;\n}\n/*\n * Componentize config component into pure functional components\n */\n\nvar StyledHowToButton = _styledComponents[\"default\"].div(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  position: absolute;\\n  right: 12px;\\n  top: -4px;\\n\"])));\nvar HowToButton = function HowToButton(_ref12) {\n  var onClick = _ref12.onClick;\n  return /*#__PURE__*/_react[\"default\"].createElement(StyledHowToButton, null, /*#__PURE__*/_react[\"default\"].createElement(_styledComponents2.Button, {\n    link: true,\n    small: true,\n    onClick: onClick\n  }, /*#__PURE__*/_react[\"default\"].createElement(_localization.FormattedMessage, {\n    id: 'layerConfiguration.howTo'\n  })));\n};\nexports.HowToButton = HowToButton;\nvar LayerColorSelector = function LayerColorSelector(_ref13) {\n  var layer = _ref13.layer,\n    onChange = _ref13.onChange,\n    label = _ref13.label,\n    selectedColor = _ref13.selectedColor,\n    _ref13$property = _ref13.property,\n    property = _ref13$property === void 0 ? 'color' : _ref13$property,\n    _setColorUI = _ref13.setColorUI;\n  return /*#__PURE__*/_react[\"default\"].createElement(_styledComponents2.SidePanelSection, null, /*#__PURE__*/_react[\"default\"].createElement(_colorSelector[\"default\"], {\n    colorSets: [{\n      selectedColor: selectedColor || layer.config.color,\n      setColor: function setColor(rgbValue) {\n        return onChange((0, _defineProperty2[\"default\"])({}, property, rgbValue));\n      }\n    }],\n    colorUI: layer.config.colorUI[property],\n    setColorUI: function setColorUI(newConfig) {\n      return _setColorUI(property, newConfig);\n    }\n  }));\n};\nexports.LayerColorSelector = LayerColorSelector;\nvar ArcLayerColorSelector = function ArcLayerColorSelector(_ref14) {\n  var layer = _ref14.layer,\n    onChangeConfig = _ref14.onChangeConfig,\n    onChangeVisConfig = _ref14.onChangeVisConfig,\n    _ref14$property = _ref14.property,\n    property = _ref14$property === void 0 ? 'color' : _ref14$property,\n    _setColorUI2 = _ref14.setColorUI;\n  return /*#__PURE__*/_react[\"default\"].createElement(_styledComponents2.SidePanelSection, null, /*#__PURE__*/_react[\"default\"].createElement(_colorSelector[\"default\"], {\n    colorSets: [{\n      selectedColor: layer.config.color,\n      setColor: function setColor(rgbValue) {\n        return onChangeConfig({\n          color: rgbValue\n        });\n      },\n      label: 'Source'\n    }, {\n      selectedColor: layer.config.visConfig.targetColor || layer.config.color,\n      setColor: function setColor(rgbValue) {\n        return onChangeVisConfig({\n          targetColor: rgbValue\n        });\n      },\n      label: 'Target'\n    }],\n    colorUI: layer.config.colorUI[property],\n    setColorUI: function setColorUI(newConfig) {\n      return _setColorUI2(property, newConfig);\n    }\n  }));\n};\nexports.ArcLayerColorSelector = ArcLayerColorSelector;\nvar LayerColorRangeSelector = function LayerColorRangeSelector(_ref15) {\n  var layer = _ref15.layer,\n    onChange = _ref15.onChange,\n    _ref15$property = _ref15.property,\n    property = _ref15$property === void 0 ? 'colorRange' : _ref15$property,\n    _setColorUI3 = _ref15.setColorUI;\n  return /*#__PURE__*/_react[\"default\"].createElement(_styledComponents2.SidePanelSection, null, /*#__PURE__*/_react[\"default\"].createElement(_colorSelector[\"default\"], {\n    colorSets: [{\n      selectedColor: layer.config.visConfig[property],\n      isRange: true,\n      setColor: function setColor(colorRange) {\n        return onChange((0, _defineProperty2[\"default\"])({}, property, colorRange));\n      }\n    }],\n    colorUI: layer.config.colorUI[property],\n    setColorUI: function setColorUI(newConfig) {\n      return _setColorUI3(property, newConfig);\n    }\n  }));\n};\nexports.LayerColorRangeSelector = LayerColorRangeSelector;\nChannelByValueSelectorFactory.deps = [_visConfigByFieldSelector[\"default\"]];\nfunction ChannelByValueSelectorFactory(VisConfigByFieldSelector) {\n  var ChannelByValueSelector = function ChannelByValueSelector(_ref16) {\n    var layer = _ref16.layer,\n      channel = _ref16.channel,\n      onChange = _ref16.onChange,\n      fields = _ref16.fields,\n      description = _ref16.description;\n    var channelScaleType = channel.channelScaleType,\n      domain = channel.domain,\n      field = channel.field,\n      key = channel.key,\n      property = channel.property,\n      range = channel.range,\n      scale = channel.scale,\n      defaultMeasure = channel.defaultMeasure,\n      supportedFieldTypes = channel.supportedFieldTypes;\n    var channelSupportedFieldTypes = supportedFieldTypes || _defaultSettings.CHANNEL_SCALE_SUPPORTED_FIELDS[channelScaleType];\n    var supportedFields = fields.filter(function (_ref17) {\n      var type = _ref17.type;\n      return channelSupportedFieldTypes.includes(type);\n    });\n    var scaleOptions = layer.getScaleOptions(channel.key);\n    var showScale = !layer.isAggregated && layer.config[scale] && scaleOptions.length > 1;\n    var defaultDescription = 'layerConfiguration.defaultDescription';\n    return /*#__PURE__*/_react[\"default\"].createElement(VisConfigByFieldSelector, {\n      channel: channel.key,\n      description: description || defaultDescription,\n      domain: layer.config[domain],\n      fields: supportedFields,\n      id: layer.id,\n      key: \"\".concat(key, \"-channel-selector\"),\n      property: property,\n      placeholder: defaultMeasure || 'placeholder.selectField',\n      range: layer.config.visConfig[range],\n      scaleOptions: scaleOptions,\n      scaleType: scale ? layer.config[scale] : null,\n      selectedField: layer.config[field],\n      showScale: showScale,\n      updateField: function updateField(val) {\n        return onChange((0, _defineProperty2[\"default\"])({}, field, val), key);\n      },\n      updateScale: function updateScale(val) {\n        return onChange((0, _defineProperty2[\"default\"])({}, scale, val), key);\n      }\n    });\n  };\n  return ChannelByValueSelector;\n}\nvar AggrScaleSelector = function AggrScaleSelector(_ref18) {\n  var channel = _ref18.channel,\n    layer = _ref18.layer,\n    onChange = _ref18.onChange;\n  var scale = channel.scale,\n    key = channel.key;\n  var scaleOptions = layer.getScaleOptions(key);\n  return Array.isArray(scaleOptions) && scaleOptions.length > 1 ? /*#__PURE__*/_react[\"default\"].createElement(_dimensionScaleSelector[\"default\"], {\n    label: \"\".concat(key, \" Scale\"),\n    options: scaleOptions,\n    scaleType: layer.config[scale],\n    onSelect: function onSelect(val) {\n      return onChange((0, _defineProperty2[\"default\"])({}, scale, val), key);\n    }\n  }) : null;\n};\nexports.AggrScaleSelector = AggrScaleSelector;\nvar AggregationTypeSelector = function AggregationTypeSelector(_ref19) {\n  var layer = _ref19.layer,\n    channel = _ref19.channel,\n    _onChange6 = _ref19.onChange;\n  var field = channel.field,\n    aggregation = channel.aggregation,\n    key = channel.key;\n  var selectedField = layer.config[field];\n  var visConfig = layer.config.visConfig; // aggregation should only be selectable when field is selected\n\n  var aggregationOptions = layer.getAggregationOptions(key);\n  return /*#__PURE__*/_react[\"default\"].createElement(_styledComponents2.SidePanelSection, null, /*#__PURE__*/_react[\"default\"].createElement(_styledComponents2.PanelLabel, null, /*#__PURE__*/_react[\"default\"].createElement(_localization.FormattedMessage, {\n    id: 'layer.aggregateBy',\n    values: {\n      field: selectedField.name\n    }\n  })), /*#__PURE__*/_react[\"default\"].createElement(_itemSelector[\"default\"], {\n    selectedItems: visConfig[aggregation],\n    options: aggregationOptions,\n    multiSelect: false,\n    searchable: false,\n    onChange: function onChange(value) {\n      return _onChange6({\n        visConfig: _objectSpread(_objectSpread({}, layer.config.visConfig), {}, (0, _defineProperty2[\"default\"])({}, aggregation, value))\n      }, channel.key);\n    }\n  }));\n};\n/* eslint-enable max-params */\n\nexports.AggregationTypeSelector = AggregationTypeSelector;","map":{"version":3,"sources":["../../../../src/components/side-panel/layer-panel/layer-configurator.js"],"names":["StyledLayerConfigurator","div","attrs","className","props","theme","layerConfiguratorMargin","layerConfiguratorPadding","layerConfiguratorBorder","layerConfiguratorBorderColor","StyledLayerVisualConfigurator","getLayerFields","datasets","layer","config","dataId","fields","getLayerDataset","getLayerConfiguratorProps","onChange","updateLayerConfig","setColorUI","updateLayerColorUI","getVisConfiguratorProps","updateLayerVisConfig","getLayerChannelConfigProps","updateLayerVisualChannelConfig","LayerConfiguratorFactory","deps","SourceDataSelectorFactory","VisConfigSliderFactory","TextLabelPanelFactory","LayerConfigGroupFactory","ChannelByValueSelectorFactory","LayerColumnConfigFactory","LayerTypeSelectorFactory","VisConfigSwitchFactory","SourceDataSelector","VisConfigSlider","TextLabelPanel","LayerConfigGroup","ChannelByValueSelector","LayerColumnConfig","LayerTypeSelector","VisConfigSwitch","LayerConfigurator","Component","PropTypes","object","isRequired","layerTypeOptions","arrayOf","any","openModal","func","updateLayerType","_renderScatterplotLayerConfig","visConfiguratorProps","layerChannelConfigProps","layerConfiguratorProps","visConfigSettings","filled","label","colorField","visualChannels","color","opacity","type","LAYER_TYPES","point","outline","strokeColorField","visConfig","strokeColor","thickness","sizeField","radius","Boolean","radiusRange","fixedRadius","size","updateLayerTextLabel","textLabel","colorPalette","setColorPaletteUI","colorAggregation","condition","clusterRadius","weight","_renderAggregationLayerConfig","enable3d","elevationByDescription","colorByDescription","percentile","worldUnitSize","coverage","elevationScale","sizeRange","enableElevationZoomFactor","sizeAggregation","elevationPercentile","coverageField","coverageRange","args","_renderLineLayerConfig","sourceColor","meta","featureTypes","polygon","stroked","trailLength","strokeOpacity","height","wireframe","radiusField","e","target","files","url","URL","createObjectURL","scenegraph","sizeScale","angleX","angleY","angleZ","heightRange","fieldPairs","undefined","dataset","renderTemplate","layerInfoModal","hasAllColumns","Object","keys","length","id","value","columnPairs","columns","assignColumnPairs","bind","assignColumn","columnLabels","StyledHowToButton","styled","HowToButton","onClick","LayerColorSelector","selectedColor","property","setColor","rgbValue","colorUI","newConfig","ArcLayerColorSelector","onChangeConfig","onChangeVisConfig","targetColor","LayerColorRangeSelector","isRange","colorRange","VisConfigByFieldSelectorFactory","VisConfigByFieldSelector","channel","description","channelScaleType","domain","field","key","range","scale","defaultMeasure","supportedFieldTypes","channelSupportedFieldTypes","CHANNEL_SCALE_SUPPORTED_FIELDS","supportedFields","filter","includes","scaleOptions","getScaleOptions","showScale","isAggregated","defaultDescription","val","AggrScaleSelector","isArray","AggregationTypeSelector","aggregation","selectedField","aggregationOptions","getAggregationOptions","name"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable complexity */\nimport React, {Component, Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {FormattedMessage} from 'localization';\n\nimport {Button, Input, PanelLabel, SidePanelSection} from 'components/common/styled-components';\nimport ItemSelector from 'components/common/item-selector/item-selector';\n\nimport VisConfigByFieldSelectorFactory from './vis-config-by-field-selector';\nimport LayerColumnConfigFactory from './layer-column-config';\nimport LayerTypeSelectorFactory from './layer-type-selector';\nimport DimensionScaleSelector from './dimension-scale-selector';\nimport ColorSelector from './color-selector';\nimport SourceDataSelectorFactory from 'components/side-panel/common/source-data-selector';\nimport VisConfigSwitchFactory from './vis-config-switch';\nimport VisConfigSliderFactory from './vis-config-slider';\nimport LayerConfigGroupFactory, {ConfigGroupCollapsibleContent} from './layer-config-group';\nimport TextLabelPanelFactory from './text-label-panel';\n\nimport {capitalizeFirstLetter} from 'utils/utils';\n\nimport {CHANNEL_SCALE_SUPPORTED_FIELDS} from 'constants/default-settings';\nimport {LAYER_TYPES} from 'layers/types';\n\nconst StyledLayerConfigurator = styled.div.attrs({\n  className: 'layer-panel__config'\n})`\n  position: relative;\n  margin-top: ${props => props.theme.layerConfiguratorMargin};\n  padding: ${props => props.theme.layerConfiguratorPadding};\n  border-left: ${props => props.theme.layerConfiguratorBorder} dashed\n    ${props => props.theme.layerConfiguratorBorderColor};\n`;\n\nconst StyledLayerVisualConfigurator = styled.div.attrs({\n  className: 'layer-panel__config__visualC-config'\n})`\n  margin-top: 12px;\n`;\n\nexport const getLayerFields = (datasets, layer) =>\n  layer.config && datasets[layer.config.dataId] ? datasets[layer.config.dataId].fields : [];\n\nexport const getLayerDataset = (datasets, layer) =>\n  layer.config && datasets[layer.config.dataId] ? datasets[layer.config.dataId] : null;\n\nexport const getLayerConfiguratorProps = props => ({\n  layer: props.layer,\n  fields: getLayerFields(props.datasets, props.layer),\n  onChange: props.updateLayerConfig,\n  setColorUI: props.updateLayerColorUI\n});\n\nexport const getVisConfiguratorProps = props => ({\n  layer: props.layer,\n  fields: getLayerFields(props.datasets, props.layer),\n  onChange: props.updateLayerVisConfig,\n  setColorUI: props.updateLayerColorUI\n});\n\nexport const getLayerChannelConfigProps = props => ({\n  layer: props.layer,\n  fields: getLayerFields(props.datasets, props.layer),\n  onChange: props.updateLayerVisualChannelConfig\n});\n\nLayerConfiguratorFactory.deps = [\n  SourceDataSelectorFactory,\n  VisConfigSliderFactory,\n  TextLabelPanelFactory,\n  LayerConfigGroupFactory,\n  ChannelByValueSelectorFactory,\n  LayerColumnConfigFactory,\n  LayerTypeSelectorFactory,\n  VisConfigSwitchFactory\n];\n\nexport default function LayerConfiguratorFactory(\n  SourceDataSelector,\n  VisConfigSlider,\n  TextLabelPanel,\n  LayerConfigGroup,\n  ChannelByValueSelector,\n  LayerColumnConfig,\n  LayerTypeSelector,\n  VisConfigSwitch\n) {\n  class LayerConfigurator extends Component {\n    static propTypes = {\n      layer: PropTypes.object.isRequired,\n      datasets: PropTypes.object.isRequired,\n      layerTypeOptions: PropTypes.arrayOf(PropTypes.any).isRequired,\n      openModal: PropTypes.func.isRequired,\n      updateLayerConfig: PropTypes.func.isRequired,\n      updateLayerType: PropTypes.func.isRequired,\n      updateLayerVisConfig: PropTypes.func.isRequired,\n      updateLayerVisualChannelConfig: PropTypes.func.isRequired,\n      updateLayerColorUI: PropTypes.func.isRequired\n    };\n\n    _renderPointLayerConfig(props) {\n      return this._renderScatterplotLayerConfig(props);\n    }\n\n    _renderIconLayerConfig(props) {\n      return this._renderScatterplotLayerConfig(props);\n    }\n\n    _renderScatterplotLayerConfig({\n      layer,\n      visConfiguratorProps,\n      layerChannelConfigProps,\n      layerConfiguratorProps\n    }) {\n      return (\n        <StyledLayerVisualConfigurator>\n          {/* Fill Color */}\n          <LayerConfigGroup\n            {...(layer.visConfigSettings.filled || {label: 'layer.color'})}\n            {...visConfiguratorProps}\n            collapsible\n          >\n            {layer.config.colorField ? (\n              <LayerColorRangeSelector {...visConfiguratorProps} />\n            ) : (\n              <LayerColorSelector {...layerConfiguratorProps} />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.color}\n                {...layerChannelConfigProps}\n              />\n              <VisConfigSlider {...layer.visConfigSettings.opacity} {...visConfiguratorProps} />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* outline color */}\n          {layer.type === LAYER_TYPES.point ? (\n            <LayerConfigGroup\n              {...layer.visConfigSettings.outline}\n              {...visConfiguratorProps}\n              collapsible\n            >\n              {layer.config.strokeColorField ? (\n                <LayerColorRangeSelector {...visConfiguratorProps} property=\"strokeColorRange\" />\n              ) : (\n                <LayerColorSelector\n                  {...visConfiguratorProps}\n                  selectedColor={layer.config.visConfig.strokeColor}\n                  property=\"strokeColor\"\n                />\n              )}\n              <ConfigGroupCollapsibleContent>\n                <ChannelByValueSelector\n                  channel={layer.visualChannels.strokeColor}\n                  {...layerChannelConfigProps}\n                />\n                <VisConfigSlider\n                  {...layer.visConfigSettings.thickness}\n                  {...visConfiguratorProps}\n                  disabled={!layer.config.visConfig.outline}\n                />\n              </ConfigGroupCollapsibleContent>\n            </LayerConfigGroup>\n          ) : null}\n\n          {/* Radius */}\n          <LayerConfigGroup label={'layer.radius'} collapsible>\n            {!layer.config.sizeField ? (\n              <VisConfigSlider\n                {...layer.visConfigSettings.radius}\n                {...visConfiguratorProps}\n                label={false}\n                disabled={Boolean(layer.config.sizeField)}\n              />\n            ) : (\n              <VisConfigSlider\n                {...layer.visConfigSettings.radiusRange}\n                {...visConfiguratorProps}\n                label={false}\n                disabled={!layer.config.sizeField || layer.config.visConfig.fixedRadius}\n              />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.size}\n                {...layerChannelConfigProps}\n              />\n              {layer.config.sizeField ? (\n                <VisConfigSwitch\n                  {...layer.visConfigSettings.fixedRadius}\n                  {...visConfiguratorProps}\n                />\n              ) : null}\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* text label */}\n          <TextLabelPanel\n            fields={visConfiguratorProps.fields}\n            updateLayerTextLabel={this.props.updateLayerTextLabel}\n            textLabel={layer.config.textLabel}\n            colorPalette={visConfiguratorProps.colorPalette}\n            setColorPaletteUI={visConfiguratorProps.setColorPaletteUI}\n          />\n        </StyledLayerVisualConfigurator>\n      );\n    }\n\n    _renderClusterLayerConfig({\n      layer,\n      visConfiguratorProps,\n      layerConfiguratorProps,\n      layerChannelConfigProps\n    }) {\n      return (\n        <StyledLayerVisualConfigurator>\n          {/* Color */}\n          <LayerConfigGroup label={'layer.color'} collapsible>\n            <LayerColorRangeSelector {...visConfiguratorProps} />\n            <ConfigGroupCollapsibleContent>\n              <AggrScaleSelector {...layerConfiguratorProps} channel={layer.visualChannels.color} />\n              <ChannelByValueSelector\n                channel={layer.visualChannels.color}\n                {...layerChannelConfigProps}\n              />\n              {layer.visConfigSettings.colorAggregation.condition(layer.config) ? (\n                <AggregationTypeSelector\n                  {...layer.visConfigSettings.colorAggregation}\n                  {...layerChannelConfigProps}\n                  channel={layer.visualChannels.color}\n                />\n              ) : null}\n              <VisConfigSlider {...layer.visConfigSettings.opacity} {...visConfiguratorProps} />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Cluster Radius */}\n          <LayerConfigGroup label={'layer.radius'} collapsible>\n            <VisConfigSlider {...layer.visConfigSettings.clusterRadius} {...visConfiguratorProps} />\n            <ConfigGroupCollapsibleContent>\n              <VisConfigSlider {...layer.visConfigSettings.radiusRange} {...visConfiguratorProps} />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n        </StyledLayerVisualConfigurator>\n      );\n    }\n\n    _renderHeatmapLayerConfig({\n      layer,\n      visConfiguratorProps,\n      layerConfiguratorProps,\n      layerChannelConfigProps\n    }) {\n      return (\n        <StyledLayerVisualConfigurator>\n          {/* Color */}\n          <LayerConfigGroup label={'layer.color'} collapsible>\n            <LayerColorRangeSelector {...visConfiguratorProps} />\n            <ConfigGroupCollapsibleContent>\n              <VisConfigSlider {...layer.visConfigSettings.opacity} {...visConfiguratorProps} />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n          {/* Radius */}\n          <LayerConfigGroup label={'layer.radius'}>\n            <VisConfigSlider\n              {...layer.visConfigSettings.radius}\n              {...visConfiguratorProps}\n              label={false}\n            />\n          </LayerConfigGroup>\n          {/* Weight */}\n          <LayerConfigGroup label={'layer.weight'}>\n            <ChannelByValueSelector\n              channel={layer.visualChannels.weight}\n              {...layerChannelConfigProps}\n            />\n          </LayerConfigGroup>\n        </StyledLayerVisualConfigurator>\n      );\n    }\n\n    _renderGridLayerConfig(props) {\n      return this._renderAggregationLayerConfig(props);\n    }\n\n    _renderHexagonLayerConfig(props) {\n      return this._renderAggregationLayerConfig(props);\n    }\n\n    _renderAggregationLayerConfig({\n      layer,\n      visConfiguratorProps,\n      layerConfiguratorProps,\n      layerChannelConfigProps\n    }) {\n      const {config} = layer;\n      const {\n        visConfig: {enable3d}\n      } = config;\n      const elevationByDescription = 'layer.elevationByDescription';\n      const colorByDescription = 'layer.colorByDescription';\n\n      return (\n        <StyledLayerVisualConfigurator>\n          {/* Color */}\n          <LayerConfigGroup label={'layer.color'} collapsible>\n            <LayerColorRangeSelector {...visConfiguratorProps} />\n            <ConfigGroupCollapsibleContent>\n              <AggrScaleSelector {...layerConfiguratorProps} channel={layer.visualChannels.color} />\n              <ChannelByValueSelector\n                channel={layer.visualChannels.color}\n                {...layerChannelConfigProps}\n              />\n              {layer.visConfigSettings.colorAggregation.condition(layer.config) ? (\n                <AggregationTypeSelector\n                  {...layer.visConfigSettings.colorAggregation}\n                  {...layerChannelConfigProps}\n                  description={colorByDescription}\n                  channel={layer.visualChannels.color}\n                />\n              ) : null}\n              {layer.visConfigSettings.percentile &&\n              layer.visConfigSettings.percentile.condition(layer.config) ? (\n                <VisConfigSlider\n                  {...layer.visConfigSettings.percentile}\n                  {...visConfiguratorProps}\n                />\n              ) : null}\n              <VisConfigSlider {...layer.visConfigSettings.opacity} {...visConfiguratorProps} />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Cell size */}\n          <LayerConfigGroup label={'layer.radius'} collapsible>\n            <VisConfigSlider {...layer.visConfigSettings.worldUnitSize} {...visConfiguratorProps} />\n            <ConfigGroupCollapsibleContent>\n              <VisConfigSlider {...layer.visConfigSettings.coverage} {...visConfiguratorProps} />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Elevation */}\n          {layer.visConfigSettings.enable3d ? (\n            <LayerConfigGroup\n              {...layer.visConfigSettings.enable3d}\n              {...visConfiguratorProps}\n              collapsible\n            >\n              <VisConfigSlider\n                {...layer.visConfigSettings.elevationScale}\n                {...visConfiguratorProps}\n                label=\"layerVisConfigs.heightMultiplier\"\n              />\n              <ConfigGroupCollapsibleContent>\n                <ChannelByValueSelector\n                  {...layerChannelConfigProps}\n                  channel={layer.visualChannels.size}\n                  description={elevationByDescription}\n                  disabled={!enable3d}\n                />\n                <AggrScaleSelector\n                  {...layerConfiguratorProps}\n                  channel={layer.visualChannels.size}\n                />\n                <VisConfigSlider\n                  {...layer.visConfigSettings.sizeRange}\n                  {...visConfiguratorProps}\n                  label=\"layerVisConfigs.heightRange\"\n                />\n                <VisConfigSwitch\n                  {...layer.visConfigSettings.enableElevationZoomFactor}\n                  {...visConfiguratorProps}\n                  label=\"layerVisConfigs.enableHeightZoomFactor\"\n                />\n                {layer.visConfigSettings.sizeAggregation.condition(layer.config) ? (\n                  <AggregationTypeSelector\n                    {...layer.visConfigSettings.sizeAggregation}\n                    {...layerChannelConfigProps}\n                    channel={layer.visualChannels.size}\n                  />\n                ) : null}\n                {layer.visConfigSettings.elevationPercentile.condition(layer.config) ? (\n                  <VisConfigSlider\n                    {...layer.visConfigSettings.elevationPercentile}\n                    {...visConfiguratorProps}\n                  />\n                ) : null}\n              </ConfigGroupCollapsibleContent>\n            </LayerConfigGroup>\n          ) : null}\n        </StyledLayerVisualConfigurator>\n      );\n    }\n\n    // TODO: Shan move these into layer class\n    _renderHexagonIdLayerConfig({\n      layer,\n      visConfiguratorProps,\n      layerConfiguratorProps,\n      layerChannelConfigProps\n    }) {\n      return (\n        <StyledLayerVisualConfigurator>\n          {/* Color */}\n          <LayerConfigGroup label={'layer.color'} collapsible>\n            {layer.config.colorField ? (\n              <LayerColorRangeSelector {...visConfiguratorProps} />\n            ) : (\n              <LayerColorSelector {...layerConfiguratorProps} />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.color}\n                {...layerChannelConfigProps}\n              />\n              <VisConfigSlider {...layer.visConfigSettings.opacity} {...visConfiguratorProps} />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Coverage */}\n          <LayerConfigGroup label={'layer.coverage'} collapsible>\n            {!layer.config.coverageField ? (\n              <VisConfigSlider\n                {...layer.visConfigSettings.coverage}\n                {...visConfiguratorProps}\n                label={false}\n              />\n            ) : (\n              <VisConfigSlider\n                {...layer.visConfigSettings.coverageRange}\n                {...visConfiguratorProps}\n                label={false}\n              />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.coverage}\n                {...layerChannelConfigProps}\n              />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* height */}\n          <LayerConfigGroup\n            {...layer.visConfigSettings.enable3d}\n            {...visConfiguratorProps}\n            collapsible\n          >\n            <ChannelByValueSelector\n              channel={layer.visualChannels.size}\n              {...layerChannelConfigProps}\n            />\n            <ConfigGroupCollapsibleContent>\n              <VisConfigSlider\n                {...layer.visConfigSettings.elevationScale}\n                {...visConfiguratorProps}\n              />\n              <VisConfigSlider\n                {...layer.visConfigSettings.sizeRange}\n                {...visConfiguratorProps}\n                label=\"layerVisConfigs.heightRange\"\n              />\n              <VisConfigSwitch\n                {...layer.visConfigSettings.enableElevationZoomFactor}\n                {...visConfiguratorProps}\n              />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n        </StyledLayerVisualConfigurator>\n      );\n    }\n\n    _renderArcLayerConfig(args) {\n      return this._renderLineLayerConfig(args);\n    }\n\n    _renderLineLayerConfig({\n      layer,\n      visConfiguratorProps,\n      layerConfiguratorProps,\n      layerChannelConfigProps\n    }) {\n      return (\n        <StyledLayerVisualConfigurator>\n          {/* Color */}\n          <LayerConfigGroup label={'layer.color'} collapsible>\n            {layer.config.colorField ? (\n              <LayerColorRangeSelector {...visConfiguratorProps} />\n            ) : (\n              <ArcLayerColorSelector\n                layer={layer}\n                setColorUI={layerConfiguratorProps.setColorUI}\n                onChangeConfig={layerConfiguratorProps.onChange}\n                onChangeVisConfig={visConfiguratorProps.onChange}\n              />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.sourceColor}\n                {...layerChannelConfigProps}\n              />\n              <VisConfigSlider {...layer.visConfigSettings.opacity} {...visConfiguratorProps} />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* thickness */}\n          <LayerConfigGroup label={'layer.stroke'} collapsible>\n            {layer.config.sizeField ? (\n              <VisConfigSlider\n                {...layer.visConfigSettings.sizeRange}\n                {...visConfiguratorProps}\n                disabled={!layer.config.sizeField}\n                label={false}\n              />\n            ) : (\n              <VisConfigSlider\n                {...layer.visConfigSettings.thickness}\n                {...visConfiguratorProps}\n                label={false}\n              />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.size}\n                {...layerChannelConfigProps}\n              />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* elevation scale */}\n          {layer.visConfigSettings.elevationScale ? (\n            <LayerConfigGroup label=\"layerVisConfigs.elevationScale\" collapsible>\n              <VisConfigSlider\n                {...layer.visConfigSettings.elevationScale}\n                {...visConfiguratorProps}\n              />\n            </LayerConfigGroup>\n          ) : null}\n        </StyledLayerVisualConfigurator>\n      );\n    }\n\n    _renderTripLayerConfig({\n      layer,\n      visConfiguratorProps,\n      layerConfiguratorProps,\n      layerChannelConfigProps\n    }) {\n      const {\n        meta: {featureTypes = {}}\n      } = layer;\n\n      return (\n        <StyledLayerVisualConfigurator>\n          {/* Color */}\n          <LayerConfigGroup label={'layer.color'} collapsible>\n            {layer.config.colorField ? (\n              <LayerColorRangeSelector {...visConfiguratorProps} />\n            ) : (\n              <LayerColorSelector {...layerConfiguratorProps} />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.color}\n                {...layerChannelConfigProps}\n              />\n              <VisConfigSlider {...layer.visConfigSettings.opacity} {...visConfiguratorProps} />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Stroke Width */}\n          <LayerConfigGroup {...visConfiguratorProps} label=\"layer.strokeWidth\" collapsible>\n            {layer.config.sizeField ? (\n              <VisConfigSlider\n                {...layer.visConfigSettings.sizeRange}\n                {...visConfiguratorProps}\n                label={false}\n              />\n            ) : (\n              <VisConfigSlider\n                {...layer.visConfigSettings.thickness}\n                {...visConfiguratorProps}\n                label={false}\n              />\n            )}\n\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.size}\n                {...layerChannelConfigProps}\n              />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Trail Length*/}\n          <LayerConfigGroup\n            {...visConfiguratorProps}\n            {...(featureTypes.polygon ? layer.visConfigSettings.stroked : {})}\n            label=\"layer.trailLength\"\n            description=\"layer.trailLengthDescription\"\n          >\n            <VisConfigSlider\n              {...layer.visConfigSettings.trailLength}\n              {...visConfiguratorProps}\n              label={false}\n            />\n          </LayerConfigGroup>\n        </StyledLayerVisualConfigurator>\n      );\n    }\n\n    _renderGeojsonLayerConfig({\n      layer,\n      visConfiguratorProps,\n      layerConfiguratorProps,\n      layerChannelConfigProps\n    }) {\n      const {\n        meta: {featureTypes = {}},\n        config: {visConfig}\n      } = layer;\n\n      return (\n        <StyledLayerVisualConfigurator>\n          {/* Fill Color */}\n          {featureTypes.polygon || featureTypes.point ? (\n            <LayerConfigGroup\n              {...layer.visConfigSettings.filled}\n              {...visConfiguratorProps}\n              label=\"layer.fillColor\"\n              collapsible\n            >\n              {layer.config.colorField ? (\n                <LayerColorRangeSelector {...visConfiguratorProps} />\n              ) : (\n                <LayerColorSelector {...layerConfiguratorProps} />\n              )}\n              <ConfigGroupCollapsibleContent>\n                <ChannelByValueSelector\n                  channel={layer.visualChannels.color}\n                  {...layerChannelConfigProps}\n                />\n                <VisConfigSlider {...layer.visConfigSettings.opacity} {...visConfiguratorProps} />\n              </ConfigGroupCollapsibleContent>\n            </LayerConfigGroup>\n          ) : null}\n\n          {/* stroke color */}\n          <LayerConfigGroup\n            {...layer.visConfigSettings.stroked}\n            {...visConfiguratorProps}\n            label=\"layer.strokeColor\"\n            collapsible\n          >\n            {layer.config.strokeColorField ? (\n              <LayerColorRangeSelector {...visConfiguratorProps} property=\"strokeColorRange\" />\n            ) : (\n              <LayerColorSelector\n                {...visConfiguratorProps}\n                selectedColor={layer.config.visConfig.strokeColor}\n                property=\"strokeColor\"\n              />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.strokeColor}\n                {...layerChannelConfigProps}\n              />\n              <VisConfigSlider\n                {...layer.visConfigSettings.strokeOpacity}\n                {...visConfiguratorProps}\n              />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Stroke Width */}\n          <LayerConfigGroup\n            {...visConfiguratorProps}\n            {...(featureTypes.polygon ? layer.visConfigSettings.stroked : {})}\n            label=\"layer.strokeWidth\"\n            collapsible\n          >\n            {layer.config.sizeField ? (\n              <VisConfigSlider\n                {...layer.visConfigSettings.sizeRange}\n                {...visConfiguratorProps}\n                label={false}\n              />\n            ) : (\n              <VisConfigSlider\n                {...layer.visConfigSettings.thickness}\n                {...visConfiguratorProps}\n                label={false}\n              />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.size}\n                {...layerChannelConfigProps}\n              />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Elevation */}\n          {featureTypes.polygon ? (\n            <LayerConfigGroup\n              {...visConfiguratorProps}\n              {...layer.visConfigSettings.enable3d}\n              disabled={!visConfig.filled}\n              collapsible\n            >\n              <VisConfigSlider\n                {...layer.visConfigSettings.elevationScale}\n                {...visConfiguratorProps}\n                label={false}\n              />\n              <ConfigGroupCollapsibleContent>\n                <ChannelByValueSelector\n                  channel={layer.visualChannels.height}\n                  {...layerChannelConfigProps}\n                />\n                <VisConfigSwitch\n                  {...layer.visConfigSettings.enableElevationZoomFactor}\n                  {...visConfiguratorProps}\n                />\n                <VisConfigSwitch {...visConfiguratorProps} {...layer.visConfigSettings.wireframe} />\n              </ConfigGroupCollapsibleContent>\n            </LayerConfigGroup>\n          ) : null}\n\n          {/* Radius */}\n          {featureTypes.point ? (\n            <LayerConfigGroup label={'layer.radius'} collapsible>\n              {!layer.config.radiusField ? (\n                <VisConfigSlider\n                  {...layer.visConfigSettings.radius}\n                  {...visConfiguratorProps}\n                  label={false}\n                  disabled={Boolean(layer.config.radiusField)}\n                />\n              ) : (\n                <VisConfigSlider\n                  {...layer.visConfigSettings.radiusRange}\n                  {...visConfiguratorProps}\n                  label={false}\n                  disabled={!layer.config.radiusField}\n                />\n              )}\n              <ConfigGroupCollapsibleContent>\n                <ChannelByValueSelector\n                  channel={layer.visualChannels.radius}\n                  {...layerChannelConfigProps}\n                />\n              </ConfigGroupCollapsibleContent>\n            </LayerConfigGroup>\n          ) : null}\n        </StyledLayerVisualConfigurator>\n      );\n    }\n\n    _render3DLayerConfig({layer, visConfiguratorProps}) {\n      return (\n        <Fragment>\n          <LayerConfigGroup label={'layer.3DModel'} collapsible>\n            <Input\n              type=\"file\"\n              accept=\".glb,.gltf\"\n              onChange={e => {\n                if (e.target.files && e.target.files[0]) {\n                  const url = URL.createObjectURL(e.target.files[0]);\n                  visConfiguratorProps.onChange({scenegraph: url});\n                }\n              }}\n            />\n          </LayerConfigGroup>\n          <LayerConfigGroup label={'layer.3DModelOptions'} collapsible>\n            <VisConfigSlider\n              {...layer.visConfigSettings.sizeScale}\n              {...visConfiguratorProps}\n              disabled={false}\n            />\n            <VisConfigSlider\n              {...layer.visConfigSettings.angleX}\n              {...visConfiguratorProps}\n              disabled={false}\n            />\n            <VisConfigSlider\n              {...layer.visConfigSettings.angleY}\n              {...visConfiguratorProps}\n              disabled={false}\n            />\n            <VisConfigSlider\n              {...layer.visConfigSettings.angleZ}\n              {...visConfiguratorProps}\n              disabled={false}\n            />\n          </LayerConfigGroup>\n        </Fragment>\n      );\n    }\n\n    _renderS2LayerConfig({\n      layer,\n      visConfiguratorProps,\n      layerConfiguratorProps,\n      layerChannelConfigProps\n    }) {\n      const {\n        config: {visConfig}\n      } = layer;\n\n      return (\n        <StyledLayerVisualConfigurator>\n          {/* Color */}\n          <LayerConfigGroup\n            {...layer.visConfigSettings.filled}\n            {...visConfiguratorProps}\n            label=\"layer.fillColor\"\n            collapsible\n          >\n            {layer.config.colorField ? (\n              <LayerColorRangeSelector {...visConfiguratorProps} />\n            ) : (\n              <LayerColorSelector {...layerConfiguratorProps} />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.color}\n                {...layerChannelConfigProps}\n              />\n              <VisConfigSlider {...layer.visConfigSettings.opacity} {...visConfiguratorProps} />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Stroke */}\n          <LayerConfigGroup\n            {...layer.visConfigSettings.stroked}\n            {...visConfiguratorProps}\n            label=\"layer.strokeColor\"\n            collapsible\n          >\n            {layer.config.strokeColorField ? (\n              <LayerColorRangeSelector {...visConfiguratorProps} property=\"strokeColorRange\" />\n            ) : (\n              <LayerColorSelector\n                {...visConfiguratorProps}\n                selectedColor={layer.config.visConfig.strokeColor}\n                property=\"strokeColor\"\n              />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.strokeColor}\n                {...layerChannelConfigProps}\n              />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Stroke Width */}\n          <LayerConfigGroup {...visConfiguratorProps} label=\"layer.strokeWidth\" collapsible>\n            {layer.config.sizeField ? (\n              <VisConfigSlider\n                {...layer.visConfigSettings.sizeRange}\n                {...visConfiguratorProps}\n                label={false}\n              />\n            ) : (\n              <VisConfigSlider\n                {...layer.visConfigSettings.thickness}\n                {...visConfiguratorProps}\n                label={false}\n              />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.size}\n                {...layerChannelConfigProps}\n              />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Elevation */}\n          <LayerConfigGroup\n            {...visConfiguratorProps}\n            {...layer.visConfigSettings.enable3d}\n            disabled={!visConfig.filled}\n            collapsible\n          >\n            <ChannelByValueSelector\n              channel={layer.visualChannels.height}\n              {...layerChannelConfigProps}\n            />\n            <VisConfigSlider\n              {...layer.visConfigSettings.elevationScale}\n              {...visConfiguratorProps}\n              label=\"layerVisConfigs.elevationScale\"\n            />\n            <ConfigGroupCollapsibleContent>\n              <VisConfigSlider\n                {...layer.visConfigSettings.heightRange}\n                {...visConfiguratorProps}\n                label=\"layerVisConfigs.heightRange\"\n              />\n              <VisConfigSwitch\n                {...layer.visConfigSettings.enableElevationZoomFactor}\n                {...visConfiguratorProps}\n              />\n              <VisConfigSwitch {...visConfiguratorProps} {...layer.visConfigSettings.wireframe} />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n        </StyledLayerVisualConfigurator>\n      );\n    }\n\n    render() {\n      const {layer, datasets, updateLayerConfig, layerTypeOptions, updateLayerType} = this.props;\n      const {fields = [], fieldPairs = undefined} = layer.config.dataId\n        ? datasets[layer.config.dataId]\n        : {};\n      const {config} = layer;\n\n      const visConfiguratorProps = getVisConfiguratorProps(this.props);\n      const layerConfiguratorProps = getLayerConfiguratorProps(this.props);\n      const layerChannelConfigProps = getLayerChannelConfigProps(this.props);\n      const dataset = getLayerDataset(datasets, layer);\n      const renderTemplate = layer.type && `_render${capitalizeFirstLetter(layer.type)}LayerConfig`;\n\n      return (\n        <StyledLayerConfigurator>\n          {layer.layerInfoModal ? (\n            <HowToButton onClick={() => this.props.openModal(layer.layerInfoModal)} />\n          ) : null}\n          <LayerConfigGroup label={'layer.basic'} collapsible expanded={!layer.hasAllColumns()}>\n            <LayerTypeSelector\n              datasets={datasets}\n              layer={layer}\n              layerTypeOptions={layerTypeOptions}\n              onSelect={updateLayerType}\n            />\n            {Object.keys(datasets).length > 1 && (\n              <SourceDataSelector\n                datasets={datasets}\n                id={layer.id}\n                dataId={config.dataId}\n                onSelect={value => updateLayerConfig({dataId: value})}\n              />\n            )}\n            <LayerColumnConfig\n              columnPairs={layer.columnPairs}\n              columns={layer.config.columns}\n              assignColumnPairs={layer.assignColumnPairs.bind(layer)}\n              assignColumn={layer.assignColumn.bind(layer)}\n              columnLabels={layer.columnLabels}\n              fields={fields}\n              fieldPairs={fieldPairs}\n              updateLayerConfig={updateLayerConfig}\n              updateLayerType={this.props.updateLayerType}\n            />\n          </LayerConfigGroup>\n          {this[renderTemplate] &&\n            this[renderTemplate]({\n              layer,\n              dataset,\n              visConfiguratorProps,\n              layerChannelConfigProps,\n              layerConfiguratorProps\n            })}\n        </StyledLayerConfigurator>\n      );\n    }\n  }\n\n  return LayerConfigurator;\n}\n/*\n * Componentize config component into pure functional components\n */\n\nconst StyledHowToButton = styled.div`\n  position: absolute;\n  right: 12px;\n  top: -4px;\n`;\n\nexport const HowToButton = ({onClick}) => (\n  <StyledHowToButton>\n    <Button link small onClick={onClick}>\n      <FormattedMessage id={'layerConfiguration.howTo'} />\n    </Button>\n  </StyledHowToButton>\n);\n\nexport const LayerColorSelector = ({\n  layer,\n  onChange,\n  label,\n  selectedColor,\n  property = 'color',\n  setColorUI\n}) => (\n  <SidePanelSection>\n    <ColorSelector\n      colorSets={[\n        {\n          selectedColor: selectedColor || layer.config.color,\n          setColor: rgbValue => onChange({[property]: rgbValue})\n        }\n      ]}\n      colorUI={layer.config.colorUI[property]}\n      setColorUI={newConfig => setColorUI(property, newConfig)}\n    />\n  </SidePanelSection>\n);\n\nexport const ArcLayerColorSelector = ({\n  layer,\n  onChangeConfig,\n  onChangeVisConfig,\n  property = 'color',\n  setColorUI\n}) => (\n  <SidePanelSection>\n    <ColorSelector\n      colorSets={[\n        {\n          selectedColor: layer.config.color,\n          setColor: rgbValue => onChangeConfig({color: rgbValue}),\n          label: 'Source'\n        },\n        {\n          selectedColor: layer.config.visConfig.targetColor || layer.config.color,\n          setColor: rgbValue => onChangeVisConfig({targetColor: rgbValue}),\n          label: 'Target'\n        }\n      ]}\n      colorUI={layer.config.colorUI[property]}\n      setColorUI={newConfig => setColorUI(property, newConfig)}\n    />\n  </SidePanelSection>\n);\n\nexport const LayerColorRangeSelector = ({layer, onChange, property = 'colorRange', setColorUI}) => (\n  <SidePanelSection>\n    <ColorSelector\n      colorSets={[\n        {\n          selectedColor: layer.config.visConfig[property],\n          isRange: true,\n          setColor: colorRange => onChange({[property]: colorRange})\n        }\n      ]}\n      colorUI={layer.config.colorUI[property]}\n      setColorUI={newConfig => setColorUI(property, newConfig)}\n    />\n  </SidePanelSection>\n);\n\nChannelByValueSelectorFactory.deps = [VisConfigByFieldSelectorFactory];\nexport function ChannelByValueSelectorFactory(VisConfigByFieldSelector) {\n  const ChannelByValueSelector = ({layer, channel, onChange, fields, description}) => {\n    const {\n      channelScaleType,\n      domain,\n      field,\n      key,\n      property,\n      range,\n      scale,\n      defaultMeasure,\n      supportedFieldTypes\n    } = channel;\n    const channelSupportedFieldTypes =\n      supportedFieldTypes || CHANNEL_SCALE_SUPPORTED_FIELDS[channelScaleType];\n    const supportedFields = fields.filter(({type}) => channelSupportedFieldTypes.includes(type));\n    const scaleOptions = layer.getScaleOptions(channel.key);\n    const showScale = !layer.isAggregated && layer.config[scale] && scaleOptions.length > 1;\n    const defaultDescription = 'layerConfiguration.defaultDescription';\n\n    return (\n      <VisConfigByFieldSelector\n        channel={channel.key}\n        description={description || defaultDescription}\n        domain={layer.config[domain]}\n        fields={supportedFields}\n        id={layer.id}\n        key={`${key}-channel-selector`}\n        property={property}\n        placeholder={defaultMeasure || 'placeholder.selectField'}\n        range={layer.config.visConfig[range]}\n        scaleOptions={scaleOptions}\n        scaleType={scale ? layer.config[scale] : null}\n        selectedField={layer.config[field]}\n        showScale={showScale}\n        updateField={val => onChange({[field]: val}, key)}\n        updateScale={val => onChange({[scale]: val}, key)}\n      />\n    );\n  };\n\n  return ChannelByValueSelector;\n}\n\nexport const AggrScaleSelector = ({channel, layer, onChange}) => {\n  const {scale, key} = channel;\n  const scaleOptions = layer.getScaleOptions(key);\n\n  return Array.isArray(scaleOptions) && scaleOptions.length > 1 ? (\n    <DimensionScaleSelector\n      label={`${key} Scale`}\n      options={scaleOptions}\n      scaleType={layer.config[scale]}\n      onSelect={val => onChange({[scale]: val}, key)}\n    />\n  ) : null;\n};\n\nexport const AggregationTypeSelector = ({layer, channel, onChange}) => {\n  const {field, aggregation, key} = channel;\n  const selectedField = layer.config[field];\n  const {visConfig} = layer.config;\n\n  // aggregation should only be selectable when field is selected\n  const aggregationOptions = layer.getAggregationOptions(key);\n\n  return (\n    <SidePanelSection>\n      <PanelLabel>\n        <FormattedMessage id={'layer.aggregateBy'} values={{field: selectedField.name}} />\n      </PanelLabel>\n      <ItemSelector\n        selectedItems={visConfig[aggregation]}\n        options={aggregationOptions}\n        multiSelect={false}\n        searchable={false}\n        onChange={value =>\n          onChange(\n            {\n              visConfig: {\n                ...layer.config.visConfig,\n                [aggregation]: value\n              }\n            },\n            channel.key\n          )\n        }\n      />\n    </SidePanelSection>\n  );\n};\n/* eslint-enable max-params */\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"export default function isElectron(mockUserAgent) {\n  if (typeof window !== 'undefined' && typeof window.process === 'object' && window.process.type === 'renderer') {\n    return true;\n  }\n  if (typeof process !== 'undefined' && typeof process.versions === 'object' && Boolean(process.versions['electron'])) {\n    return true;\n  }\n  const realUserAgent = typeof navigator === 'object' && typeof navigator.userAgent === 'string' && navigator.userAgent;\n  const userAgent = mockUserAgent || realUserAgent;\n  if (userAgent && userAgent.indexOf('Electron') >= 0) {\n    return true;\n  }\n  return false;\n}","map":{"version":3,"sources":["../../../src/lib/is-electron.ts"],"names":["isElectron","mockUserAgent","window","process","type","versions","Boolean","realUserAgent","navigator","userAgent","indexOf"],"mappings":"AAGA,eAAe,SAASA,UAAT,CAAoBC,aAApB,EAAqD;EAElE,IACE,OAAOC,MAAP,KAAkB,WAAlB,IACA,OAAOA,MAAM,CAACC,OAAd,KAA0B,QAD1B,IAGAD,MAAM,CAACC,OAAPD,CAAeE,IAAfF,KAAwB,UAJ1B,EAKE;IACA,OAAO,IAAP;EACD;EAED,IACE,OAAOC,OAAP,KAAmB,WAAnB,IACA,OAAOA,OAAO,CAACE,QAAf,KAA4B,QAD5B,IAGAC,OAAO,CAACH,OAAO,CAACE,QAARF,CAAiB,UAAjBA,CAAD,CAJT,EAKE;IACA,OAAO,IAAP;EACD;EAED,MAAMI,aAAa,GACjB,OAAOC,SAAP,KAAqB,QAArB,IAAiC,OAAOA,SAAS,CAACC,SAAjB,KAA+B,QAAhE,IAA4ED,SAAS,CAACC,SADxF;EAEA,MAAMA,SAAS,GAAGR,aAAa,IAAIM,aAAnC;EACA,IAAIE,SAAS,IAAIA,SAAS,CAACC,OAAVD,CAAkB,UAAlBA,CAAAA,IAAiC,CAAlD,EAAqD;IACnD,OAAO,IAAP;EACD;EACD,OAAO,KAAP;AACD","sourcesContent":["// based on https://github.com/cheton/is-electron\n// https://github.com/electron/electron/issues/2288\n/* eslint-disable complexity */\nexport default function isElectron(mockUserAgent?: string): boolean {\n  // Renderer process\n  if (\n    typeof window !== 'undefined' &&\n    typeof window.process === 'object' &&\n    // @ts-expect-error\n    window.process.type === 'renderer'\n  ) {\n    return true;\n  }\n  // Main process\n  if (\n    typeof process !== 'undefined' &&\n    typeof process.versions === 'object' &&\n    // eslint-disable-next-line\n    Boolean(process.versions['electron'])\n  ) {\n    return true;\n  }\n  // Detect the user agent when the `nodeIntegration` option is set to true\n  const realUserAgent =\n    typeof navigator === 'object' && typeof navigator.userAgent === 'string' && navigator.userAgent;\n  const userAgent = mockUserAgent || realUserAgent;\n  if (userAgent && userAgent.indexOf('Electron') >= 0) {\n    return true;\n  }\n  return false;\n}\n"]},"metadata":{},"sourceType":"module"}
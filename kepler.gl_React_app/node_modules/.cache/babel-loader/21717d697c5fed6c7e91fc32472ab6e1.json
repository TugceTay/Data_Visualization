{"ast":null,"code":"import { picking } from '@luma.gl/core';\nexport default Object.assign({\n  inject: {\n    'vs:DECKGL_FILTER_COLOR': \"\\n    picking_setPickingColor(geometry.pickingColor);\\n    // for picking depth values\\n    picking_setPickingAttribute(geometry.position.z);\\n    \",\n    'fs:DECKGL_FILTER_COLOR': {\n      order: 99,\n      injection: \"\\n    // use highlight color if this fragment belongs to the selected object.\\n    color = picking_filterHighlightColor(color);\\n\\n    // use picking color if rendering to picking FBO.\\n    color = picking_filterPickingColor(color);\\n      \"\n    }\n  }\n}, picking);","map":{"version":3,"sources":["../../../../src/shaderlib/picking/picking.js"],"names":["picking","assign","inject","order","injection"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,eAAtB;AAEA,eAAe,MAAM,CAACC,MAAP,CACb;EACEC,MAAM,EAAE;IACN,wBAAA,EAAA,qJADM;IAMN,wBAAA,EAA0B;MACxBC,KAAK,EAAE,EADiB;MAExBC,SAAS,EAAA;IAFe;EANpB;AADV,CADa,EAoBbJ,OApBa,CAAf","sourcesContent":["import {picking} from '@luma.gl/core';\n\nexport default Object.assign(\n  {\n    inject: {\n      'vs:DECKGL_FILTER_COLOR': `\n    picking_setPickingColor(geometry.pickingColor);\n    // for picking depth values\n    picking_setPickingAttribute(geometry.position.z);\n    `,\n      'fs:DECKGL_FILTER_COLOR': {\n        order: 99,\n        injection: `\n    // use highlight color if this fragment belongs to the selected object.\n    color = picking_filterHighlightColor(color);\n\n    // use picking color if rendering to picking FBO.\n    color = picking_filterPickingColor(color);\n      `\n      }\n    }\n  },\n  picking\n);\n"]},"metadata":{},"sourceType":"module"}
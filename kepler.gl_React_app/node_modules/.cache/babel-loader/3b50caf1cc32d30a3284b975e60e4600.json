{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _core = require(\"@deck.gl/core\");\nvar _scatterplotIconLayer = _interopRequireDefault(require(\"./scatterplot-icon-layer\"));\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n// default icon geometry is a square\nvar DEFAULT_ICON_GEOMETRY = [1, 1, 0, 1, -1, 0, -1, -1, 0, -1, -1, 0, -1, 1, 0, 1, 1, 0];\nvar defaultProps = {\n  getIconGeometry: function getIconGeometry(iconId) {\n    return DEFAULT_ICON_GEOMETRY;\n  },\n  getIcon: function getIcon(d) {\n    return d.icon;\n  }\n};\nvar SvgIconLayer = /*#__PURE__*/function (_CompositeLayer) {\n  (0, _inherits2[\"default\"])(SvgIconLayer, _CompositeLayer);\n  var _super = _createSuper(SvgIconLayer);\n  function SvgIconLayer() {\n    (0, _classCallCheck2[\"default\"])(this, SvgIconLayer);\n    return _super.apply(this, arguments);\n  }\n  (0, _createClass2[\"default\"])(SvgIconLayer, [{\n    key: \"initializeState\",\n    value:\n    // Must be defined\n    function initializeState() {\n      this.state = {\n        data: {}\n      };\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(_ref) {\n      var changeFlags = _ref.changeFlags;\n      if (changeFlags.dataChanged) {\n        this._extractSublayers();\n      }\n    }\n  }, {\n    key: \"_extractSublayers\",\n    value: function _extractSublayers() {\n      var _this$props = this.props,\n        data = _this$props.data,\n        getIconGeometry = _this$props.getIconGeometry,\n        getIcon = _this$props.getIcon;\n      var iconLayers = {};\n      for (var i = 0; i < data.length; i++) {\n        var iconId = getIcon(data[i]);\n        iconLayers[iconId] = iconLayers[iconId] || {\n          id: iconId,\n          geometry: getIconGeometry(iconId) || DEFAULT_ICON_GEOMETRY,\n          data: []\n        };\n        iconLayers[iconId].data.push(data[i]);\n      }\n      this.setState({\n        data: Object.values(iconLayers)\n      });\n    }\n  }, {\n    key: \"renderLayers\",\n    value: function renderLayers() {\n      var _this = this;\n      var layerId = this.props.id;\n      var layers = this.state.data && this.state.data.length && this.state.data.map(function (_ref2) {\n        var id = _ref2.id,\n          data = _ref2.data,\n          geometry = _ref2.geometry;\n        return new _scatterplotIconLayer[\"default\"](_objectSpread(_objectSpread({}, _this.props), {}, {\n          id: \"\".concat(layerId, \"-\").concat(id),\n          data: data,\n          iconGeometry: geometry\n        }));\n      });\n      return layers && layers.length > 0 ? layers : null;\n    }\n  }]);\n  return SvgIconLayer;\n}(_core.CompositeLayer);\nexports[\"default\"] = SvgIconLayer;\nSvgIconLayer.layerName = 'SvgIconLayer';\nSvgIconLayer.defaultProps = defaultProps;","map":{"version":3,"sources":["../../../src/deckgl-layers/svg-icon-layer/svg-icon-layer.js"],"names":["DEFAULT_ICON_GEOMETRY","defaultProps","getIconGeometry","getIcon","d","icon","SvgIconLayer","CompositeLayer","state","data","changeFlags","dataChanged","_extractSublayers","props","iconLayers","i","length","iconId","id","geometry","push","setState","Object","values","layerId","layers","map","ScatterplotIconLayer","iconGeometry","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {CompositeLayer} from '@deck.gl/core';\nimport ScatterplotIconLayer from './scatterplot-icon-layer';\n\n// default icon geometry is a square\nconst DEFAULT_ICON_GEOMETRY = [1, 1, 0, 1, -1, 0, -1, -1, 0, -1, -1, 0, -1, 1, 0, 1, 1, 0];\n\nconst defaultProps = {\n  getIconGeometry: iconId => DEFAULT_ICON_GEOMETRY,\n  getIcon: d => d.icon\n};\n\nexport default class SvgIconLayer extends CompositeLayer {\n  // Must be defined\n  initializeState() {\n    this.state = {\n      data: {}\n    };\n  }\n\n  updateState({changeFlags}) {\n    if (changeFlags.dataChanged) {\n      this._extractSublayers();\n    }\n  }\n\n  _extractSublayers() {\n    const {data, getIconGeometry, getIcon} = this.props;\n\n    const iconLayers = {};\n    for (let i = 0; i < data.length; i++) {\n      const iconId = getIcon(data[i]);\n      iconLayers[iconId] = iconLayers[iconId] || {\n        id: iconId,\n        geometry: getIconGeometry(iconId) || DEFAULT_ICON_GEOMETRY,\n        data: []\n      };\n      iconLayers[iconId].data.push(data[i]);\n    }\n    this.setState({\n      data: Object.values(iconLayers)\n    });\n  }\n\n  renderLayers() {\n    const layerId = this.props.id;\n\n    const layers =\n      this.state.data &&\n      this.state.data.length &&\n      this.state.data.map(\n        ({id, data, geometry}) =>\n          new ScatterplotIconLayer({\n            ...this.props,\n            id: `${layerId}-${id}`,\n            data,\n            iconGeometry: geometry\n          })\n      );\n\n    return layers && layers.length > 0 ? layers : null;\n  }\n}\n\nSvgIconLayer.layerName = 'SvgIconLayer';\nSvgIconLayer.defaultProps = defaultProps;\n"]},"metadata":{},"sourceType":"script"}
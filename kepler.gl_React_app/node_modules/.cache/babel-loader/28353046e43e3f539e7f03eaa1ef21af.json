{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport Point from '@mapbox/point-geometry';\nvar VectorTileFeature = function () {\n  _createClass(VectorTileFeature, null, [{\n    key: \"types\",\n    get: function get() {\n      return ['Unknown', 'Point', 'LineString', 'Polygon'];\n    }\n  }]);\n  function VectorTileFeature(pbf, end, extent, keys, values) {\n    _classCallCheck(this, VectorTileFeature);\n    this.properties = {};\n    this.extent = extent;\n    this.type = 0;\n    this._pbf = pbf;\n    this._geometry = -1;\n    this._keys = keys;\n    this._values = values;\n    pbf.readFields(readFeature, this, end);\n  }\n  _createClass(VectorTileFeature, [{\n    key: \"loadGeometry\",\n    value: function loadGeometry() {\n      var pbf = this._pbf;\n      pbf.pos = this._geometry;\n      var end = pbf.readVarint() + pbf.pos;\n      var cmd = 1;\n      var length = 0;\n      var x = 0;\n      var y = 0;\n      var lines = [];\n      var line;\n      while (pbf.pos < end) {\n        if (length <= 0) {\n          var cmdLen = pbf.readVarint();\n          cmd = cmdLen & 0x7;\n          length = cmdLen >> 3;\n        }\n        length--;\n        if (cmd === 1 || cmd === 2) {\n          x += pbf.readSVarint();\n          y += pbf.readSVarint();\n          if (cmd === 1) {\n            if (line) lines.push(line);\n            line = [];\n          }\n          line.push(new Point(x, y));\n        } else if (cmd === 7) {\n          if (line) {\n            line.push(line[0].clone());\n          }\n        } else {\n          throw new Error(\"unknown command \".concat(cmd));\n        }\n      }\n      if (line) lines.push(line);\n      return lines;\n    }\n  }, {\n    key: \"bbox\",\n    value: function bbox() {\n      var pbf = this._pbf;\n      pbf.pos = this._geometry;\n      var end = pbf.readVarint() + pbf.pos;\n      var cmd = 1;\n      var length = 0;\n      var x = 0;\n      var y = 0;\n      var x1 = Infinity;\n      var x2 = -Infinity;\n      var y1 = Infinity;\n      var y2 = -Infinity;\n      while (pbf.pos < end) {\n        if (length <= 0) {\n          var cmdLen = pbf.readVarint();\n          cmd = cmdLen & 0x7;\n          length = cmdLen >> 3;\n        }\n        length--;\n        if (cmd === 1 || cmd === 2) {\n          x += pbf.readSVarint();\n          y += pbf.readSVarint();\n          if (x < x1) x1 = x;\n          if (x > x2) x2 = x;\n          if (y < y1) y1 = y;\n          if (y > y2) y2 = y;\n        } else if (cmd !== 7) {\n          throw new Error(\"unknown command \".concat(cmd));\n        }\n      }\n      return [x1, y1, x2, y2];\n    }\n  }, {\n    key: \"toGeoJSON\",\n    value: function toGeoJSON(x, y, z) {\n      var size = this.extent * Math.pow(2, z);\n      var x0 = this.extent * x;\n      var y0 = this.extent * y;\n      var coords = this.loadGeometry();\n      var type = VectorTileFeature.types[this.type];\n      var i;\n      var j;\n      function project(line) {\n        for (var _j = 0; _j < line.length; _j++) {\n          var p = line[_j];\n          var y2 = 180 - (p.y + y0) * 360 / size;\n          line[_j] = [(p.x + x0) * 360 / size - 180, 360 / Math.PI * Math.atan(Math.exp(y2 * Math.PI / 180)) - 90];\n        }\n      }\n      switch (this.type) {\n        case 1:\n          var points = [];\n          for (i = 0; i < coords.length; i++) {\n            points[i] = coords[i][0];\n          }\n          coords = points;\n          project(coords);\n          break;\n        case 2:\n          for (i = 0; i < coords.length; i++) {\n            project(coords[i]);\n          }\n          break;\n        case 3:\n          coords = classifyRings(coords);\n          for (i = 0; i < coords.length; i++) {\n            for (j = 0; j < coords[i].length; j++) {\n              project(coords[i][j]);\n            }\n          }\n          break;\n      }\n      if (coords.length === 1) {\n        coords = coords[0];\n      } else {\n        type = \"Multi\".concat(type);\n      }\n      var result = {\n        type: 'Feature',\n        geometry: {\n          type: type,\n          coordinates: coords\n        },\n        properties: this.properties\n      };\n      if ('id' in this) {}\n      return result;\n    }\n  }]);\n  return VectorTileFeature;\n}();\nexport { VectorTileFeature as default };\nfunction classifyRings(rings) {\n  var len = rings.length;\n  if (len <= 1) return [rings];\n  var polygons = [];\n  var polygon;\n  var ccw;\n  for (var i = 0; i < len; i++) {\n    var area = signedArea(rings[i]);\n    if (area === 0) continue;\n    if (ccw === undefined) ccw = area < 0;\n    if (ccw === area < 0) {\n      if (polygon) polygons.push(polygon);\n      polygon = [rings[i]];\n    } else {\n      polygon.push(rings[i]);\n    }\n  }\n  if (polygon) polygons.push(polygon);\n  return polygons;\n}\nfunction signedArea(ring) {\n  var sum = 0;\n  for (var i = 0, j = ring.length - 1, p1, p2; i < ring.length; j = i++) {\n    p1 = ring[i];\n    p2 = ring[j];\n    sum += (p2.x - p1.x) * (p1.y + p2.y);\n  }\n  return sum;\n}\nfunction readFeature(tag, feature, pbf) {\n  if (tag === 1) feature.id = pbf.readVarint();else if (tag === 2) readTag(pbf, feature);else if (tag === 3) feature.type = pbf.readVarint();else if (tag === 4) feature._geometry = pbf.pos;\n}\nfunction readTag(pbf, feature) {\n  var end = pbf.readVarint() + pbf.pos;\n  while (pbf.pos < end) {\n    var key = feature._keys[pbf.readVarint()];\n    var value = feature._values[pbf.readVarint()];\n    feature.properties[key] = value;\n  }\n}","map":{"version":3,"sources":["../../../../src/lib/mapbox-vector-tile/vector-tile-feature.js"],"names":["Point","VectorTileFeature","pbf","end","extent","keys","values","properties","type","_pbf","_geometry","_keys","_values","readFields","readFeature","pos","readVarint","cmd","length","x","y","lines","line","cmdLen","readSVarint","push","clone","Error","x1","Infinity","x2","y1","y2","z","size","Math","pow","x0","y0","coords","loadGeometry","types","i","j","project","p","PI","atan","exp","points","classifyRings","result","geometry","coordinates","rings","len","polygons","polygon","ccw","area","signedArea","undefined","ring","sum","p1","p2","tag","feature","id","readTag","key","value"],"mappings":";;AAEA,OAAOA,KAAP,MAAkB,wBAAlB;IAEqBC,iB;;;wBACA;MACjB,OAAO,CAAC,SAAD,EAAY,OAAZ,EAAqB,YAArB,EAAmC,SAAnC,CAAP;IACD;;EAED,SAAA,iBAAA,CAAYC,GAAZ,EAAiBC,GAAjB,EAAsBC,MAAtB,EAA8BC,IAA9B,EAAoCC,MAApC,EAA4C;IAAA,eAAA,CAAA,IAAA,EAAA,iBAAA,CAAA;IAE1C,IAAA,CAAKC,UAAL,GAAkB,CAAA,CAAlB;IACA,IAAA,CAAKH,MAAL,GAAcA,MAAd;IACA,IAAA,CAAKI,IAAL,GAAY,CAAZ;IAGA,IAAA,CAAKC,IAAL,GAAYP,GAAZ;IACA,IAAA,CAAKQ,SAAL,GAAiB,CAAC,CAAlB;IACA,IAAA,CAAKC,KAAL,GAAaN,IAAb;IACA,IAAA,CAAKO,OAAL,GAAeN,MAAf;IAEAJ,GAAG,CAACW,UAAJX,CAAeY,WAAfZ,EAA4B,IAA5BA,EAAkCC,GAAlCD,CAAAA;EACD;;;mCAGc;MACb,IAAMA,GAAG,GAAG,IAAA,CAAKO,IAAjB;MACAP,GAAG,CAACa,GAAJb,GAAU,IAAA,CAAKQ,SAAfR;MAEA,IAAMC,GAAG,GAAGD,GAAG,CAACc,UAAJd,EAAAA,GAAmBA,GAAG,CAACa,GAAnC;MACA,IAAIE,GAAG,GAAG,CAAV;MACA,IAAIC,MAAM,GAAG,CAAb;MACA,IAAIC,CAAC,GAAG,CAAR;MACA,IAAIC,CAAC,GAAG,CAAR;MACA,IAAMC,KAAK,GAAG,EAAd;MACA,IAAIC,IAAJ;MAEA,OAAOpB,GAAG,CAACa,GAAJb,GAAUC,GAAjB,EAAsB;QACpB,IAAIe,MAAM,IAAI,CAAd,EAAiB;UACf,IAAMK,MAAM,GAAGrB,GAAG,CAACc,UAAJd,EAAf;UACAe,GAAG,GAAGM,MAAM,GAAG,GAAfN;UACAC,MAAM,GAAGK,MAAM,IAAI,CAAnBL;QACD;QAEDA,MAAM,EAAA;QAEN,IAAID,GAAG,KAAK,CAARA,IAAaA,GAAG,KAAK,CAAzB,EAA4B;UAC1BE,CAAC,IAAIjB,GAAG,CAACsB,WAAJtB,EAALiB;UACAC,CAAC,IAAIlB,GAAG,CAACsB,WAAJtB,EAALkB;UAEA,IAAIH,GAAG,KAAK,CAAZ,EAAe;YAEb,IAAIK,IAAJ,EAAUD,KAAK,CAACI,IAANJ,CAAWC,IAAXD,CAAAA;YACVC,IAAI,GAAG,EAAPA;UACD;UAEDA,IAAI,CAACG,IAALH,CAAU,IAAItB,KAAJ,CAAUmB,CAAV,EAAaC,CAAb,CAAVE,CAAAA;QACD,CAXD,MAWO,IAAIL,GAAG,KAAK,CAAZ,EAAe;UAEpB,IAAIK,IAAJ,EAAU;YACRA,IAAI,CAACG,IAALH,CAAUA,IAAI,CAAC,CAAD,CAAJA,CAAQI,KAARJ,EAAVA,CAAAA;UACD;QACF,CALM,MAKA;UACL,MAAM,IAAIK,KAAJ,CAAA,kBAAA,CAAA,MAAA,CAA6BV,GAA7B,CAAA,CAAN;QACD;MACF;MAED,IAAIK,IAAJ,EAAUD,KAAK,CAACI,IAANJ,CAAWC,IAAXD,CAAAA;MAEV,OAAOA,KAAP;IACD;;;2BAGM;MACL,IAAMnB,GAAG,GAAG,IAAA,CAAKO,IAAjB;MACAP,GAAG,CAACa,GAAJb,GAAU,IAAA,CAAKQ,SAAfR;MAEA,IAAMC,GAAG,GAAGD,GAAG,CAACc,UAAJd,EAAAA,GAAmBA,GAAG,CAACa,GAAnC;MACA,IAAIE,GAAG,GAAG,CAAV;MACA,IAAIC,MAAM,GAAG,CAAb;MACA,IAAIC,CAAC,GAAG,CAAR;MACA,IAAIC,CAAC,GAAG,CAAR;MACA,IAAIQ,EAAE,GAAGC,QAAT;MACA,IAAIC,EAAE,GAAG,CAACD,QAAV;MACA,IAAIE,EAAE,GAAGF,QAAT;MACA,IAAIG,EAAE,GAAG,CAACH,QAAV;MAEA,OAAO3B,GAAG,CAACa,GAAJb,GAAUC,GAAjB,EAAsB;QACpB,IAAIe,MAAM,IAAI,CAAd,EAAiB;UACf,IAAMK,MAAM,GAAGrB,GAAG,CAACc,UAAJd,EAAf;UACAe,GAAG,GAAGM,MAAM,GAAG,GAAfN;UACAC,MAAM,GAAGK,MAAM,IAAI,CAAnBL;QACD;QAEDA,MAAM,EAAA;QAEN,IAAID,GAAG,KAAK,CAARA,IAAaA,GAAG,KAAK,CAAzB,EAA4B;UAC1BE,CAAC,IAAIjB,GAAG,CAACsB,WAAJtB,EAALiB;UACAC,CAAC,IAAIlB,GAAG,CAACsB,WAAJtB,EAALkB;UACA,IAAID,CAAC,GAAGS,EAAR,EAAYA,EAAE,GAAGT,CAALS;UACZ,IAAIT,CAAC,GAAGW,EAAR,EAAYA,EAAE,GAAGX,CAALW;UACZ,IAAIV,CAAC,GAAGW,EAAR,EAAYA,EAAE,GAAGX,CAALW;UACZ,IAAIX,CAAC,GAAGY,EAAR,EAAYA,EAAE,GAAGZ,CAALY;QACb,CAPD,MAOO,IAAIf,GAAG,KAAK,CAAZ,EAAe;UACpB,MAAM,IAAIU,KAAJ,CAAA,kBAAA,CAAA,MAAA,CAA6BV,GAA7B,CAAA,CAAN;QACD;MACF;MAED,OAAO,CAACW,EAAD,EAAKG,EAAL,EAASD,EAAT,EAAaE,EAAb,CAAP;IACD;;;8BAESb,C,EAAGC,C,EAAGa,C,EAAG;MACjB,IAAMC,IAAI,GAAG,IAAA,CAAK9B,MAAL,GAAc+B,IAAI,CAACC,GAALD,CAAS,CAATA,EAAYF,CAAZE,CAA3B;MACA,IAAME,EAAE,GAAG,IAAA,CAAKjC,MAAL,GAAce,CAAzB;MACA,IAAMmB,EAAE,GAAG,IAAA,CAAKlC,MAAL,GAAcgB,CAAzB;MACA,IAAImB,MAAM,GAAG,IAAA,CAAKC,YAAL,EAAb;MACA,IAAIhC,IAAI,GAAGP,iBAAiB,CAACwC,KAAlBxC,CAAwB,IAAA,CAAKO,IAA7BP,CAAX;MACA,IAAIyC,CAAJ;MACA,IAAIC,CAAJ;MAEA,SAASC,OAAT,CAAiBtB,IAAjB,EAAuB;QACrB,KAAK,IAAIqB,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGrB,IAAI,CAACJ,MAAzB,EAAiCyB,EAAC,EAAlC,EAAsC;UACpC,IAAME,CAAC,GAAGvB,IAAI,CAACqB,EAAD,CAAd;UACA,IAAMX,EAAE,GAAG,GAAA,GAAO,CAACa,CAAC,CAACzB,CAAFyB,GAAMP,EAAP,IAAa,GAAd,GAAqBJ,IAAtC;UACAZ,IAAI,CAACqB,EAAD,CAAJrB,GAAU,CACP,CAACuB,CAAC,CAAC1B,CAAF0B,GAAMR,EAAP,IAAa,GAAd,GAAqBH,IAArB,GAA4B,GADpB,EAEP,GAAA,GAAMC,IAAI,CAACW,EAAZ,GAAkBX,IAAI,CAACY,IAALZ,CAAUA,IAAI,CAACa,GAALb,CAAUH,EAAE,GAAGG,IAAI,CAACW,EAAX,GAAiB,GAA1BX,CAAVA,CAAlB,GAA8D,EAFtD,CAAVb;QAID;MACF;MAED,QAAQ,IAAA,CAAKd,IAAb;QACE,KAAK,CAAL;UACE,IAAIyC,MAAM,GAAG,EAAb;UACA,KAAKP,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGH,MAAM,CAACrB,MAAvB,EAA+BwB,CAAC,EAAhC,EAAoC;YAClCO,MAAM,CAACP,CAAD,CAANO,GAAYV,MAAM,CAACG,CAAD,CAANH,CAAU,CAAVA,CAAZU;UACD;UACDV,MAAM,GAAGU,MAATV;UACAK,OAAO,CAACL,MAAD,CAAPK;UACA;QAEF,KAAK,CAAL;UACE,KAAKF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGH,MAAM,CAACrB,MAAvB,EAA+BwB,CAAC,EAAhC,EAAoC;YAClCE,OAAO,CAACL,MAAM,CAACG,CAAD,CAAP,CAAPE;UACD;UACD;QAEF,KAAK,CAAL;UACEL,MAAM,GAAGW,aAAa,CAACX,MAAD,CAAtBA;UACA,KAAKG,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGH,MAAM,CAACrB,MAAvB,EAA+BwB,CAAC,EAAhC,EAAoC;YAClC,KAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGJ,MAAM,CAACG,CAAD,CAANH,CAAUrB,MAA1B,EAAkCyB,CAAC,EAAnC,EAAuC;cACrCC,OAAO,CAACL,MAAM,CAACG,CAAD,CAANH,CAAUI,CAAVJ,CAAD,CAAPK;YACD;UACF;UACD;MAAA;MAGJ,IAAIL,MAAM,CAACrB,MAAPqB,KAAkB,CAAtB,EAAyB;QACvBA,MAAM,GAAGA,MAAM,CAAC,CAAD,CAAfA;MACD,CAFD,MAEO;QACL/B,IAAI,GAAA,OAAA,CAAA,MAAA,CAAWA,IAAX,CAAJA;MACD;MAED,IAAM2C,MAAM,GAAG;QACb3C,IAAI,EAAE,SADO;QAEb4C,QAAQ,EAAE;UACR5C,IAAI,EAAJA,IADQ;UAER6C,WAAW,EAAEd;QAFL,CAFG;QAMbhC,UAAU,EAAE,IAAA,CAAKA;MANJ,CAAf;MASA,IAAI,IAAA,IAAQ,IAAZ,EAAkB,CAGjB;MAED,OAAO4C,MAAP;IACD;;;;SA9KkBlD,iB;AAqLrB,SAASiD,aAAT,CAAuBI,KAAvB,EAA8B;EAC5B,IAAMC,GAAG,GAAGD,KAAK,CAACpC,MAAlB;EAEA,IAAIqC,GAAG,IAAI,CAAX,EAAc,OAAO,CAACD,KAAD,CAAP;EAEd,IAAME,QAAQ,GAAG,EAAjB;EACA,IAAIC,OAAJ;EACA,IAAIC,GAAJ;EAEA,KAAK,IAAIhB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGa,GAApB,EAAyBb,CAAC,EAA1B,EAA8B;IAC5B,IAAMiB,IAAI,GAAGC,UAAU,CAACN,KAAK,CAACZ,CAAD,CAAN,CAAvB;IACA,IAAIiB,IAAI,KAAK,CAAb,EAAgB;IAEhB,IAAID,GAAG,KAAKG,SAAZ,EAAuBH,GAAG,GAAGC,IAAI,GAAG,CAAbD;IAEvB,IAAIA,GAAG,KAAKC,IAAI,GAAG,CAAnB,EAAsB;MACpB,IAAIF,OAAJ,EAAaD,QAAQ,CAAC/B,IAAT+B,CAAcC,OAAdD,CAAAA;MACbC,OAAO,GAAG,CAACH,KAAK,CAACZ,CAAD,CAAN,CAAVe;IACD,CAHD,MAGO;MAELA,OAAO,CAAChC,IAARgC,CAAaH,KAAK,CAACZ,CAAD,CAAlBe,CAAAA;IACD;EACF;EACD,IAAIA,OAAJ,EAAaD,QAAQ,CAAC/B,IAAT+B,CAAcC,OAAdD,CAAAA;EAEb,OAAOA,QAAP;AACD;AAED,SAASI,UAAT,CAAoBE,IAApB,EAA0B;EACxB,IAAIC,GAAG,GAAG,CAAV;EACA,KAAK,IAAIrB,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGmB,IAAI,CAAC5C,MAAL4C,GAAc,CAA7B,EAAgCE,EAAhC,EAAoCC,EAAzC,EAA6CvB,CAAC,GAAGoB,IAAI,CAAC5C,MAAtD,EAA8DyB,CAAC,GAAGD,CAAC,EAAnE,EAAuE;IACrEsB,EAAE,GAAGF,IAAI,CAACpB,CAAD,CAATsB;IACAC,EAAE,GAAGH,IAAI,CAACnB,CAAD,CAATsB;IACAF,GAAG,IAAI,CAACE,EAAE,CAAC9C,CAAH8C,GAAOD,EAAE,CAAC7C,CAAX,KAAiB6C,EAAE,CAAC5C,CAAH4C,GAAOC,EAAE,CAAC7C,CAA3B,CAAP2C;EACD;EACD,OAAOA,GAAP;AACD;AAED,SAASjD,WAAT,CAAqBoD,GAArB,EAA0BC,OAA1B,EAAmCjE,GAAnC,EAAwC;EACtC,IAAIgE,GAAG,KAAK,CAAZ,EAAeC,OAAO,CAACC,EAARD,GAAajE,GAAG,CAACc,UAAJd,EAAbiE,CAAf,KACK,IAAID,GAAG,KAAK,CAAZ,EAAeG,OAAO,CAACnE,GAAD,EAAMiE,OAAN,CAAPE,CAAf,KACA,IAAIH,GAAG,KAAK,CAAZ,EAAeC,OAAO,CAAC3D,IAAR2D,GAAejE,GAAG,CAACc,UAAJd,EAAfiE,CAAf,KACA,IAAID,GAAG,KAAK,CAAZ,EAAeC,OAAO,CAACzD,SAARyD,GAAoBjE,GAAG,CAACa,GAAxBoD;AACrB;AAED,SAASE,OAAT,CAAiBnE,GAAjB,EAAsBiE,OAAtB,EAA+B;EAC7B,IAAMhE,GAAG,GAAGD,GAAG,CAACc,UAAJd,EAAAA,GAAmBA,GAAG,CAACa,GAAnC;EAEA,OAAOb,GAAG,CAACa,GAAJb,GAAUC,GAAjB,EAAsB;IACpB,IAAMmE,GAAG,GAAGH,OAAO,CAACxD,KAARwD,CAAcjE,GAAG,CAACc,UAAJd,EAAdiE,CAAZ;IACA,IAAMI,KAAK,GAAGJ,OAAO,CAACvD,OAARuD,CAAgBjE,GAAG,CAACc,UAAJd,EAAhBiE,CAAd;IACAA,OAAO,CAAC5D,UAAR4D,CAAmBG,GAAnBH,CAAAA,GAA0BI,KAA1BJ;EACD;AACF","sourcesContent":["// This code is forked from https://github.com/mapbox/vector-tile-js under BSD 3-clause license.\n/* eslint-disable */\nimport Point from '@mapbox/point-geometry';\n\nexport default class VectorTileFeature {\n  static get types() {\n    return ['Unknown', 'Point', 'LineString', 'Polygon'];\n  }\n\n  constructor(pbf, end, extent, keys, values) {\n    // Public\n    this.properties = {};\n    this.extent = extent;\n    this.type = 0;\n\n    // Private\n    this._pbf = pbf;\n    this._geometry = -1;\n    this._keys = keys;\n    this._values = values;\n\n    pbf.readFields(readFeature, this, end);\n  }\n\n  // eslint-disable-next-line complexity, max-statements\n  loadGeometry() {\n    const pbf = this._pbf;\n    pbf.pos = this._geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    const lines = [];\n    let line;\n\n    while (pbf.pos < end) {\n      if (length <= 0) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (line) lines.push(line);\n          line = [];\n        }\n        // @ts-ignore\n        line.push(new Point(x, y));\n      } else if (cmd === 7) {\n        // Workaround for https://github.com/mapbox/mapnik-vector-tile/issues/90\n        if (line) {\n          line.push(line[0].clone()); // closePolygon\n        }\n      } else {\n        throw new Error(`unknown command ${cmd}`);\n      }\n    }\n\n    if (line) lines.push(line);\n\n    return lines;\n  }\n\n  // eslint-disable-next-line max-statements\n  bbox() {\n    const pbf = this._pbf;\n    pbf.pos = this._geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let x1 = Infinity;\n    let x2 = -Infinity;\n    let y1 = Infinity;\n    let y2 = -Infinity;\n\n    while (pbf.pos < end) {\n      if (length <= 0) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n        if (x < x1) x1 = x;\n        if (x > x2) x2 = x;\n        if (y < y1) y1 = y;\n        if (y > y2) y2 = y;\n      } else if (cmd !== 7) {\n        throw new Error(`unknown command ${cmd}`);\n      }\n    }\n\n    return [x1, y1, x2, y2];\n  }\n\n  toGeoJSON(x, y, z) {\n    const size = this.extent * Math.pow(2, z);\n    const x0 = this.extent * x;\n    const y0 = this.extent * y;\n    let coords = this.loadGeometry();\n    let type = VectorTileFeature.types[this.type];\n    let i;\n    let j;\n\n    function project(line) {\n      for (let j = 0; j < line.length; j++) {\n        const p = line[j];\n        const y2 = 180 - ((p.y + y0) * 360) / size;\n        line[j] = [\n          ((p.x + x0) * 360) / size - 180,\n          (360 / Math.PI) * Math.atan(Math.exp((y2 * Math.PI) / 180)) - 90\n        ];\n      }\n    }\n\n    switch (this.type) {\n      case 1:\n        var points = [];\n        for (i = 0; i < coords.length; i++) {\n          points[i] = coords[i][0];\n        }\n        coords = points;\n        project(coords);\n        break;\n\n      case 2:\n        for (i = 0; i < coords.length; i++) {\n          project(coords[i]);\n        }\n        break;\n\n      case 3:\n        coords = classifyRings(coords);\n        for (i = 0; i < coords.length; i++) {\n          for (j = 0; j < coords[i].length; j++) {\n            project(coords[i][j]);\n          }\n        }\n        break;\n    }\n\n    if (coords.length === 1) {\n      coords = coords[0];\n    } else {\n      type = `Multi${type}`;\n    }\n\n    const result = {\n      type: 'Feature',\n      geometry: {\n        type,\n        coordinates: coords\n      },\n      properties: this.properties\n    };\n\n    if ('id' in this) {\n      // @ts-igore\n      // result.id = this.id;\n    }\n\n    return result;\n  }\n}\n\n/**\n * Classifies an array of rings into polygons with outer rings and holes\n */\n\nfunction classifyRings(rings) {\n  const len = rings.length;\n\n  if (len <= 1) return [rings];\n\n  const polygons = [];\n  let polygon;\n  let ccw;\n\n  for (let i = 0; i < len; i++) {\n    const area = signedArea(rings[i]);\n    if (area === 0) continue;\n\n    if (ccw === undefined) ccw = area < 0;\n\n    if (ccw === area < 0) {\n      if (polygon) polygons.push(polygon);\n      polygon = [rings[i]];\n    } else {\n      // @ts-ignore\n      polygon.push(rings[i]);\n    }\n  }\n  if (polygon) polygons.push(polygon);\n\n  return polygons;\n}\n\nfunction signedArea(ring) {\n  let sum = 0;\n  for (let i = 0, j = ring.length - 1, p1, p2; i < ring.length; j = i++) {\n    p1 = ring[i];\n    p2 = ring[j];\n    sum += (p2.x - p1.x) * (p1.y + p2.y);\n  }\n  return sum;\n}\n\nfunction readFeature(tag, feature, pbf) {\n  if (tag === 1) feature.id = pbf.readVarint();\n  else if (tag === 2) readTag(pbf, feature);\n  else if (tag === 3) feature.type = pbf.readVarint();\n  else if (tag === 4) feature._geometry = pbf.pos;\n}\n\nfunction readTag(pbf, feature) {\n  const end = pbf.readVarint() + pbf.pos;\n\n  while (pbf.pos < end) {\n    const key = feature._keys[pbf.readVarint()];\n    const value = feature._values[pbf.readVarint()];\n    feature.properties[key] = value;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
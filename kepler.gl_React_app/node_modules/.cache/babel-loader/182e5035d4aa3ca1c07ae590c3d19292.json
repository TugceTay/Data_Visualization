{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _d3Array = require(\"d3-array\");\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\nvar _colorUtils = require(\"../../../utils/color-utils\");\nvar _colorPalette = require(\"../../../constants/color-palette\");\nvar _templateObject, _templateObject2, _templateObject3;\nvar propTypes = {\n  onSelectColor: _propTypes[\"default\"].func.isRequired,\n  // hex value\n  selectedColor: _propTypes[\"default\"].string.isRequired\n};\nvar PALETTE_HEIGHT = '8px';\nvar ROWS = 22;\nvar StyledColorPalette = _styledComponents[\"default\"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  padding: 12px;\\n\\n  :hover {\\n    cursor: pointer;\\n  }\\n\"])));\nvar StyledColorColumn = _styledComponents[\"default\"].div(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  display: flex;\\n  flex-grow: 1;\\n  flex-direction: column;\\n  justify-content: space-between;\\n\"])));\nvar StyledColorBlock = _styledComponents[\"default\"].div(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  flex-grow: 1;\\n  height: \", \";\\n  border-width: 1px;\\n  border-style: solid;\\n\"])), PALETTE_HEIGHT);\nvar SingleColorPalette = function SingleColorPalette(_ref) {\n  var selectedColor = _ref.selectedColor,\n    onSelectColor = _ref.onSelectColor;\n  return /*#__PURE__*/_react[\"default\"].createElement(StyledColorPalette, {\n    className: \"single-color-palette\"\n  }, _colorPalette.Themes.map(function (theme, col) {\n    return /*#__PURE__*/_react[\"default\"].createElement(StyledColorColumn, {\n      key: theme,\n      className: \"single-color-palette__column\"\n    }, (0, _d3Array.range)(1, ROWS + 1, 1).map(function (key, i) {\n      return /*#__PURE__*/_react[\"default\"].createElement(StyledColorBlock, {\n        className: \"single-color-palette__block\",\n        style: {\n          backgroundColor: _colorPalette.ColorsByTheme[theme][key],\n          borderColor: selectedColor === _colorPalette.ColorsByTheme[theme][key].toUpperCase() ? 'white' : _colorPalette.ColorsByTheme[theme][key]\n        },\n        key: \"\".concat(theme, \"_\").concat(key),\n        selected: selectedColor === _colorPalette.ColorsByTheme[theme][key].toUpperCase(),\n        onClick: function onClick(e) {\n          return onSelectColor((0, _colorUtils.hexToRgb)(_colorPalette.ColorsByTheme[theme][key]), e);\n        }\n      });\n    }));\n  }));\n};\nSingleColorPalette.propTypes = propTypes;\nvar _default = SingleColorPalette;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../../src/components/side-panel/layer-panel/single-color-palette.js"],"names":["propTypes","onSelectColor","PropTypes","func","isRequired","selectedColor","string","PALETTE_HEIGHT","ROWS","StyledColorPalette","styled","div","StyledColorColumn","StyledColorBlock","SingleColorPalette","map","theme","col","key","i","backgroundColor","ColorsByTheme","borderColor","toUpperCase","e"],"mappings":";;;;;;;;AAoBA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;AACA,IAAA,UAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;AACA,IAAA,iBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,4BAAA,CAAA;AAEA,IAAA,aAAA,GAAA,OAAA,CAAA,kCAAA,CAAA;;AAEA,IAAMA,SAAS,GAAG;EAChBC,aAAa,EAAEC,UAAAA,CAAAA,SAAAA,CAAAA,CAAUC,IAAVD,CAAeE,UADd;EAEhB;EACAC,aAAa,EAAEH,UAAAA,CAAAA,SAAAA,CAAAA,CAAUI,MAAVJ,CAAiBE;AAHhB,CAAlB;AAMA,IAAMG,cAAc,GAAG,KAAvB;AACA,IAAMC,IAAI,GAAG,EAAb;AAEA,IAAMC,kBAAkB,GAAGC,iBAAAA,CAAAA,SAAAA,CAAAA,CAAOC,GAAV,CAAA,eAAA,KAAA,eAAA,GAAA,CAAA,CAAA,EAAA,uBAAA,CAAA,SAAA,CAAA,EAAA,CAAA,4IAAA,CAAA,CAAA,CAAA,CAAxB;AAWA,IAAMC,iBAAiB,GAAGF,iBAAAA,CAAAA,SAAAA,CAAAA,CAAOC,GAAV,CAAA,gBAAA,KAAA,gBAAA,GAAA,CAAA,CAAA,EAAA,uBAAA,CAAA,SAAA,CAAA,EAAA,CAAA,qGAAA,CAAA,CAAA,CAAA,CAAvB;AAOA,IAAME,gBAAgB,GAAGH,iBAAAA,CAAAA,SAAAA,CAAAA,CAAOC,GAAV,CAAA,gBAAA,KAAA,gBAAA,GAAA,CAAA,CAAA,EAAA,uBAAA,CAAA,SAAA,CAAA,EAAA,CAAA,+BAAA,EAAA,mDAAA,CAAA,CAAA,CAAA,EAEVJ,cAFU,CAAtB;AAOA,IAAMO,kBAAkB,GAAG,SAArBA,kBAAqB,CAAA,IAAA,EAAA;EAAA,IAAET,aAAF,GAAA,IAAA,CAAEA,aAAF;IAAiBJ,aAAjB,GAAA,IAAA,CAAiBA,aAAjB;EAAA,OAAA,aACzB,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,kBAAD,EAAA;IAAoB,SAAS,EAAC;EAA9B,CAAA,EACG,aAAA,CAAA,MAAA,CAAOc,GAAP,CAAW,UAACC,KAAD,EAAQC,GAAR,EAAA;IAAA,OAAA,aACV,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,iBAAD,EAAA;MAAmB,GAAG,EAAED,KAAxB;MAA+B,SAAS,EAAC;IAAzC,CAAA,EACG,CAAA,CAAA,EAAA,QAAA,CAAA,KAAA,EAAM,CAAN,EAASR,IAAI,GAAG,CAAhB,EAAmB,CAAnB,CAAA,CAAsBO,GAAtB,CAA0B,UAACG,GAAD,EAAMC,CAAN,EAAA;MAAA,OAAA,aACzB,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,gBAAD,EAAA;QACE,SAAS,EAAC,6BADZ;QAEE,KAAK,EAAE;UACLC,eAAe,EAAEC,aAAAA,CAAAA,aAAAA,CAAcL,KAAdK,CAAAA,CAAqBH,GAArBG,CADZ;UAELC,WAAW,EACTjB,aAAa,KAAKgB,aAAAA,CAAAA,aAAAA,CAAcL,KAAdK,CAAAA,CAAqBH,GAArBG,CAAAA,CAA0BE,WAA1BF,EAAlBhB,GACI,OADJA,GAEIgB,aAAAA,CAAAA,aAAAA,CAAcL,KAAdK,CAAAA,CAAqBH,GAArBG;QALD,CAFT;QASE,GAAG,EAAA,EAAA,CAAA,MAAA,CAAKL,KAAL,EAAA,GAAA,CAAA,CAAA,MAAA,CAAcE,GAAd,CATL;QAUE,QAAQ,EAAEb,aAAa,KAAKgB,aAAAA,CAAAA,aAAAA,CAAcL,KAAdK,CAAAA,CAAqBH,GAArBG,CAAAA,CAA0BE,WAA1BF,EAV9B;QAWE,OAAO,EAAE,SAAA,OAAA,CAAA,CAAC,EAAA;UAAA,OAAIpB,aAAa,CAAC,CAAA,CAAA,EAAA,WAAA,CAAA,QAAA,EAASoB,aAAAA,CAAAA,aAAAA,CAAcL,KAAdK,CAAAA,CAAqBH,GAArBG,CAAT,CAAD,EAAsCG,CAAtC,CAAjB;QAAA;MAXZ,CAAA,CADyB;IAAA,CAA1B,CADH,CADU;EAAA,CAAX,CADH,CADyB;AAAA,CAA3B;AAwBAV,kBAAkB,CAACd,SAAnBc,GAA+Bd,SAA/Bc;eAEeA,kB","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {range} from 'd3-array';\nimport styled from 'styled-components';\nimport {hexToRgb} from 'utils/color-utils';\n\nimport {ColorsByTheme, Themes} from 'constants/color-palette';\n\nconst propTypes = {\n  onSelectColor: PropTypes.func.isRequired,\n  // hex value\n  selectedColor: PropTypes.string.isRequired\n};\n\nconst PALETTE_HEIGHT = '8px';\nconst ROWS = 22;\n\nconst StyledColorPalette = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: 12px;\n\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nconst StyledColorColumn = styled.div`\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst StyledColorBlock = styled.div`\n  flex-grow: 1;\n  height: ${PALETTE_HEIGHT};\n  border-width: 1px;\n  border-style: solid;\n`;\n\nconst SingleColorPalette = ({selectedColor, onSelectColor}) => (\n  <StyledColorPalette className=\"single-color-palette\">\n    {Themes.map((theme, col) => (\n      <StyledColorColumn key={theme} className=\"single-color-palette__column\">\n        {range(1, ROWS + 1, 1).map((key, i) => (\n          <StyledColorBlock\n            className=\"single-color-palette__block\"\n            style={{\n              backgroundColor: ColorsByTheme[theme][key],\n              borderColor:\n                selectedColor === ColorsByTheme[theme][key].toUpperCase()\n                  ? 'white'\n                  : ColorsByTheme[theme][key]\n            }}\n            key={`${theme}_${key}`}\n            selected={selectedColor === ColorsByTheme[theme][key].toUpperCase()}\n            onClick={e => onSelectColor(hexToRgb(ColorsByTheme[theme][key]), e)}\n          />\n        ))}\n      </StyledColorColumn>\n    ))}\n  </StyledColorPalette>\n);\n\nSingleColorPalette.propTypes = propTypes;\n\nexport default SingleColorPalette;\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nexport function waitForGLTFAssets(_x) {\n  return _waitForGLTFAssets.apply(this, arguments);\n}\nfunction _waitForGLTFAssets() {\n  _waitForGLTFAssets = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(gltfObjects) {\n    var remaining;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            remaining = [];\n            gltfObjects.scenes.forEach(function (scene) {\n              scene.traverse(function (model) {\n                Object.values(model.model.getUniforms()).forEach(function (uniform) {\n                  if (uniform.loaded === false) {\n                    remaining.push(uniform);\n                  }\n                });\n              });\n            });\n            _context.next = 4;\n            return waitWhileCondition(function () {\n              return remaining.some(function (uniform) {\n                return !uniform.loaded;\n              });\n            });\n          case 4:\n            return _context.abrupt(\"return\", _context.sent);\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _waitForGLTFAssets.apply(this, arguments);\n}\nfunction waitWhileCondition(_x2) {\n  return _waitWhileCondition.apply(this, arguments);\n}\nfunction _waitWhileCondition() {\n  _waitWhileCondition = _asyncToGenerator(_regeneratorRuntime.mark(function _callee2(condition) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!condition()) {\n              _context2.next = 5;\n              break;\n            }\n            _context2.next = 3;\n            return new Promise(function (resolve) {\n              return requestAnimationFrame(resolve);\n            });\n          case 3:\n            _context2.next = 0;\n            break;\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _waitWhileCondition.apply(this, arguments);\n}","map":{"version":3,"sources":["../../../src/scenegraph-layer/gltf-utils.js"],"names":["waitForGLTFAssets","gltfObjects","remaining","scenes","forEach","scene","traverse","Object","values","model","getUniforms","uniform","loaded","push","waitWhileCondition","some","condition","Promise","requestAnimationFrame","resolve"],"mappings":";;AAEA,OAAA,SAAsBA,iBAAtB,CAAA,EAAA,EAAA;EAAA,OAAA,kBAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA;AAAA;;kEAAO,SAAA,OAAA,CAAiCC,WAAjC,EAAA;IAAA,IAAA,SAAA;IAAA,OAAA,mBAAA,CAAA,IAAA,CAAA,SAAA,QAAA,CAAA,QAAA,EAAA;MAAA,OAAA,CAAA,EAAA;QAAA,QAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;UAAA,KAAA,CAAA;YACCC,SADD,GACa,EADb;YAGLD,WAAW,CAACE,MAAZF,CAAmBG,OAAnBH,CAA2B,UAAA,KAAK,EAAI;cAClCI,KAAK,CAACC,QAAND,CAAe,UAAA,KAAK,EAAI;gBACtBE,MAAM,CAACC,MAAPD,CAAcE,KAAK,CAACA,KAANA,CAAYC,WAAZD,EAAdF,CAAAA,CAAyCH,OAAzCG,CAAiD,UAAA,OAAO,EAAI;kBAC1D,IAAII,OAAO,CAACC,MAARD,KAAmB,KAAvB,EAA8B;oBAC5BT,SAAS,CAACW,IAAVX,CAAeS,OAAfT,CAAAA;kBACD;gBACF,CAJDK,CAAAA;cAKD,CANDF,CAAAA;YAOD,CARDJ,CAAAA;YAHK,QAAA,CAAA,IAAA,GAAA,CAAA;YAAA,OAaQa,kBAAkB,CAAC,YAAA;cAAA,OAAM,SAAS,CAACC,IAAV,CAAe,UAAA,OAAO,EAAA;gBAAA,OAAI,CAACJ,OAAO,CAACC,MAAb;cAAA,CAAtB,CAAN;YAAA,CAAD,CAb1B;UAAA,KAAA,CAAA;YAAA,OAAA,QAAA,CAAA,MAAA,CAAA,QAAA,EAAA,QAAA,CAAA,IAAA,CAAA;UAAA,KAAA,CAAA;UAAA,KAAA,KAAA;YAAA,OAAA,QAAA,CAAA,IAAA,EAAA;QAAA;MAAA;IAAA,CAAA,EAAA,OAAA,CAAA;EAAA,C;;;SAgBQE,kB;;;;mEAAf,SAAA,QAAA,CAAkCE,SAAlC,EAAA;IAAA,OAAA,mBAAA,CAAA,IAAA,CAAA,SAAA,SAAA,CAAA,SAAA,EAAA;MAAA,OAAA,CAAA,EAAA;QAAA,QAAA,SAAA,CAAA,IAAA,GAAA,SAAA,CAAA,IAAA;UAAA,KAAA,CAAA;YAAA,IAAA,CACSA,SAAS,EADlB,EAAA;cAAA,SAAA,CAAA,IAAA,GAAA,CAAA;cAAA;YAAA;YAAA,SAAA,CAAA,IAAA,GAAA,CAAA;YAAA,OAEU,IAAIC,OAAJ,CAAY,UAAA,OAAO,EAAA;cAAA,OAAIC,qBAAqB,CAACC,OAAD,CAAzB;YAAA,CAAnB,CAFV;UAAA,KAAA,CAAA;YAAA,SAAA,CAAA,IAAA,GAAA,CAAA;YAAA;UAAA,KAAA,CAAA;UAAA,KAAA,KAAA;YAAA,OAAA,SAAA,CAAA,IAAA,EAAA;QAAA;MAAA;IAAA,CAAA,EAAA,QAAA,CAAA;EAAA,C","sourcesContent":["/* global requestAnimationFrame */\n\nexport async function waitForGLTFAssets(gltfObjects) {\n  const remaining = [];\n\n  gltfObjects.scenes.forEach(scene => {\n    scene.traverse(model => {\n      Object.values(model.model.getUniforms()).forEach(uniform => {\n        if (uniform.loaded === false) {\n          remaining.push(uniform);\n        }\n      });\n    });\n  });\n\n  return await waitWhileCondition(() => remaining.some(uniform => !uniform.loaded));\n}\n\nasync function waitWhileCondition(condition) {\n  while (condition()) {\n    await new Promise(resolve => requestAnimationFrame(resolve));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
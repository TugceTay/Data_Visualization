{"ast":null,"code":"import { getNamedFormat, filterProps, createError } from '../utils';\nconst NUMBER_FORMAT_OPTIONS = ['localeMatcher', 'style', 'currency', 'currencyDisplay', 'unit', 'unitDisplay', 'useGrouping', 'minimumIntegerDigits', 'minimumFractionDigits', 'maximumFractionDigits', 'minimumSignificantDigits', 'maximumSignificantDigits',\n// Unified NumberFormat (Stage 3 as of 10/22/19)\n'compactDisplay', 'currencyDisplay', 'currencySign', 'notation', 'signDisplay', 'unit', 'unitDisplay'];\nexport function getFormatter(_ref, getNumberFormat) {\n  let {\n    locale,\n    formats,\n    onError\n  } = _ref;\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const {\n    format\n  } = options;\n  const defaults = format && getNamedFormat(formats, 'number', format, onError) || {};\n  const filteredOptions = filterProps(options, NUMBER_FORMAT_OPTIONS, defaults);\n  return getNumberFormat(locale, filteredOptions);\n}\nexport function formatNumber(config, getNumberFormat, value) {\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  try {\n    return getFormatter(config, getNumberFormat, options).format(value);\n  } catch (e) {\n    config.onError(createError('Error formatting number.', e));\n  }\n  return String(value);\n}\nexport function formatNumberToParts(config, getNumberFormat, value) {\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  try {\n    return getFormatter(config, getNumberFormat, options).formatToParts(value);\n  } catch (e) {\n    config.onError(createError('Error formatting number.', e));\n  }\n  return [];\n}","map":{"version":3,"names":["getNamedFormat","filterProps","createError","NUMBER_FORMAT_OPTIONS","getFormatter","getNumberFormat","locale","formats","onError","options","format","defaults","filteredOptions","formatNumber","config","value","e","String","formatNumberToParts","formatToParts"],"sources":["C:/Users/tugcetay/Documents/github/Data_visualization/kepler.gl_React_app/my_app/node_modules/react-intl/lib/formatters/number.js"],"sourcesContent":["import { getNamedFormat, filterProps, createError } from '../utils';\nconst NUMBER_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'style',\n    'currency',\n    'currencyDisplay',\n    'unit',\n    'unitDisplay',\n    'useGrouping',\n    'minimumIntegerDigits',\n    'minimumFractionDigits',\n    'maximumFractionDigits',\n    'minimumSignificantDigits',\n    'maximumSignificantDigits',\n    // Unified NumberFormat (Stage 3 as of 10/22/19)\n    'compactDisplay',\n    'currencyDisplay',\n    'currencySign',\n    'notation',\n    'signDisplay',\n    'unit',\n    'unitDisplay',\n];\nexport function getFormatter({ locale, formats, onError, }, getNumberFormat, options = {}) {\n    const { format } = options;\n    const defaults = ((format &&\n        getNamedFormat(formats, 'number', format, onError)) ||\n        {});\n    const filteredOptions = filterProps(options, NUMBER_FORMAT_OPTIONS, defaults);\n    return getNumberFormat(locale, filteredOptions);\n}\nexport function formatNumber(config, getNumberFormat, value, options = {}) {\n    try {\n        return getFormatter(config, getNumberFormat, options).format(value);\n    }\n    catch (e) {\n        config.onError(createError('Error formatting number.', e));\n    }\n    return String(value);\n}\nexport function formatNumberToParts(config, getNumberFormat, value, options = {}) {\n    try {\n        return getFormatter(config, getNumberFormat, options).formatToParts(value);\n    }\n    catch (e) {\n        config.onError(createError('Error formatting number.', e));\n    }\n    return [];\n}\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,WAAW,EAAEC,WAAW,QAAQ,UAAU;AACnE,MAAMC,qBAAqB,GAAG,CAC1B,eAAe,EACf,OAAO,EACP,UAAU,EACV,iBAAiB,EACjB,MAAM,EACN,aAAa,EACb,aAAa,EACb,sBAAsB,EACtB,uBAAuB,EACvB,uBAAuB,EACvB,0BAA0B,EAC1B,0BAA0B;AAC1B;AACA,gBAAgB,EAChB,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,aAAa,EACb,MAAM,EACN,aAAa,CAChB;AACD,OAAO,SAASC,YAAY,OAAgCC,eAAe,EAAgB;EAAA,IAA9D;IAAEC,MAAM;IAAEC,OAAO;IAAEC;EAAS,CAAC;EAAA,IAAmBC,OAAO,uEAAG,CAAC,CAAC;EACrF,MAAM;IAAEC;EAAO,CAAC,GAAGD,OAAO;EAC1B,MAAME,QAAQ,GAAKD,MAAM,IACrBV,cAAc,CAACO,OAAO,EAAE,QAAQ,EAAEG,MAAM,EAAEF,OAAO,CAAC,IAClD,CAAC,CAAE;EACP,MAAMI,eAAe,GAAGX,WAAW,CAACQ,OAAO,EAAEN,qBAAqB,EAAEQ,QAAQ,CAAC;EAC7E,OAAON,eAAe,CAACC,MAAM,EAAEM,eAAe,CAAC;AACnD;AACA,OAAO,SAASC,YAAY,CAACC,MAAM,EAAET,eAAe,EAAEU,KAAK,EAAgB;EAAA,IAAdN,OAAO,uEAAG,CAAC,CAAC;EACrE,IAAI;IACA,OAAOL,YAAY,CAACU,MAAM,EAAET,eAAe,EAAEI,OAAO,CAAC,CAACC,MAAM,CAACK,KAAK,CAAC;EACvE,CAAC,CACD,OAAOC,CAAC,EAAE;IACNF,MAAM,CAACN,OAAO,CAACN,WAAW,CAAC,0BAA0B,EAAEc,CAAC,CAAC,CAAC;EAC9D;EACA,OAAOC,MAAM,CAACF,KAAK,CAAC;AACxB;AACA,OAAO,SAASG,mBAAmB,CAACJ,MAAM,EAAET,eAAe,EAAEU,KAAK,EAAgB;EAAA,IAAdN,OAAO,uEAAG,CAAC,CAAC;EAC5E,IAAI;IACA,OAAOL,YAAY,CAACU,MAAM,EAAET,eAAe,EAAEI,OAAO,CAAC,CAACU,aAAa,CAACJ,KAAK,CAAC;EAC9E,CAAC,CACD,OAAOC,CAAC,EAAE;IACNF,MAAM,CAACN,OAAO,CAACN,WAAW,CAAC,0BAA0B,EAAEc,CAAC,CAAC,CAAC;EAC9D;EACA,OAAO,EAAE;AACb"},"metadata":{},"sourceType":"module"}
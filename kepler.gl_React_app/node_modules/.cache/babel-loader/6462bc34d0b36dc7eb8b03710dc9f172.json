{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nimport { global } from '@loaders.gl/loader-utils';\nimport { isPureObject, isObject } from '../../javascript-utils/is-type';\nimport { fetchFile } from '../fetch/fetch-file';\nimport { NullLog, ConsoleLog } from './loggers';\nvar DEFAULT_LOADER_OPTIONS = {\n  baseUri: '',\n  fetch: null,\n  CDN: 'https://unpkg.com/@loaders.gl',\n  worker: true,\n  log: new ConsoleLog(),\n  metadata: false,\n  transforms: [],\n  reuseWorkers: true\n};\nvar DEPRECATED_LOADER_OPTIONS = {\n  dataType: '(no longer used)',\n  method: 'fetch.method',\n  headers: 'fetch.headers',\n  body: 'fetch.body',\n  mode: 'fetch.mode',\n  credentials: 'fetch.credentials',\n  cache: 'fetch.cache',\n  redirect: 'fetch.redirect',\n  referrer: 'fetch.referrer',\n  referrerPolicy: 'fetch.referrerPolicy',\n  integrity: 'fetch.integrity',\n  keepalive: 'fetch.keepalive',\n  signal: 'fetch.signal'\n};\nexport var getGlobalLoaderState = function getGlobalLoaderState() {\n  global.loaders = global.loaders || {};\n  var loaders = global.loaders;\n  loaders._state = loaders._state || {};\n  return loaders._state;\n};\nvar getGlobalLoaderOptions = function getGlobalLoaderOptions() {\n  var state = getGlobalLoaderState();\n  state.globalOptions = state.globalOptions || _objectSpread({}, DEFAULT_LOADER_OPTIONS);\n  return state.globalOptions;\n};\nexport function setGlobalOptions(options) {\n  var state = getGlobalLoaderState();\n  var globalOptions = getGlobalLoaderOptions();\n  state.globalOptions = normalizeOptionsInternal(globalOptions, options);\n}\nexport function normalizeOptions(options, loader, loaders, url) {\n  loaders = loaders || [];\n  loaders = Array.isArray(loaders) ? loaders : [loaders];\n  validateOptions(options, loaders);\n  return normalizeOptionsInternal(loader, options, url);\n}\nexport function getFetchFunction(options, context) {\n  var globalOptions = getGlobalLoaderOptions();\n  var fetch = options.fetch || globalOptions.fetch;\n  if (typeof fetch === 'function') {\n    return fetch;\n  }\n  if (isObject(fetch)) {\n    return function (url) {\n      return fetchFile(url, fetch);\n    };\n  }\n  if (context && context.fetch) {\n    return context.fetch;\n  }\n  return function (url) {\n    return fetchFile(url, options);\n  };\n}\nfunction validateOptions(options, loaders) {\n  var log = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : console;\n  validateOptionsObject(options, null, log, DEFAULT_LOADER_OPTIONS, DEPRECATED_LOADER_OPTIONS, loaders);\n  var _iterator = _createForOfIteratorHelper(loaders),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var loader = _step.value;\n      var idOptions = options && options[loader.id] || {};\n      var loaderOptions = loader.options && loader.options[loader.id] || {};\n      var deprecatedOptions = loader.defaultOptions && loader.defaultOptions[loader.id] || {};\n      validateOptionsObject(idOptions, loader.id, log, loaderOptions, deprecatedOptions, loaders);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\nfunction validateOptionsObject(options, id, log, defaultOptions, deprecatedOptions, loaders) {\n  var loaderName = id || 'Top level';\n  var prefix = id ? \"\".concat(id, \".\") : '';\n  for (var key in options) {\n    var isSubOptions = !id && isObject(options[key]);\n    if (!(key in defaultOptions)) {\n      if (key in deprecatedOptions) {\n        log.warn(\"\".concat(loaderName, \" loader option '\").concat(prefix).concat(key, \"' deprecated, use '\").concat(deprecatedOptions[key], \"'\"));\n      } else if (!isSubOptions) {\n        var suggestion = findSimilarOption(key, loaders);\n        log.warn(\"\".concat(loaderName, \" loader option '\").concat(prefix).concat(key, \"' not recognized. \").concat(suggestion));\n      }\n    }\n  }\n}\nfunction findSimilarOption(optionKey, loaders) {\n  var lowerCaseOptionKey = optionKey.toLowerCase();\n  var bestSuggestion = '';\n  var _iterator2 = _createForOfIteratorHelper(loaders),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var loader = _step2.value;\n      for (var key in loader.options) {\n        if (optionKey === key) {\n          return \"Did you mean '\".concat(loader.id, \".\").concat(key, \"'?\");\n        }\n        var lowerCaseKey = key.toLowerCase();\n        var isPartialMatch = lowerCaseOptionKey.startsWith(lowerCaseKey) || lowerCaseKey.startsWith(lowerCaseOptionKey);\n        if (isPartialMatch) {\n          bestSuggestion = bestSuggestion || \"Did you mean '\".concat(loader.id, \".\").concat(key, \"'?\");\n        }\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return bestSuggestion;\n}\nfunction normalizeOptionsInternal(loader, options, url) {\n  var loaderDefaultOptions = loader.options || {};\n  var mergedOptions = _objectSpread({}, loaderDefaultOptions);\n  if (mergedOptions.log === null) {\n    mergedOptions.log = new NullLog();\n  }\n  mergeNestedFields(mergedOptions, getGlobalLoaderOptions());\n  mergeNestedFields(mergedOptions, options);\n  addUrlOptions(mergedOptions, url);\n  return mergedOptions;\n}\nfunction mergeNestedFields(mergedOptions, options) {\n  for (var key in options) {\n    if (key in options) {\n      var value = options[key];\n      if (isPureObject(value) && isPureObject(mergedOptions[key])) {\n        mergedOptions[key] = _objectSpread(_objectSpread({}, mergedOptions[key]), options[key]);\n      } else {\n        mergedOptions[key] = options[key];\n      }\n    }\n  }\n}\nfunction addUrlOptions(options, url) {\n  if (url && !options.baseUri) {\n    options.baseUri = url;\n  }\n}","map":{"version":3,"sources":["../../../../src/lib/loader-utils/option-utils.js"],"names":["global","isPureObject","isObject","fetchFile","NullLog","ConsoleLog","DEFAULT_LOADER_OPTIONS","baseUri","fetch","CDN","worker","log","metadata","transforms","reuseWorkers","DEPRECATED_LOADER_OPTIONS","dataType","method","headers","body","mode","credentials","cache","redirect","referrer","referrerPolicy","integrity","keepalive","signal","getGlobalLoaderState","loaders","_state","getGlobalLoaderOptions","state","globalOptions","setGlobalOptions","options","normalizeOptionsInternal","normalizeOptions","loader","url","Array","isArray","validateOptions","getFetchFunction","context","console","validateOptionsObject","idOptions","id","loaderOptions","deprecatedOptions","defaultOptions","loaderName","prefix","key","isSubOptions","warn","suggestion","findSimilarOption","optionKey","lowerCaseOptionKey","toLowerCase","bestSuggestion","lowerCaseKey","isPartialMatch","startsWith","loaderDefaultOptions","mergedOptions","mergeNestedFields","addUrlOptions","value"],"mappings":"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","sourcesContent":["import {global} from '@loaders.gl/loader-utils';\nimport {isPureObject, isObject} from '../../javascript-utils/is-type';\nimport {fetchFile} from '../fetch/fetch-file';\nimport {NullLog, ConsoleLog} from './loggers';\n\nconst DEFAULT_LOADER_OPTIONS = {\n  baseUri: '',\n  fetch: null,\n  CDN: 'https://unpkg.com/@loaders.gl',\n  worker: true, // By default, use worker if provided by loader\n  log: new ConsoleLog(), // A probe.gl compatible (`log.log()()` syntax) that just logs to console\n  metadata: false, // TODO - currently only implemented for parseInBatches, adds initial metadata batch,\n  transforms: [],\n  reuseWorkers: true // By default reuse workers\n};\n\nconst DEPRECATED_LOADER_OPTIONS = {\n  dataType: '(no longer used)',\n  // Warn if fetch options are used on top-level\n  method: 'fetch.method',\n  headers: 'fetch.headers',\n  body: 'fetch.body',\n  mode: 'fetch.mode',\n  credentials: 'fetch.credentials',\n  cache: 'fetch.cache',\n  redirect: 'fetch.redirect',\n  referrer: 'fetch.referrer',\n  referrerPolicy: 'fetch.referrerPolicy',\n  integrity: 'fetch.integrity',\n  keepalive: 'fetch.keepalive',\n  signal: 'fetch.signal'\n};\n\n// Helper to reliably get global loader state\n// Wraps initialization of global variable in function to defeat overly agressive tree-shakers\nexport const getGlobalLoaderState = () => {\n  // @ts-ignore\n  global.loaders = global.loaders || {};\n  // @ts-ignore\n  const {loaders} = global;\n\n  // Add _state object to keep separate from modules added to global.loaders\n  loaders._state = loaders._state || {};\n  return loaders._state;\n};\n\n// Store global loader options on the global object to increase chances of cross loaders-version interoperability\n// NOTE: This use case is not reliable but can help when testing new versions of loaders.gl with existing frameworks\nconst getGlobalLoaderOptions = () => {\n  const state = getGlobalLoaderState();\n  // Ensure all default loader options from this library are mentioned\n  state.globalOptions = state.globalOptions || {...DEFAULT_LOADER_OPTIONS};\n  return state.globalOptions;\n};\n\n// Set global loader options\nexport function setGlobalOptions(options) {\n  const state = getGlobalLoaderState();\n  const globalOptions = getGlobalLoaderOptions();\n  state.globalOptions = normalizeOptionsInternal(globalOptions, options);\n}\n\n// Merges options with global opts and loader defaults, also injects baseUri\n// Merges options with global opts and loader defaults, also injects baseUri\nexport function normalizeOptions(options, loader, loaders, url) {\n  loaders = loaders || [];\n  loaders = Array.isArray(loaders) ? loaders : [loaders];\n\n  validateOptions(options, loaders);\n  return normalizeOptionsInternal(loader, options, url);\n}\n\nexport function getFetchFunction(options, context) {\n  const globalOptions = getGlobalLoaderOptions();\n\n  const fetch = options.fetch || globalOptions.fetch;\n\n  // options.fetch can be a function\n  if (typeof fetch === 'function') {\n    return fetch;\n  }\n\n  // options.fetch can be an options object\n  if (isObject(fetch)) {\n    return url => fetchFile(url, fetch);\n  }\n\n  // else refer to context (from parent loader) if available\n  if (context && context.fetch) {\n    return context.fetch;\n  }\n\n  // else return the default fetch function\n\n  // TODO DEPRECATED, support for root level fetch options will be removed in 3.0\n  return url => fetchFile(url, options);\n\n  // return fetchFile;\n}\n\n// VALIDATE OPTIONS\n\n/**\n * Warn for unsupported options\n * @param {object} options\n * @param {*} loaders\n * @param {*} log\n */\nfunction validateOptions(\n  options,\n  loaders,\n  // eslint-disable-next-line\n  log = console\n) {\n  // Check top level options\n  validateOptionsObject(\n    options,\n    null,\n    log,\n    DEFAULT_LOADER_OPTIONS,\n    DEPRECATED_LOADER_OPTIONS,\n    loaders\n  );\n  for (const loader of loaders) {\n    // Get the scoped, loader specific options from the user supplied options\n    const idOptions = (options && options[loader.id]) || {};\n\n    // Get scoped, loader specific default and deprecated options from the selected loader\n    const loaderOptions = (loader.options && loader.options[loader.id]) || {};\n    const deprecatedOptions = (loader.defaultOptions && loader.defaultOptions[loader.id]) || {};\n\n    // Validate loader specific options\n    validateOptionsObject(idOptions, loader.id, log, loaderOptions, deprecatedOptions, loaders);\n  }\n}\n\n// eslint-disable-next-line max-params\nfunction validateOptionsObject(options, id, log, defaultOptions, deprecatedOptions, loaders) {\n  const loaderName = id || 'Top level';\n  const prefix = id ? `${id}.` : '';\n\n  for (const key in options) {\n    // If top level option value is an object it could options for a loader, so ignore\n    const isSubOptions = !id && isObject(options[key]);\n    if (!(key in defaultOptions)) {\n      // Issue deprecation warnings\n      if (key in deprecatedOptions) {\n        log.warn(\n          `${loaderName} loader option \\'${prefix}${key}\\' deprecated, use \\'${\n            deprecatedOptions[key]\n          }\\'`\n        );\n      } else if (!isSubOptions) {\n        const suggestion = findSimilarOption(key, loaders);\n        log.warn(`${loaderName} loader option \\'${prefix}${key}\\' not recognized. ${suggestion}`);\n      }\n    }\n  }\n}\n\nfunction findSimilarOption(optionKey, loaders) {\n  const lowerCaseOptionKey = optionKey.toLowerCase();\n  let bestSuggestion = '';\n  for (const loader of loaders) {\n    for (const key in loader.options) {\n      if (optionKey === key) {\n        return `Did you mean \\'${loader.id}.${key}\\'?`;\n      }\n      const lowerCaseKey = key.toLowerCase();\n      const isPartialMatch =\n        lowerCaseOptionKey.startsWith(lowerCaseKey) || lowerCaseKey.startsWith(lowerCaseOptionKey);\n      if (isPartialMatch) {\n        bestSuggestion = bestSuggestion || `Did you mean \\'${loader.id}.${key}\\'?`;\n      }\n    }\n  }\n  return bestSuggestion;\n}\n\nfunction normalizeOptionsInternal(loader, options, url) {\n  const loaderDefaultOptions = loader.options || {};\n\n  const mergedOptions = {...loaderDefaultOptions};\n\n  // LOGGING: options.log can be set to `null` to defeat logging\n  if (mergedOptions.log === null) {\n    mergedOptions.log = new NullLog();\n  }\n\n  mergeNestedFields(mergedOptions, getGlobalLoaderOptions());\n  mergeNestedFields(mergedOptions, options);\n\n  addUrlOptions(mergedOptions, url);\n\n  return mergedOptions;\n}\n\n// Merge nested options objects\nfunction mergeNestedFields(mergedOptions, options) {\n  for (const key in options) {\n    // Check for nested options\n    // object in options => either no key in defaultOptions or object in defaultOptions\n    if (key in options) {\n      const value = options[key];\n      if (isPureObject(value) && isPureObject(mergedOptions[key])) {\n        mergedOptions[key] = {\n          ...mergedOptions[key],\n          ...options[key]\n        };\n      } else {\n        mergedOptions[key] = options[key];\n      }\n    }\n    // else: No need to merge nested opts, and the initial merge already copied over the nested options\n  }\n}\n\n// Harvest information from the url\n// TODO - baseUri should be a directory, i.e. remove file component from baseUri\n// TODO - extract extension?\n// TODO - extract query parameters?\n// TODO - should these be injected on context instead of options?\nfunction addUrlOptions(options, url) {\n  if (url && !options.baseUri) {\n    options.baseUri = url;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
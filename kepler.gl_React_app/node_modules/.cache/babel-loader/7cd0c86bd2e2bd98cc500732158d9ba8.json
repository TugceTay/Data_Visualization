{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _toolbarItem = _interopRequireDefault(require(\"../common/toolbar-item\"));\nvar _styledComponents = require(\"../common/styled-components\");\nvar _mapControlTooltip = _interopRequireDefault(require(\"./map-control-tooltip\"));\nvar _mapControlToolbar = _interopRequireDefault(require(\"./map-control-toolbar\"));\n\n// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nLocalePanelFactory.deps = [_mapControlTooltip[\"default\"], _mapControlToolbar[\"default\"]];\nfunction LocalePanelFactory(MapControlTooltip, MapControlToolbar) {\n  /** @type {import('./locale-panel').LocalePanelComponent} */\n  var LocalePanel = /*#__PURE__*/_react[\"default\"].memo(function (_ref) {\n    var availableLocales = _ref.availableLocales,\n      onToggleMapControl = _ref.onToggleMapControl,\n      onSetLocale = _ref.onSetLocale,\n      currentLocal = _ref.locale,\n      mapControls = _ref.mapControls;\n    var _ref2 = mapControls.mapLocale || {},\n      isActive = _ref2.active,\n      disableClose = _ref2.disableClose,\n      show = _ref2.show;\n    var onClickItem = (0, _react.useCallback)(function (locale) {\n      onSetLocale(locale);\n    }, [onSetLocale]);\n    var onClickButton = (0, _react.useCallback)(function (e) {\n      e.preventDefault();\n      onToggleMapControl('mapLocale');\n    }, [onToggleMapControl]);\n    var getLabel = (0, _react.useCallback)(function (locale) {\n      return \"toolbar.\".concat(locale);\n    }, []);\n    if (!show) {\n      return null;\n    }\n    return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n      className: \"map-locale-controls\",\n      style: {\n        position: 'relative'\n      }\n    }, isActive ? /*#__PURE__*/_react[\"default\"].createElement(MapControlToolbar, {\n      show: isActive\n    }, availableLocales.map(function (locale) {\n      return /*#__PURE__*/_react[\"default\"].createElement(_toolbarItem[\"default\"], {\n        key: locale,\n        onClick: function onClick() {\n          return onClickItem(locale);\n        },\n        label: getLabel(locale),\n        active: currentLocal === locale\n      });\n    })) : null, /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.MapControlButton, {\n      onClick: onClickButton,\n      className: (0, _classnames[\"default\"])('map-control-button', 'map-locale', {\n        isActive: isActive\n      }),\n      active: isActive,\n      \"data-tip\": true,\n      \"data-for\": \"locale\",\n      disableClose: disableClose\n    }, /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n      className: \"map-control-button__locale\"\n    }, currentLocal.toUpperCase()), /*#__PURE__*/_react[\"default\"].createElement(MapControlTooltip, {\n      id: \"locale\",\n      message: \"tooltip.selectLocale\"\n    })));\n  });\n  LocalePanel.displayName = 'LocalePanel';\n  return LocalePanel;\n}\nvar _default = LocalePanelFactory;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../src/components/map/locale-panel.js"],"names":["LocalePanelFactory","deps","MapControlTooltipFactory","MapControlToolbarFactory","MapControlTooltip","MapControlToolbar","LocalePanel","memo","availableLocales","onToggleMapControl","onSetLocale","locale","currentLocal","mapControls","active","isActive","disableClose","show","mapLocale","onClickItem","onClickButton","e","preventDefault","getLabel","position","map","toUpperCase","displayName"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {useCallback} from 'react';\nimport classnames from 'classnames';\n\nimport ToolbarItem from 'components/common/toolbar-item';\nimport {MapControlButton} from 'components/common/styled-components';\nimport MapControlTooltipFactory from './map-control-tooltip';\nimport MapControlToolbarFactory from './map-control-toolbar';\n\nLocalePanelFactory.deps = [MapControlTooltipFactory, MapControlToolbarFactory];\n\nfunction LocalePanelFactory(MapControlTooltip, MapControlToolbar) {\n  /** @type {import('./locale-panel').LocalePanelComponent} */\n  const LocalePanel = React.memo(\n    ({availableLocales, onToggleMapControl, onSetLocale, locale: currentLocal, mapControls}) => {\n      const {active: isActive, disableClose, show} = mapControls.mapLocale || {};\n\n      const onClickItem = useCallback(\n        locale => {\n          onSetLocale(locale);\n        },\n        [onSetLocale]\n      );\n\n      const onClickButton = useCallback(\n        e => {\n          e.preventDefault();\n          onToggleMapControl('mapLocale');\n        },\n        [onToggleMapControl]\n      );\n      const getLabel = useCallback(locale => `toolbar.${locale}`, []);\n\n      if (!show) {\n        return null;\n      }\n      return (\n        <div className=\"map-locale-controls\" style={{position: 'relative'}}>\n          {isActive ? (\n            <MapControlToolbar show={isActive}>\n              {availableLocales.map(locale => (\n                <ToolbarItem\n                  key={locale}\n                  onClick={() => onClickItem(locale)}\n                  label={getLabel(locale)}\n                  active={currentLocal === locale}\n                />\n              ))}\n            </MapControlToolbar>\n          ) : null}\n          <MapControlButton\n            onClick={onClickButton}\n            className={classnames('map-control-button', 'map-locale', {isActive})}\n            active={isActive}\n            data-tip\n            data-for=\"locale\"\n            disableClose={disableClose}\n          >\n            <span className=\"map-control-button__locale\">{currentLocal.toUpperCase()}</span>\n            <MapControlTooltip id=\"locale\" message=\"tooltip.selectLocale\" />\n          </MapControlButton>\n        </div>\n      );\n    }\n  );\n\n  LocalePanel.displayName = 'LocalePanel';\n\n  return LocalePanel;\n}\n\nexport default LocalePanelFactory;\n"]},"metadata":{},"sourceType":"script"}
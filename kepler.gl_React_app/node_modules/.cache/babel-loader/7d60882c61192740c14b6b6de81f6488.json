{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nimport { parseNPY } from './lib/parse-npy';\nvar VERSION = typeof \"2.3.13\" !== 'undefined' ? \"2.3.13\" : 'latest';\nvar NPY_MAGIC_NUMBER = new Uint8Array([147, 78, 85, 77, 80, 89]);\nexport var NPYWorkerLoader = {\n  id: 'npy',\n  name: 'NPY',\n  version: VERSION,\n  extensions: ['npy'],\n  mimeTypes: [],\n  tests: [NPY_MAGIC_NUMBER.buffer],\n  options: {\n    npy: {\n      workerUrl: \"https://unpkg.com/@loaders.gl/terrain@\".concat(VERSION, \"/dist/npy-loader.worker.js\")\n    }\n  }\n};\nexport var NPYLoader = _objectSpread(_objectSpread({}, NPYWorkerLoader), {}, {\n  parseSync: parseNPY,\n  parse: function () {\n    var _parse = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(arrayBuffer, options) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", parseNPY(arrayBuffer, options));\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    function parse(_x, _x2) {\n      return _parse.apply(this, arguments);\n    }\n    return parse;\n  }()\n});","map":{"version":3,"sources":["../../src/npy-loader.js"],"names":["parseNPY","VERSION","NPY_MAGIC_NUMBER","Uint8Array","NPYWorkerLoader","id","name","version","extensions","mimeTypes","tests","buffer","options","npy","workerUrl","NPYLoader","parseSync","parse","arrayBuffer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,SAAQA,QAAR,QAAuB,iBAAvB;AAIA,IAAMC,OAAO,GAAG,OAAA,QAAA,KAAuB,WAAvB,GAAA,QAAA,GAAmD,QAAnE;AAGA,IAAMC,gBAAgB,GAAG,IAAIC,UAAJ,CAAe,CAAC,GAAD,EAAM,EAAN,EAAU,EAAV,EAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,CAAf,CAAzB;AAGA,OAAO,IAAMC,eAAe,GAAG;EAC7BC,EAAE,EAAE,KADyB;EAE7BC,IAAI,EAAE,KAFuB;EAG7BC,OAAO,EAAEN,OAHoB;EAI7BO,UAAU,EAAE,CAAC,KAAD,CAJiB;EAK7BC,SAAS,EAAE,EALkB;EAM7BC,KAAK,EAAE,CAACR,gBAAgB,CAACS,MAAlB,CANsB;EAO7BC,OAAO,EAAE;IACPC,GAAG,EAAE;MACHC,SAAS,EAAA,wCAAA,CAAA,MAAA,CAA2Cb,OAA3C,EAAA,4BAAA;IADN;EADE;AAPoB,CAAxB;AAeP,OAAO,IAAMc,SAAS,GAAA,aAAA,CAAA,aAAA,CAAA,CAAA,CAAA,EACjBX,eADiB,CAAA,EAAA,CAAA,CAAA,EAAA;EAEpBY,SAAS,EAAEhB,QAFS;EAGpBiB,KAAK,EAAA,YAAA;IAAA,IAAA,MAAA,GAAA,iBAAA,CAAA,mBAAA,CAAA,IAAA,CAAE,SAAA,OAAA,CAAOC,WAAP,EAAoBN,OAApB,EAAA;MAAA,OAAA,mBAAA,CAAA,IAAA,CAAA,SAAA,QAAA,CAAA,QAAA,EAAA;QAAA,OAAA,CAAA,EAAA;UAAA,QAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;YAAA,KAAA,CAAA;cAAA,OAAA,QAAA,CAAA,MAAA,CAAA,QAAA,EAAgCZ,QAAQ,CAACkB,WAAD,EAAcN,OAAd,CAAxC,CAAA;YAAA,KAAA,CAAA;YAAA,KAAA,KAAA;cAAA,OAAA,QAAA,CAAA,IAAA,EAAA;UAAA;QAAA;MAAA,CAAA,EAAA,OAAA,CAAA;IAAA,CAAF,CAAA,CAAA;IAAA,SAAA,KAAA,CAAA,EAAA,EAAA,GAAA,EAAA;MAAA,OAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA;IAAA;IAAA,OAAA,KAAA;EAAA,CAAA;AAHe,CAAA,CAAf","sourcesContent":["/** @typedef {import('@loaders.gl/loader-utils').LoaderObject} LoaderObject */\n/** @typedef {import('@loaders.gl/loader-utils').WorkerLoaderObject} WorkerLoaderObject */\nimport {parseNPY} from './lib/parse-npy';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\n// \\x93NUMPY\nconst NPY_MAGIC_NUMBER = new Uint8Array([147, 78, 85, 77, 80, 89]);\n\n/** @type {WorkerLoaderObject} */\nexport const NPYWorkerLoader = {\n  id: 'npy',\n  name: 'NPY',\n  version: VERSION,\n  extensions: ['npy'],\n  mimeTypes: [],\n  tests: [NPY_MAGIC_NUMBER.buffer],\n  options: {\n    npy: {\n      workerUrl: `https://unpkg.com/@loaders.gl/terrain@${VERSION}/dist/npy-loader.worker.js`\n    }\n  }\n};\n\n/** @type {LoaderObject} */\nexport const NPYLoader = {\n  ...NPYWorkerLoader,\n  parseSync: parseNPY,\n  parse: async (arrayBuffer, options) => parseNPY(arrayBuffer, options)\n};\n"]},"metadata":{},"sourceType":"module"}
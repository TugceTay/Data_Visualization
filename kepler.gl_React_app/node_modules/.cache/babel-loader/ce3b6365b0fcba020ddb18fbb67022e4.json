{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSavedMapsError = exports.getSavedMapsSuccess = exports.getSavedMaps = exports.loadCloudMapError = exports.loadCloudMapSuccess = exports.loadCloudMap = exports.setCloudProvider = exports.resetProviderStatus = exports.postSaveLoadSuccess = exports.exportFileError = exports.exportFileSuccess = exports.exportFileToCloud = exports.ActionTypes = void 0;\nvar _reduxActions = require(\"redux-actions\");\nvar _actionTypes = require(\"../constants/action-types\");\n\n// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/** @type {import('./provider-actions').ProviderActionTypes} */\nvar ActionTypes = {\n  EXPORT_FILE_TO_CLOUD: \"\".concat(_actionTypes.ACTION_PREFIX, \"EXPORT_FILE_TO_CLOUD\"),\n  EXPORT_FILE_SUCCESS: \"\".concat(_actionTypes.ACTION_PREFIX, \"EXPORT_FILE_SUCCESS\"),\n  EXPORT_FILE_ERROR: \"\".concat(_actionTypes.ACTION_PREFIX, \"EXPORT_FILE_ERROR\"),\n  RESET_PROVIDER_STATUS: \"\".concat(_actionTypes.ACTION_PREFIX, \"RESET_PROVIDER_STATUS\"),\n  SET_CLOUD_PROVIDER: \"\".concat(_actionTypes.ACTION_PREFIX, \"SET_CLOUD_PROVIDER\"),\n  POST_SAVE_LOAD_SUCCESS: \"\".concat(_actionTypes.ACTION_PREFIX, \"POST_SAVE_LOAD_SUCCESS\"),\n  LOAD_CLOUD_MAP: \"\".concat(_actionTypes.ACTION_PREFIX, \"LOAD_CLOUD_MAP\"),\n  LOAD_CLOUD_MAP_SUCCESS: \"\".concat(_actionTypes.ACTION_PREFIX, \"LOAD_CLOUD_MAP_SUCCESS\"),\n  LOAD_CLOUD_MAP_ERROR: \"\".concat(_actionTypes.ACTION_PREFIX, \"LOAD_CLOUD_MAP_ERROR\"),\n  GET_SAVED_MAPS: \"\".concat(_actionTypes.ACTION_PREFIX, \"GET_SAVED_MAPS\"),\n  GET_SAVED_MAPS_SUCCESS: \"\".concat(_actionTypes.ACTION_PREFIX, \"GET_SAVED_MAPS_SUCCESS\"),\n  GET_SAVED_MAPS_ERROR: \"\".concat(_actionTypes.ACTION_PREFIX, \"GET_SAVED_MAPS_ERROR\")\n};\n/**\n * Call provider to upload file to cloud\n * @param mapData\n * @param provider\n * @param options\n * @param onSuccess\n * @param onError\n * @param closeModal\n * @type {typeof import('./provider-actions').exportFileToCloud}\n */\n\nexports.ActionTypes = ActionTypes;\nvar exportFileToCloud = (0, _reduxActions.createAction)(ActionTypes.EXPORT_FILE_TO_CLOUD, function (payload) {\n  return payload;\n});\n/**\n * @type {typeof import('./provider-actions').exportFileSuccess}\n */\n\nexports.exportFileToCloud = exportFileToCloud;\nvar exportFileSuccess = (0, _reduxActions.createAction)(ActionTypes.EXPORT_FILE_SUCCESS, function (payload) {\n  return payload;\n});\n/** @type {typeof import('./provider-actions').exportFileError} */\n\nexports.exportFileSuccess = exportFileSuccess;\nvar exportFileError = (0, _reduxActions.createAction)(ActionTypes.EXPORT_FILE_ERROR, function (payload) {\n  return payload;\n});\n/** @type {typeof import('./provider-actions').postSaveLoadSuccess} */\n\nexports.exportFileError = exportFileError;\nvar postSaveLoadSuccess = (0, _reduxActions.createAction)(ActionTypes.POST_SAVE_LOAD_SUCCESS, function (message) {\n  return message;\n});\n/** @type {typeof import('./provider-actions').resetProviderStatus} */\n\nexports.postSaveLoadSuccess = postSaveLoadSuccess;\nvar resetProviderStatus = (0, _reduxActions.createAction)(ActionTypes.RESET_PROVIDER_STATUS);\n/** @type {typeof import('./provider-actions').setCloudProvider} */\n\nexports.resetProviderStatus = resetProviderStatus;\nvar setCloudProvider = (0, _reduxActions.createAction)(ActionTypes.SET_CLOUD_PROVIDER, function (provider) {\n  return provider;\n});\n/** @type {typeof import('./provider-actions').loadCloudMap} */\n\nexports.setCloudProvider = setCloudProvider;\nvar loadCloudMap = (0, _reduxActions.createAction)(ActionTypes.LOAD_CLOUD_MAP, function (payload) {\n  return payload;\n});\n/** @type {typeof import('./provider-actions').loadCloudMapSuccess} */\n\nexports.loadCloudMap = loadCloudMap;\nvar loadCloudMapSuccess = (0, _reduxActions.createAction)(ActionTypes.LOAD_CLOUD_MAP_SUCCESS, function (payload) {\n  return payload;\n});\n/** @type {typeof import('./provider-actions').loadCloudMapError} */\n\nexports.loadCloudMapSuccess = loadCloudMapSuccess;\nvar loadCloudMapError = (0, _reduxActions.createAction)(ActionTypes.LOAD_CLOUD_MAP_ERROR, function (payload) {\n  return payload;\n});\n/** @type {typeof import('./provider-actions').getSavedMaps} */\n\nexports.loadCloudMapError = loadCloudMapError;\nvar getSavedMaps = (0, _reduxActions.createAction)(ActionTypes.GET_SAVED_MAPS, function (provider) {\n  return provider;\n});\n/** @type {typeof import('./provider-actions').getSavedMapsSuccess} */\n\nexports.getSavedMaps = getSavedMaps;\nvar getSavedMapsSuccess = (0, _reduxActions.createAction)(ActionTypes.GET_SAVED_MAPS_SUCCESS, function (payload) {\n  return payload;\n});\n/** @type {typeof import('./provider-actions').getSavedMapsError} */\n\nexports.getSavedMapsSuccess = getSavedMapsSuccess;\nvar getSavedMapsError = (0, _reduxActions.createAction)(ActionTypes.GET_SAVED_MAPS_ERROR, function (payload) {\n  return payload;\n});\nexports.getSavedMapsError = getSavedMapsError;","map":{"version":3,"sources":["../../src/actions/provider-actions.js"],"names":["ActionTypes","EXPORT_FILE_TO_CLOUD","ACTION_PREFIX","EXPORT_FILE_SUCCESS","EXPORT_FILE_ERROR","RESET_PROVIDER_STATUS","SET_CLOUD_PROVIDER","POST_SAVE_LOAD_SUCCESS","LOAD_CLOUD_MAP","LOAD_CLOUD_MAP_SUCCESS","LOAD_CLOUD_MAP_ERROR","GET_SAVED_MAPS","GET_SAVED_MAPS_SUCCESS","GET_SAVED_MAPS_ERROR","exportFileToCloud","payload","exportFileSuccess","exportFileError","postSaveLoadSuccess","message","resetProviderStatus","setCloudProvider","provider","loadCloudMap","loadCloudMapSuccess","loadCloudMapError","getSavedMaps","getSavedMapsSuccess","getSavedMapsError"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {createAction} from 'redux-actions';\nimport {ACTION_PREFIX} from 'constants/action-types';\n\n/** @type {import('./provider-actions').ProviderActionTypes} */\nexport const ActionTypes = {\n  EXPORT_FILE_TO_CLOUD: `${ACTION_PREFIX}EXPORT_FILE_TO_CLOUD`,\n  EXPORT_FILE_SUCCESS: `${ACTION_PREFIX}EXPORT_FILE_SUCCESS`,\n  EXPORT_FILE_ERROR: `${ACTION_PREFIX}EXPORT_FILE_ERROR`,\n  RESET_PROVIDER_STATUS: `${ACTION_PREFIX}RESET_PROVIDER_STATUS`,\n  SET_CLOUD_PROVIDER: `${ACTION_PREFIX}SET_CLOUD_PROVIDER`,\n  POST_SAVE_LOAD_SUCCESS: `${ACTION_PREFIX}POST_SAVE_LOAD_SUCCESS`,\n  LOAD_CLOUD_MAP: `${ACTION_PREFIX}LOAD_CLOUD_MAP`,\n  LOAD_CLOUD_MAP_SUCCESS: `${ACTION_PREFIX}LOAD_CLOUD_MAP_SUCCESS`,\n  LOAD_CLOUD_MAP_ERROR: `${ACTION_PREFIX}LOAD_CLOUD_MAP_ERROR`,\n  GET_SAVED_MAPS: `${ACTION_PREFIX}GET_SAVED_MAPS`,\n  GET_SAVED_MAPS_SUCCESS: `${ACTION_PREFIX}GET_SAVED_MAPS_SUCCESS`,\n  GET_SAVED_MAPS_ERROR: `${ACTION_PREFIX}GET_SAVED_MAPS_ERROR`\n};\n\n/**\n * Call provider to upload file to cloud\n * @param mapData\n * @param provider\n * @param options\n * @param onSuccess\n * @param onError\n * @param closeModal\n * @type {typeof import('./provider-actions').exportFileToCloud}\n */\nexport const exportFileToCloud = createAction(ActionTypes.EXPORT_FILE_TO_CLOUD, payload => payload);\n\n/**\n * @type {typeof import('./provider-actions').exportFileSuccess}\n */\nexport const exportFileSuccess = createAction(ActionTypes.EXPORT_FILE_SUCCESS, payload => payload);\n\n/** @type {typeof import('./provider-actions').exportFileError} */\nexport const exportFileError = createAction(ActionTypes.EXPORT_FILE_ERROR, payload => payload);\n\n/** @type {typeof import('./provider-actions').postSaveLoadSuccess} */\nexport const postSaveLoadSuccess = createAction(\n  ActionTypes.POST_SAVE_LOAD_SUCCESS,\n  message => message\n);\n\n/** @type {typeof import('./provider-actions').resetProviderStatus} */\nexport const resetProviderStatus = createAction(ActionTypes.RESET_PROVIDER_STATUS);\n\n/** @type {typeof import('./provider-actions').setCloudProvider} */\nexport const setCloudProvider = createAction(ActionTypes.SET_CLOUD_PROVIDER, provider => provider);\n\n/** @type {typeof import('./provider-actions').loadCloudMap} */\nexport const loadCloudMap = createAction(ActionTypes.LOAD_CLOUD_MAP, payload => payload);\n\n/** @type {typeof import('./provider-actions').loadCloudMapSuccess} */\nexport const loadCloudMapSuccess = createAction(\n  ActionTypes.LOAD_CLOUD_MAP_SUCCESS,\n  payload => payload\n);\n\n/** @type {typeof import('./provider-actions').loadCloudMapError} */\nexport const loadCloudMapError = createAction(ActionTypes.LOAD_CLOUD_MAP_ERROR, payload => payload);\n\n/** @type {typeof import('./provider-actions').getSavedMaps} */\nexport const getSavedMaps = createAction(ActionTypes.GET_SAVED_MAPS, provider => provider);\n\n/** @type {typeof import('./provider-actions').getSavedMapsSuccess} */\nexport const getSavedMapsSuccess = createAction(\n  ActionTypes.GET_SAVED_MAPS_SUCCESS,\n  payload => payload\n);\n\n/** @type {typeof import('./provider-actions').getSavedMapsError} */\nexport const getSavedMapsError = createAction(ActionTypes.GET_SAVED_MAPS_ERROR, payload => payload);\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _localization = require(\"../../../localization\");\nvar _styledComponents = require(\"../../common/styled-components\");\nvar _icons = require(\"../../common/icons\");\nvar _colorSelector = _interopRequireDefault(require(\"./color-selector\"));\nvar _itemSelector = _interopRequireDefault(require(\"../../common/item-selector/item-selector\"));\nvar _layerConfigGroup = _interopRequireWildcard(require(\"./layer-config-group\"));\nvar _rangeSlider = _interopRequireDefault(require(\"../../common/range-slider\"));\nvar _layerFactory = require(\"../../../layers/layer-factory\");\nvar _fieldSelector = _interopRequireDefault(require(\"../../common/field-selector\"));\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nTextLabelPanelFactory.deps = [_rangeSlider[\"default\"], _layerConfigGroup[\"default\"], _fieldSelector[\"default\"]];\nfunction TextLabelPanelFactory(RangeSlider, LayerConfigGroup, FieldSelector) {\n  var TextLabelPanel = /*#__PURE__*/function (_Component) {\n    (0, _inherits2[\"default\"])(TextLabelPanel, _Component);\n    var _super = _createSuper(TextLabelPanel);\n    function TextLabelPanel() {\n      (0, _classCallCheck2[\"default\"])(this, TextLabelPanel);\n      return _super.apply(this, arguments);\n    }\n    (0, _createClass2[\"default\"])(TextLabelPanel, [{\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n          updateLayerTextLabel = _this$props.updateLayerTextLabel,\n          textLabel = _this$props.textLabel,\n          fields = _this$props.fields;\n        var currentFields = textLabel.map(function (tl) {\n          return tl.field && tl.field.name;\n        }).filter(function (d) {\n          return d;\n        });\n        return /*#__PURE__*/_react[\"default\"].createElement(LayerConfigGroup, {\n          label: 'panel.text.label',\n          collapsible: true\n        }, /*#__PURE__*/_react[\"default\"].createElement(_layerConfigGroup.ConfigGroupCollapsibleHeader, null, /*#__PURE__*/_react[\"default\"].createElement(FieldSelector, {\n          fields: fields,\n          value: currentFields,\n          onSelect: function onSelect(selected) {\n            return updateLayerTextLabel('all', 'fields', selected);\n          },\n          multiSelect: true\n        })), /*#__PURE__*/_react[\"default\"].createElement(_layerConfigGroup.ConfigGroupCollapsibleContent, null, textLabel.map(function (tl, idx) {\n          return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n            key: tl.field ? tl.field.name : \"null-\".concat(idx)\n          }, /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.PanelLabel, null, /*#__PURE__*/_react[\"default\"].createElement(_localization.FormattedMessage, {\n            id: 'panel.text.labelWithId',\n            values: {\n              labelId: idx + 1\n            }\n          })), /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.SidePanelSection, null, /*#__PURE__*/_react[\"default\"].createElement(FieldSelector, {\n            fields: fields,\n            value: tl.field && tl.field.name || 'placeholder.selectField',\n            placeholder: 'placeholder.empty',\n            onSelect: function onSelect(v) {\n              return updateLayerTextLabel(idx, 'field', v);\n            },\n            erasable: true\n          })), /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.SidePanelSection, null, /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.PanelLabel, null, /*#__PURE__*/_react[\"default\"].createElement(_localization.FormattedMessage, {\n            id: \"panel.text.fontSize\"\n          })), /*#__PURE__*/_react[\"default\"].createElement(RangeSlider, (0, _extends2[\"default\"])({}, _layerFactory.LAYER_TEXT_CONFIGS.fontSize, {\n            value1: tl.size,\n            isRange: false,\n            onChange: function onChange(v) {\n              return updateLayerTextLabel(idx, 'size', v[1]);\n            }\n          }))), /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.SidePanelSection, null, /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.PanelLabel, null, /*#__PURE__*/_react[\"default\"].createElement(_localization.FormattedMessage, {\n            id: \"panel.text.fontColor\"\n          })), /*#__PURE__*/_react[\"default\"].createElement(_colorSelector[\"default\"], {\n            colorSets: [{\n              selectedColor: tl.color,\n              setColor: function setColor(v) {\n                return updateLayerTextLabel(idx, 'color', v);\n              }\n            }]\n          })), /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.SidePanelSection, null, /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.SpaceBetweenFlexbox, null, /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.SBFlexboxItem, null, /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.PanelLabel, null, /*#__PURE__*/_react[\"default\"].createElement(_localization.FormattedMessage, {\n            id: \"panel.text.textAnchor\"\n          })), /*#__PURE__*/_react[\"default\"].createElement(_itemSelector[\"default\"], (0, _extends2[\"default\"])({}, _layerFactory.LAYER_TEXT_CONFIGS.textAnchor, {\n            selectedItems: tl.anchor,\n            onChange: function onChange(val) {\n              return updateLayerTextLabel(idx, 'anchor', val);\n            }\n          }))), /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.SBFlexboxItem, null, /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.PanelLabel, null, /*#__PURE__*/_react[\"default\"].createElement(_localization.FormattedMessage, {\n            id: \"panel.text.alignment\"\n          })), /*#__PURE__*/_react[\"default\"].createElement(_itemSelector[\"default\"], (0, _extends2[\"default\"])({}, _layerFactory.LAYER_TEXT_CONFIGS.textAlignment, {\n            selectedItems: tl.alignment,\n            onChange: function onChange(val) {\n              return updateLayerTextLabel(idx, 'alignment', val);\n            }\n          }))))));\n        }), /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.SidePanelSection, null, /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.Button, {\n          link: true,\n          onClick: function onClick(val) {\n            return updateLayerTextLabel(textLabel.length);\n          }\n        }, /*#__PURE__*/_react[\"default\"].createElement(_icons.Add, {\n          height: \"12px\"\n        }), /*#__PURE__*/_react[\"default\"].createElement(_localization.FormattedMessage, {\n          id: \"panel.text.addMoreLabel\"\n        })))));\n      }\n    }]);\n    return TextLabelPanel;\n  }(_react.Component);\n  (0, _defineProperty2[\"default\"])(TextLabelPanel, \"propTypes\", {\n    fields: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].object),\n    textLabel: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].object),\n    updateLayerTextLabel: _propTypes[\"default\"].func.isRequired\n  });\n  return TextLabelPanel;\n}\nvar _default = TextLabelPanelFactory;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../../src/components/side-panel/layer-panel/text-label-panel.js"],"names":["TextLabelPanelFactory","deps","RangeSliderFactory","LayerConfigGroupFactory","FieldSelectorFactory","RangeSlider","LayerConfigGroup","FieldSelector","TextLabelPanel","Component","fields","PropTypes","arrayOf","object","textLabel","updateLayerTextLabel","func","isRequired","props","currentFields","map","tl","field","name","filter","d","selected","idx","labelId","v","LAYER_TEXT_CONFIGS","fontSize","size","selectedColor","color","setColor","textAnchor","anchor","val","textAlignment","alignment","length"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'localization';\n\nimport {\n  Button,\n  PanelLabel,\n  SBFlexboxItem,\n  SidePanelSection,\n  SpaceBetweenFlexbox\n} from 'components/common/styled-components';\nimport {Add} from 'components/common/icons';\nimport ColorSelector from './color-selector';\nimport ItemSelector from 'components/common/item-selector/item-selector';\nimport LayerConfigGroupFactory, {\n  ConfigGroupCollapsibleContent,\n  ConfigGroupCollapsibleHeader\n} from './layer-config-group';\nimport RangeSliderFactory from 'components/common/range-slider';\n\nimport {LAYER_TEXT_CONFIGS} from 'layers/layer-factory';\nimport FieldSelectorFactory from '../../common/field-selector';\n\nTextLabelPanelFactory.deps = [RangeSliderFactory, LayerConfigGroupFactory, FieldSelectorFactory];\nfunction TextLabelPanelFactory(RangeSlider, LayerConfigGroup, FieldSelector) {\n  class TextLabelPanel extends Component {\n    static propTypes = {\n      fields: PropTypes.arrayOf(PropTypes.object),\n      textLabel: PropTypes.arrayOf(PropTypes.object),\n      updateLayerTextLabel: PropTypes.func.isRequired\n    };\n\n    render() {\n      const {updateLayerTextLabel, textLabel, fields} = this.props;\n      const currentFields = textLabel.map(tl => tl.field && tl.field.name).filter(d => d);\n      return (\n        <LayerConfigGroup label={'panel.text.label'} collapsible>\n          <ConfigGroupCollapsibleHeader>\n            <FieldSelector\n              fields={fields}\n              value={currentFields}\n              onSelect={selected => updateLayerTextLabel('all', 'fields', selected)}\n              multiSelect\n            />\n          </ConfigGroupCollapsibleHeader>\n          <ConfigGroupCollapsibleContent>\n            {textLabel.map((tl, idx) => (\n              <div key={tl.field ? tl.field.name : `null-${idx}`}>\n                <PanelLabel>\n                  <FormattedMessage id={'panel.text.labelWithId'} values={{labelId: idx + 1}} />\n                </PanelLabel>\n                <SidePanelSection>\n                  <FieldSelector\n                    fields={fields}\n                    value={(tl.field && tl.field.name) || 'placeholder.selectField'}\n                    placeholder={'placeholder.empty'}\n                    onSelect={v => updateLayerTextLabel(idx, 'field', v)}\n                    erasable\n                  />\n                </SidePanelSection>\n                <SidePanelSection>\n                  <PanelLabel>\n                    <FormattedMessage id=\"panel.text.fontSize\" />\n                  </PanelLabel>\n                  <RangeSlider\n                    {...LAYER_TEXT_CONFIGS.fontSize}\n                    value1={tl.size}\n                    isRange={false}\n                    onChange={v => updateLayerTextLabel(idx, 'size', v[1])}\n                  />\n                </SidePanelSection>\n                <SidePanelSection>\n                  <PanelLabel>\n                    <FormattedMessage id=\"panel.text.fontColor\" />\n                  </PanelLabel>\n                  <ColorSelector\n                    colorSets={[\n                      {\n                        selectedColor: tl.color,\n                        setColor: v => updateLayerTextLabel(idx, 'color', v)\n                      }\n                    ]}\n                  />\n                </SidePanelSection>\n                <SidePanelSection>\n                  <SpaceBetweenFlexbox>\n                    <SBFlexboxItem>\n                      <PanelLabel>\n                        <FormattedMessage id=\"panel.text.textAnchor\" />\n                      </PanelLabel>\n                      <ItemSelector\n                        {...LAYER_TEXT_CONFIGS.textAnchor}\n                        selectedItems={tl.anchor}\n                        onChange={val => updateLayerTextLabel(idx, 'anchor', val)}\n                      />\n                    </SBFlexboxItem>\n                    <SBFlexboxItem>\n                      <PanelLabel>\n                        <FormattedMessage id=\"panel.text.alignment\" />\n                      </PanelLabel>\n                      <ItemSelector\n                        {...LAYER_TEXT_CONFIGS.textAlignment}\n                        selectedItems={tl.alignment}\n                        onChange={val => updateLayerTextLabel(idx, 'alignment', val)}\n                      />\n                    </SBFlexboxItem>\n                  </SpaceBetweenFlexbox>\n                </SidePanelSection>\n              </div>\n            ))}\n            <SidePanelSection>\n              <Button link onClick={val => updateLayerTextLabel(textLabel.length)}>\n                <Add height=\"12px\" />\n                <FormattedMessage id=\"panel.text.addMoreLabel\" />\n              </Button>\n            </SidePanelSection>\n          </ConfigGroupCollapsibleContent>\n        </LayerConfigGroup>\n      );\n    }\n  }\n\n  return TextLabelPanel;\n}\n\nexport default TextLabelPanelFactory;\n"]},"metadata":{},"sourceType":"script"}
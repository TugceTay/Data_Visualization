{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UNWRAP_TASK = exports.DELAY_TASK = exports.ACTION_TASK = exports.GET_SAVED_MAPS_TASK = exports.LOAD_CLOUD_MAP_TASK = exports.EXPORT_FILE_TO_CLOUD_TASK = exports.LOAD_MAP_STYLE_TASK = exports.PROCESS_FILE_DATA = exports.LOAD_FILE_TASK = void 0;\nvar _tasks = _interopRequireWildcard(require(\"react-palm/tasks\"));\nvar _d3Request = require(\"d3-request\");\nvar _fileHandler = require(\"../processors/file-handler\");\n\n// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nvar LOAD_FILE_TASK = _tasks[\"default\"].fromPromise(function (_ref) {\n  var file = _ref.file,\n    fileCache = _ref.fileCache,\n    loaders = _ref.loaders,\n    loadOptions = _ref.loadOptions;\n  return (0, _fileHandler.readFileInBatches)({\n    file: file,\n    fileCache: fileCache,\n    loaders: loaders,\n    loadOptions: loadOptions\n  });\n}, 'LOAD_FILE_TASK');\nexports.LOAD_FILE_TASK = LOAD_FILE_TASK;\nvar PROCESS_FILE_DATA = _tasks[\"default\"].fromPromise(_fileHandler.processFileData, 'PROCESS_FILE_CONTENT');\nexports.PROCESS_FILE_DATA = PROCESS_FILE_DATA;\nvar LOAD_MAP_STYLE_TASK = (0, _tasks.taskCreator)(function (_ref2, success, error) {\n  var url = _ref2.url,\n    id = _ref2.id;\n  return (0, _d3Request.json)(url, function (err, result) {\n    if (err) {\n      error(err);\n    } else {\n      if (!result) {\n        error(new Error('Map style response is empty'));\n      }\n      success({\n        id: id,\n        style: result\n      });\n    }\n  });\n}, 'LOAD_MAP_STYLE_TASK');\n/**\n * task to upload file to cloud provider\n */\n\nexports.LOAD_MAP_STYLE_TASK = LOAD_MAP_STYLE_TASK;\nvar EXPORT_FILE_TO_CLOUD_TASK = _tasks[\"default\"].fromPromise(function (_ref3) {\n  var provider = _ref3.provider,\n    payload = _ref3.payload;\n  return provider.uploadMap(payload);\n}, 'EXPORT_FILE_TO_CLOUD_TASK');\nexports.EXPORT_FILE_TO_CLOUD_TASK = EXPORT_FILE_TO_CLOUD_TASK;\nvar LOAD_CLOUD_MAP_TASK = _tasks[\"default\"].fromPromise(function (_ref4) {\n  var provider = _ref4.provider,\n    payload = _ref4.payload;\n  return provider.downloadMap(payload);\n}, 'LOAD_CLOUD_MAP_TASK');\nexports.LOAD_CLOUD_MAP_TASK = LOAD_CLOUD_MAP_TASK;\nvar GET_SAVED_MAPS_TASK = _tasks[\"default\"].fromPromise(function (provider) {\n  return provider.listMaps();\n}, 'GET_SAVED_MAPS_TASK');\n/**\n *  task to dispatch a function as a task\n */\n\nexports.GET_SAVED_MAPS_TASK = GET_SAVED_MAPS_TASK;\nvar ACTION_TASK = _tasks[\"default\"].fromCallback(function (_, cb) {\n  return cb();\n}, 'ACTION_TASK');\nexports.ACTION_TASK = ACTION_TASK;\nvar DELAY_TASK = _tasks[\"default\"].fromCallback(function (delay, cb) {\n  return window.setTimeout(function () {\n    return cb();\n  }, delay);\n}, 'DELAY_TASK');\nexports.DELAY_TASK = DELAY_TASK;\nvar UNWRAP_TASK = _tasks[\"default\"].fromPromise(function (promise) {\n  return promise;\n}, 'UNWRAP');\nexports.UNWRAP_TASK = UNWRAP_TASK;","map":{"version":3,"sources":["../../src/tasks/tasks.js"],"names":["LOAD_FILE_TASK","fromPromise","file","fileCache","loaders","loadOptions","PROCESS_FILE_DATA","Task","processFileData","LOAD_MAP_STYLE_TASK","url","id","success","error","err","result","Error","style","EXPORT_FILE_TO_CLOUD_TASK","provider","payload","uploadMap","LOAD_CLOUD_MAP_TASK","downloadMap","GET_SAVED_MAPS_TASK","listMaps","ACTION_TASK","fromCallback","_","cb","DELAY_TASK","delay","setTimeout","UNWRAP_TASK","promise"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport Task, {taskCreator} from 'react-palm/tasks';\nimport {json as requestJson} from 'd3-request';\nimport {readFileInBatches, processFileData} from '../processors/file-handler';\n\nexport const LOAD_FILE_TASK = Task.fromPromise(\n  ({file, fileCache, loaders, loadOptions}) =>\n    readFileInBatches({file, fileCache, loaders, loadOptions}),\n  'LOAD_FILE_TASK'\n);\n\nexport const PROCESS_FILE_DATA = Task.fromPromise(\n  processFileData,\n\n  'PROCESS_FILE_CONTENT'\n);\n\nexport const LOAD_MAP_STYLE_TASK = taskCreator(\n  ({url, id}, success, error) =>\n    requestJson(url, (err, result) => {\n      if (err) {\n        error(err);\n      } else {\n        if (!result) {\n          error(new Error('Map style response is empty'));\n        }\n        success({id, style: result});\n      }\n    }),\n\n  'LOAD_MAP_STYLE_TASK'\n);\n\n/**\n * task to upload file to cloud provider\n */\nexport const EXPORT_FILE_TO_CLOUD_TASK = Task.fromPromise(\n  ({provider, payload}) => provider.uploadMap(payload),\n\n  'EXPORT_FILE_TO_CLOUD_TASK'\n);\n\nexport const LOAD_CLOUD_MAP_TASK = Task.fromPromise(\n  ({provider, payload}) => provider.downloadMap(payload),\n\n  'LOAD_CLOUD_MAP_TASK'\n);\n\nexport const GET_SAVED_MAPS_TASK = Task.fromPromise(\n  provider => provider.listMaps(),\n\n  'GET_SAVED_MAPS_TASK'\n);\n/**\n *  task to dispatch a function as a task\n */\nexport const ACTION_TASK = Task.fromCallback(\n  (_, cb) => cb(),\n\n  'ACTION_TASK'\n);\n\nexport const DELAY_TASK = Task.fromCallback(\n  (delay, cb) => window.setTimeout(() => cb(), delay),\n\n  'DELAY_TASK'\n);\n\nexport const UNWRAP_TASK = Task.fromPromise(\n  promise => promise,\n\n  'UNWRAP'\n);\n"]},"metadata":{},"sourceType":"script"}
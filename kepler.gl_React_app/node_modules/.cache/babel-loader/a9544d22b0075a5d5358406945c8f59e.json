{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.editShader = editShader;\nvar _window = require(\"global/window\");\n\n// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/*\n * Amendment to default layer vertex shader\n * @param {string} vs\n * @param {string} type\n * @param {string} originalText\n * @param {string} testToReplace\n * @return {string} output shader\n *\n */\nfunction editShader(vs, type, originalText, testToReplace) {\n  if (!vs.includes(originalText)) {\n    // Here we call Console.error when we fail to edit deck.gl shader\n    // This should be caught by layer test\n    _window.console.error(\"Cannot edit \".concat(type, \" layer shader\"));\n    return vs;\n  }\n  return vs.replace(originalText, testToReplace);\n}","map":{"version":3,"sources":["../../../src/deckgl-layers/layer-utils/shader-utils.js"],"names":["editShader","vs","type","originalText","testToReplace","includes","Console","error","replace"],"mappings":";;;;;;AAoBA,IAAA,OAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AApBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,UAAT,CAAoBC,EAApB,EAAwBC,IAAxB,EAA8BC,YAA9B,EAA4CC,aAA5C,EAA2D;EAChE,IAAI,CAACH,EAAE,CAACI,QAAHJ,CAAYE,YAAZF,CAAL,EAAgC;IAC9B;IACA;IACAK,OAAAA,CAAAA,OAAAA,CAAQC,KAARD,CAAAA,cAAAA,CAAAA,MAAAA,CAA6BJ,IAA7BI,EAAAA,eAAAA,CAAAA,CAAAA;IACA,OAAOL,EAAP;EACD;EAED,OAAOA,EAAE,CAACO,OAAHP,CAAWE,YAAXF,EAAyBG,aAAzBH,CAAP;AACD","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {console as Console} from 'global/window';\n\n/*\n * Amendment to default layer vertex shader\n * @param {string} vs\n * @param {string} type\n * @param {string} originalText\n * @param {string} testToReplace\n * @return {string} output shader\n *\n */\nexport function editShader(vs, type, originalText, testToReplace) {\n  if (!vs.includes(originalText)) {\n    // Here we call Console.error when we fail to edit deck.gl shader\n    // This should be caught by layer test\n    Console.error(`Cannot edit ${type} layer shader`);\n    return vs;\n  }\n\n  return vs.replace(originalText, testToReplace);\n}\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport Controller from './controller';\nimport { OrbitState } from './orbit-controller';\nimport LinearInterpolator from '../transitions/linear-interpolator';\nimport { TRANSITION_EVENTS } from './transition-manager';\nvar LINEAR_TRANSITION_PROPS = {\n  transitionDuration: 300,\n  transitionEasing: function transitionEasing(t) {\n    return t;\n  },\n  transitionInterpolator: new LinearInterpolator(['target', 'zoom']),\n  transitionInterruption: TRANSITION_EVENTS.BREAK\n};\nvar OrthographicController = function (_Controller) {\n  _inherits(OrthographicController, _Controller);\n  function OrthographicController(props) {\n    var _this;\n    _classCallCheck(this, OrthographicController);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OrthographicController).call(this, OrbitState, props));\n    _this.invertPan = true;\n    return _this;\n  }\n  _createClass(OrthographicController, [{\n    key: \"_onPanRotate\",\n    value: function _onPanRotate(event) {\n      return false;\n    }\n  }, {\n    key: \"_getTransitionProps\",\n    value: function _getTransitionProps() {\n      return LINEAR_TRANSITION_PROPS;\n    }\n  }]);\n  return OrthographicController;\n}(Controller);\nexport { OrthographicController as default };","map":{"version":3,"sources":["../../../src/controllers/orthographic-controller.js"],"names":["Controller","OrbitState","LinearInterpolator","TRANSITION_EVENTS","LINEAR_TRANSITION_PROPS","transitionDuration","transitionEasing","t","transitionInterpolator","transitionInterruption","BREAK","OrthographicController","props","invertPan","event"],"mappings":";;;;;AAAA,OAAOA,UAAP,MAAuB,cAAvB;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AACA,OAAOC,kBAAP,MAA+B,oCAA/B;AACA,SAAQC,iBAAR,QAAgC,sBAAhC;AAEA,IAAMC,uBAAuB,GAAG;EAC9BC,kBAAkB,EAAE,GADU;EAE9BC,gBAAgB,EAAE,SAAA,gBAAA,CAAA,CAAC,EAAA;IAAA,OAAIC,CAAJ;EAAA,CAFW;EAG9BC,sBAAsB,EAAE,IAAIN,kBAAJ,CAAuB,CAAC,QAAD,EAAW,MAAX,CAAvB,CAHM;EAI9BO,sBAAsB,EAAEN,iBAAiB,CAACO;AAJZ,CAAhC;IAOqBC,sB;;EACnB,SAAA,sBAAA,CAAYC,KAAZ,EAAmB;IAAA,IAAA,KAAA;IAAA,eAAA,CAAA,IAAA,EAAA,sBAAA,CAAA;IACjB,KAAA,GAAA,0BAAA,CAAA,IAAA,EAAA,eAAA,CAAA,sBAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAMX,UAAN,EAAkBW,KAAlB,CAAA,CAAA;IACA,KAAA,CAAKC,SAAL,GAAiB,IAAjB;IAFiB,OAAA,KAAA;EAGlB;;;iCAEYC,K,EAAO;MAElB,OAAO,KAAP;IACD;;;0CAEqB;MAEpB,OAAOV,uBAAP;IACD;;;EAdiDJ,U;SAA/BW,sB","sourcesContent":["import Controller from './controller';\nimport {OrbitState} from './orbit-controller';\nimport LinearInterpolator from '../transitions/linear-interpolator';\nimport {TRANSITION_EVENTS} from './transition-manager';\n\nconst LINEAR_TRANSITION_PROPS = {\n  transitionDuration: 300,\n  transitionEasing: t => t,\n  transitionInterpolator: new LinearInterpolator(['target', 'zoom']),\n  transitionInterruption: TRANSITION_EVENTS.BREAK\n};\n\nexport default class OrthographicController extends Controller {\n  constructor(props) {\n    super(OrbitState, props);\n    this.invertPan = true;\n  }\n\n  _onPanRotate(event) {\n    // No rotation in orthographic view\n    return false;\n  }\n\n  _getTransitionProps() {\n    // Enables Transitions on double-tap and key-down events.\n    return LINEAR_TRANSITION_PROPS;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
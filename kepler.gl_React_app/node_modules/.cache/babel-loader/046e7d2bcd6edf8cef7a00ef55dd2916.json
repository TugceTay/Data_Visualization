{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\nvar _loadingSpinner = _interopRequireDefault(require(\"../common/loading-spinner\"));\nvar _localization = require(\"../../localization\");\nvar _templateObject, _templateObject2;\nvar StyledSpinner = _styledComponents[\"default\"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  text-align: center;\\n\\n  span {\\n    margin: 0 auto;\\n  }\\n\"])));\nvar StyledLoadingDialog = _styledComponents[\"default\"].div.attrs({\n  className: 'data-loading-dialog'\n})(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  flex-grow: 1;\\n\\n  .loading-content {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n  }\\n\\n  .loading-message {\\n    margin-left: 32px;\\n    color: \", \";\\n    font-weight: 500;\\n    font-size: 14px;\\n  }\\n\"])), function (props) {\n  return props.theme.titleColorLT;\n});\nvar LoadingDialog = function LoadingDialog(_ref) {\n  var _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 64 : _ref$size,\n    _ref$message = _ref.message,\n    message = _ref$message === void 0 ? 'modal.loadingDialog.loading' : _ref$message;\n  return /*#__PURE__*/_react[\"default\"].createElement(StyledLoadingDialog, null, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"loading-content\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(StyledSpinner, null, /*#__PURE__*/_react[\"default\"].createElement(_loadingSpinner[\"default\"], {\n    size: size\n  })), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"loading-message\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_localization.FormattedMessage, {\n    id: message\n  }))));\n};\nvar _default = LoadingDialog;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../src/components/modals/loading-dialog.js"],"names":["StyledSpinner","styled","div","StyledLoadingDialog","attrs","className","props","theme","titleColorLT","LoadingDialog","size","message"],"mappings":";;;;;;;;AAoBA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;AACA,IAAA,iBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;AACA,IAAA,eAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,2BAAA,CAAA,CAAA;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AAEA,IAAMA,aAAa,GAAGC,iBAAAA,CAAAA,SAAAA,CAAAA,CAAOC,GAAV,CAAA,eAAA,KAAA,eAAA,GAAA,CAAA,CAAA,EAAA,uBAAA,CAAA,SAAA,CAAA,EAAA,CAAA,iEAAA,CAAA,CAAA,CAAA,CAAnB;AAQA,IAAMC,mBAAmB,GAAG,iBAAA,CAAA,SAAA,CAAA,CAAOD,GAAP,CAAWE,KAAX,CAAiB;EAC3CC,SAAS,EAAE;AADgC,CAAjB,CAAH,CAAA,gBAAA,KAAA,gBAAA,GAAA,CAAA,CAAA,EAAA,uBAAA,CAAA,SAAA,CAAA,EAAA,CAAA,+PAAA,EAAA,uDAAA,CAAA,CAAA,CAAA,EAgBZ,UAAA,KAAK,EAAA;EAAA,OAAIC,KAAK,CAACC,KAAND,CAAYE,YAAhB;AAAA,CAhBO,CAAzB;AAsBA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAA,IAAA,EAAA;EAAA,IAAA,SAAA,GAAA,IAAA,CAAEC,IAAF;IAAEA,IAAF,GAAA,SAAA,KAAA,KAAA,CAAA,GAAS,EAAT,GAAA,SAAA;IAAA,YAAA,GAAA,IAAA,CAAaC,OAAb;IAAaA,OAAb,GAAA,YAAA,KAAA,KAAA,CAAA,GAAuB,6BAAvB,GAAA,YAAA;EAAA,OAAA,aACpB,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,mBAAD,EAAA,IAAA,EAAA,aACE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAC;EAAf,CAAA,EAAA,aACE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,aAAD,EAAA,IAAA,EAAA,aACE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,eAAA,CAAA,SAAA,CAAD,EAAA;IAAgB,IAAI,EAAED;EAAtB,CAAA,CADF,CADF,EAAA,aAIE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAC;EAAf,CAAA,EAAA,aACE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,aAAA,CAAA,gBAAD,EAAA;IAAkB,EAAE,EAAEC;EAAtB,CAAA,CADF,CAJF,CADF,CADoB;AAAA,CAAtB;eAaeF,a","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport LoadingSpinner from 'components/common/loading-spinner';\nimport {FormattedMessage} from 'localization';\n\nconst StyledSpinner = styled.div`\n  text-align: center;\n\n  span {\n    margin: 0 auto;\n  }\n`;\n\nconst StyledLoadingDialog = styled.div.attrs({\n  className: 'data-loading-dialog'\n})`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-grow: 1;\n\n  .loading-content {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .loading-message {\n    margin-left: 32px;\n    color: ${props => props.theme.titleColorLT};\n    font-weight: 500;\n    font-size: 14px;\n  }\n`;\n\nconst LoadingDialog = ({size = 64, message = 'modal.loadingDialog.loading'}) => (\n  <StyledLoadingDialog>\n    <div className=\"loading-content\">\n      <StyledSpinner>\n        <LoadingSpinner size={size} />\n      </StyledSpinner>\n      <div className=\"loading-message\">\n        <FormattedMessage id={message} />\n      </div>\n    </div>\n  </StyledLoadingDialog>\n);\n\nexport default LoadingDialog;\n"]},"metadata":{},"sourceType":"script"}
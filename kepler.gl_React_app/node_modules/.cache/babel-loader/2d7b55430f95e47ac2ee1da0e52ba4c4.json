{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTileData = getTileData;\nexports.decodeTile = decodeTile;\nexports.vectorTileFeatureToProp = vectorTileFeatureToProp;\nvar _pbf = _interopRequireDefault(require(\"pbf\"));\nvar _vectorTile = require(\"@mapbox/vector-tile\");\nvar _viewportMercatorProject = require(\"viewport-mercator-project\");\n\n// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* global fetch */\nvar TILE_SIZE = 512;\nvar MAPBOX_HOST = 'https://a.tiles.mapbox.com';\nvar MAP_SOURCE = '/v4/mapbox.mapbox-streets-v7';\nfunction getTileData(host, token, _ref) {\n  var x = _ref.x,\n    y = _ref.y,\n    z = _ref.z;\n  var mapSource = \"\".concat(host || MAPBOX_HOST).concat(MAP_SOURCE, \"/\").concat(z, \"/\").concat(x, \"/\").concat(y, \".vector.pbf?access_token=\").concat(token);\n  return fetch(mapSource).then(function (response) {\n    return response.arrayBuffer();\n  }).then(function (buffer) {\n    return decodeTile(x, y, z, buffer);\n  });\n}\nfunction decodeTile(x, y, z, arrayBuffer) {\n  var tile = new _vectorTile.VectorTile(new _pbf[\"default\"](arrayBuffer));\n  var result = [];\n  var xProj = x * TILE_SIZE;\n  var yProj = y * TILE_SIZE;\n  var scale = Math.pow(2, z);\n  var projectFunc = project.bind(null, xProj, yProj, scale);\n  /* eslint-disable guard-for-in */\n\n  var layerName = 'building';\n  var vectorTileLayer = tile.layers[layerName];\n  if (!vectorTileLayer) {\n    return [];\n  }\n  for (var i = 0; i < vectorTileLayer.length; i++) {\n    var vectorTileFeature = vectorTileLayer.feature(i);\n    var features = vectorTileFeatureToProp(vectorTileFeature, projectFunc);\n    features.forEach(function (f) {\n      f.properties.layer = layerName;\n      if (f.properties.height) {\n        result.push(f);\n      }\n    });\n  }\n  return result;\n}\nfunction project(x, y, scale, line, extent) {\n  var sizeToPixel = extent / TILE_SIZE;\n  for (var ii = 0; ii < line.length; ii++) {\n    var p = line[ii]; // LNGLAT\n\n    line[ii] = (0, _viewportMercatorProject.worldToLngLat)([x + p[0] / sizeToPixel, y + p[1] / sizeToPixel], scale);\n  }\n}\n/* adapted from @mapbox/vector-tile/lib/vectortilefeature.js for better perf */\n\n/* eslint-disable */\n\nfunction vectorTileFeatureToProp(vectorTileFeature, project) {\n  var coords = getCoordinates(vectorTileFeature);\n  var extent = vectorTileFeature.extent;\n  var i;\n  var j;\n  coords = classifyRings(coords);\n  for (i = 0; i < coords.length; i++) {\n    for (j = 0; j < coords[i].length; j++) {\n      project(coords[i][j], extent);\n    }\n  }\n  return coords.map(function (coordinates) {\n    return {\n      coordinates: coordinates,\n      properties: vectorTileFeature.properties\n    };\n  });\n}\nfunction getCoordinates(vectorTileFeature) {\n  var pbf = vectorTileFeature._pbf;\n  pbf.pos = vectorTileFeature._geometry;\n  var end = pbf.readVarint() + pbf.pos;\n  var cmd = 1;\n  var length = 0;\n  var x = 0;\n  var y = 0;\n  var lines = [];\n  var line;\n  while (pbf.pos < end) {\n    if (length <= 0) {\n      var cmdLen = pbf.readVarint();\n      cmd = cmdLen & 0x7;\n      length = cmdLen >> 3;\n    }\n    length--;\n    if (cmd === 1 || cmd === 2) {\n      x += pbf.readSVarint();\n      y += pbf.readSVarint();\n      if (cmd === 1) {\n        // moveTo\n        if (line) lines.push(line);\n        line = [];\n      }\n      if (line) line.push([x, y]);\n    } else if (cmd === 7) {\n      // Workaround for https://github.com/mapbox/mapnik-vector-tile/issues/90\n      if (line) {\n        line.push(line[0].slice()); // closePolygon\n      }\n    } else {\n      throw new Error(\"unknown command \".concat(cmd));\n    }\n  }\n  if (line) lines.push(line);\n  return lines;\n} // classifies an array of rings into polygons with outer rings and holes\n\nfunction classifyRings(rings) {\n  var len = rings.length;\n  if (len <= 1) return [rings];\n  var polygons = [];\n  var polygon;\n  var ccw;\n  for (var i = 0; i < len; i++) {\n    var area = signedArea(rings[i]);\n    if (area === 0) {\n      continue;\n    }\n    if (ccw === undefined) {\n      ccw = area < 0;\n    }\n    if (ccw === area < 0) {\n      if (polygon) {\n        polygons.push(polygon);\n      }\n      polygon = [rings[i]];\n    } else if (polygon) {\n      polygon.push(rings[i]);\n    }\n  }\n  if (polygon) {\n    polygons.push(polygon);\n  }\n  return polygons;\n}\nfunction signedArea(ring) {\n  var sum = 0;\n  for (var i = 0, len = ring.length, j = len - 1, p1, p2; i < len; j = i++) {\n    p1 = ring[i];\n    p2 = ring[j];\n    sum += (p2[0] - p1[0]) * (p1[1] + p2[1]);\n  }\n  return sum;\n}","map":{"version":3,"sources":["../../../src/deckgl-layers/3d-building-layer/3d-building-utils.js"],"names":["TILE_SIZE","MAPBOX_HOST","MAP_SOURCE","getTileData","host","token","x","y","z","mapSource","then","response","arrayBuffer","decodeTile","buffer","tile","VectorTile","Protobuf","result","xProj","yProj","scale","Math","pow","projectFunc","project","bind","layerName","vectorTileLayer","layers","i","length","vectorTileFeature","feature","features","vectorTileFeatureToProp","forEach","f","properties","layer","height","push","line","extent","sizeToPixel","ii","p","coords","getCoordinates","j","classifyRings","map","coordinates","pbf","_pbf","pos","_geometry","end","readVarint","cmd","lines","cmdLen","readSVarint","slice","Error","rings","len","polygons","polygon","ccw","area","signedArea","undefined","ring","sum","p1","p2"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport Protobuf from 'pbf';\nimport {VectorTile} from '@mapbox/vector-tile';\nimport {worldToLngLat} from 'viewport-mercator-project';\n\n/* global fetch */\nconst TILE_SIZE = 512;\nconst MAPBOX_HOST = 'https://a.tiles.mapbox.com';\nconst MAP_SOURCE = '/v4/mapbox.mapbox-streets-v7';\n\nexport function getTileData(host, token, {x, y, z}) {\n  const mapSource = `${host ||\n    MAPBOX_HOST}${MAP_SOURCE}/${z}/${x}/${y}.vector.pbf?access_token=${token}`;\n\n  return fetch(mapSource)\n    .then(response => response.arrayBuffer())\n    .then(buffer => decodeTile(x, y, z, buffer));\n}\n\nexport function decodeTile(x, y, z, arrayBuffer) {\n  const tile = new VectorTile(new Protobuf(arrayBuffer));\n\n  const result = [];\n  const xProj = x * TILE_SIZE;\n  const yProj = y * TILE_SIZE;\n  const scale = Math.pow(2, z);\n\n  const projectFunc = project.bind(null, xProj, yProj, scale);\n\n  /* eslint-disable guard-for-in */\n  const layerName = 'building';\n  const vectorTileLayer = tile.layers[layerName];\n  if (!vectorTileLayer) {\n    return [];\n  }\n  for (let i = 0; i < vectorTileLayer.length; i++) {\n    const vectorTileFeature = vectorTileLayer.feature(i);\n    const features = vectorTileFeatureToProp(vectorTileFeature, projectFunc);\n    features.forEach(f => {\n      f.properties.layer = layerName;\n      if (f.properties.height) {\n        result.push(f);\n      }\n    });\n  }\n  return result;\n}\n\nfunction project(x, y, scale, line, extent) {\n  const sizeToPixel = extent / TILE_SIZE;\n\n  for (let ii = 0; ii < line.length; ii++) {\n    const p = line[ii];\n    // LNGLAT\n    line[ii] = worldToLngLat([x + p[0] / sizeToPixel, y + p[1] / sizeToPixel], scale);\n  }\n}\n\n/* adapted from @mapbox/vector-tile/lib/vectortilefeature.js for better perf */\n/* eslint-disable */\nexport function vectorTileFeatureToProp(vectorTileFeature, project) {\n  let coords = getCoordinates(vectorTileFeature);\n  const extent = vectorTileFeature.extent;\n  let i;\n  let j;\n\n  coords = classifyRings(coords);\n  for (i = 0; i < coords.length; i++) {\n    for (j = 0; j < coords[i].length; j++) {\n      project(coords[i][j], extent);\n    }\n  }\n\n  return coords.map(coordinates => ({\n    coordinates,\n    properties: vectorTileFeature.properties\n  }));\n}\n\nfunction getCoordinates(vectorTileFeature) {\n  const pbf = vectorTileFeature._pbf;\n  pbf.pos = vectorTileFeature._geometry;\n\n  const end = pbf.readVarint() + pbf.pos;\n  let cmd = 1;\n  let length = 0;\n  let x = 0;\n  let y = 0;\n\n  const lines = [];\n  let line;\n\n  while (pbf.pos < end) {\n    if (length <= 0) {\n      const cmdLen = pbf.readVarint();\n      cmd = cmdLen & 0x7;\n      length = cmdLen >> 3;\n    }\n\n    length--;\n\n    if (cmd === 1 || cmd === 2) {\n      x += pbf.readSVarint();\n      y += pbf.readSVarint();\n\n      if (cmd === 1) {\n        // moveTo\n        if (line) lines.push(line);\n        line = [];\n      }\n\n      if (line) line.push([x, y]);\n    } else if (cmd === 7) {\n      // Workaround for https://github.com/mapbox/mapnik-vector-tile/issues/90\n      if (line) {\n        line.push(line[0].slice()); // closePolygon\n      }\n    } else {\n      throw new Error(`unknown command ${cmd}`);\n    }\n  }\n\n  if (line) lines.push(line);\n\n  return lines;\n}\n\n// classifies an array of rings into polygons with outer rings and holes\n\nfunction classifyRings(rings) {\n  const len = rings.length;\n\n  if (len <= 1) return [rings];\n\n  const polygons = [];\n  let polygon;\n  let ccw;\n\n  for (let i = 0; i < len; i++) {\n    const area = signedArea(rings[i]);\n    if (area === 0) {\n      continue;\n    }\n\n    if (ccw === undefined) {\n      ccw = area < 0;\n    }\n\n    if (ccw === area < 0) {\n      if (polygon) {\n        polygons.push(polygon);\n      }\n      polygon = [rings[i]];\n    } else if (polygon) {\n      polygon.push(rings[i]);\n    }\n  }\n  if (polygon) {\n    polygons.push(polygon);\n  }\n\n  return polygons;\n}\n\nfunction signedArea(ring) {\n  let sum = 0;\n  for (let i = 0, len = ring.length, j = len - 1, p1, p2; i < len; j = i++) {\n    p1 = ring[i];\n    p2 = ring[j];\n    sum += (p2[0] - p1[0]) * (p1[1] + p2[1]);\n  }\n  return sum;\n}\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.diffUpdateTriggers = diffUpdateTriggers;\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\n// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable guard-for-in */\n\n/**\n *\n * @param {Object} updateTriggers {getPosition: {column}, getData: {filteredIndex}}\n * @param {Object} oldUpdateTriggers\n * @returns {boolean|object} `false` if nothing changed, or `triggerChanged` as an object\n */\nfunction diffUpdateTriggers(updateTriggers) {\n  var oldUpdateTriggers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var triggerChanged = {};\n  /** @type {boolean|object} */\n\n  var reason = false;\n  for (var triggerName in updateTriggers) {\n    var newTriggers = updateTriggers[triggerName] || {};\n    var oldTriggers = oldUpdateTriggers[triggerName] || {};\n    var diffReason = compareUpdateTrigger(newTriggers, oldTriggers, triggerName);\n    if (diffReason) {\n      triggerChanged[triggerName] = true;\n      reason = triggerChanged;\n    }\n  }\n  return reason;\n}\nfunction compareUpdateTrigger(newTriggers, oldTriggers, triggerName) {\n  if ((0, _typeof2[\"default\"])(oldTriggers) !== 'object') {\n    return oldTriggers === newTriggers ? null : \"\".concat(triggerName, \" changed shallowly\");\n  }\n  for (var key in oldTriggers) {\n    if (!(key in newTriggers)) {\n      return \"\".concat(triggerName, \".\").concat(key, \" deleted\");\n    } // shallow compare\n\n    if (oldTriggers[key] !== newTriggers[key]) {\n      return \"\".concat(triggerName, \".\").concat(key, \" changed shallowly\");\n    }\n  }\n  for (var _key in newTriggers) {\n    if (!(_key in oldTriggers)) {\n      return \"\".concat(triggerName, \".\").concat(_key, \" added\");\n    }\n  }\n  return null;\n}","map":{"version":3,"sources":["../../src/layers/layer-update.js"],"names":["diffUpdateTriggers","updateTriggers","oldUpdateTriggers","triggerChanged","reason","triggerName","newTriggers","oldTriggers","diffReason","compareUpdateTrigger","key"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,kBAAT,CAA4BC,cAA5B,EAAoE;EAAA,IAAxBC,iBAAwB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,CAAA,CAAI;EACzE,IAAMC,cAAc,GAAG,CAAA,CAAvB;EACA;;EACA,IAAIC,MAAM,GAAG,KAAb;EAEA,KAAK,IAAMC,WAAX,IAA0BJ,cAA1B,EAA0C;IACxC,IAAMK,WAAW,GAAGL,cAAc,CAACI,WAAD,CAAdJ,IAA+B,CAAA,CAAnD;IACA,IAAMM,WAAW,GAAGL,iBAAiB,CAACG,WAAD,CAAjBH,IAAkC,CAAA,CAAtD;IACA,IAAMM,UAAU,GAAGC,oBAAoB,CAACH,WAAD,EAAcC,WAAd,EAA2BF,WAA3B,CAAvC;IAEA,IAAIG,UAAJ,EAAgB;MACdL,cAAc,CAACE,WAAD,CAAdF,GAA8B,IAA9BA;MACAC,MAAM,GAAGD,cAATC;IACD;EACF;EAED,OAAOA,MAAP;AACD;AAED,SAASK,oBAAT,CAA8BH,WAA9B,EAA2CC,WAA3C,EAAwDF,WAAxD,EAAqE;EACnE,IAAI,CAAA,CAAA,EAAA,QAAA,CAAA,SAAA,CAAA,EAAOE,WAAP,CAAA,KAAuB,QAA3B,EAAqC;IACnC,OAAOA,WAAW,KAAKD,WAAhBC,GAA8B,IAA9BA,GAAAA,EAAAA,CAAAA,MAAAA,CAAwCF,WAAxCE,EAAAA,oBAAAA,CAAP;EACD;EAED,KAAK,IAAMG,GAAX,IAAkBH,WAAlB,EAA+B;IAC7B,IAAI,EAAEG,GAAG,IAAIJ,WAAT,CAAJ,EAA2B;MACzB,OAAA,EAAA,CAAA,MAAA,CAAUD,WAAV,EAAA,GAAA,CAAA,CAAA,MAAA,CAAyBK,GAAzB,EAAA,UAAA,CAAA;IACD,CAH4B,CAK7B;;IACA,IAAIH,WAAW,CAACG,GAAD,CAAXH,KAAqBD,WAAW,CAACI,GAAD,CAApC,EAA2C;MACzC,OAAA,EAAA,CAAA,MAAA,CAAUL,WAAV,EAAA,GAAA,CAAA,CAAA,MAAA,CAAyBK,GAAzB,EAAA,oBAAA,CAAA;IACD;EACF;EAED,KAAK,IAAMA,IAAX,IAAkBJ,WAAlB,EAA+B;IAC7B,IAAI,EAAEI,IAAG,IAAIH,WAAT,CAAJ,EAA2B;MACzB,OAAA,EAAA,CAAA,MAAA,CAAUF,WAAV,EAAA,GAAA,CAAA,CAAA,MAAA,CAAyBK,IAAzB,EAAA,QAAA,CAAA;IACD;EACF;EAED,OAAO,IAAP;AACD","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable guard-for-in */\n\n/**\n *\n * @param {Object} updateTriggers {getPosition: {column}, getData: {filteredIndex}}\n * @param {Object} oldUpdateTriggers\n * @returns {boolean|object} `false` if nothing changed, or `triggerChanged` as an object\n */\nexport function diffUpdateTriggers(updateTriggers, oldUpdateTriggers = {}) {\n  const triggerChanged = {};\n  /** @type {boolean|object} */\n  let reason = false;\n\n  for (const triggerName in updateTriggers) {\n    const newTriggers = updateTriggers[triggerName] || {};\n    const oldTriggers = oldUpdateTriggers[triggerName] || {};\n    const diffReason = compareUpdateTrigger(newTriggers, oldTriggers, triggerName);\n\n    if (diffReason) {\n      triggerChanged[triggerName] = true;\n      reason = triggerChanged;\n    }\n  }\n\n  return reason;\n}\n\nfunction compareUpdateTrigger(newTriggers, oldTriggers, triggerName) {\n  if (typeof oldTriggers !== 'object') {\n    return oldTriggers === newTriggers ? null : `${triggerName} changed shallowly`;\n  }\n\n  for (const key in oldTriggers) {\n    if (!(key in newTriggers)) {\n      return `${triggerName}.${key} deleted`;\n    }\n\n    // shallow compare\n    if (oldTriggers[key] !== newTriggers[key]) {\n      return `${triggerName}.${key} changed shallowly`;\n    }\n  }\n\n  for (const key in newTriggers) {\n    if (!(key in oldTriggers)) {\n      return `${triggerName}.${key} added`;\n    }\n  }\n\n  return null;\n}\n"]},"metadata":{},"sourceType":"script"}
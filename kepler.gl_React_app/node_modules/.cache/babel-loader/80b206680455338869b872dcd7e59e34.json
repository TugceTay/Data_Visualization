{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nimport View from './view';\nimport GlobeViewport from '../viewports/globe-viewport';\nimport GlobeController from '../controllers/globe-controller';\nvar GlobeView = function (_View) {\n  _inherits(GlobeView, _View);\n  function GlobeView(props) {\n    _classCallCheck(this, GlobeView);\n    return _possibleConstructorReturn(this, _getPrototypeOf(GlobeView).call(this, _objectSpread({}, props, {\n      type: GlobeViewport\n    })));\n  }\n  _createClass(GlobeView, [{\n    key: \"controller\",\n    get: function get() {\n      return this._getControllerProps({\n        type: GlobeController\n      });\n    }\n  }]);\n  return GlobeView;\n}(View);\nexport { GlobeView as default };\nGlobeView.displayName = 'GlobeView';","map":{"version":3,"sources":["../../../src/views/globe-view.js"],"names":["View","GlobeViewport","GlobeController","GlobeView","props","type","_getControllerProps","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,eAAP,MAA4B,iCAA5B;IAEqBC,S;;EACnB,SAAA,SAAA,CAAYC,KAAZ,EAAmB;IAAA,eAAA,CAAA,IAAA,EAAA,SAAA,CAAA;IAAA,OAAA,0BAAA,CAAA,IAAA,EAAA,eAAA,CAAA,SAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAA,aAAA,CAAA,CAAA,CAAA,EACPA,KADO,EAAA;MACAC,IAAI,EAAEJ;IADN,CAAA,CAAA,CAAA,CAAA;EAElB;;;wBAEgB;MACf,OAAO,IAAA,CAAKK,mBAAL,CAAyB;QAC9BD,IAAI,EAAEH;MADwB,CAAzB,CAAP;IAGD;;;EAToCF,I;SAAlBG,S;AAYrBA,SAAS,CAACI,WAAVJ,GAAwB,WAAxBA","sourcesContent":["import View from './view';\nimport GlobeViewport from '../viewports/globe-viewport';\nimport GlobeController from '../controllers/globe-controller';\n\nexport default class GlobeView extends View {\n  constructor(props) {\n    super({...props, type: GlobeViewport});\n  }\n\n  get controller() {\n    return this._getControllerProps({\n      type: GlobeController\n    });\n  }\n}\n\nGlobeView.displayName = 'GlobeView';\n"]},"metadata":{},"sourceType":"module"}
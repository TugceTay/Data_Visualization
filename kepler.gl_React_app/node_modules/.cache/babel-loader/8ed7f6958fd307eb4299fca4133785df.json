{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _styledComponents = require(\"../common/styled-components\");\nvar _icons = require(\"../common/icons\");\nvar _mapControlTooltip = _interopRequireDefault(require(\"./map-control-tooltip\"));\nvar _mapControlPanel = _interopRequireDefault(require(\"./map-control-panel\"));\n\n// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nSplitMapButtonFactory.deps = [_mapControlTooltip[\"default\"], _mapControlPanel[\"default\"]];\nfunction SplitMapButtonFactory(MapControlTooltip) {\n  var defaultActionIcons = {\n    \"delete\": _icons.Delete,\n    split: _icons.Split\n  };\n  /** @type {import('./split-map-button').SplitMapButtonComponent} */\n\n  var SplitMapButton = function SplitMapButton(_ref) {\n    var isSplit = _ref.isSplit,\n      mapIndex = _ref.mapIndex,\n      onToggleSplitMap = _ref.onToggleSplitMap,\n      _ref$actionIcons = _ref.actionIcons,\n      actionIcons = _ref$actionIcons === void 0 ? defaultActionIcons : _ref$actionIcons,\n      mapControls = _ref.mapControls,\n      readOnly = _ref.readOnly;\n    var splitMap = (mapControls === null || mapControls === void 0 ? void 0 : mapControls.splitMap) || {};\n    var onClick = (0, _react.useCallback)(function (event) {\n      event.preventDefault();\n      onToggleSplitMap(isSplit ? mapIndex : undefined);\n    }, [isSplit, mapIndex, onToggleSplitMap]);\n    var isVisible = (0, _react.useMemo)(function () {\n      return splitMap.show && readOnly !== true;\n    }, [splitMap.show, readOnly]);\n    if (!splitMap.show) {\n      return null;\n    }\n    return isVisible ? /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.MapControlButton, {\n      active: isSplit,\n      onClick: onClick,\n      key: \"split-\".concat(isSplit),\n      className: (0, _classnames[\"default\"])('map-control-button', 'split-map', {\n        'close-map': isSplit\n      }),\n      \"data-tip\": true,\n      \"data-for\": \"action-toggle\"\n    }, isSplit ? /*#__PURE__*/_react[\"default\"].createElement(actionIcons[\"delete\"], {\n      height: \"18px\"\n    }) : /*#__PURE__*/_react[\"default\"].createElement(actionIcons.split, {\n      height: \"18px\"\n    }), /*#__PURE__*/_react[\"default\"].createElement(MapControlTooltip, {\n      id: \"action-toggle\",\n      message: isSplit ? 'tooltip.closePanel' : 'tooltip.switchToDualView'\n    })) : null;\n  };\n  SplitMapButton.displayName = 'SplitMapButton';\n  return /*#__PURE__*/_react[\"default\"].memo(SplitMapButton);\n}\nvar _default = SplitMapButtonFactory;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../src/components/map/split-map-button.js"],"names":["SplitMapButtonFactory","deps","MapControlTooltipFactory","MapControlPanelFactory","MapControlTooltip","defaultActionIcons","Delete","split","Split","SplitMapButton","isSplit","mapIndex","onToggleSplitMap","actionIcons","mapControls","readOnly","splitMap","onClick","event","preventDefault","undefined","isVisible","show","displayName","React","memo"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {useCallback, useMemo} from 'react';\nimport classnames from 'classnames';\nimport {MapControlButton} from 'components/common/styled-components';\nimport {Delete, Split} from 'components/common/icons';\nimport MapControlTooltipFactory from './map-control-tooltip';\nimport MapControlPanelFactory from './map-control-panel';\n\nSplitMapButtonFactory.deps = [MapControlTooltipFactory, MapControlPanelFactory];\n\nfunction SplitMapButtonFactory(MapControlTooltip) {\n  const defaultActionIcons = {\n    delete: Delete,\n    split: Split\n  };\n\n  /** @type {import('./split-map-button').SplitMapButtonComponent} */\n  const SplitMapButton = ({\n    isSplit,\n    mapIndex,\n    onToggleSplitMap,\n    actionIcons = defaultActionIcons,\n    mapControls,\n    readOnly\n  }) => {\n    const splitMap = mapControls?.splitMap || {};\n    const onClick = useCallback(\n      event => {\n        event.preventDefault();\n        onToggleSplitMap(isSplit ? mapIndex : undefined);\n      },\n      [isSplit, mapIndex, onToggleSplitMap]\n    );\n\n    const isVisible = useMemo(() => splitMap.show && readOnly !== true, [splitMap.show, readOnly]);\n\n    if (!splitMap.show) {\n      return null;\n    }\n\n    return isVisible ? (\n      (<MapControlButton\n        active={isSplit}\n        onClick={onClick}\n        key={`split-${isSplit}`}\n        className={classnames('map-control-button', 'split-map', {'close-map': isSplit})}\n        data-tip\n        data-for=\"action-toggle\"\n      >\n        {isSplit ? <actionIcons.delete height=\"18px\" /> : <actionIcons.split height=\"18px\" />}\n        <MapControlTooltip\n          id=\"action-toggle\"\n          message={isSplit ? 'tooltip.closePanel' : 'tooltip.switchToDualView'}\n        />\n      </MapControlButton>)\n    ) : null;\n  };\n\n  SplitMapButton.displayName = 'SplitMapButton';\n  return React.memo(SplitMapButton);\n}\n\nexport default SplitMapButtonFactory;\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { createElement } from 'react';\nimport { View } from '@deck.gl/core';\nimport { inheritsFrom } from './inherits-from';\nimport evaluateChildren from './evaluate-children';\nexport default function positionChildrenUnderViews(_ref) {\n  var children = _ref.children,\n    viewports = _ref.viewports,\n    deck = _ref.deck,\n    ContextProvider = _ref.ContextProvider;\n  var _ref2 = deck || {},\n    viewManager = _ref2.viewManager;\n  if (!viewManager || !viewManager.views.length) {\n    return [];\n  }\n  var views = {};\n  var defaultViewId = viewManager.views[0].id;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n  try {\n    for (var _iterator = children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var child = _step.value;\n      var viewId = defaultViewId;\n      var viewChildren = child;\n      if (inheritsFrom(child.type, View)) {\n        viewId = child.props.id || defaultViewId;\n        viewChildren = child.props.children;\n      }\n      var viewport = viewManager.getViewport(viewId);\n      var viewState = viewManager.getViewState(viewId);\n      if (viewport) {\n        var x = viewport.x,\n          y = viewport.y,\n          width = viewport.width,\n          height = viewport.height;\n        viewChildren = evaluateChildren(viewChildren, {\n          x: x,\n          y: y,\n          width: width,\n          height: height,\n          viewport: viewport,\n          viewState: viewState\n        });\n        if (!views[viewId]) {\n          views[viewId] = {\n            viewport: viewport,\n            children: []\n          };\n        }\n        views[viewId].children.push(viewChildren);\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n  return Object.keys(views).map(function (viewId) {\n    var _views$viewId = views[viewId],\n      viewport = _views$viewId.viewport,\n      viewChildren = _views$viewId.children;\n    var x = viewport.x,\n      y = viewport.y,\n      width = viewport.width,\n      height = viewport.height;\n    var style = {\n      position: 'absolute',\n      left: x,\n      top: y,\n      width: width,\n      height: height\n    };\n    var key = \"view-\".concat(viewId);\n    var viewElement = createElement.apply(void 0, ['div', {\n      key: key,\n      id: key,\n      style: style\n    }].concat(_toConsumableArray(viewChildren)));\n    if (ContextProvider) {\n      var contextValue = {\n        viewport: viewport,\n        container: deck.canvas.offsetParent,\n        eventManager: deck.eventManager,\n        onViewStateChange: function onViewStateChange(params) {\n          params.viewId = viewId;\n          deck._onViewStateChange(params);\n        }\n      };\n      return createElement(ContextProvider, {\n        key: key,\n        value: contextValue\n      }, viewElement);\n    }\n    return viewElement;\n  });\n}","map":{"version":3,"sources":["../../../src/utils/position-children-under-views.js"],"names":["createElement","View","inheritsFrom","evaluateChildren","positionChildrenUnderViews","children","viewports","deck","ContextProvider","viewManager","views","length","defaultViewId","id","child","viewId","viewChildren","type","props","viewport","getViewport","viewState","getViewState","x","y","width","height","push","keys","map","style","position","left","top","key","viewElement","contextValue","container","canvas","offsetParent","eventManager","onViewStateChange","params","_onViewStateChange","value"],"mappings":"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","sourcesContent":["import {createElement} from 'react';\nimport {View} from '@deck.gl/core';\nimport {inheritsFrom} from './inherits-from';\nimport evaluateChildren from './evaluate-children';\n\n// Iterate over views and reposition children associated with views\n// TODO - Can we supply a similar function for the non-React case?\nexport default function positionChildrenUnderViews({children, viewports, deck, ContextProvider}) {\n  const {viewManager} = deck || {};\n\n  if (!viewManager || !viewManager.views.length) {\n    return [];\n  }\n\n  const views = {};\n  const defaultViewId = viewManager.views[0].id;\n\n  // Sort children by view id\n  for (const child of children) {\n    // Unless child is a View, position / render as part of the default view\n    let viewId = defaultViewId;\n    let viewChildren = child;\n\n    if (inheritsFrom(child.type, View)) {\n      viewId = child.props.id || defaultViewId;\n      viewChildren = child.props.children;\n    }\n\n    const viewport = viewManager.getViewport(viewId);\n    const viewState = viewManager.getViewState(viewId);\n\n    // Drop (auto-hide) elements with viewId that are not matched by any current view\n    if (viewport) {\n      const {x, y, width, height} = viewport;\n      // Resolve potentially relative dimensions using the deck.gl container size\n      viewChildren = evaluateChildren(viewChildren, {\n        x,\n        y,\n        width,\n        height,\n        viewport,\n        viewState\n      });\n\n      if (!views[viewId]) {\n        views[viewId] = {\n          viewport,\n          children: []\n        };\n      }\n      views[viewId].children.push(viewChildren);\n    }\n  }\n\n  // Render views\n  return Object.keys(views).map(viewId => {\n    const {viewport, children: viewChildren} = views[viewId];\n    const {x, y, width, height} = viewport;\n    const style = {\n      position: 'absolute',\n      left: x,\n      top: y,\n      width,\n      height\n    };\n\n    const key = `view-${viewId}`;\n    // If children is passed as an array, React will throw the \"each element in a list needs\n    // a key\" warning. Sending each child as separate arguments removes this requirement.\n    const viewElement = createElement('div', {key, id: key, style}, ...viewChildren);\n\n    if (ContextProvider) {\n      const contextValue = {\n        viewport,\n        container: deck.canvas.offsetParent,\n        eventManager: deck.eventManager,\n        onViewStateChange: params => {\n          params.viewId = viewId;\n          deck._onViewStateChange(params);\n        }\n      };\n      return createElement(ContextProvider, {key, value: contextValue}, viewElement);\n    }\n\n    return viewElement;\n  });\n}\n"]},"metadata":{},"sourceType":"module"}
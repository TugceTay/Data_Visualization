{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ContainerFactory = ContainerFactory;\nexports.injectComponents = injectComponents;\nexports[\"default\"] = exports.appInjector = exports.ERROR_MSG = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactRedux = require(\"react-redux\");\nvar _lodash = _interopRequireDefault(require(\"lodash.memoize\"));\nvar _window = require(\"global/window\");\nvar _injector = require(\"./injector\");\nvar _keplerGl = _interopRequireDefault(require(\"./kepler-gl\"));\nvar _actionWrapper = require(\"../actions/action-wrapper\");\nvar _identityActions = require(\"../actions/identity-actions\");\nvar _dataUtils = require(\"../utils/data-utils\");\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar ERROR_MSG = {\n  noState: \"kepler.gl state does not exist. \" + \"You might forget to mount keplerGlReducer in your root reducer.\" + \"If it is not mounted as state.keplerGl by default, you need to provide getState as a prop\"\n};\nexports.ERROR_MSG = ERROR_MSG;\nContainerFactory.deps = [_keplerGl[\"default\"]];\nfunction ContainerFactory(KeplerGl) {\n  /** @lends KeplerGl */\n\n  /**\n    * Main Kepler.gl Component\n    * @param {Object} props\n    *\n    * @param {string} props.id - _required_\n    *\n    * - Default: `map`\n    * The id of this KeplerGl instance. `id` is required if you have multiple\n    * KeplerGl instances in your app. It defines the prop name of the KeplerGl state that is\n    * stored in the KeplerGl reducer. For example, the state of the KeplerGl component with id `foo` is\n    * stored in `state.keplerGl.foo`.\n    *\n    * In case you create multiple kepler.gl instances using the same id, the kepler.gl state defined by the entry will be\n    * overridden by the latest instance and reset to a blank state.\n    * @param {string} props.mapboxApiAccessToken - _required_\n    * @param {string} props.mapboxApiUrl - _optional_\n    * @param {Boolean} props.mapStylesReplaceDefault - _optional_\n    * @param {object} props.initialUiState - _optional_\n     * You can create a free account at [www.mapbox.com](www.mapbox.com) and create a token at\n    * [www.mapbox.com/account/access-tokens](www.mapbox.com/account/access-tokens)\n    *\n    *\n    * @param {Number} props.width - _required_ Width of the KeplerGl UI.\n    * @public\n   */\n  var Container = /*#__PURE__*/function (_Component) {\n    (0, _inherits2[\"default\"])(Container, _Component);\n    var _super = _createSuper(Container);\n\n    // default id and address if not provided\n    function Container(props, ctx) {\n      var _this;\n      (0, _classCallCheck2[\"default\"])(this, Container);\n      _this = _super.call(this, props, ctx);\n      _this.getSelector = (0, _lodash[\"default\"])(function (id, getState) {\n        return function (state) {\n          if (!getState(state)) {\n            // log error\n            _window.console.error(ERROR_MSG.noState);\n            return null;\n          }\n          return getState(state)[id];\n        };\n      });\n      _this.getDispatch = (0, _lodash[\"default\"])(function (id, dispatch) {\n        return (0, _actionWrapper.forwardTo)(id, dispatch);\n      });\n      return _this;\n    }\n    (0, _createClass2[\"default\"])(Container, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var _this$props = this.props,\n          id = _this$props.id,\n          mint = _this$props.mint,\n          mapboxApiAccessToken = _this$props.mapboxApiAccessToken,\n          mapboxApiUrl = _this$props.mapboxApiUrl,\n          mapStylesReplaceDefault = _this$props.mapStylesReplaceDefault,\n          initialUiState = _this$props.initialUiState; // add a new entry to reducer\n\n        this.props.dispatch((0, _identityActions.registerEntry)({\n          id: id,\n          mint: mint,\n          mapboxApiAccessToken: mapboxApiAccessToken,\n          mapboxApiUrl: mapboxApiUrl,\n          mapStylesReplaceDefault: mapStylesReplaceDefault,\n          initialUiState: initialUiState\n        }));\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        // check if id has changed, if true, copy state over\n        if ((0, _dataUtils.notNullorUndefined)(prevProps.id) && (0, _dataUtils.notNullorUndefined)(this.props.id) && prevProps.id !== this.props.id) {\n          this.props.dispatch((0, _identityActions.renameEntry)(prevProps.id, this.props.id));\n        }\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        if (this.props.mint !== false) {\n          // delete entry in reducer\n          this.props.dispatch((0, _identityActions.deleteEntry)(this.props.id));\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props2 = this.props,\n          id = _this$props2.id,\n          getState = _this$props2.getState,\n          dispatch = _this$props2.dispatch,\n          state = _this$props2.state;\n        var selector = this.getSelector(id, getState);\n        if (!selector || !selector(state)) {\n          // instance state hasn't been mounted yet\n          return /*#__PURE__*/_react[\"default\"].createElement(\"div\", null);\n        }\n        return /*#__PURE__*/_react[\"default\"].createElement(KeplerGl, (0, _extends2[\"default\"])({}, this.props, {\n          id: id,\n          selector: selector,\n          dispatch: this.getDispatch(id, dispatch)\n        }));\n      }\n    }]);\n    return Container;\n  }(_react.Component);\n  (0, _defineProperty2[\"default\"])(Container, \"defaultProps\", {\n    id: 'map',\n    getState: function getState(state) {\n      return state.keplerGl;\n    },\n    mint: true\n  });\n  var mapStateToProps = function mapStateToProps(state, props) {\n    return _objectSpread({\n      state: state\n    }, props);\n  };\n  var dispatchToProps = function dispatchToProps(dispatch) {\n    return {\n      dispatch: dispatch\n    };\n  };\n  return (0, _reactRedux.connect)(mapStateToProps, dispatchToProps)(Container);\n}\nvar allDependencies = (0, _injector.flattenDeps)([], ContainerFactory); // provide all dependencies to appInjector\n\nvar appInjector = allDependencies.reduce(function (inj, factory) {\n  return inj.provide(factory, factory);\n}, (0, _injector.injector)()); // Helper to inject custom components and return kepler.gl container\n\nexports.appInjector = appInjector;\nfunction injectComponents() {\n  var recipes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return (0, _injector.provideRecipesToInjector)(recipes, appInjector).get(ContainerFactory);\n}\nvar InjectedContainer = appInjector.get(ContainerFactory);\nvar _default = InjectedContainer;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../src/components/container.js"],"names":["ERROR_MSG","noState","ContainerFactory","deps","KeplerGlFactory","KeplerGl","Container","Component","id","getState","state","keplerGl","mint","props","ctx","getSelector","Console","error","getDispatch","dispatch","mapboxApiAccessToken","mapboxApiUrl","mapStylesReplaceDefault","initialUiState","prevProps","selector","mapStateToProps","dispatchToProps","allDependencies","appInjector","reduce","inj","factory","provide","injectComponents","recipes","get","InjectedContainer"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport memoize from 'lodash.memoize';\nimport {console as Console} from 'global/window';\nimport {injector, provideRecipesToInjector, flattenDeps} from './injector';\nimport KeplerGlFactory from './kepler-gl';\nimport {forwardTo} from 'actions/action-wrapper';\n\nimport {registerEntry, deleteEntry, renameEntry} from 'actions/identity-actions';\nimport {notNullorUndefined} from 'utils/data-utils';\n\nexport const ERROR_MSG = {\n  noState:\n    `kepler.gl state does not exist. ` +\n    `You might forget to mount keplerGlReducer in your root reducer.` +\n    `If it is not mounted as state.keplerGl by default, you need to provide getState as a prop`\n};\n\nContainerFactory.deps = [KeplerGlFactory];\n\nexport function ContainerFactory(KeplerGl) {\n  /** @lends KeplerGl */\n  /**\n    * Main Kepler.gl Component\n    * @param {Object} props\n    *\n    * @param {string} props.id - _required_\n    *\n    * - Default: `map`\n    * The id of this KeplerGl instance. `id` is required if you have multiple\n    * KeplerGl instances in your app. It defines the prop name of the KeplerGl state that is\n    * stored in the KeplerGl reducer. For example, the state of the KeplerGl component with id `foo` is\n    * stored in `state.keplerGl.foo`.\n    *\n    * In case you create multiple kepler.gl instances using the same id, the kepler.gl state defined by the entry will be\n    * overridden by the latest instance and reset to a blank state.\n    * @param {string} props.mapboxApiAccessToken - _required_\n    * @param {string} props.mapboxApiUrl - _optional_\n    * @param {Boolean} props.mapStylesReplaceDefault - _optional_\n    * @param {object} props.initialUiState - _optional_\n\n    * You can create a free account at [www.mapbox.com](www.mapbox.com) and create a token at\n    * [www.mapbox.com/account/access-tokens](www.mapbox.com/account/access-tokens)\n    *\n    *\n    * @param {Number} props.width - _required_ Width of the KeplerGl UI.\n    * @public\n   */\n  class Container extends Component {\n    // default id and address if not provided\n    static defaultProps = {\n      id: 'map',\n      getState: state => state.keplerGl,\n      mint: true\n    };\n\n    constructor(props, ctx) {\n      super(props, ctx);\n\n      this.getSelector = memoize((id, getState) => state => {\n        if (!getState(state)) {\n          // log error\n          Console.error(ERROR_MSG.noState);\n\n          return null;\n        }\n        return getState(state)[id];\n      });\n      this.getDispatch = memoize((id, dispatch) => forwardTo(id, dispatch));\n    }\n\n    componentDidMount() {\n      const {\n        id,\n        mint,\n        mapboxApiAccessToken,\n        mapboxApiUrl,\n        mapStylesReplaceDefault,\n        initialUiState\n      } = this.props;\n\n      // add a new entry to reducer\n      this.props.dispatch(\n        registerEntry({\n          id,\n          mint,\n          mapboxApiAccessToken,\n          mapboxApiUrl,\n          mapStylesReplaceDefault,\n          initialUiState\n        })\n      );\n    }\n\n    componentDidUpdate(prevProps) {\n      // check if id has changed, if true, copy state over\n      if (\n        notNullorUndefined(prevProps.id) &&\n        notNullorUndefined(this.props.id) &&\n        prevProps.id !== this.props.id\n      ) {\n        this.props.dispatch(renameEntry(prevProps.id, this.props.id));\n      }\n    }\n\n    componentWillUnmount() {\n      if (this.props.mint !== false) {\n        // delete entry in reducer\n        this.props.dispatch(deleteEntry(this.props.id));\n      }\n    }\n\n    render() {\n      const {id, getState, dispatch, state} = this.props;\n      const selector = this.getSelector(id, getState);\n\n      if (!selector || !selector(state)) {\n        // instance state hasn't been mounted yet\n        return <div />;\n      }\n\n      return (\n        <KeplerGl\n          {...this.props}\n          id={id}\n          selector={selector}\n          dispatch={this.getDispatch(id, dispatch)}\n        />\n      );\n    }\n  }\n\n  const mapStateToProps = (state, props) => ({state, ...props});\n  const dispatchToProps = dispatch => ({dispatch});\n  return connect(mapStateToProps, dispatchToProps)(Container);\n}\n\nconst allDependencies = flattenDeps([], ContainerFactory);\n\n// provide all dependencies to appInjector\nexport const appInjector = allDependencies.reduce(\n  (inj, factory) => inj.provide(factory, factory),\n  injector()\n);\n\n// Helper to inject custom components and return kepler.gl container\nexport function injectComponents(recipes = []) {\n  return provideRecipesToInjector(recipes, appInjector).get(ContainerFactory);\n}\n\nconst InjectedContainer = appInjector.get(ContainerFactory);\n\nexport default InjectedContainer;\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _styledComponents = require(\"../common/styled-components\");\nvar _mapStyleSelector = _interopRequireDefault(require(\"./map-style-panel/map-style-selector\"));\nvar _mapLayerSelector = _interopRequireDefault(require(\"./map-style-panel/map-layer-selector\"));\nvar _icons = require(\"../common/icons\");\nvar _colorSelector = _interopRequireDefault(require(\"./layer-panel/color-selector\"));\nvar _reselect = require(\"reselect\");\nvar _reactIntl = require(\"react-intl\");\nvar _localization = require(\"../../localization\");\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nMapManagerFactory.deps = [_mapStyleSelector[\"default\"], _mapLayerSelector[\"default\"]];\nfunction MapManagerFactory(MapStyleSelector, LayerGroupSelector) {\n  var MapManager = /*#__PURE__*/function (_Component) {\n    (0, _inherits2[\"default\"])(MapManager, _Component);\n    var _super = _createSuper(MapManager);\n    function MapManager() {\n      var _this;\n      (0, _classCallCheck2[\"default\"])(this, MapManager);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _super.call.apply(_super, [this].concat(args));\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"state\", {\n        isSelecting: false\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"buildingColorSelector\", function (props) {\n        return props.mapStyle.threeDBuildingColor;\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"setColorSelector\", function (props) {\n        return props.mapStyleActions.set3dBuildingColor;\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_toggleSelecting\", function () {\n        _this.setState({\n          isSelecting: !_this.state.isSelecting\n        });\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_selectStyle\", function (val) {\n        var mapStyleActions = _this.props.mapStyleActions;\n        var mapStyleChange = mapStyleActions.mapStyleChange;\n        mapStyleChange(val);\n        _this._toggleSelecting();\n      });\n      return _this;\n    }\n    (0, _createClass2[\"default\"])(MapManager, [{\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n          mapStyle = _this$props.mapStyle,\n          intl = _this$props.intl,\n          mapStyleActions = _this$props.mapStyleActions,\n          showAddMapStyleModal = _this$props.showAddMapStyleModal;\n        var currentStyle = mapStyle.mapStyles[mapStyle.styleType] || {};\n        var editableLayers = (currentStyle.layerGroups || []).map(function (lg) {\n          return lg.slug;\n        });\n        var hasBuildingLayer = mapStyle.visibleLayerGroups['3d building'];\n        var colorSetSelector = (0, _reselect.createSelector)(this.buildingColorSelector, this.setColorSelector, function (selectedColor, setColor) {\n          return [{\n            selectedColor: selectedColor,\n            setColor: setColor,\n            isRange: false,\n            label: intl.formatMessage({\n              id: 'mapManager.3dBuildingColor'\n            })\n          }];\n        });\n        var colorSets = colorSetSelector(this.props);\n        return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          className: \"map-style-panel\"\n        }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, /*#__PURE__*/_react[\"default\"].createElement(MapStyleSelector, {\n          mapStyle: mapStyle,\n          isSelecting: this.state.isSelecting,\n          onChange: this._selectStyle,\n          toggleActive: this._toggleSelecting\n        }), editableLayers.length ? /*#__PURE__*/_react[\"default\"].createElement(LayerGroupSelector, {\n          layers: mapStyle.visibleLayerGroups,\n          editableLayers: editableLayers,\n          topLayers: mapStyle.topLayerGroups,\n          onChange: mapStyleActions.mapConfigChange\n        }) : null, /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.SidePanelSection, null, /*#__PURE__*/_react[\"default\"].createElement(_colorSelector[\"default\"], {\n          colorSets: colorSets,\n          disabled: !hasBuildingLayer\n        })), /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.Button, {\n          className: \"add-map-style-button\",\n          onClick: showAddMapStyleModal,\n          secondary: true\n        }, /*#__PURE__*/_react[\"default\"].createElement(_icons.Add, {\n          height: \"12px\"\n        }), /*#__PURE__*/_react[\"default\"].createElement(_localization.FormattedMessage, {\n          id: 'mapManager.addMapStyle'\n        }))));\n      }\n    }]);\n    return MapManager;\n  }(_react.Component);\n  (0, _defineProperty2[\"default\"])(MapManager, \"propTypes\", {\n    mapStyle: _propTypes[\"default\"].object.isRequired,\n    mapStyleActions: _propTypes[\"default\"].object.isRequired,\n    showAddMapStyleModal: _propTypes[\"default\"].func.isRequired\n  });\n  return (0, _reactIntl.injectIntl)(MapManager);\n}\nvar _default = MapManagerFactory;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../src/components/side-panel/map-manager.js"],"names":["MapManagerFactory","deps","MapStyleSelectorFactory","LayerGroupSelectorFactory","MapStyleSelector","LayerGroupSelector","MapManager","Component","mapStyle","PropTypes","object","isRequired","mapStyleActions","showAddMapStyleModal","func","isSelecting","props","threeDBuildingColor","set3dBuildingColor","setState","state","mapStyleChange","val","_toggleSelecting","intl","currentStyle","mapStyles","styleType","editableLayers","layerGroups","map","lg","slug","hasBuildingLayer","visibleLayerGroups","colorSetSelector","buildingColorSelector","setColorSelector","selectedColor","setColor","isRange","label","formatMessage","id","colorSets","_selectStyle","length","topLayerGroups","mapConfigChange"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {Button, SidePanelSection} from 'components/common/styled-components';\nimport MapStyleSelectorFactory from 'components/side-panel/map-style-panel/map-style-selector';\nimport LayerGroupSelectorFactory from 'components/side-panel/map-style-panel/map-layer-selector';\n\nimport {Add} from 'components/common/icons';\nimport ColorSelector from './layer-panel/color-selector';\nimport {createSelector} from 'reselect';\nimport {injectIntl} from 'react-intl';\nimport {FormattedMessage} from 'localization';\n\nMapManagerFactory.deps = [MapStyleSelectorFactory, LayerGroupSelectorFactory];\n\nfunction MapManagerFactory(MapStyleSelector, LayerGroupSelector) {\n  class MapManager extends Component {\n    static propTypes = {\n      mapStyle: PropTypes.object.isRequired,\n      mapStyleActions: PropTypes.object.isRequired,\n      showAddMapStyleModal: PropTypes.func.isRequired\n    };\n\n    state = {\n      isSelecting: false\n    };\n\n    buildingColorSelector = props => props.mapStyle.threeDBuildingColor;\n    setColorSelector = props => props.mapStyleActions.set3dBuildingColor;\n\n    _toggleSelecting = () => {\n      this.setState({isSelecting: !this.state.isSelecting});\n    };\n\n    _selectStyle = val => {\n      const {mapStyleActions} = this.props;\n      const {mapStyleChange} = mapStyleActions;\n      mapStyleChange(val);\n      this._toggleSelecting();\n    };\n\n    render() {\n      const {mapStyle, intl, mapStyleActions, showAddMapStyleModal} = this.props;\n      const currentStyle = mapStyle.mapStyles[mapStyle.styleType] || {};\n      const editableLayers = (currentStyle.layerGroups || []).map(lg => lg.slug);\n      const hasBuildingLayer = mapStyle.visibleLayerGroups['3d building'];\n      const colorSetSelector = createSelector(\n        this.buildingColorSelector,\n        this.setColorSelector,\n        (selectedColor, setColor) => [\n          {\n            selectedColor,\n            setColor,\n            isRange: false,\n            label: intl.formatMessage({id: 'mapManager.3dBuildingColor'})\n          }\n        ]\n      );\n\n      const colorSets = colorSetSelector(this.props);\n\n      return (\n        <div className=\"map-style-panel\">\n          <div>\n            <MapStyleSelector\n              mapStyle={mapStyle}\n              isSelecting={this.state.isSelecting}\n              onChange={this._selectStyle}\n              toggleActive={this._toggleSelecting}\n            />\n            {editableLayers.length ? (\n              <LayerGroupSelector\n                layers={mapStyle.visibleLayerGroups}\n                editableLayers={editableLayers}\n                topLayers={mapStyle.topLayerGroups}\n                onChange={mapStyleActions.mapConfigChange}\n              />\n            ) : null}\n            <SidePanelSection>\n              <ColorSelector colorSets={colorSets} disabled={!hasBuildingLayer} />\n            </SidePanelSection>\n            <Button className=\"add-map-style-button\" onClick={showAddMapStyleModal} secondary>\n              <Add height=\"12px\" />\n              <FormattedMessage id={'mapManager.addMapStyle'} />\n            </Button>\n          </div>\n        </div>\n      );\n    }\n  }\n  return injectIntl(MapManager);\n}\n\nexport default MapManagerFactory;\n"]},"metadata":{},"sourceType":"script"}
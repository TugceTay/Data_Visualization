{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport TransitionInterpolator from './transition-interpolator';\nimport { lerp } from 'math.gl';\nvar DEFAULT_PROPS = ['longitude', 'latitude', 'zoom', 'bearing', 'pitch'];\nvar DEFAULT_REQUIRED_PROPS = ['longitude', 'latitude', 'zoom'];\nvar LinearInterpolator = function (_TransitionInterpolat) {\n  _inherits(LinearInterpolator, _TransitionInterpolat);\n  function LinearInterpolator(transitionProps) {\n    _classCallCheck(this, LinearInterpolator);\n    return _possibleConstructorReturn(this, _getPrototypeOf(LinearInterpolator).call(this, transitionProps || {\n      compare: DEFAULT_PROPS,\n      extract: DEFAULT_PROPS,\n      required: DEFAULT_REQUIRED_PROPS\n    }));\n  }\n  _createClass(LinearInterpolator, [{\n    key: \"interpolateProps\",\n    value: function interpolateProps(startProps, endProps, t) {\n      var viewport = {};\n      for (var key in endProps) {\n        viewport[key] = lerp(startProps[key] || 0, endProps[key] || 0, t);\n      }\n      return viewport;\n    }\n  }]);\n  return LinearInterpolator;\n}(TransitionInterpolator);\nexport { LinearInterpolator as default };","map":{"version":3,"sources":["../../../src/transitions/linear-interpolator.js"],"names":["TransitionInterpolator","lerp","DEFAULT_PROPS","DEFAULT_REQUIRED_PROPS","LinearInterpolator","transitionProps","compare","extract","required","startProps","endProps","t","viewport","key"],"mappings":";;;;;AAAA,OAAOA,sBAAP,MAAmC,2BAAnC;AACA,SAAQC,IAAR,QAAmB,SAAnB;AAEA,IAAMC,aAAa,GAAG,CAAC,WAAD,EAAc,UAAd,EAA0B,MAA1B,EAAkC,SAAlC,EAA6C,OAA7C,CAAtB;AACA,IAAMC,sBAAsB,GAAG,CAAC,WAAD,EAAc,UAAd,EAA0B,MAA1B,CAA/B;IAKqBC,kB;;EAInB,SAAA,kBAAA,CAAYC,eAAZ,EAA6B;IAAA,eAAA,CAAA,IAAA,EAAA,kBAAA,CAAA;IAAA,OAAA,0BAAA,CAAA,IAAA,EAAA,eAAA,CAAA,kBAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAEzBA,eAAe,IAAI;MACjBC,OAAO,EAAEJ,aADQ;MAEjBK,OAAO,EAAEL,aAFQ;MAGjBM,QAAQ,EAAEL;IAHO,CAFM,CAAA,CAAA;EAQ5B;;;qCAEgBM,U,EAAYC,Q,EAAUC,C,EAAG;MACxC,IAAMC,QAAQ,GAAG,CAAA,CAAjB;MACA,KAAK,IAAMC,GAAX,IAAkBH,QAAlB,EAA4B;QAC1BE,QAAQ,CAACC,GAAD,CAARD,GAAgBX,IAAI,CAACQ,UAAU,CAACI,GAAD,CAAVJ,IAAmB,CAApB,EAAuBC,QAAQ,CAACG,GAAD,CAARH,IAAiB,CAAxC,EAA2CC,CAA3C,CAApBC;MACD;MACD,OAAOA,QAAP;IACD;;;EApB6CZ,sB;SAA3BI,kB","sourcesContent":["import TransitionInterpolator from './transition-interpolator';\nimport {lerp} from 'math.gl';\n\nconst DEFAULT_PROPS = ['longitude', 'latitude', 'zoom', 'bearing', 'pitch'];\nconst DEFAULT_REQUIRED_PROPS = ['longitude', 'latitude', 'zoom'];\n\n/**\n * Performs linear interpolation of two view states.\n */\nexport default class LinearInterpolator extends TransitionInterpolator {\n  /**\n   * @param {Array} transitionProps - list of props to apply linear transition to.\n   */\n  constructor(transitionProps) {\n    super(\n      transitionProps || {\n        compare: DEFAULT_PROPS,\n        extract: DEFAULT_PROPS,\n        required: DEFAULT_REQUIRED_PROPS\n      }\n    );\n  }\n\n  interpolateProps(startProps, endProps, t) {\n    const viewport = {};\n    for (const key in endProps) {\n      viewport[key] = lerp(startProps[key] || 0, endProps[key] || 0, t);\n    }\n    return viewport;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
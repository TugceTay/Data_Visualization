{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = FloatingTimeDisplayFactory;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\nvar _icons = require(\"../icons\");\nvar _defaultSettings = require(\"../../../constants/default-settings\");\nvar _styledComponents2 = require(\"../styled-components\");\nvar _dataUtils = require(\"../../../utils/data-utils\");\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8;\nvar StyledTimeDisplayWrapper = _styledComponents[\"default\"].div.attrs({\n  className: 'floating-time-display'\n})(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  bottom: \", \";\\n  display: flex;\\n  position: absolute;\\n  width: 100%;\\n  margin-left: -\", \"px;\\n  justify-content: center;\\n  pointer-events: none; /* prevent padding from blocking input */\\n  & > * {\\n    /* all children should allow input */\\n    pointer-events: all;\\n  }\\n\"])), function (props) {\n  return \"calc(100% + \".concat(props.theme.bottomPanelGap, \"px)\");\n}, function (props) {\n  return props.theme.bottomInnerPdSide;\n});\nvar StyledTimeDisplay = _styledComponents[\"default\"].div.attrs({\n  className: 'floating-time-display__inner'\n})(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  background-color: \", \";\\n  border-radius: \", \"px;\\n  color: \", \";\\n  display: flex;\\n  height: \", \"px;\\n  justify-content: center;\\n  min-width: \", \"px;\\n  opacity: \", \";\\n  padding: \", \";\\n\"])), function (props) {\n  return props.theme.panelBackground;\n}, function (props) {\n  return props.theme.timeDisplayBorderRadius;\n}, function (props) {\n  return props.theme.titleTextColor;\n}, function (props) {\n  return props.theme.timeDisplayHeight;\n}, function (props) {\n  return props.theme.timeDisplayMinWidth;\n}, function (props) {\n  return props.theme.timeDisplayOpacity;\n}, function (props) {\n  return props.theme.timeDisplayPadding;\n});\nvar StyledTimeDisplayGroups = _styledComponents[\"default\"].div(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  align-items: center;\\n  display: flex;\\n  flex-direction: row;\\n\"])));\nvar StyledTimeDisplayRows = _styledComponents[\"default\"].div(_templateObject4 || (_templateObject4 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n\"])));\nvar StyledTimeDisplayTop = _styledComponents[\"default\"].div.attrs({\n  className: 'animation-control__time-display__top'\n})(_templateObject5 || (_templateObject5 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  color: \", \";\\n  display: flex;\\n  font-size: 12px;\\n  font-weight: 500;\\n  justify-content: center;\\n\"])), function (props) {\n  return props.theme.textColor;\n});\nvar StyledTimeDisplayBottom = _styledComponents[\"default\"].div.attrs({\n  className: 'animation-control__time-display__bottom'\n})(_templateObject6 || (_templateObject6 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  color: \", \";\\n  display: flex;\\n  font-size: 14px;\\n  font-weight: 500;\\n  justify-content: center;\\n\"])), function (props) {\n  return props.theme.titleTextColor;\n});\nvar StyledTimeValueGroup = _styledComponents[\"default\"].div.attrs({\n  className: 'animation-control__time-value-group'\n})(_templateObject7 || (_templateObject7 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  display: flex;\\n  flex-direction: column;\\n\"])));\nvar StyledHorizontalBar = _styledComponents[\"default\"].div.attrs({\n  className: 'animation-control__horizontal-bar'\n})(_templateObject8 || (_templateObject8 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  margin: 0 12px;\\n\"])));\nvar TimeDivider = function TimeDivider() {\n  return /*#__PURE__*/_react[\"default\"].createElement(StyledHorizontalBar, null, /*#__PURE__*/_react[\"default\"].createElement(_icons.Minus, {\n    height: \"12px\"\n  }));\n};\nvar TimeDisplayRow = function TimeDisplayRow(_ref) {\n  var _ref$timeValues = _ref.timeValues,\n    timeValues = _ref$timeValues === void 0 ? [] : _ref$timeValues;\n  return /*#__PURE__*/_react[\"default\"].createElement(_styledComponents2.CenterFlexbox, null, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"time-value\"\n  }, timeValues[0]), timeValues[1] ? /*#__PURE__*/_react[\"default\"].createElement(TimeDivider, null) : null, timeValues[1] ? /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"time-value\"\n  }, timeValues[1]) : null);\n};\nfunction FloatingTimeDisplayFactory() {\n  var FloatingTimeDisplay = function FloatingTimeDisplay(_ref2) {\n    var currentTime = _ref2.currentTime,\n      defaultTimeFormat = _ref2.defaultTimeFormat,\n      timeFormat = _ref2.timeFormat,\n      timezone = _ref2.timezone;\n    var _useMemo = (0, _react.useMemo)(function () {\n        var groupTime = Array.isArray(currentTime) ? currentTime : [currentTime];\n        var hasUserFormat = typeof timeFormat === 'string';\n        var currentFormat = (hasUserFormat ? timeFormat : defaultTimeFormat) || _defaultSettings.DEFAULT_TIME_FORMAT;\n        var dateFunc = (0, _dataUtils.datetimeFormatter)(timezone);\n        if (hasUserFormat) {\n          // dont split time if user defined it\n          return {\n            displayDate: groupTime.map(dateFunc(currentFormat)),\n            displayTime: []\n          };\n        }\n        return groupTime.reduce(function (accu, curr) {\n          var _currentFormat$split = currentFormat.split(' '),\n            _currentFormat$split2 = (0, _slicedToArray2[\"default\"])(_currentFormat$split, 2),\n            dateFormat = _currentFormat$split2[0],\n            datetimeFormat = _currentFormat$split2[1];\n          var dateString = dateFunc(dateFormat)(curr);\n          var timeString = datetimeFormat ? dateFunc(datetimeFormat)(curr) : null;\n          if (!accu.displayDate.includes(dateString)) {\n            accu.displayDate.push(dateString);\n          }\n          if (timeString) {\n            accu.displayTime.push(timeString);\n          }\n          return accu;\n        }, {\n          displayDate: [],\n          displayTime: []\n        });\n      }, [currentTime, timeFormat, defaultTimeFormat, timezone]),\n      displayDate = _useMemo.displayDate,\n      displayTime = _useMemo.displayTime;\n    var twoGroups = displayDate.length === 2 && displayTime.length === 2;\n    var bottomRow = displayTime.length ? displayTime : displayDate.length ? displayDate : null;\n    var topRow = displayDate.length && displayTime.length ? displayDate : null;\n    return /*#__PURE__*/_react[\"default\"].createElement(StyledTimeDisplayWrapper, null, /*#__PURE__*/_react[\"default\"].createElement(StyledTimeDisplay, {\n      className: \"animation-control__time-display\"\n    }, twoGroups ? /*#__PURE__*/_react[\"default\"].createElement(StyledTimeDisplayGroups, null, /*#__PURE__*/_react[\"default\"].createElement(StyledTimeValueGroup, null, /*#__PURE__*/_react[\"default\"].createElement(StyledTimeDisplayTop, null, displayDate[0]), /*#__PURE__*/_react[\"default\"].createElement(StyledTimeDisplayBottom, null, displayTime[0])), /*#__PURE__*/_react[\"default\"].createElement(TimeDivider, null), /*#__PURE__*/_react[\"default\"].createElement(StyledTimeValueGroup, null, /*#__PURE__*/_react[\"default\"].createElement(StyledTimeDisplayTop, null, displayDate[1]), /*#__PURE__*/_react[\"default\"].createElement(StyledTimeDisplayBottom, null, displayTime[1]))) : /*#__PURE__*/_react[\"default\"].createElement(StyledTimeDisplayRows, null, topRow ? /*#__PURE__*/_react[\"default\"].createElement(StyledTimeDisplayTop, null, /*#__PURE__*/_react[\"default\"].createElement(TimeDisplayRow, {\n      timeValues: topRow\n    })) : null, bottomRow ? /*#__PURE__*/_react[\"default\"].createElement(StyledTimeDisplayBottom, null, /*#__PURE__*/_react[\"default\"].createElement(TimeDisplayRow, {\n      timeValues: bottomRow\n    })) : null)));\n  };\n  return FloatingTimeDisplay;\n}","map":{"version":3,"sources":["../../../../src/components/common/animation-control/floating-time-display.js"],"names":["StyledTimeDisplayWrapper","div","attrs","className","props","theme","bottomPanelGap","bottomInnerPdSide","StyledTimeDisplay","panelBackground","timeDisplayBorderRadius","titleTextColor","timeDisplayHeight","timeDisplayMinWidth","timeDisplayOpacity","timeDisplayPadding","StyledTimeDisplayGroups","styled","StyledTimeDisplayRows","StyledTimeDisplayTop","textColor","StyledTimeDisplayBottom","StyledTimeValueGroup","StyledHorizontalBar","TimeDivider","TimeDisplayRow","timeValues","FloatingTimeDisplayFactory","FloatingTimeDisplay","currentTime","defaultTimeFormat","timeFormat","timezone","displayDate","displayTime","groupTime","Array","isArray","hasUserFormat","currentFormat","DEFAULT_TIME_FORMAT","dateFunc","map","reduce","accu","curr","dateFormat","datetimeFormat","split","dateString","timeString","includes","push","twoGroups","length","bottomRow","topRow"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {useMemo} from 'react';\nimport styled from 'styled-components';\nimport {Minus} from 'components/common/icons';\nimport {DEFAULT_TIME_FORMAT} from 'constants/default-settings';\nimport {CenterFlexbox} from 'components/common/styled-components';\nimport {datetimeFormatter} from 'utils/data-utils';\n\nconst StyledTimeDisplayWrapper = styled.div.attrs({\n  className: 'floating-time-display'\n})`\n  bottom: ${props => `calc(100% + ${props.theme.bottomPanelGap}px)`};\n  display: flex;\n  position: absolute;\n  width: 100%;\n  margin-left: -${props => props.theme.bottomInnerPdSide}px;\n  justify-content: center;\n  pointer-events: none; /* prevent padding from blocking input */\n  & > * {\n    /* all children should allow input */\n    pointer-events: all;\n  }\n`;\n\nconst StyledTimeDisplay = styled.div.attrs({\n  className: 'floating-time-display__inner'\n})`\n  background-color: ${props => props.theme.panelBackground};\n  border-radius: ${props => props.theme.timeDisplayBorderRadius}px;\n  color: ${props => props.theme.titleTextColor};\n  display: flex;\n  height: ${props => props.theme.timeDisplayHeight}px;\n  justify-content: center;\n  min-width: ${props => props.theme.timeDisplayMinWidth}px;\n  opacity: ${props => props.theme.timeDisplayOpacity};\n  padding: ${props => props.theme.timeDisplayPadding};\n`;\n\nconst StyledTimeDisplayGroups = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`;\n\nconst StyledTimeDisplayRows = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst StyledTimeDisplayTop = styled.div.attrs({\n  className: 'animation-control__time-display__top'\n})`\n  color: ${props => props.theme.textColor};\n  display: flex;\n  font-size: 12px;\n  font-weight: 500;\n  justify-content: center;\n`;\n\nconst StyledTimeDisplayBottom = styled.div.attrs({\n  className: 'animation-control__time-display__bottom'\n})`\n  color: ${props => props.theme.titleTextColor};\n  display: flex;\n  font-size: 14px;\n  font-weight: 500;\n  justify-content: center;\n`;\n\nconst StyledTimeValueGroup = styled.div.attrs({\n  className: 'animation-control__time-value-group'\n})`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledHorizontalBar = styled.div.attrs({\n  className: 'animation-control__horizontal-bar'\n})`\n  margin: 0 12px;\n`;\n\nconst TimeDivider = () => (\n  <StyledHorizontalBar>\n    <Minus height=\"12px\" />\n  </StyledHorizontalBar>\n);\n\nconst TimeDisplayRow = ({timeValues = []}) => (\n  <CenterFlexbox>\n    <div className=\"time-value\">{timeValues[0]}</div>\n    {timeValues[1] ? <TimeDivider /> : null}\n    {timeValues[1] ? <div className=\"time-value\">{timeValues[1]}</div> : null}\n  </CenterFlexbox>\n);\n\nexport default function FloatingTimeDisplayFactory() {\n  const FloatingTimeDisplay = ({currentTime, defaultTimeFormat, timeFormat, timezone}) => {\n    const {displayDate, displayTime} = useMemo(() => {\n      const groupTime = Array.isArray(currentTime) ? currentTime : [currentTime];\n      const hasUserFormat = typeof timeFormat === 'string';\n      const currentFormat = (hasUserFormat ? timeFormat : defaultTimeFormat) || DEFAULT_TIME_FORMAT;\n      const dateFunc = datetimeFormatter(timezone);\n\n      if (hasUserFormat) {\n        // dont split time if user defined it\n        return {\n          displayDate: groupTime.map(dateFunc(currentFormat)),\n          displayTime: []\n        };\n      }\n      return groupTime.reduce(\n        (accu, curr) => {\n          const [dateFormat, datetimeFormat] = currentFormat.split(' ');\n          const dateString = dateFunc(dateFormat)(curr);\n          const timeString = datetimeFormat ? dateFunc(datetimeFormat)(curr) : null;\n\n          if (!accu.displayDate.includes(dateString)) {\n            accu.displayDate.push(dateString);\n          }\n          if (timeString) {\n            accu.displayTime.push(timeString);\n          }\n\n          return accu;\n        },\n        {displayDate: [], displayTime: []}\n      );\n    }, [currentTime, timeFormat, defaultTimeFormat, timezone]);\n\n    const twoGroups = displayDate.length === 2 && displayTime.length === 2;\n    const bottomRow = displayTime.length ? displayTime : displayDate.length ? displayDate : null;\n    const topRow = displayDate.length && displayTime.length ? displayDate : null;\n\n    return (\n      <StyledTimeDisplayWrapper>\n        <StyledTimeDisplay className=\"animation-control__time-display\">\n          {twoGroups ? (\n            <StyledTimeDisplayGroups>\n              <StyledTimeValueGroup>\n                {/* Time Start */}\n                <StyledTimeDisplayTop>{displayDate[0]}</StyledTimeDisplayTop>\n                <StyledTimeDisplayBottom>{displayTime[0]}</StyledTimeDisplayBottom>\n              </StyledTimeValueGroup>\n              <TimeDivider />\n              <StyledTimeValueGroup>\n                {/* Time End */}\n                <StyledTimeDisplayTop>{displayDate[1]}</StyledTimeDisplayTop>\n                <StyledTimeDisplayBottom>{displayTime[1]}</StyledTimeDisplayBottom>\n              </StyledTimeValueGroup>\n            </StyledTimeDisplayGroups>\n          ) : (\n            <StyledTimeDisplayRows>\n              {topRow ? (\n                <StyledTimeDisplayTop>\n                  <TimeDisplayRow timeValues={topRow} />\n                </StyledTimeDisplayTop>\n              ) : null}\n              {bottomRow ? (\n                <StyledTimeDisplayBottom>\n                  <TimeDisplayRow timeValues={bottomRow} />\n                </StyledTimeDisplayBottom>\n              ) : null}\n            </StyledTimeDisplayRows>\n          )}\n        </StyledTimeDisplay>\n      </StyledTimeDisplayWrapper>\n    );\n  };\n\n  return FloatingTimeDisplay;\n}\n"]},"metadata":{},"sourceType":"script"}
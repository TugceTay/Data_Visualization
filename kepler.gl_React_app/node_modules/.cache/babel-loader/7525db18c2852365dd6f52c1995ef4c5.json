{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"@babel/runtime/helpers/esm/get\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport Layer from './layer';\nimport debug from '../debug';\nimport { flatten } from '../utils/flatten';\nvar TRACE_RENDER_LAYERS = 'compositeLayer.renderLayers';\nvar CompositeLayer = function (_Layer) {\n  _inherits(CompositeLayer, _Layer);\n  function CompositeLayer() {\n    _classCallCheck(this, CompositeLayer);\n    return _possibleConstructorReturn(this, _getPrototypeOf(CompositeLayer).apply(this, arguments));\n  }\n  _createClass(CompositeLayer, [{\n    key: \"getSubLayers\",\n    value: function getSubLayers() {\n      return this.internalState && this.internalState.subLayers || [];\n    }\n  }, {\n    key: \"initializeState\",\n    value: function initializeState() {}\n  }, {\n    key: \"setState\",\n    value: function setState(updateObject) {\n      _get(_getPrototypeOf(CompositeLayer.prototype), \"setState\", this).call(this, updateObject);\n      this.setNeedsUpdate();\n    }\n  }, {\n    key: \"getPickingInfo\",\n    value: function getPickingInfo(_ref) {\n      var info = _ref.info;\n      var object = info.object;\n      var isDataWrapped = object && object.__source && object.__source.parent && object.__source.parent.id === this.id;\n      if (!isDataWrapped) {\n        return info;\n      }\n      return Object.assign(info, {\n        object: object.__source.object,\n        index: object.__source.index\n      });\n    }\n  }, {\n    key: \"renderLayers\",\n    value: function renderLayers() {\n      return null;\n    }\n  }, {\n    key: \"shouldRenderSubLayer\",\n    value: function shouldRenderSubLayer(id, data) {\n      var overridingProps = this.props._subLayerProps;\n      return data && data.length || overridingProps && overridingProps[id];\n    }\n  }, {\n    key: \"getSubLayerClass\",\n    value: function getSubLayerClass(id, DefaultLayerClass) {\n      var overridingProps = this.props._subLayerProps;\n      return overridingProps && overridingProps[id] && overridingProps[id].type || DefaultLayerClass;\n    }\n  }, {\n    key: \"getSubLayerRow\",\n    value: function getSubLayerRow(row, sourceObject, sourceObjectIndex) {\n      row.__source = {\n        parent: this,\n        object: sourceObject,\n        index: sourceObjectIndex\n      };\n      return row;\n    }\n  }, {\n    key: \"getSubLayerAccessor\",\n    value: function getSubLayerAccessor(accessor) {\n      if (typeof accessor === 'function') {\n        var objectInfo = {\n          data: this.props.data,\n          target: []\n        };\n        return function (x, i) {\n          if (x.__source) {\n            objectInfo.index = x.__source.index;\n            return accessor(x.__source.object, objectInfo);\n          }\n          return accessor(x, i);\n        };\n      }\n      return accessor;\n    }\n  }, {\n    key: \"getSubLayerProps\",\n    value: function getSubLayerProps() {\n      var sublayerProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _this$props = this.props,\n        opacity = _this$props.opacity,\n        pickable = _this$props.pickable,\n        visible = _this$props.visible,\n        parameters = _this$props.parameters,\n        getPolygonOffset = _this$props.getPolygonOffset,\n        highlightedObjectIndex = _this$props.highlightedObjectIndex,\n        autoHighlight = _this$props.autoHighlight,\n        highlightColor = _this$props.highlightColor,\n        coordinateSystem = _this$props.coordinateSystem,\n        coordinateOrigin = _this$props.coordinateOrigin,\n        wrapLongitude = _this$props.wrapLongitude,\n        positionFormat = _this$props.positionFormat,\n        modelMatrix = _this$props.modelMatrix,\n        extensions = _this$props.extensions,\n        overridingProps = _this$props._subLayerProps;\n      var newProps = {\n        opacity: opacity,\n        pickable: pickable,\n        visible: visible,\n        parameters: parameters,\n        getPolygonOffset: getPolygonOffset,\n        highlightedObjectIndex: highlightedObjectIndex,\n        autoHighlight: autoHighlight,\n        highlightColor: highlightColor,\n        coordinateSystem: coordinateSystem,\n        coordinateOrigin: coordinateOrigin,\n        wrapLongitude: wrapLongitude,\n        positionFormat: positionFormat,\n        modelMatrix: modelMatrix,\n        extensions: extensions\n      };\n      var overridingSublayerProps = overridingProps && overridingProps[sublayerProps.id];\n      var overridingSublayerTriggers = overridingSublayerProps && overridingSublayerProps.updateTriggers;\n      var sublayerId = sublayerProps.id || 'sublayer';\n      if (overridingSublayerProps) {\n        var propTypes = this.constructor._propTypes;\n        for (var key in overridingSublayerProps) {\n          var propType = propTypes[key];\n          if (propType && propType.type === 'accessor') {\n            overridingSublayerProps[key] = this.getSubLayerAccessor(overridingSublayerProps[key]);\n          }\n        }\n      }\n      Object.assign(newProps, sublayerProps, overridingSublayerProps, {\n        id: \"\".concat(this.props.id, \"-\").concat(sublayerId),\n        updateTriggers: Object.assign({\n          all: this.props.updateTriggers.all\n        }, sublayerProps.updateTriggers, overridingSublayerTriggers)\n      });\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n      try {\n        for (var _iterator = extensions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var extension = _step.value;\n          var passThroughProps = extension.getSubLayerProps.call(this, extension);\n          if (passThroughProps) {\n            Object.assign(newProps, passThroughProps, {\n              updateTriggers: Object.assign(newProps.updateTriggers, passThroughProps.updateTriggers)\n            });\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n      return newProps;\n    }\n  }, {\n    key: \"_getAttributeManager\",\n    value: function _getAttributeManager() {\n      return null;\n    }\n  }, {\n    key: \"_renderLayers\",\n    value: function _renderLayers() {\n      var subLayers = this.internalState.subLayers;\n      var shouldUpdate = !subLayers || this.needsUpdate();\n      if (shouldUpdate) {\n        subLayers = this.renderLayers();\n        subLayers = flatten(subLayers, Boolean);\n        this.internalState.subLayers = subLayers;\n      }\n      debug(TRACE_RENDER_LAYERS, this, shouldUpdate, subLayers);\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n      try {\n        for (var _iterator2 = subLayers[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var layer = _step2.value;\n          layer.parent = this;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"isComposite\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"isLoaded\",\n    get: function get() {\n      return _get(_getPrototypeOf(CompositeLayer.prototype), \"isLoaded\", this) && this.getSubLayers().every(function (layer) {\n        return layer.isLoaded;\n      });\n    }\n  }]);\n  return CompositeLayer;\n}(Layer);\nexport { CompositeLayer as default };\nCompositeLayer.layerName = 'CompositeLayer';","map":{"version":3,"sources":["../../../src/lib/composite-layer.js"],"names":["Layer","debug","flatten","TRACE_RENDER_LAYERS","CompositeLayer","getSubLayers","every","layer","isLoaded","internalState","subLayers","updateObject","setNeedsUpdate","info","object","isDataWrapped","__source","parent","id","assign","index","data","_subLayerProps","overridingProps","props","length","DefaultLayerClass","type","row","sourceObject","sourceObjectIndex","accessor","objectInfo","target","x","i","sublayerProps","opacity","pickable","visible","parameters","getPolygonOffset","highlightedObjectIndex","autoHighlight","highlightColor","coordinateSystem","coordinateOrigin","wrapLongitude","positionFormat","modelMatrix","extensions","newProps","overridingSublayerProps","overridingSublayerTriggers","updateTriggers","sublayerId","propTypes","constructor","_propTypes","key","propType","getSubLayerAccessor","Object","all","extension","passThroughProps","getSubLayerProps","call","shouldUpdate","needsUpdate","renderLayers","Boolean","layerName"],"mappings":";;;;;;AAmBA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AAEA,IAAMC,mBAAmB,GAAG,6BAA5B;IAEqBC,c;;;;;;;;mCASJ;MACb,OAAQ,IAAA,CAAKK,aAAL,IAAsB,IAAA,CAAKA,aAAL,CAAmBC,SAA1C,IAAwD,EAA/D;IACD;;;sCAIiB,CAAE;;;6BAGXC,Y,EAAc;MACrB,IAAA,CAAA,eAAA,CAAA,cAAA,CAAA,SAAA,CAAA,EAAA,UAAA,EAAA,IAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAeA,YAAf,CAAA;MAMA,IAAA,CAAKC,cAAL,EAAA;IACD;;;yCAMsB;MAAA,IAAPC,IAAO,GAAA,IAAA,CAAPA,IAAO;MAAA,IACdC,MADc,GACJD,IADI,CACdC,MADc;MAErB,IAAMC,aAAa,GACjBD,MAAM,IAAIA,MAAM,CAACE,QAAjBF,IAA6BA,MAAM,CAACE,QAAPF,CAAgBG,MAA7CH,IAAuDA,MAAM,CAACE,QAAPF,CAAgBG,MAAhBH,CAAuBI,EAAvBJ,KAA8B,IAAA,CAAKI,EAD5F;MAGA,IAAI,CAACH,aAAL,EAAoB;QAClB,OAAOF,IAAP;MACD;MAED,OAAO,MAAM,CAACM,MAAP,CAAcN,IAAd,EAAoB;QAEzBC,MAAM,EAAEA,MAAM,CAACE,QAAPF,CAAgBA,MAFC;QAGzBM,KAAK,EAAEN,MAAM,CAACE,QAAPF,CAAgBM;MAHE,CAApB,CAAP;IAKD;;;mCAGc;MACb,OAAO,IAAP;IACD;;;yCAGoBF,E,EAAIG,I,EAAM;MAAA,IACNE,eADM,GACa,IAAA,CAAKC,KADlB,CACtBF,cADsB;MAG7B,OAAQD,IAAI,IAAIA,IAAI,CAACI,MAAd,IAA0BF,eAAe,IAAIA,eAAe,CAACL,EAAD,CAAnE;IACD;;;qCAGgBA,E,EAAIQ,iB,EAAmB;MAAA,IACfH,eADe,GACI,IAAA,CAAKC,KADT,CAC/BF,cAD+B;MAGtC,OACGC,eAAe,IAAIA,eAAe,CAACL,EAAD,CAAlCK,IAA0CA,eAAe,CAACL,EAAD,CAAfK,CAAoBI,IAA/D,IAAwED,iBAD1E;IAGD;;;mCAIcE,G,EAAKC,Y,EAAcC,iB,EAAmB;MACnDF,GAAG,CAACZ,QAAJY,GAAe;QACbX,MAAM,EAAE,IADK;QAEbH,MAAM,EAAEe,YAFK;QAGbT,KAAK,EAAEU;MAHM,CAAfF;MAKA,OAAOA,GAAP;IACD;;;wCAKmBG,Q,EAAU;MAC5B,IAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;QAClC,IAAMC,UAAU,GAAG;UACjBX,IAAI,EAAE,IAAA,CAAKG,KAAL,CAAWH,IADA;UAEjBY,MAAM,EAAE;QAFS,CAAnB;QAIA,OAAO,UAACC,CAAD,EAAIC,CAAJ,EAAU;UACf,IAAID,CAAC,CAAClB,QAAN,EAAgB;YACdgB,UAAU,CAACZ,KAAXY,GAAmBE,CAAC,CAAClB,QAAFkB,CAAWd,KAA9BY;YACA,OAAOD,QAAQ,CAACG,CAAC,CAAClB,QAAFkB,CAAWpB,MAAZ,EAAoBkB,UAApB,CAAf;UACD;UACD,OAAOD,QAAQ,CAACG,CAAD,EAAIC,CAAJ,CAAf;QACD,CAND;MAOD;MACD,OAAOJ,QAAP;IACD;;;uCAGoC;MAAA,IAApBK,aAAoB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,CAAA,CAAI;MAAA,IAAA,WAAA,GAiB/B,IAAA,CAAKZ,KAjB0B;QAEjCa,OAFiC,GAAA,WAAA,CAEjCA,OAFiC;QAGjCC,QAHiC,GAAA,WAAA,CAGjCA,QAHiC;QAIjCC,OAJiC,GAAA,WAAA,CAIjCA,OAJiC;QAKjCC,UALiC,GAAA,WAAA,CAKjCA,UALiC;QAMjCC,gBANiC,GAAA,WAAA,CAMjCA,gBANiC;QAOjCC,sBAPiC,GAAA,WAAA,CAOjCA,sBAPiC;QAQjCC,aARiC,GAAA,WAAA,CAQjCA,aARiC;QASjCC,cATiC,GAAA,WAAA,CASjCA,cATiC;QAUjCC,gBAViC,GAAA,WAAA,CAUjCA,gBAViC;QAWjCC,gBAXiC,GAAA,WAAA,CAWjCA,gBAXiC;QAYjCC,aAZiC,GAAA,WAAA,CAYjCA,aAZiC;QAajCC,cAbiC,GAAA,WAAA,CAajCA,cAbiC;QAcjCC,WAdiC,GAAA,WAAA,CAcjCA,WAdiC;QAejCC,UAfiC,GAAA,WAAA,CAejCA,UAfiC;QAgBjB3B,eAhBiB,GAAA,WAAA,CAgBjCD,cAhBiC;MAkBnC,IAAM6B,QAAQ,GAAG;QACfd,OAAO,EAAPA,OADe;QAEfC,QAAQ,EAARA,QAFe;QAGfC,OAAO,EAAPA,OAHe;QAIfC,UAAU,EAAVA,UAJe;QAKfC,gBAAgB,EAAhBA,gBALe;QAMfC,sBAAsB,EAAtBA,sBANe;QAOfC,aAAa,EAAbA,aAPe;QAQfC,cAAc,EAAdA,cARe;QASfC,gBAAgB,EAAhBA,gBATe;QAUfC,gBAAgB,EAAhBA,gBAVe;QAWfC,aAAa,EAAbA,aAXe;QAYfC,cAAc,EAAdA,cAZe;QAafC,WAAW,EAAXA,WAbe;QAcfC,UAAU,EAAVA;MAde,CAAjB;MAiBA,IAAME,uBAAuB,GAAG7B,eAAe,IAAIA,eAAe,CAACa,aAAa,CAAClB,EAAf,CAAlE;MACA,IAAMmC,0BAA0B,GAC9BD,uBAAuB,IAAIA,uBAAuB,CAACE,cADrD;MAEA,IAAMC,UAAU,GAAGnB,aAAa,CAAClB,EAAdkB,IAAoB,UAAvC;MAEA,IAAIgB,uBAAJ,EAA6B;QAC3B,IAAMI,SAAS,GAAG,IAAA,CAAKC,WAAL,CAAiBC,UAAnC;QACA,KAAK,IAAMC,GAAX,IAAkBP,uBAAlB,EAA2C;UACzC,IAAMQ,QAAQ,GAAGJ,SAAS,CAACG,GAAD,CAA1B;UAEA,IAAIC,QAAQ,IAAIA,QAAQ,CAACjC,IAATiC,KAAkB,UAAlC,EAA8C;YAC5CR,uBAAuB,CAACO,GAAD,CAAvBP,GAA+B,IAAA,CAAKS,mBAAL,CAAyBT,uBAAuB,CAACO,GAAD,CAAhD,CAA/BP;UACD;QACF;MACF;MAEDU,MAAM,CAAC3C,MAAP2C,CACEX,QADFW,EAEE1B,aAFF0B,EAIEV,uBAJFU,EAKE;QACE5C,EAAE,EAAA,EAAA,CAAA,MAAA,CAAK,IAAA,CAAKM,KAAL,CAAWN,EAAhB,EAAA,GAAA,CAAA,CAAA,MAAA,CAAsBqC,UAAtB,CADJ;QAEED,cAAc,EAAE,MAAM,CAACnC,MAAP,CACd;UACE4C,GAAG,EAAE,IAAA,CAAKvC,KAAL,CAAW8B,cAAX,CAA0BS;QADjC,CADc,EAId3B,aAAa,CAACkB,cAJA,EAKdD,0BALc;MAFlB,CALFS,CAAAA;MAnDmC,IAAA,yBAAA,GAAA,IAAA;MAAA,IAAA,iBAAA,GAAA,KAAA;MAAA,IAAA,cAAA,GAAA,SAAA;MAAA,IAAA;QAqEnC,KAAA,IAAA,SAAA,GAAwBZ,UAAxB,CAAA,MAAA,CAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA,EAAA,yBAAA,GAAA,CAAA,KAAA,GAAA,SAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,EAAA,yBAAA,GAAA,IAAA,EAAoC;UAAA,IAAzBc,SAAyB,GAAA,KAAA,CAAA,KAAA;UAClC,IAAMC,gBAAgB,GAAGD,SAAS,CAACE,gBAAVF,CAA2BG,IAA3BH,CAAgC,IAAhCA,EAAsCA,SAAtCA,CAAzB;UACA,IAAIC,gBAAJ,EAAsB;YACpBH,MAAM,CAAC3C,MAAP2C,CAAcX,QAAdW,EAAwBG,gBAAxBH,EAA0C;cACxCR,cAAc,EAAEQ,MAAM,CAAC3C,MAAP2C,CAAcX,QAAQ,CAACG,cAAvBQ,EAAuCG,gBAAgB,CAACX,cAAxDQ;YADwB,CAA1CA,CAAAA;UAGD;QACF;MA5EkC,CAAA,CAAA,OAAA,GAAA,EAAA;QAAA,iBAAA,GAAA,IAAA;QAAA,cAAA,GAAA,GAAA;MAAA,CAAA,SAAA;QAAA,IAAA;UAAA,IAAA,CAAA,yBAAA,IAAA,SAAA,CAAA,QAAA,CAAA,IAAA,IAAA,EAAA;YAAA,SAAA,CAAA,QAAA,CAAA,EAAA;UAAA;QAAA,CAAA,SAAA;UAAA,IAAA,iBAAA,EAAA;YAAA,MAAA,cAAA;UAAA;QAAA;MAAA;MA8EnC,OAAOX,QAAP;IACD;;;2CAEsB;MACrB,OAAO,IAAP;IACD;;;oCAGe;MAAA,IACTzC,SADS,GACI,IAAA,CAAKD,aADT,CACTC,SADS;MAEd,IAAM0D,YAAY,GAAG,CAAC1D,SAAD,IAAc,IAAA,CAAK2D,WAAL,EAAnC;MACA,IAAID,YAAJ,EAAkB;QAChB1D,SAAS,GAAG,IAAA,CAAK4D,YAAL,EAAZ5D;QAIAA,SAAS,GAAGR,OAAO,CAACQ,SAAD,EAAY6D,OAAZ,CAAnB7D;QACA,IAAA,CAAKD,aAAL,CAAmBC,SAAnB,GAA+BA,SAA/B;MACD;MACDT,KAAK,CAACE,mBAAD,EAAsB,IAAtB,EAA4BiE,YAA5B,EAA0C1D,SAA1C,CAALT;MAXc,IAAA,0BAAA,GAAA,IAAA;MAAA,IAAA,kBAAA,GAAA,KAAA;MAAA,IAAA,eAAA,GAAA,SAAA;MAAA,IAAA;QAed,KAAA,IAAA,UAAA,GAAoBS,SAApB,CAAA,MAAA,CAAA,QAAA,CAAA,EAAA,EAAA,MAAA,EAAA,EAAA,0BAAA,GAAA,CAAA,MAAA,GAAA,UAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,EAAA,0BAAA,GAAA,IAAA,EAA+B;UAAA,IAApBH,KAAoB,GAAA,MAAA,CAAA,KAAA;UAC7BA,KAAK,CAACU,MAANV,GAAe,IAAfA;QACD;MAjBa,CAAA,CAAA,OAAA,GAAA,EAAA;QAAA,kBAAA,GAAA,IAAA;QAAA,eAAA,GAAA,GAAA;MAAA,CAAA,SAAA;QAAA,IAAA;UAAA,IAAA,CAAA,0BAAA,IAAA,UAAA,CAAA,QAAA,CAAA,IAAA,IAAA,EAAA;YAAA,UAAA,CAAA,QAAA,CAAA,EAAA;UAAA;QAAA,CAAA,SAAA;UAAA,IAAA,kBAAA,EAAA;YAAA,MAAA,eAAA;UAAA;QAAA;MAAA;IAkBf;;;wBA5MiB;MAChB,OAAO,IAAP;IACD;;;wBAEc;MACb,OAAO,IAAA,CAAA,eAAA,CAAA,cAAA,CAAA,SAAA,CAAA,EAAA,UAAA,EAAA,IAAA,CAAA,IAAkB,IAAA,CAAKF,YAAL,EAAA,CAAoBC,KAApB,CAA0B,UAAA,KAAK,EAAA;QAAA,OAAIC,KAAK,CAACC,QAAV;MAAA,CAA/B,CAAzB;IACD;;;EAPyCR,K;SAAvBI,c;AAgNrBA,cAAc,CAACoE,SAAfpE,GAA2B,gBAA3BA","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport Layer from './layer';\nimport debug from '../debug';\nimport {flatten} from '../utils/flatten';\n\nconst TRACE_RENDER_LAYERS = 'compositeLayer.renderLayers';\n\nexport default class CompositeLayer extends Layer {\n  get isComposite() {\n    return true;\n  }\n\n  get isLoaded() {\n    return super.isLoaded && this.getSubLayers().every(layer => layer.isLoaded);\n  }\n\n  getSubLayers() {\n    return (this.internalState && this.internalState.subLayers) || [];\n  }\n\n  // initializeState is usually not needed for composite layers\n  // Provide empty definition to disable check for missing definition\n  initializeState() {}\n\n  // Updates selected state members and marks the composite layer to need rerender\n  setState(updateObject) {\n    super.setState(updateObject);\n    // Trigger a layer update\n    // Although conceptually layer.draw and compositeLayer.renderLayers are equivalent,\n    // they are executed during different lifecycles.\n    // draw can be called without calling updateState (e.g. most viewport changes),\n    // while renderLayers can only be called during a recursive layer update.\n    this.setNeedsUpdate();\n  }\n\n  // called to augment the info object that is bubbled up from a sublayer\n  // override Layer.getPickingInfo() because decoding / setting uniform do\n  // not apply to a composite layer.\n  // @return null to cancel event\n  getPickingInfo({info}) {\n    const {object} = info;\n    const isDataWrapped =\n      object && object.__source && object.__source.parent && object.__source.parent.id === this.id;\n\n    if (!isDataWrapped) {\n      return info;\n    }\n\n    return Object.assign(info, {\n      // override object with picked data\n      object: object.__source.object,\n      index: object.__source.index\n    });\n  }\n\n  // Implement to generate subLayers\n  renderLayers() {\n    return null;\n  }\n\n  // Returns true if sub layer needs to be rendered\n  shouldRenderSubLayer(id, data) {\n    const {_subLayerProps: overridingProps} = this.props;\n\n    return (data && data.length) || (overridingProps && overridingProps[id]);\n  }\n\n  // Returns sub layer class for a specific sublayer\n  getSubLayerClass(id, DefaultLayerClass) {\n    const {_subLayerProps: overridingProps} = this.props;\n\n    return (\n      (overridingProps && overridingProps[id] && overridingProps[id].type) || DefaultLayerClass\n    );\n  }\n\n  // When casting user data into another format to pass to sublayers,\n  // add reference to the original object and object index\n  getSubLayerRow(row, sourceObject, sourceObjectIndex) {\n    row.__source = {\n      parent: this,\n      object: sourceObject,\n      index: sourceObjectIndex\n    };\n    return row;\n  }\n\n  // Some composite layers cast user data into another format before passing to sublayers\n  // We need to unwrap them before calling the accessor so that they see the original data\n  // objects\n  getSubLayerAccessor(accessor) {\n    if (typeof accessor === 'function') {\n      const objectInfo = {\n        data: this.props.data,\n        target: []\n      };\n      return (x, i) => {\n        if (x.__source) {\n          objectInfo.index = x.__source.index;\n          return accessor(x.__source.object, objectInfo);\n        }\n        return accessor(x, i);\n      };\n    }\n    return accessor;\n  }\n\n  // Returns sub layer props for a specific sublayer\n  getSubLayerProps(sublayerProps = {}) {\n    const {\n      opacity,\n      pickable,\n      visible,\n      parameters,\n      getPolygonOffset,\n      highlightedObjectIndex,\n      autoHighlight,\n      highlightColor,\n      coordinateSystem,\n      coordinateOrigin,\n      wrapLongitude,\n      positionFormat,\n      modelMatrix,\n      extensions,\n      _subLayerProps: overridingProps\n    } = this.props;\n    const newProps = {\n      opacity,\n      pickable,\n      visible,\n      parameters,\n      getPolygonOffset,\n      highlightedObjectIndex,\n      autoHighlight,\n      highlightColor,\n      coordinateSystem,\n      coordinateOrigin,\n      wrapLongitude,\n      positionFormat,\n      modelMatrix,\n      extensions\n    };\n\n    const overridingSublayerProps = overridingProps && overridingProps[sublayerProps.id];\n    const overridingSublayerTriggers =\n      overridingSublayerProps && overridingSublayerProps.updateTriggers;\n    const sublayerId = sublayerProps.id || 'sublayer';\n\n    if (overridingSublayerProps) {\n      const propTypes = this.constructor._propTypes;\n      for (const key in overridingSublayerProps) {\n        const propType = propTypes[key];\n        // eslint-disable-next-line\n        if (propType && propType.type === 'accessor') {\n          overridingSublayerProps[key] = this.getSubLayerAccessor(overridingSublayerProps[key]);\n        }\n      }\n    }\n\n    Object.assign(\n      newProps,\n      sublayerProps,\n      // experimental feature that allows users to override sublayer props via parent layer prop\n      overridingSublayerProps,\n      {\n        id: `${this.props.id}-${sublayerId}`,\n        updateTriggers: Object.assign(\n          {\n            all: this.props.updateTriggers.all\n          },\n          sublayerProps.updateTriggers,\n          overridingSublayerTriggers\n        )\n      }\n    );\n\n    // Pass through extension props\n    for (const extension of extensions) {\n      const passThroughProps = extension.getSubLayerProps.call(this, extension);\n      if (passThroughProps) {\n        Object.assign(newProps, passThroughProps, {\n          updateTriggers: Object.assign(newProps.updateTriggers, passThroughProps.updateTriggers)\n        });\n      }\n    }\n\n    return newProps;\n  }\n\n  _getAttributeManager() {\n    return null;\n  }\n\n  // Called by layer manager to render subLayers\n  _renderLayers() {\n    let {subLayers} = this.internalState;\n    const shouldUpdate = !subLayers || this.needsUpdate();\n    if (shouldUpdate) {\n      subLayers = this.renderLayers();\n      // Flatten the returned array, removing any null, undefined or false\n      // this allows layers to render sublayers conditionally\n      // (see CompositeLayer.renderLayers docs)\n      subLayers = flatten(subLayers, Boolean);\n      this.internalState.subLayers = subLayers;\n    }\n    debug(TRACE_RENDER_LAYERS, this, shouldUpdate, subLayers);\n\n    // populate reference to parent layer (this layer)\n    // NOTE: needs to be done even when reusing layers as the parent may have changed\n    for (const layer of subLayers) {\n      layer.parent = this;\n    }\n  }\n}\n\nCompositeLayer.layerName = 'CompositeLayer';\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.lineVisConfigs = exports.lineColumnLabels = exports.lineOptionalColumns = exports.lineRequiredColumns = exports.linePosAccessor = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _extensions = require(\"@deck.gl/extensions\");\nvar _layerFactory = require(\"../layer-factory\");\nvar _lineLayerIcon = _interopRequireDefault(require(\"./line-layer-icon\"));\nvar _arcLayer = _interopRequireDefault(require(\"../arc-layer/arc-layer\"));\nvar _lineLayer = _interopRequireDefault(require(\"../../deckgl-layers/line-layer/line-layer\"));\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nvar linePosAccessor = function linePosAccessor(_ref) {\n  var lat0 = _ref.lat0,\n    lng0 = _ref.lng0,\n    lat1 = _ref.lat1,\n    lng1 = _ref.lng1,\n    alt0 = _ref.alt0,\n    alt1 = _ref.alt1;\n  return function (dc) {\n    return function (d) {\n      return [dc.valueAt(d.index, lng0.fieldIdx), dc.valueAt(d.index, lat0.fieldIdx), (alt0 === null || alt0 === void 0 ? void 0 : alt0.fieldIdx) > -1 ? dc.valueAt(d.index, alt0.fieldIdx) : 0, dc.valueAt(d.index, lng1.fieldIdx), dc.valueAt(d.index, lat1.fieldIdx), (alt1 === null || alt1 === void 0 ? void 0 : alt1.fieldIdx) > -1 ? dc.valueAt(d.index, alt1.fieldIdx) : 0];\n    };\n  };\n};\nexports.linePosAccessor = linePosAccessor;\nvar lineRequiredColumns = ['lat0', 'lng0', 'lat1', 'lng1'];\nexports.lineRequiredColumns = lineRequiredColumns;\nvar lineOptionalColumns = ['alt0', 'alt1'];\nexports.lineOptionalColumns = lineOptionalColumns;\nvar lineColumnLabels = {\n  lat0: 'arc.lat0',\n  lng0: 'arc.lng0',\n  lat1: 'arc.lat1',\n  lng1: 'arc.lng1',\n  alt0: 'line.alt0',\n  alt1: 'line.alt1'\n};\nexports.lineColumnLabels = lineColumnLabels;\nvar lineVisConfigs = {\n  opacity: 'opacity',\n  thickness: 'thickness',\n  colorRange: 'colorRange',\n  sizeRange: 'strokeWidthRange',\n  targetColor: 'targetColor',\n  elevationScale: _objectSpread(_objectSpread({}, _layerFactory.LAYER_VIS_CONFIGS.elevationScale), {}, {\n    defaultValue: 1\n  })\n};\nexports.lineVisConfigs = lineVisConfigs;\nvar LineLayer = /*#__PURE__*/function (_ArcLayer) {\n  (0, _inherits2[\"default\"])(LineLayer, _ArcLayer);\n  var _super = _createSuper(LineLayer);\n  function LineLayer(props) {\n    var _this;\n    (0, _classCallCheck2[\"default\"])(this, LineLayer);\n    _this = _super.call(this, props);\n    _this.registerVisConfig(lineVisConfigs);\n    _this.getPositionAccessor = function (dataContainer) {\n      return linePosAccessor(_this.config.columns)(dataContainer);\n    };\n    return _this;\n  }\n  (0, _createClass2[\"default\"])(LineLayer, [{\n    key: \"type\",\n    get: function get() {\n      return 'line';\n    }\n  }, {\n    key: \"layerIcon\",\n    get: function get() {\n      return _lineLayerIcon[\"default\"];\n    }\n  }, {\n    key: \"requiredLayerColumns\",\n    get: function get() {\n      return lineRequiredColumns;\n    }\n  }, {\n    key: \"optionalColumns\",\n    get: function get() {\n      return lineOptionalColumns;\n    }\n  }, {\n    key: \"columnLabels\",\n    get: function get() {\n      return lineColumnLabels;\n    }\n  }, {\n    key: \"visualChannels\",\n    get: function get() {\n      var visualChannels = (0, _get2[\"default\"])((0, _getPrototypeOf2[\"default\"])(LineLayer.prototype), \"visualChannels\", this);\n      return _objectSpread(_objectSpread({}, visualChannels), {}, {\n        sourceColor: _objectSpread(_objectSpread({}, visualChannels.sourceColor), {}, {\n          accessor: 'getColor'\n        })\n      });\n    }\n  }, {\n    key: \"renderLayer\",\n    value: function renderLayer(opts) {\n      var data = opts.data,\n        gpuFilter = opts.gpuFilter,\n        objectHovered = opts.objectHovered,\n        interactionConfig = opts.interactionConfig;\n      var layerProps = {\n        widthScale: this.config.visConfig.thickness,\n        elevationScale: this.config.visConfig.elevationScale\n      };\n      var updateTriggers = _objectSpread({\n        getPosition: this.config.columns,\n        getFilterValue: gpuFilter.filterValueUpdateTriggers\n      }, this.getVisualChannelUpdateTriggers());\n      var defaultLayerProps = this.getDefaultDeckLayerProps(opts);\n      var hoveredObject = this.hasHoveredObject(objectHovered);\n      return [\n      // base layer\n      new _lineLayer[\"default\"](_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, defaultLayerProps), this.getBrushingExtensionProps(interactionConfig, 'source_target')), data), layerProps), {}, {\n        updateTriggers: updateTriggers,\n        extensions: [].concat((0, _toConsumableArray2[\"default\"])(defaultLayerProps.extensions), [new _extensions.BrushingExtension()])\n      }))].concat((0, _toConsumableArray2[\"default\"])(hoveredObject ? [new _lineLayer[\"default\"](_objectSpread(_objectSpread(_objectSpread({}, this.getDefaultHoverLayerProps()), layerProps), {}, {\n        data: [hoveredObject],\n        getColor: this.config.highlightColor,\n        getTargetColor: this.config.highlightColor,\n        getWidth: data.getWidth\n      }))] : []));\n    }\n  }], [{\n    key: \"findDefaultLayerProps\",\n    value: function findDefaultLayerProps(_ref2) {\n      var _ref2$fieldPairs = _ref2.fieldPairs,\n        fieldPairs = _ref2$fieldPairs === void 0 ? [] : _ref2$fieldPairs;\n      if (fieldPairs.length < 2) {\n        return {\n          props: []\n        };\n      }\n      var props = {}; // connect the first two point layer with line\n\n      props.columns = {\n        lat0: fieldPairs[0].pair.lat,\n        lng0: fieldPairs[0].pair.lng,\n        alt0: {\n          value: null,\n          fieldIdx: -1,\n          optional: true\n        },\n        lat1: fieldPairs[1].pair.lat,\n        lng1: fieldPairs[1].pair.lng,\n        alt1: {\n          value: null,\n          fieldIdx: -1,\n          optional: true\n        }\n      };\n      props.label = \"\".concat(fieldPairs[0].defaultName, \" -> \").concat(fieldPairs[1].defaultName, \" line\");\n      return {\n        props: [props]\n      };\n    }\n  }]);\n  return LineLayer;\n}(_arcLayer[\"default\"]);\nexports[\"default\"] = LineLayer;","map":{"version":3,"sources":["../../../src/layers/line-layer/line-layer.js"],"names":["linePosAccessor","lat0","lng0","lat1","lng1","alt0","alt1","dc","valueAt","d","index","fieldIdx","lineRequiredColumns","lineOptionalColumns","lineColumnLabels","lineVisConfigs","opacity","thickness","colorRange","sizeRange","targetColor","elevationScale","LAYER_VIS_CONFIGS","defaultValue","LineLayer","ArcLayer","props","registerVisConfig","getPositionAccessor","config","columns","dataContainer","LineLayerIcon","visualChannels","sourceColor","accessor","fieldPairs","length","pair","lat","lng","value","optional","label","defaultName","opts","data","gpuFilter","objectHovered","interactionConfig","layerProps","widthScale","visConfig","updateTriggers","getPosition","getFilterValue","filterValueUpdateTriggers","getVisualChannelUpdateTriggers","defaultLayerProps","getDefaultDeckLayerProps","hoveredObject","hasHoveredObject","EnhancedLineLayer","getBrushingExtensionProps","extensions","BrushingExtension","getDefaultHoverLayerProps","getColor","highlightColor","getTargetColor","getWidth"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {BrushingExtension} from '@deck.gl/extensions';\n\nimport {LAYER_VIS_CONFIGS} from 'layers/layer-factory';\nimport LineLayerIcon from './line-layer-icon';\nimport ArcLayer from '../arc-layer/arc-layer';\nimport EnhancedLineLayer from 'deckgl-layers/line-layer/line-layer';\n\nexport const linePosAccessor = ({lat0, lng0, lat1, lng1, alt0, alt1}) => dc => d => [\n  dc.valueAt(d.index, lng0.fieldIdx),\n  dc.valueAt(d.index, lat0.fieldIdx),\n  alt0?.fieldIdx > -1 ? dc.valueAt(d.index, alt0.fieldIdx) : 0,\n  dc.valueAt(d.index, lng1.fieldIdx),\n  dc.valueAt(d.index, lat1.fieldIdx),\n  alt1?.fieldIdx > -1 ? dc.valueAt(d.index, alt1.fieldIdx) : 0\n];\n\nexport const lineRequiredColumns = ['lat0', 'lng0', 'lat1', 'lng1'];\nexport const lineOptionalColumns = ['alt0', 'alt1'];\n\nexport const lineColumnLabels = {\n  lat0: 'arc.lat0',\n  lng0: 'arc.lng0',\n  lat1: 'arc.lat1',\n  lng1: 'arc.lng1',\n  alt0: 'line.alt0',\n  alt1: 'line.alt1'\n};\n\nexport const lineVisConfigs = {\n  opacity: 'opacity',\n  thickness: 'thickness',\n  colorRange: 'colorRange',\n  sizeRange: 'strokeWidthRange',\n  targetColor: 'targetColor',\n  elevationScale: {\n    ...LAYER_VIS_CONFIGS.elevationScale,\n    defaultValue: 1\n  }\n};\n\nexport default class LineLayer extends ArcLayer {\n  constructor(props) {\n    super(props);\n\n    this.registerVisConfig(lineVisConfigs);\n    this.getPositionAccessor = dataContainer => linePosAccessor(this.config.columns)(dataContainer);\n  }\n\n  get type() {\n    return 'line';\n  }\n\n  get layerIcon() {\n    return LineLayerIcon;\n  }\n\n  get requiredLayerColumns() {\n    return lineRequiredColumns;\n  }\n\n  get optionalColumns() {\n    return lineOptionalColumns;\n  }\n\n  get columnLabels() {\n    return lineColumnLabels;\n  }\n\n  get visualChannels() {\n    const visualChannels = super.visualChannels;\n    return {\n      ...visualChannels,\n      sourceColor: {\n        ...visualChannels.sourceColor,\n        accessor: 'getColor'\n      }\n    };\n  }\n\n  static findDefaultLayerProps({fieldPairs = []}) {\n    if (fieldPairs.length < 2) {\n      return {props: []};\n    }\n    const props = {};\n\n    // connect the first two point layer with line\n    props.columns = {\n      lat0: fieldPairs[0].pair.lat,\n      lng0: fieldPairs[0].pair.lng,\n      alt0: {value: null, fieldIdx: -1, optional: true},\n      lat1: fieldPairs[1].pair.lat,\n      lng1: fieldPairs[1].pair.lng,\n      alt1: {value: null, fieldIdx: -1, optional: true}\n    };\n    props.label = `${fieldPairs[0].defaultName} -> ${fieldPairs[1].defaultName} line`;\n\n    return {props: [props]};\n  }\n\n  renderLayer(opts) {\n    const {data, gpuFilter, objectHovered, interactionConfig} = opts;\n\n    const layerProps = {\n      widthScale: this.config.visConfig.thickness,\n      elevationScale: this.config.visConfig.elevationScale\n    };\n\n    const updateTriggers = {\n      getPosition: this.config.columns,\n      getFilterValue: gpuFilter.filterValueUpdateTriggers,\n      ...this.getVisualChannelUpdateTriggers()\n    };\n    const defaultLayerProps = this.getDefaultDeckLayerProps(opts);\n    const hoveredObject = this.hasHoveredObject(objectHovered);\n\n    return [\n      // base layer\n      new EnhancedLineLayer({\n        ...defaultLayerProps,\n        ...this.getBrushingExtensionProps(interactionConfig, 'source_target'),\n        ...data,\n        ...layerProps,\n        updateTriggers,\n        extensions: [...defaultLayerProps.extensions, new BrushingExtension()]\n      }),\n      // hover layer\n      ...(hoveredObject\n        ? [\n            new EnhancedLineLayer({\n              ...this.getDefaultHoverLayerProps(),\n              ...layerProps,\n              data: [hoveredObject],\n              getColor: this.config.highlightColor,\n              getTargetColor: this.config.highlightColor,\n              getWidth: data.getWidth\n            })\n          ]\n        : [])\n    ];\n  }\n}\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { projectPosition } from '../../shaderlib/project/project-functions';\nimport { COORDINATE_SYSTEM } from '../../lib';\nvar DEFAULT_LIGHT_COLOR = [255, 255, 255];\nvar DEFAULT_LIGHT_INTENSITY = 1.0;\nvar DEFAULT_ATTENUATION = [0, 0, 1];\nvar DEFAULT_LIGHT_POSITION = [0.0, 0.0, 1.0];\nvar idCount = 0;\nexport var PointLight = function () {\n  function PointLight() {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, PointLight);\n    var _props$color = props.color,\n      color = _props$color === void 0 ? DEFAULT_LIGHT_COLOR : _props$color;\n    var _props$intensity = props.intensity,\n      intensity = _props$intensity === void 0 ? DEFAULT_LIGHT_INTENSITY : _props$intensity;\n    var _props$position = props.position,\n      position = _props$position === void 0 ? DEFAULT_LIGHT_POSITION : _props$position;\n    this.id = props.id || \"point-\".concat(idCount++);\n    this.color = color;\n    this.intensity = intensity;\n    this.type = 'point';\n    this.position = position;\n    this.attenuation = getAttenuation(props);\n    this.projectedLight = Object.assign({}, this);\n  }\n  _createClass(PointLight, [{\n    key: \"getProjectedLight\",\n    value: function getProjectedLight(_ref) {\n      var layer = _ref.layer;\n      var projectedLight = this.projectedLight;\n      var viewport = layer.context.viewport;\n      var _layer$props = layer.props,\n        coordinateSystem = _layer$props.coordinateSystem,\n        coordinateOrigin = _layer$props.coordinateOrigin;\n      var position = projectPosition(this.position, {\n        viewport: viewport,\n        coordinateSystem: coordinateSystem,\n        coordinateOrigin: coordinateOrigin,\n        fromCoordinateSystem: viewport.isGeospatial ? COORDINATE_SYSTEM.LNGLAT : COORDINATE_SYSTEM.CARTESIAN,\n        fromCoordinateOrigin: [0, 0, 0]\n      });\n      projectedLight.color = this.color;\n      projectedLight.intensity = this.intensity;\n      projectedLight.position = position;\n      return projectedLight;\n    }\n  }]);\n  return PointLight;\n}();\nfunction getAttenuation(props) {\n  if ('attenuation' in props) {\n    return props.attenuation;\n  }\n  if ('intensity' in props) {\n    return [0, 0, props.intensity];\n  }\n  return DEFAULT_ATTENUATION;\n}","map":{"version":3,"sources":["../../../../src/effects/lighting/point-light.js"],"names":["projectPosition","COORDINATE_SYSTEM","DEFAULT_LIGHT_COLOR","DEFAULT_LIGHT_INTENSITY","DEFAULT_ATTENUATION","DEFAULT_LIGHT_POSITION","idCount","PointLight","props","color","intensity","position","id","type","attenuation","getAttenuation","projectedLight","Object","assign","layer","viewport","context","coordinateSystem","coordinateOrigin","fromCoordinateSystem","isGeospatial","LNGLAT","CARTESIAN","fromCoordinateOrigin"],"mappings":";;AAAA,SAAQA,eAAR,QAA8B,2CAA9B;AACA,SAAQC,iBAAR,QAAgC,WAAhC;AAEA,IAAMC,mBAAmB,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAA5B;AACA,IAAMC,uBAAuB,GAAG,GAAhC;AACA,IAAMC,mBAAmB,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAA5B;AACA,IAAMC,sBAAsB,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAA/B;AAEA,IAAIC,OAAO,GAAG,CAAd;AAEA,OAAA,IAAaC,UAAb,GAAA,YAAA;EACE,SAAA,UAAA,GAAwB;IAAA,IAAZC,KAAY,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,CAAA,CAAI;IAAA,eAAA,CAAA,IAAA,EAAA,UAAA,CAAA;IAAA,IAAA,YAAA,GACgBA,KADhB,CACfC,KADe;MACfA,KADe,GAAA,YAAA,KAAA,KAAA,CAAA,GACPP,mBADO,GAAA,YAAA;IAAA,IAAA,gBAAA,GAEwBM,KAFxB,CAEfE,SAFe;MAEfA,SAFe,GAAA,gBAAA,KAAA,KAAA,CAAA,GAEHP,uBAFG,GAAA,gBAAA;IAAA,IAAA,eAAA,GAGsBK,KAHtB,CAGfG,QAHe;MAGfA,QAHe,GAAA,eAAA,KAAA,KAAA,CAAA,GAGJN,sBAHI,GAAA,eAAA;IAKtB,IAAA,CAAKO,EAAL,GAAUJ,KAAK,CAACI,EAANJ,IAAAA,QAAAA,CAAAA,MAAAA,CAAqBF,OAAO,EAA5BE,CAAV;IACA,IAAA,CAAKC,KAAL,GAAaA,KAAb;IACA,IAAA,CAAKC,SAAL,GAAiBA,SAAjB;IACA,IAAA,CAAKG,IAAL,GAAY,OAAZ;IACA,IAAA,CAAKF,QAAL,GAAgBA,QAAhB;IACA,IAAA,CAAKG,WAAL,GAAmBC,cAAc,CAACP,KAAD,CAAjC;IACA,IAAA,CAAKQ,cAAL,GAAsBC,MAAM,CAACC,MAAPD,CAAc,CAAA,CAAdA,EAAkB,IAAlBA,CAAtB;EACD;EAbH,YAAA,CAAA,UAAA,EAAA,CAAA;IAAA,GAAA,EAAA,mBAAA;IAAA,KAAA,EAAA,SAAA,iBAAA,CAAA,IAAA,EAe6B;MAAA,IAARE,KAAQ,GAAA,IAAA,CAARA,KAAQ;MAAA,IAClBH,cADkB,GACA,IADA,CAClBA,cADkB;MAEzB,IAAMI,QAAQ,GAAGD,KAAK,CAACE,OAANF,CAAcC,QAA/B;MAFyB,IAAA,YAAA,GAGoBD,KAAK,CAACX,KAH1B;QAGlBc,gBAHkB,GAAA,YAAA,CAGlBA,gBAHkB;QAGAC,gBAHA,GAAA,YAAA,CAGAA,gBAHA;MAIzB,IAAMZ,QAAQ,GAAGX,eAAe,CAAC,IAAA,CAAKW,QAAN,EAAgB;QAC9CS,QAAQ,EAARA,QAD8C;QAE9CE,gBAAgB,EAAhBA,gBAF8C;QAG9CC,gBAAgB,EAAhBA,gBAH8C;QAI9CC,oBAAoB,EAAEJ,QAAQ,CAACK,YAATL,GAClBnB,iBAAiB,CAACyB,MADAN,GAElBnB,iBAAiB,CAAC0B,SANwB;QAO9CC,oBAAoB,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;MAPwB,CAAhB,CAAhC;MASAZ,cAAc,CAACP,KAAfO,GAAuB,IAAA,CAAKP,KAA5BO;MACAA,cAAc,CAACN,SAAfM,GAA2B,IAAA,CAAKN,SAAhCM;MACAA,cAAc,CAACL,QAAfK,GAA0BL,QAA1BK;MACA,OAAOA,cAAP;IACD;EAhCH,CAAA,CAAA,CAAA;EAAA,OAAA,UAAA;AAAA,CAAA,EAAA;AAmCA,SAASD,cAAT,CAAwBP,KAAxB,EAA+B;EAC7B,IAAI,aAAA,IAAiBA,KAArB,EAA4B;IAC1B,OAAOA,KAAK,CAACM,WAAb;EACD;EACD,IAAI,WAAA,IAAeN,KAAnB,EAA0B;IACxB,OAAO,CAAC,CAAD,EAAI,CAAJ,EAAOA,KAAK,CAACE,SAAb,CAAP;EACD;EACD,OAAON,mBAAP;AACD","sourcesContent":["import {projectPosition} from '../../shaderlib/project/project-functions';\nimport {COORDINATE_SYSTEM} from '../../lib';\n\nconst DEFAULT_LIGHT_COLOR = [255, 255, 255];\nconst DEFAULT_LIGHT_INTENSITY = 1.0;\nconst DEFAULT_ATTENUATION = [0, 0, 1];\nconst DEFAULT_LIGHT_POSITION = [0.0, 0.0, 1.0];\n\nlet idCount = 0;\n\nexport class PointLight {\n  constructor(props = {}) {\n    const {color = DEFAULT_LIGHT_COLOR} = props;\n    const {intensity = DEFAULT_LIGHT_INTENSITY} = props;\n    const {position = DEFAULT_LIGHT_POSITION} = props;\n\n    this.id = props.id || `point-${idCount++}`;\n    this.color = color;\n    this.intensity = intensity;\n    this.type = 'point';\n    this.position = position;\n    this.attenuation = getAttenuation(props);\n    this.projectedLight = Object.assign({}, this);\n  }\n\n  getProjectedLight({layer}) {\n    const {projectedLight} = this;\n    const viewport = layer.context.viewport;\n    const {coordinateSystem, coordinateOrigin} = layer.props;\n    const position = projectPosition(this.position, {\n      viewport,\n      coordinateSystem,\n      coordinateOrigin,\n      fromCoordinateSystem: viewport.isGeospatial\n        ? COORDINATE_SYSTEM.LNGLAT\n        : COORDINATE_SYSTEM.CARTESIAN,\n      fromCoordinateOrigin: [0, 0, 0]\n    });\n    projectedLight.color = this.color;\n    projectedLight.intensity = this.intensity;\n    projectedLight.position = position;\n    return projectedLight;\n  }\n}\n\nfunction getAttenuation(props) {\n  if ('attenuation' in props) {\n    return props.attenuation;\n  }\n  if ('intensity' in props) {\n    return [0, 0, props.intensity];\n  }\n  return DEFAULT_ATTENUATION;\n}\n"]},"metadata":{},"sourceType":"module"}
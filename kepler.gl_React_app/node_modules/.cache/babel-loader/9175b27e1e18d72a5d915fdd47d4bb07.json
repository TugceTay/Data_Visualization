{"ast":null,"code":"import { isWebGL2 } from '../utils/webgl-checks';\nexport const GL_PARAMETER_DEFAULTS = {\n  [3042]: false,\n  [32773]: new Float32Array([0, 0, 0, 0]),\n  [32777]: 32774,\n  [34877]: 32774,\n  [32969]: 1,\n  [32968]: 0,\n  [32971]: 1,\n  [32970]: 0,\n  [3106]: new Float32Array([0, 0, 0, 0]),\n  [3107]: [true, true, true, true],\n  [2884]: false,\n  [2885]: 1029,\n  [2929]: false,\n  [2931]: 1,\n  [2932]: 513,\n  [2928]: new Float32Array([0, 1]),\n  [2930]: true,\n  [3024]: true,\n  [36006]: null,\n  [2886]: 2305,\n  [33170]: 4352,\n  [2849]: 1,\n  [32823]: false,\n  [32824]: 0,\n  [10752]: 0,\n  [32938]: 1.0,\n  [32939]: false,\n  [3089]: false,\n  [3088]: new Int32Array([0, 0, 1024, 1024]),\n  [2960]: false,\n  [2961]: 0,\n  [2968]: 0xffffffff,\n  [36005]: 0xffffffff,\n  [2962]: 519,\n  [2967]: 0,\n  [2963]: 0xffffffff,\n  [34816]: 519,\n  [36003]: 0,\n  [36004]: 0xffffffff,\n  [2964]: 7680,\n  [2965]: 7680,\n  [2966]: 7680,\n  [34817]: 7680,\n  [34818]: 7680,\n  [34819]: 7680,\n  [2978]: [0, 0, 1024, 1024],\n  [3333]: 4,\n  [3317]: 4,\n  [37440]: false,\n  [37441]: false,\n  [37443]: 37444,\n  [35723]: 4352,\n  [36010]: null,\n  [35977]: false,\n  [3330]: 0,\n  [3332]: 0,\n  [3331]: 0,\n  [3314]: 0,\n  [32878]: 0,\n  [3316]: 0,\n  [3315]: 0,\n  [32877]: 0\n};\nconst enable = (gl, value, key) => value ? gl.enable(key) : gl.disable(key);\nconst hint = (gl, value, key) => gl.hint(key, value);\nconst pixelStorei = (gl, value, key) => gl.pixelStorei(key, value);\nconst drawFramebuffer = (gl, value) => {\n  const target = isWebGL2(gl) ? 36009 : 36160;\n  return gl.bindFramebuffer(target, value);\n};\nconst readFramebuffer = (gl, value) => {\n  return gl.bindFramebuffer(36008, value);\n};\nfunction isArray(array) {\n  return Array.isArray(array) || ArrayBuffer.isView(array);\n}\nexport const GL_PARAMETER_SETTERS = {\n  [3042]: enable,\n  [32773]: (gl, value) => gl.blendColor(...value),\n  [32777]: 'blendEquation',\n  [34877]: 'blendEquation',\n  [32969]: 'blendFunc',\n  [32968]: 'blendFunc',\n  [32971]: 'blendFunc',\n  [32970]: 'blendFunc',\n  [3106]: (gl, value) => gl.clearColor(...value),\n  [3107]: (gl, value) => gl.colorMask(...value),\n  [2884]: enable,\n  [2885]: (gl, value) => gl.cullFace(value),\n  [2929]: enable,\n  [2931]: (gl, value) => gl.clearDepth(value),\n  [2932]: (gl, value) => gl.depthFunc(value),\n  [2928]: (gl, value) => gl.depthRange(...value),\n  [2930]: (gl, value) => gl.depthMask(value),\n  [3024]: enable,\n  [35723]: hint,\n  [36006]: drawFramebuffer,\n  [2886]: (gl, value) => gl.frontFace(value),\n  [33170]: hint,\n  [2849]: (gl, value) => gl.lineWidth(value),\n  [32823]: enable,\n  [32824]: 'polygonOffset',\n  [10752]: 'polygonOffset',\n  [35977]: enable,\n  [32938]: 'sampleCoverage',\n  [32939]: 'sampleCoverage',\n  [3089]: enable,\n  [3088]: (gl, value) => gl.scissor(...value),\n  [2960]: enable,\n  [2961]: (gl, value) => gl.clearStencil(value),\n  [2968]: (gl, value) => gl.stencilMaskSeparate(1028, value),\n  [36005]: (gl, value) => gl.stencilMaskSeparate(1029, value),\n  [2962]: 'stencilFuncFront',\n  [2967]: 'stencilFuncFront',\n  [2963]: 'stencilFuncFront',\n  [34816]: 'stencilFuncBack',\n  [36003]: 'stencilFuncBack',\n  [36004]: 'stencilFuncBack',\n  [2964]: 'stencilOpFront',\n  [2965]: 'stencilOpFront',\n  [2966]: 'stencilOpFront',\n  [34817]: 'stencilOpBack',\n  [34818]: 'stencilOpBack',\n  [34819]: 'stencilOpBack',\n  [2978]: (gl, value) => gl.viewport(...value),\n  [3333]: pixelStorei,\n  [3317]: pixelStorei,\n  [37440]: pixelStorei,\n  [37441]: pixelStorei,\n  [37443]: pixelStorei,\n  [3330]: pixelStorei,\n  [3332]: pixelStorei,\n  [3331]: pixelStorei,\n  [36010]: readFramebuffer,\n  [3314]: pixelStorei,\n  [32878]: pixelStorei,\n  [3316]: pixelStorei,\n  [3315]: pixelStorei,\n  [32877]: pixelStorei,\n  framebuffer: (gl, framebuffer) => {\n    const handle = framebuffer && 'handle' in framebuffer ? framebuffer.handle : framebuffer;\n    return gl.bindFramebuffer(36160, handle);\n  },\n  blend: (gl, value) => value ? gl.enable(3042) : gl.disable(3042),\n  blendColor: (gl, value) => gl.blendColor(...value),\n  blendEquation: (gl, args) => {\n    args = isArray(args) ? args : [args, args];\n    gl.blendEquationSeparate(...args);\n  },\n  blendFunc: (gl, args) => {\n    args = isArray(args) && args.length === 2 ? [...args, ...args] : args;\n    gl.blendFuncSeparate(...args);\n  },\n  clearColor: (gl, value) => gl.clearColor(...value),\n  clearDepth: (gl, value) => gl.clearDepth(value),\n  clearStencil: (gl, value) => gl.clearStencil(value),\n  colorMask: (gl, value) => gl.colorMask(...value),\n  cull: (gl, value) => value ? gl.enable(2884) : gl.disable(2884),\n  cullFace: (gl, value) => gl.cullFace(value),\n  depthTest: (gl, value) => value ? gl.enable(2929) : gl.disable(2929),\n  depthFunc: (gl, value) => gl.depthFunc(value),\n  depthMask: (gl, value) => gl.depthMask(value),\n  depthRange: (gl, value) => gl.depthRange(...value),\n  dither: (gl, value) => value ? gl.enable(3024) : gl.disable(3024),\n  derivativeHint: (gl, value) => {\n    gl.hint(35723, value);\n  },\n  frontFace: (gl, value) => gl.frontFace(value),\n  mipmapHint: (gl, value) => gl.hint(33170, value),\n  lineWidth: (gl, value) => gl.lineWidth(value),\n  polygonOffsetFill: (gl, value) => value ? gl.enable(32823) : gl.disable(32823),\n  polygonOffset: (gl, value) => gl.polygonOffset(...value),\n  sampleCoverage: (gl, value) => gl.sampleCoverage(...value),\n  scissorTest: (gl, value) => value ? gl.enable(3089) : gl.disable(3089),\n  scissor: (gl, value) => gl.scissor(...value),\n  stencilTest: (gl, value) => value ? gl.enable(2960) : gl.disable(2960),\n  stencilMask: (gl, value) => {\n    value = isArray(value) ? value : [value, value];\n    const [mask, backMask] = value;\n    gl.stencilMaskSeparate(1028, mask);\n    gl.stencilMaskSeparate(1029, backMask);\n  },\n  stencilFunc: (gl, args) => {\n    args = isArray(args) && args.length === 3 ? [...args, ...args] : args;\n    const [func, ref, mask, backFunc, backRef, backMask] = args;\n    gl.stencilFuncSeparate(1028, func, ref, mask);\n    gl.stencilFuncSeparate(1029, backFunc, backRef, backMask);\n  },\n  stencilOp: (gl, args) => {\n    args = isArray(args) && args.length === 3 ? [...args, ...args] : args;\n    const [sfail, dpfail, dppass, backSfail, backDpfail, backDppass] = args;\n    gl.stencilOpSeparate(1028, sfail, dpfail, dppass);\n    gl.stencilOpSeparate(1029, backSfail, backDpfail, backDppass);\n  },\n  viewport: (gl, value) => gl.viewport(...value)\n};\nfunction getValue(glEnum, values, cache) {\n  return values[glEnum] !== undefined ? values[glEnum] : cache[glEnum];\n}\nexport const GL_COMPOSITE_PARAMETER_SETTERS = {\n  blendEquation: (gl, values, cache) => gl.blendEquationSeparate(getValue(32777, values, cache), getValue(34877, values, cache)),\n  blendFunc: (gl, values, cache) => gl.blendFuncSeparate(getValue(32969, values, cache), getValue(32968, values, cache), getValue(32971, values, cache), getValue(32970, values, cache)),\n  polygonOffset: (gl, values, cache) => gl.polygonOffset(getValue(32824, values, cache), getValue(10752, values, cache)),\n  sampleCoverage: (gl, values, cache) => gl.sampleCoverage(getValue(32938, values, cache), getValue(32939, values, cache)),\n  stencilFuncFront: (gl, values, cache) => gl.stencilFuncSeparate(1028, getValue(2962, values, cache), getValue(2967, values, cache), getValue(2963, values, cache)),\n  stencilFuncBack: (gl, values, cache) => gl.stencilFuncSeparate(1029, getValue(34816, values, cache), getValue(36003, values, cache), getValue(36004, values, cache)),\n  stencilOpFront: (gl, values, cache) => gl.stencilOpSeparate(1028, getValue(2964, values, cache), getValue(2965, values, cache), getValue(2966, values, cache)),\n  stencilOpBack: (gl, values, cache) => gl.stencilOpSeparate(1029, getValue(34817, values, cache), getValue(34818, values, cache), getValue(34819, values, cache))\n};\nexport const GL_HOOKED_SETTERS = {\n  enable: (update, capability) => update({\n    [capability]: true\n  }),\n  disable: (update, capability) => update({\n    [capability]: false\n  }),\n  pixelStorei: (update, pname, value) => update({\n    [pname]: value\n  }),\n  hint: (update, pname, hint) => update({\n    [pname]: hint\n  }),\n  bindFramebuffer: (update, target, framebuffer) => {\n    switch (target) {\n      case 36160:\n        return update({\n          [36006]: framebuffer,\n          [36010]: framebuffer\n        });\n      case 36009:\n        return update({\n          [36006]: framebuffer\n        });\n      case 36008:\n        return update({\n          [36010]: framebuffer\n        });\n      default:\n        return null;\n    }\n  },\n  blendColor: (update, r, g, b, a) => update({\n    [32773]: new Float32Array([r, g, b, a])\n  }),\n  blendEquation: (update, mode) => update({\n    [32777]: mode,\n    [34877]: mode\n  }),\n  blendEquationSeparate: (update, modeRGB, modeAlpha) => update({\n    [32777]: modeRGB,\n    [34877]: modeAlpha\n  }),\n  blendFunc: (update, src, dst) => update({\n    [32969]: src,\n    [32968]: dst,\n    [32971]: src,\n    [32970]: dst\n  }),\n  blendFuncSeparate: (update, srcRGB, dstRGB, srcAlpha, dstAlpha) => update({\n    [32969]: srcRGB,\n    [32968]: dstRGB,\n    [32971]: srcAlpha,\n    [32970]: dstAlpha\n  }),\n  clearColor: (update, r, g, b, a) => update({\n    [3106]: new Float32Array([r, g, b, a])\n  }),\n  clearDepth: (update, depth) => update({\n    [2931]: depth\n  }),\n  clearStencil: (update, s) => update({\n    [2961]: s\n  }),\n  colorMask: (update, r, g, b, a) => update({\n    [3107]: [r, g, b, a]\n  }),\n  cullFace: (update, mode) => update({\n    [2885]: mode\n  }),\n  depthFunc: (update, func) => update({\n    [2932]: func\n  }),\n  depthRange: (update, zNear, zFar) => update({\n    [2928]: new Float32Array([zNear, zFar])\n  }),\n  depthMask: (update, mask) => update({\n    [2930]: mask\n  }),\n  frontFace: (update, face) => update({\n    [2886]: face\n  }),\n  lineWidth: (update, width) => update({\n    [2849]: width\n  }),\n  polygonOffset: (update, factor, units) => update({\n    [32824]: factor,\n    [10752]: units\n  }),\n  sampleCoverage: (update, value, invert) => update({\n    [32938]: value,\n    [32939]: invert\n  }),\n  scissor: (update, x, y, width, height) => update({\n    [3088]: new Int32Array([x, y, width, height])\n  }),\n  stencilMask: (update, mask) => update({\n    [2968]: mask,\n    [36005]: mask\n  }),\n  stencilMaskSeparate: (update, face, mask) => update({\n    [face === 1028 ? 2968 : 36005]: mask\n  }),\n  stencilFunc: (update, func, ref, mask) => update({\n    [2962]: func,\n    [2967]: ref,\n    [2963]: mask,\n    [34816]: func,\n    [36003]: ref,\n    [36004]: mask\n  }),\n  stencilFuncSeparate: (update, face, func, ref, mask) => update({\n    [face === 1028 ? 2962 : 34816]: func,\n    [face === 1028 ? 2967 : 36003]: ref,\n    [face === 1028 ? 2963 : 36004]: mask\n  }),\n  stencilOp: (update, fail, zfail, zpass) => update({\n    [2964]: fail,\n    [2965]: zfail,\n    [2966]: zpass,\n    [34817]: fail,\n    [34818]: zfail,\n    [34819]: zpass\n  }),\n  stencilOpSeparate: (update, face, fail, zfail, zpass) => update({\n    [face === 1028 ? 2964 : 34817]: fail,\n    [face === 1028 ? 2965 : 34818]: zfail,\n    [face === 1028 ? 2966 : 34819]: zpass\n  }),\n  viewport: (update, x, y, width, height) => update({\n    [2978]: [x, y, width, height]\n  })\n};\nconst isEnabled = (gl, key) => gl.isEnabled(key);\nexport const GL_PARAMETER_GETTERS = {\n  [3042]: isEnabled,\n  [2884]: isEnabled,\n  [2929]: isEnabled,\n  [3024]: isEnabled,\n  [32823]: isEnabled,\n  [32926]: isEnabled,\n  [32928]: isEnabled,\n  [3089]: isEnabled,\n  [2960]: isEnabled,\n  [35977]: isEnabled\n};","map":{"version":3,"sources":["../../../src/state-tracker/webgl-parameter-tables.js"],"names":["isWebGL2","GL_PARAMETER_DEFAULTS","Float32Array","Int32Array","enable","gl","value","key","disable","hint","pixelStorei","drawFramebuffer","target","bindFramebuffer","readFramebuffer","isArray","array","Array","ArrayBuffer","isView","GL_PARAMETER_SETTERS","blendColor","clearColor","colorMask","cullFace","clearDepth","depthFunc","depthRange","depthMask","frontFace","lineWidth","scissor","clearStencil","stencilMaskSeparate","viewport","framebuffer","handle","blend","blendEquation","args","blendEquationSeparate","blendFunc","length","blendFuncSeparate","cull","depthTest","dither","derivativeHint","mipmapHint","polygonOffsetFill","polygonOffset","sampleCoverage","scissorTest","stencilTest","stencilMask","mask","backMask","stencilFunc","func","ref","backFunc","backRef","stencilFuncSeparate","stencilOp","sfail","dpfail","dppass","backSfail","backDpfail","backDppass","stencilOpSeparate","getValue","glEnum","values","cache","undefined","GL_COMPOSITE_PARAMETER_SETTERS","stencilFuncFront","stencilFuncBack","stencilOpFront","stencilOpBack","GL_HOOKED_SETTERS","update","capability","pname","r","g","b","a","mode","modeRGB","modeAlpha","src","dst","srcRGB","dstRGB","srcAlpha","dstAlpha","depth","s","zNear","zFar","face","width","factor","units","invert","x","y","height","fail","zfail","zpass","isEnabled","GL_PARAMETER_GETTERS"],"mappings":"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","sourcesContent":["// Tables describing WebGL parameters\nimport GL from '@luma.gl/constants';\nimport {isWebGL2} from '../utils/webgl-checks';\n\n// DEFAULT SETTINGS - FOR FAST CACHE INITIALIZATION AND CONTEXT RESETS\n\n/* eslint-disable no-shadow */\n\nexport const GL_PARAMETER_DEFAULTS = {\n  [GL.BLEND]: false,\n  [GL.BLEND_COLOR]: new Float32Array([0, 0, 0, 0]),\n  [GL.BLEND_EQUATION_RGB]: GL.FUNC_ADD,\n  [GL.BLEND_EQUATION_ALPHA]: GL.FUNC_ADD,\n  [GL.BLEND_SRC_RGB]: GL.ONE,\n  [GL.BLEND_DST_RGB]: GL.ZERO,\n  [GL.BLEND_SRC_ALPHA]: GL.ONE,\n  [GL.BLEND_DST_ALPHA]: GL.ZERO,\n  [GL.COLOR_CLEAR_VALUE]: new Float32Array([0, 0, 0, 0]), // TBD\n  [GL.COLOR_WRITEMASK]: [true, true, true, true],\n  [GL.CULL_FACE]: false,\n  [GL.CULL_FACE_MODE]: GL.BACK,\n  [GL.DEPTH_TEST]: false,\n  [GL.DEPTH_CLEAR_VALUE]: 1,\n  [GL.DEPTH_FUNC]: GL.LESS,\n  [GL.DEPTH_RANGE]: new Float32Array([0, 1]), // TBD\n  [GL.DEPTH_WRITEMASK]: true,\n  [GL.DITHER]: true,\n  // FRAMEBUFFER_BINDING and DRAW_FRAMEBUFFER_BINDING(WebGL2) refer same state.\n  [GL.FRAMEBUFFER_BINDING]: null,\n  [GL.FRONT_FACE]: GL.CCW,\n  [GL.GENERATE_MIPMAP_HINT]: GL.DONT_CARE,\n  [GL.LINE_WIDTH]: 1,\n  [GL.POLYGON_OFFSET_FILL]: false,\n  [GL.POLYGON_OFFSET_FACTOR]: 0,\n  [GL.POLYGON_OFFSET_UNITS]: 0,\n  [GL.SAMPLE_COVERAGE_VALUE]: 1.0,\n  [GL.SAMPLE_COVERAGE_INVERT]: false,\n  [GL.SCISSOR_TEST]: false,\n  // Note: Dynamic value. If scissor test enabled we expect users to set correct scissor box\n  [GL.SCISSOR_BOX]: new Int32Array([0, 0, 1024, 1024]),\n  [GL.STENCIL_TEST]: false,\n  [GL.STENCIL_CLEAR_VALUE]: 0,\n  [GL.STENCIL_WRITEMASK]: 0xffffffff,\n  [GL.STENCIL_BACK_WRITEMASK]: 0xffffffff,\n  [GL.STENCIL_FUNC]: GL.ALWAYS,\n  [GL.STENCIL_REF]: 0,\n  [GL.STENCIL_VALUE_MASK]: 0xffffffff,\n  [GL.STENCIL_BACK_FUNC]: GL.ALWAYS,\n  [GL.STENCIL_BACK_REF]: 0,\n  [GL.STENCIL_BACK_VALUE_MASK]: 0xffffffff,\n  [GL.STENCIL_FAIL]: GL.KEEP,\n  [GL.STENCIL_PASS_DEPTH_FAIL]: GL.KEEP,\n  [GL.STENCIL_PASS_DEPTH_PASS]: GL.KEEP,\n  [GL.STENCIL_BACK_FAIL]: GL.KEEP,\n  [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: GL.KEEP,\n  [GL.STENCIL_BACK_PASS_DEPTH_PASS]: GL.KEEP,\n  // Dynamic value: We use [0, 0, 1024, 1024] as default, but usually this is updated in each frame.\n  [GL.VIEWPORT]: [0, 0, 1024, 1024],\n  // WEBGL1 PIXEL PACK/UNPACK MODES\n  [GL.PACK_ALIGNMENT]: 4,\n  [GL.UNPACK_ALIGNMENT]: 4,\n  [GL.UNPACK_FLIP_Y_WEBGL]: false,\n  [GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL]: false,\n  [GL.UNPACK_COLORSPACE_CONVERSION_WEBGL]: GL.BROWSER_DEFAULT_WEBGL,\n\n  // WEBGL2 / EXTENSIONS\n  // gl1: 'OES_standard_derivatives'\n  [GL.FRAGMENT_SHADER_DERIVATIVE_HINT]: GL.DONT_CARE,\n  [GL.READ_FRAMEBUFFER_BINDING]: null,\n  [GL.RASTERIZER_DISCARD]: false,\n  [GL.PACK_ROW_LENGTH]: 0,\n  [GL.PACK_SKIP_PIXELS]: 0,\n  [GL.PACK_SKIP_ROWS]: 0,\n  [GL.UNPACK_ROW_LENGTH]: 0,\n  [GL.UNPACK_IMAGE_HEIGHT]: 0,\n  [GL.UNPACK_SKIP_PIXELS]: 0,\n  [GL.UNPACK_SKIP_ROWS]: 0,\n  [GL.UNPACK_SKIP_IMAGES]: 0\n};\n\n// SETTER TABLES - ENABLES SETTING ANY PARAMETER WITH A COMMON API\n\nconst enable = (gl, value, key) => (value ? gl.enable(key) : gl.disable(key));\nconst hint = (gl, value, key) => gl.hint(key, value);\nconst pixelStorei = (gl, value, key) => gl.pixelStorei(key, value);\n\nconst drawFramebuffer = (gl, value) => {\n  const target = isWebGL2(gl) ? GL.DRAW_FRAMEBUFFER : GL.FRAMEBUFFER;\n  return gl.bindFramebuffer(target, value);\n};\nconst readFramebuffer = (gl, value) => {\n  return gl.bindFramebuffer(GL.READ_FRAMEBUFFER, value);\n};\n\n// Utility\nfunction isArray(array) {\n  return Array.isArray(array) || ArrayBuffer.isView(array);\n}\n\n// Map from WebGL parameter names to corresponding WebGL setter functions\n// WegGL constants are read by parameter names, but set by function names\n// NOTE: When value type is a string, it will be handled by 'GL_COMPOSITE_PARAMETER_SETTERS'\nexport const GL_PARAMETER_SETTERS = {\n  [GL.BLEND]: enable,\n  [GL.BLEND_COLOR]: (gl, value) => gl.blendColor(...value),\n  [GL.BLEND_EQUATION_RGB]: 'blendEquation',\n  [GL.BLEND_EQUATION_ALPHA]: 'blendEquation',\n  [GL.BLEND_SRC_RGB]: 'blendFunc',\n  [GL.BLEND_DST_RGB]: 'blendFunc',\n  [GL.BLEND_SRC_ALPHA]: 'blendFunc',\n  [GL.BLEND_DST_ALPHA]: 'blendFunc',\n  [GL.COLOR_CLEAR_VALUE]: (gl, value) => gl.clearColor(...value),\n  [GL.COLOR_WRITEMASK]: (gl, value) => gl.colorMask(...value),\n  [GL.CULL_FACE]: enable,\n  [GL.CULL_FACE_MODE]: (gl, value) => gl.cullFace(value),\n  [GL.DEPTH_TEST]: enable,\n  [GL.DEPTH_CLEAR_VALUE]: (gl, value) => gl.clearDepth(value),\n  [GL.DEPTH_FUNC]: (gl, value) => gl.depthFunc(value),\n  [GL.DEPTH_RANGE]: (gl, value) => gl.depthRange(...value),\n  [GL.DEPTH_WRITEMASK]: (gl, value) => gl.depthMask(value),\n  [GL.DITHER]: enable,\n  [GL.FRAGMENT_SHADER_DERIVATIVE_HINT]: hint,\n  // NOTE: FRAMEBUFFER_BINDING and DRAW_FRAMEBUFFER_BINDING(WebGL2) refer same state.\n  [GL.FRAMEBUFFER_BINDING]: drawFramebuffer,\n  [GL.FRONT_FACE]: (gl, value) => gl.frontFace(value),\n  [GL.GENERATE_MIPMAP_HINT]: hint,\n  [GL.LINE_WIDTH]: (gl, value) => gl.lineWidth(value),\n  [GL.POLYGON_OFFSET_FILL]: enable,\n  [GL.POLYGON_OFFSET_FACTOR]: 'polygonOffset',\n  [GL.POLYGON_OFFSET_UNITS]: 'polygonOffset',\n  [GL.RASTERIZER_DISCARD]: enable,\n  [GL.SAMPLE_COVERAGE_VALUE]: 'sampleCoverage',\n  [GL.SAMPLE_COVERAGE_INVERT]: 'sampleCoverage',\n  [GL.SCISSOR_TEST]: enable,\n  [GL.SCISSOR_BOX]: (gl, value) => gl.scissor(...value),\n  [GL.STENCIL_TEST]: enable,\n  [GL.STENCIL_CLEAR_VALUE]: (gl, value) => gl.clearStencil(value),\n  [GL.STENCIL_WRITEMASK]: (gl, value) => gl.stencilMaskSeparate(GL.FRONT, value),\n  [GL.STENCIL_BACK_WRITEMASK]: (gl, value) => gl.stencilMaskSeparate(GL.BACK, value),\n  [GL.STENCIL_FUNC]: 'stencilFuncFront',\n  [GL.STENCIL_REF]: 'stencilFuncFront',\n  [GL.STENCIL_VALUE_MASK]: 'stencilFuncFront',\n  [GL.STENCIL_BACK_FUNC]: 'stencilFuncBack',\n  [GL.STENCIL_BACK_REF]: 'stencilFuncBack',\n  [GL.STENCIL_BACK_VALUE_MASK]: 'stencilFuncBack',\n  [GL.STENCIL_FAIL]: 'stencilOpFront',\n  [GL.STENCIL_PASS_DEPTH_FAIL]: 'stencilOpFront',\n  [GL.STENCIL_PASS_DEPTH_PASS]: 'stencilOpFront',\n  [GL.STENCIL_BACK_FAIL]: 'stencilOpBack',\n  [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: 'stencilOpBack',\n  [GL.STENCIL_BACK_PASS_DEPTH_PASS]: 'stencilOpBack',\n  [GL.VIEWPORT]: (gl, value) => gl.viewport(...value),\n\n  // WEBGL1 PIXEL PACK/UNPACK MODES\n  [GL.PACK_ALIGNMENT]: pixelStorei,\n  [GL.UNPACK_ALIGNMENT]: pixelStorei,\n  [GL.UNPACK_FLIP_Y_WEBGL]: pixelStorei,\n  [GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL]: pixelStorei,\n  [GL.UNPACK_COLORSPACE_CONVERSION_WEBGL]: pixelStorei,\n\n  // WEBGL2 PIXEL PACK/UNPACK MODES\n  // RASTERIZER_DISCARD ...\n  [GL.PACK_ROW_LENGTH]: pixelStorei,\n  [GL.PACK_SKIP_PIXELS]: pixelStorei,\n  [GL.PACK_SKIP_ROWS]: pixelStorei,\n  [GL.READ_FRAMEBUFFER_BINDING]: readFramebuffer,\n  [GL.UNPACK_ROW_LENGTH]: pixelStorei,\n  [GL.UNPACK_IMAGE_HEIGHT]: pixelStorei,\n  [GL.UNPACK_SKIP_PIXELS]: pixelStorei,\n  [GL.UNPACK_SKIP_ROWS]: pixelStorei,\n  [GL.UNPACK_SKIP_IMAGES]: pixelStorei,\n\n  // Function-style setters\n  framebuffer: (gl, framebuffer) => {\n    // accepts 1) a WebGLFramebuffer 2) null (default framebuffer), or 3) luma.gl Framebuffer class\n    // framebuffer is null when restoring to default framebuffer, otherwise use the WebGL handle.\n    const handle = framebuffer && 'handle' in framebuffer ? framebuffer.handle : framebuffer;\n    return gl.bindFramebuffer(GL.FRAMEBUFFER, handle);\n  },\n  blend: (gl, value) => (value ? gl.enable(GL.BLEND) : gl.disable(GL.BLEND)),\n  blendColor: (gl, value) => gl.blendColor(...value),\n  blendEquation: (gl, args) => {\n    args = isArray(args) ? args : [args, args];\n    gl.blendEquationSeparate(...args);\n  },\n  blendFunc: (gl, args) => {\n    args = isArray(args) && args.length === 2 ? [...args, ...args] : args;\n    gl.blendFuncSeparate(...args);\n  },\n\n  clearColor: (gl, value) => gl.clearColor(...value),\n  clearDepth: (gl, value) => gl.clearDepth(value),\n  clearStencil: (gl, value) => gl.clearStencil(value),\n\n  colorMask: (gl, value) => gl.colorMask(...value),\n\n  cull: (gl, value) => (value ? gl.enable(GL.CULL_FACE) : gl.disable(GL.CULL_FACE)),\n  cullFace: (gl, value) => gl.cullFace(value),\n\n  depthTest: (gl, value) => (value ? gl.enable(GL.DEPTH_TEST) : gl.disable(GL.DEPTH_TEST)),\n  depthFunc: (gl, value) => gl.depthFunc(value),\n  depthMask: (gl, value) => gl.depthMask(value),\n  depthRange: (gl, value) => gl.depthRange(...value),\n\n  dither: (gl, value) => (value ? gl.enable(GL.DITHER) : gl.disable(GL.DITHER)),\n\n  derivativeHint: (gl, value) => {\n    // gl1: 'OES_standard_derivatives'\n    gl.hint(GL.FRAGMENT_SHADER_DERIVATIVE_HINT, value);\n  },\n\n  frontFace: (gl, value) => gl.frontFace(value),\n\n  mipmapHint: (gl, value) => gl.hint(GL.GENERATE_MIPMAP_HINT, value),\n\n  lineWidth: (gl, value) => gl.lineWidth(value),\n\n  polygonOffsetFill: (gl, value) =>\n    value ? gl.enable(GL.POLYGON_OFFSET_FILL) : gl.disable(GL.POLYGON_OFFSET_FILL),\n  polygonOffset: (gl, value) => gl.polygonOffset(...value),\n\n  sampleCoverage: (gl, value) => gl.sampleCoverage(...value),\n\n  scissorTest: (gl, value) => (value ? gl.enable(GL.SCISSOR_TEST) : gl.disable(GL.SCISSOR_TEST)),\n  scissor: (gl, value) => gl.scissor(...value),\n\n  stencilTest: (gl, value) => (value ? gl.enable(GL.STENCIL_TEST) : gl.disable(GL.STENCIL_TEST)),\n  stencilMask: (gl, value) => {\n    value = isArray(value) ? value : [value, value];\n    const [mask, backMask] = value;\n    gl.stencilMaskSeparate(GL.FRONT, mask);\n    gl.stencilMaskSeparate(GL.BACK, backMask);\n  },\n  stencilFunc: (gl, args) => {\n    args = isArray(args) && args.length === 3 ? [...args, ...args] : args;\n    const [func, ref, mask, backFunc, backRef, backMask] = args;\n    gl.stencilFuncSeparate(GL.FRONT, func, ref, mask);\n    gl.stencilFuncSeparate(GL.BACK, backFunc, backRef, backMask);\n  },\n  stencilOp: (gl, args) => {\n    args = isArray(args) && args.length === 3 ? [...args, ...args] : args;\n    const [sfail, dpfail, dppass, backSfail, backDpfail, backDppass] = args;\n    gl.stencilOpSeparate(GL.FRONT, sfail, dpfail, dppass);\n    gl.stencilOpSeparate(GL.BACK, backSfail, backDpfail, backDppass);\n  },\n\n  viewport: (gl, value) => gl.viewport(...value)\n};\n\nfunction getValue(glEnum, values, cache) {\n  return values[glEnum] !== undefined ? values[glEnum] : cache[glEnum];\n}\n\n// COMPOSITE_WEBGL_PARAMETER_\nexport const GL_COMPOSITE_PARAMETER_SETTERS = {\n  blendEquation: (gl, values, cache) =>\n    gl.blendEquationSeparate(\n      getValue(GL.BLEND_EQUATION_RGB, values, cache),\n      getValue(GL.BLEND_EQUATION_ALPHA, values, cache)\n    ),\n  blendFunc: (gl, values, cache) =>\n    gl.blendFuncSeparate(\n      getValue(GL.BLEND_SRC_RGB, values, cache),\n      getValue(GL.BLEND_DST_RGB, values, cache),\n      getValue(GL.BLEND_SRC_ALPHA, values, cache),\n      getValue(GL.BLEND_DST_ALPHA, values, cache)\n    ),\n  polygonOffset: (gl, values, cache) =>\n    gl.polygonOffset(\n      getValue(GL.POLYGON_OFFSET_FACTOR, values, cache),\n      getValue(GL.POLYGON_OFFSET_UNITS, values, cache)\n    ),\n  sampleCoverage: (gl, values, cache) =>\n    gl.sampleCoverage(\n      getValue(GL.SAMPLE_COVERAGE_VALUE, values, cache),\n      getValue(GL.SAMPLE_COVERAGE_INVERT, values, cache)\n    ),\n  stencilFuncFront: (gl, values, cache) =>\n    gl.stencilFuncSeparate(\n      GL.FRONT,\n      getValue(GL.STENCIL_FUNC, values, cache),\n      getValue(GL.STENCIL_REF, values, cache),\n      getValue(GL.STENCIL_VALUE_MASK, values, cache)\n    ),\n  stencilFuncBack: (gl, values, cache) =>\n    gl.stencilFuncSeparate(\n      GL.BACK,\n      getValue(GL.STENCIL_BACK_FUNC, values, cache),\n      getValue(GL.STENCIL_BACK_REF, values, cache),\n      getValue(GL.STENCIL_BACK_VALUE_MASK, values, cache)\n    ),\n  stencilOpFront: (gl, values, cache) =>\n    gl.stencilOpSeparate(\n      GL.FRONT,\n      getValue(GL.STENCIL_FAIL, values, cache),\n      getValue(GL.STENCIL_PASS_DEPTH_FAIL, values, cache),\n      getValue(GL.STENCIL_PASS_DEPTH_PASS, values, cache)\n    ),\n  stencilOpBack: (gl, values, cache) =>\n    gl.stencilOpSeparate(\n      GL.BACK,\n      getValue(GL.STENCIL_BACK_FAIL, values, cache),\n      getValue(GL.STENCIL_BACK_PASS_DEPTH_FAIL, values, cache),\n      getValue(GL.STENCIL_BACK_PASS_DEPTH_PASS, values, cache)\n    )\n};\n\n// Setter functions intercepted for cache updates\nexport const GL_HOOKED_SETTERS = {\n  // GENERIC SETTERS\n\n  enable: (update, capability) =>\n    update({\n      [capability]: true\n    }),\n  disable: (update, capability) =>\n    update({\n      [capability]: false\n    }),\n  pixelStorei: (update, pname, value) =>\n    update({\n      [pname]: value\n    }),\n  hint: (update, pname, hint) =>\n    update({\n      [pname]: hint\n    }),\n\n  // SPECIFIC SETTERS\n\n  bindFramebuffer: (update, target, framebuffer) => {\n    switch (target) {\n      case GL.FRAMEBUFFER:\n        return update({\n          [GL.DRAW_FRAMEBUFFER_BINDING]: framebuffer,\n          [GL.READ_FRAMEBUFFER_BINDING]: framebuffer\n        });\n      case GL.DRAW_FRAMEBUFFER:\n        return update({[GL.DRAW_FRAMEBUFFER_BINDING]: framebuffer});\n      case GL.READ_FRAMEBUFFER:\n        return update({[GL.READ_FRAMEBUFFER_BINDING]: framebuffer});\n      default:\n        return null;\n    }\n  },\n  blendColor: (update, r, g, b, a) =>\n    update({\n      [GL.BLEND_COLOR]: new Float32Array([r, g, b, a])\n    }),\n\n  blendEquation: (update, mode) =>\n    update({\n      [GL.BLEND_EQUATION_RGB]: mode,\n      [GL.BLEND_EQUATION_ALPHA]: mode\n    }),\n\n  blendEquationSeparate: (update, modeRGB, modeAlpha) =>\n    update({\n      [GL.BLEND_EQUATION_RGB]: modeRGB,\n      [GL.BLEND_EQUATION_ALPHA]: modeAlpha\n    }),\n\n  blendFunc: (update, src, dst) =>\n    update({\n      [GL.BLEND_SRC_RGB]: src,\n      [GL.BLEND_DST_RGB]: dst,\n      [GL.BLEND_SRC_ALPHA]: src,\n      [GL.BLEND_DST_ALPHA]: dst\n    }),\n\n  blendFuncSeparate: (update, srcRGB, dstRGB, srcAlpha, dstAlpha) =>\n    update({\n      [GL.BLEND_SRC_RGB]: srcRGB,\n      [GL.BLEND_DST_RGB]: dstRGB,\n      [GL.BLEND_SRC_ALPHA]: srcAlpha,\n      [GL.BLEND_DST_ALPHA]: dstAlpha\n    }),\n\n  clearColor: (update, r, g, b, a) =>\n    update({\n      [GL.COLOR_CLEAR_VALUE]: new Float32Array([r, g, b, a])\n    }),\n\n  clearDepth: (update, depth) =>\n    update({\n      [GL.DEPTH_CLEAR_VALUE]: depth\n    }),\n\n  clearStencil: (update, s) =>\n    update({\n      [GL.STENCIL_CLEAR_VALUE]: s\n    }),\n\n  colorMask: (update, r, g, b, a) =>\n    update({\n      [GL.COLOR_WRITEMASK]: [r, g, b, a]\n    }),\n\n  cullFace: (update, mode) =>\n    update({\n      [GL.CULL_FACE_MODE]: mode\n    }),\n\n  depthFunc: (update, func) =>\n    update({\n      [GL.DEPTH_FUNC]: func\n    }),\n\n  depthRange: (update, zNear, zFar) =>\n    update({\n      [GL.DEPTH_RANGE]: new Float32Array([zNear, zFar])\n    }),\n\n  depthMask: (update, mask) =>\n    update({\n      [GL.DEPTH_WRITEMASK]: mask\n    }),\n\n  frontFace: (update, face) =>\n    update({\n      [GL.FRONT_FACE]: face\n    }),\n\n  lineWidth: (update, width) =>\n    update({\n      [GL.LINE_WIDTH]: width\n    }),\n\n  polygonOffset: (update, factor, units) =>\n    update({\n      [GL.POLYGON_OFFSET_FACTOR]: factor,\n      [GL.POLYGON_OFFSET_UNITS]: units\n    }),\n\n  sampleCoverage: (update, value, invert) =>\n    update({\n      [GL.SAMPLE_COVERAGE_VALUE]: value,\n      [GL.SAMPLE_COVERAGE_INVERT]: invert\n    }),\n\n  scissor: (update, x, y, width, height) =>\n    update({\n      [GL.SCISSOR_BOX]: new Int32Array([x, y, width, height])\n    }),\n\n  stencilMask: (update, mask) =>\n    update({\n      [GL.STENCIL_WRITEMASK]: mask,\n      [GL.STENCIL_BACK_WRITEMASK]: mask\n    }),\n\n  stencilMaskSeparate: (update, face, mask) =>\n    update({\n      [face === GL.FRONT ? GL.STENCIL_WRITEMASK : GL.STENCIL_BACK_WRITEMASK]: mask\n    }),\n\n  stencilFunc: (update, func, ref, mask) =>\n    update({\n      [GL.STENCIL_FUNC]: func,\n      [GL.STENCIL_REF]: ref,\n      [GL.STENCIL_VALUE_MASK]: mask,\n      [GL.STENCIL_BACK_FUNC]: func,\n      [GL.STENCIL_BACK_REF]: ref,\n      [GL.STENCIL_BACK_VALUE_MASK]: mask\n    }),\n\n  stencilFuncSeparate: (update, face, func, ref, mask) =>\n    update({\n      [face === GL.FRONT ? GL.STENCIL_FUNC : GL.STENCIL_BACK_FUNC]: func,\n      [face === GL.FRONT ? GL.STENCIL_REF : GL.STENCIL_BACK_REF]: ref,\n      [face === GL.FRONT ? GL.STENCIL_VALUE_MASK : GL.STENCIL_BACK_VALUE_MASK]: mask\n    }),\n\n  stencilOp: (update, fail, zfail, zpass) =>\n    update({\n      [GL.STENCIL_FAIL]: fail,\n      [GL.STENCIL_PASS_DEPTH_FAIL]: zfail,\n      [GL.STENCIL_PASS_DEPTH_PASS]: zpass,\n      [GL.STENCIL_BACK_FAIL]: fail,\n      [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: zfail,\n      [GL.STENCIL_BACK_PASS_DEPTH_PASS]: zpass\n    }),\n\n  stencilOpSeparate: (update, face, fail, zfail, zpass) =>\n    update({\n      [face === GL.FRONT ? GL.STENCIL_FAIL : GL.STENCIL_BACK_FAIL]: fail,\n      [face === GL.FRONT ? GL.STENCIL_PASS_DEPTH_FAIL : GL.STENCIL_BACK_PASS_DEPTH_FAIL]: zfail,\n      [face === GL.FRONT ? GL.STENCIL_PASS_DEPTH_PASS : GL.STENCIL_BACK_PASS_DEPTH_PASS]: zpass\n    }),\n\n  viewport: (update, x, y, width, height) =>\n    update({\n      [GL.VIEWPORT]: [x, y, width, height]\n    })\n};\n\n// GETTER TABLE - FOR READING OUT AN ENTIRE CONTEXT\n\nconst isEnabled = (gl, key) => gl.isEnabled(key);\n\n// Exceptions for any keys that cannot be queried by gl.getParameters\nexport const GL_PARAMETER_GETTERS = {\n  [GL.BLEND]: isEnabled,\n  [GL.CULL_FACE]: isEnabled,\n  [GL.DEPTH_TEST]: isEnabled,\n  [GL.DITHER]: isEnabled,\n  [GL.POLYGON_OFFSET_FILL]: isEnabled,\n  [GL.SAMPLE_ALPHA_TO_COVERAGE]: isEnabled,\n  [GL.SAMPLE_COVERAGE]: isEnabled,\n  [GL.SCISSOR_TEST]: isEnabled,\n  [GL.STENCIL_TEST]: isEnabled,\n\n  // WebGL 2\n  [GL.RASTERIZER_DISCARD]: isEnabled\n};\n"]},"metadata":{},"sourceType":"module"}
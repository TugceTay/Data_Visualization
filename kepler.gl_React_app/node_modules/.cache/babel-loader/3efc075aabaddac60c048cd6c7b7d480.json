{"ast":null,"code":"var BIG_ENDIAN = false;\nvar LITTLE_ENDIAN = true;\nexport function getBinaryImageMetadata(binaryData) {\n  var dataView = toDataView(binaryData);\n  return getPngMetadata(dataView) || getJpegMetadata(dataView) || getGifMetadata(dataView) || getBmpMetadata(dataView);\n}\nfunction getPngMetadata(binaryData) {\n  var dataView = toDataView(binaryData);\n  var isPng = dataView.byteLength >= 24 && dataView.getUint32(0, BIG_ENDIAN) === 0x89504e47;\n  if (!isPng) {\n    return null;\n  }\n  return {\n    mimeType: 'image/png',\n    width: dataView.getUint32(16, BIG_ENDIAN),\n    height: dataView.getUint32(20, BIG_ENDIAN)\n  };\n}\nfunction getGifMetadata(binaryData) {\n  var dataView = toDataView(binaryData);\n  var isGif = dataView.byteLength >= 10 && dataView.getUint32(0, BIG_ENDIAN) === 0x47494638;\n  if (!isGif) {\n    return null;\n  }\n  return {\n    mimeType: 'image/gif',\n    width: dataView.getUint16(6, LITTLE_ENDIAN),\n    height: dataView.getUint16(8, LITTLE_ENDIAN)\n  };\n}\nexport function getBmpMetadata(binaryData) {\n  var dataView = toDataView(binaryData);\n  var isBmp = dataView.byteLength >= 14 && dataView.getUint16(0, BIG_ENDIAN) === 0x424d && dataView.getUint32(2, LITTLE_ENDIAN) === dataView.byteLength;\n  if (!isBmp) {\n    return null;\n  }\n  return {\n    mimeType: 'image/bmp',\n    width: dataView.getUint32(18, LITTLE_ENDIAN),\n    height: dataView.getUint32(22, LITTLE_ENDIAN)\n  };\n}\nfunction getJpegMetadata(binaryData) {\n  var dataView = toDataView(binaryData);\n  var isJpeg = dataView.byteLength >= 3 && dataView.getUint16(0, BIG_ENDIAN) === 0xffd8 && dataView.getUint8(2) === 0xff;\n  if (!isJpeg) {\n    return null;\n  }\n  var _getJpegMarkers = getJpegMarkers(),\n    tableMarkers = _getJpegMarkers.tableMarkers,\n    sofMarkers = _getJpegMarkers.sofMarkers;\n  var i = 2;\n  while (i + 9 < dataView.byteLength) {\n    var marker = dataView.getUint16(i, BIG_ENDIAN);\n    if (sofMarkers.has(marker)) {\n      return {\n        mimeType: 'image/jpeg',\n        height: dataView.getUint16(i + 5, BIG_ENDIAN),\n        width: dataView.getUint16(i + 7, BIG_ENDIAN)\n      };\n    }\n    if (!tableMarkers.has(marker)) {\n      return null;\n    }\n    i += 2;\n    i += dataView.getUint16(i, BIG_ENDIAN);\n  }\n  return null;\n}\nfunction getJpegMarkers() {\n  var tableMarkers = new Set([0xffdb, 0xffc4, 0xffcc, 0xffdd, 0xfffe]);\n  for (var i = 0xffe0; i < 0xfff0; ++i) {\n    tableMarkers.add(i);\n  }\n  var sofMarkers = new Set([0xffc0, 0xffc1, 0xffc2, 0xffc3, 0xffc5, 0xffc6, 0xffc7, 0xffc9, 0xffca, 0xffcb, 0xffcd, 0xffce, 0xffcf, 0xffde]);\n  return {\n    tableMarkers: tableMarkers,\n    sofMarkers: sofMarkers\n  };\n}\nfunction toDataView(data) {\n  if (data instanceof DataView) {\n    return data;\n  }\n  if (ArrayBuffer.isView(data)) {\n    return new DataView(data.buffer);\n  }\n  if (data instanceof ArrayBuffer) {\n    return new DataView(data);\n  }\n  throw new Error('toDataView');\n}","map":{"version":3,"sources":["../../../../src/lib/category-api/binary-image-api.js"],"names":["BIG_ENDIAN","LITTLE_ENDIAN","getBinaryImageMetadata","binaryData","dataView","toDataView","getPngMetadata","getJpegMetadata","getGifMetadata","getBmpMetadata","isPng","byteLength","getUint32","mimeType","width","height","isGif","getUint16","isBmp","isJpeg","getUint8","tableMarkers","sofMarkers","getJpegMarkers","i","marker","has","Set","add","data","DataView","ArrayBuffer","isView","buffer","Error"],"mappings":"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","sourcesContent":["// Attributions\n// * Based on binary-gltf-utils under MIT license: Copyright (c) 2016-17 Karl Cheng\n\n// TODO: make these functions work for Node.js buffers?\n// Quarantine references to Buffer to prevent bundler from adding big polyfills\n// import {bufferToArrayBuffer} from '../node/buffer-to-array-buffer';\n// TODO - this should be handled in @loaders.gl/polyfills\n\nconst BIG_ENDIAN = false;\nconst LITTLE_ENDIAN = true;\n\nexport function getBinaryImageMetadata(binaryData) {\n  const dataView = toDataView(binaryData);\n  return (\n    getPngMetadata(dataView) ||\n    getJpegMetadata(dataView) ||\n    getGifMetadata(dataView) ||\n    getBmpMetadata(dataView)\n  );\n}\n\n// PNG\n\nfunction getPngMetadata(binaryData) {\n  const dataView = toDataView(binaryData);\n  // Check file contains the first 4 bytes of the PNG signature.\n  const isPng = dataView.byteLength >= 24 && dataView.getUint32(0, BIG_ENDIAN) === 0x89504e47;\n  if (!isPng) {\n    return null;\n  }\n\n  // Extract size from a binary PNG file\n  return {\n    mimeType: 'image/png',\n    width: dataView.getUint32(16, BIG_ENDIAN),\n    height: dataView.getUint32(20, BIG_ENDIAN)\n  };\n}\n\n// GIF\n\n// Extract size from a binary GIF file\n// TODO: GIF is not this simple\nfunction getGifMetadata(binaryData) {\n  const dataView = toDataView(binaryData);\n  // Check first 4 bytes of the GIF signature (\"GIF8\").\n  const isGif = dataView.byteLength >= 10 && dataView.getUint32(0, BIG_ENDIAN) === 0x47494638;\n  if (!isGif) {\n    return null;\n  }\n\n  // GIF is little endian.\n  return {\n    mimeType: 'image/gif',\n    width: dataView.getUint16(6, LITTLE_ENDIAN),\n    height: dataView.getUint16(8, LITTLE_ENDIAN)\n  };\n}\n\n// BMP\n\n// TODO: BMP is not this simple\nexport function getBmpMetadata(binaryData) {\n  const dataView = toDataView(binaryData);\n  // Check magic number is valid (first 2 characters should be \"BM\").\n  // The mandatory bitmap file header is 14 bytes long.\n  const isBmp =\n    dataView.byteLength >= 14 &&\n    dataView.getUint16(0, BIG_ENDIAN) === 0x424d &&\n    dataView.getUint32(2, LITTLE_ENDIAN) === dataView.byteLength;\n\n  if (!isBmp) {\n    return null;\n  }\n\n  // BMP is little endian.\n  return {\n    mimeType: 'image/bmp',\n    width: dataView.getUint32(18, LITTLE_ENDIAN),\n    height: dataView.getUint32(22, LITTLE_ENDIAN)\n  };\n}\n\n// JPEG\n\n// Extract width and height from a binary JPEG file\nfunction getJpegMetadata(binaryData) {\n  const dataView = toDataView(binaryData);\n  // Check file contains the JPEG \"start of image\" (SOI) marker\n  // followed by another marker.\n  const isJpeg =\n    dataView.byteLength >= 3 &&\n    dataView.getUint16(0, BIG_ENDIAN) === 0xffd8 &&\n    dataView.getUint8(2) === 0xff;\n\n  if (!isJpeg) {\n    return null;\n  }\n\n  const {tableMarkers, sofMarkers} = getJpegMarkers();\n\n  // Exclude the two byte SOI marker.\n  let i = 2;\n  while (i + 9 < dataView.byteLength) {\n    const marker = dataView.getUint16(i, BIG_ENDIAN);\n\n    // The frame that contains the width and height of the JPEG image.\n    if (sofMarkers.has(marker)) {\n      return {\n        mimeType: 'image/jpeg',\n        height: dataView.getUint16(i + 5, BIG_ENDIAN), // Number of lines\n        width: dataView.getUint16(i + 7, BIG_ENDIAN) // Number of pixels per line\n      };\n    }\n\n    // Miscellaneous tables/data preceding the frame header.\n    if (!tableMarkers.has(marker)) {\n      return null;\n    }\n\n    // Length includes size of length parameter but not the two byte header.\n    i += 2;\n    i += dataView.getUint16(i, BIG_ENDIAN);\n  }\n\n  return null;\n}\n\nfunction getJpegMarkers() {\n  // Tables/misc header markers.\n  // DQT, DHT, DAC, DRI, COM, APP_n\n  const tableMarkers = new Set([0xffdb, 0xffc4, 0xffcc, 0xffdd, 0xfffe]);\n  for (let i = 0xffe0; i < 0xfff0; ++i) {\n    tableMarkers.add(i);\n  }\n\n  // SOF markers and DHP marker.\n  // These markers are after tables/misc data.\n  const sofMarkers = new Set([\n    0xffc0,\n    0xffc1,\n    0xffc2,\n    0xffc3,\n    0xffc5,\n    0xffc6,\n    0xffc7,\n    0xffc9,\n    0xffca,\n    0xffcb,\n    0xffcd,\n    0xffce,\n    0xffcf,\n    0xffde\n  ]);\n\n  return {tableMarkers, sofMarkers};\n}\n\n// TODO - move into image module?\nfunction toDataView(data) {\n  if (data instanceof DataView) {\n    return data;\n  }\n  if (ArrayBuffer.isView(data)) {\n    return new DataView(data.buffer);\n  }\n\n  // TODO: make these functions work for Node.js buffers?\n  // if (bufferToArrayBuffer) {\n  //   data = bufferToArrayBuffer(data);\n  // }\n\n  // Careful - Node Buffers will look like ArrayBuffers (keep after isBuffer)\n  if (data instanceof ArrayBuffer) {\n    return new DataView(data);\n  }\n  throw new Error('toDataView');\n}\n"]},"metadata":{},"sourceType":"module"}
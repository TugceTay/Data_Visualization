{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSupportedFilterFields = getSupportedFilterFields;\nexports[\"default\"] = void 0;\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _styledComponents = require(\"../../common/styled-components\");\nvar _filterPanelHeader = _interopRequireDefault(require(\"../../side-panel/filter-panel/filter-panel-header\"));\nvar _sourceDataSelector = _interopRequireDefault(require(\"../../side-panel/common/source-data-selector\"));\nvar _fieldSelector = _interopRequireDefault(require(\"../../common/field-selector\"));\n\n// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nNewFilterPanelFactory.deps = [_filterPanelHeader[\"default\"], _sourceDataSelector[\"default\"], _fieldSelector[\"default\"]];\nfunction getSupportedFilterFields(supportedFilterTypes, fields) {\n  return supportedFilterTypes ? fields.filter(function (field) {\n    return supportedFilterTypes.includes(field.type);\n  }) : fields;\n}\nfunction NewFilterPanelFactory(FilterPanelHeader, SourceDataSelector, FieldSelector) {\n  /** @type {import('./filter-panel-types').FilterPanelComponent} */\n  var NewFilterPanel = /*#__PURE__*/_react[\"default\"].memo(function (_ref) {\n    var idx = _ref.idx,\n      filter = _ref.filter,\n      datasets = _ref.datasets,\n      allAvailableFields = _ref.allAvailableFields,\n      setFilter = _ref.setFilter,\n      removeFilter = _ref.removeFilter,\n      enlargeFilter = _ref.enlargeFilter;\n    var onFieldSelector = (0, _react.useCallback)(function (field) {\n      return setFilter(idx, 'name', field.name);\n    }, [idx, setFilter]);\n    var onSourceDataSelector = (0, _react.useCallback)(function (value) {\n      return setFilter(idx, 'dataId', value);\n    }, [idx, setFilter]);\n    var dataset = datasets[filter.dataId[0]];\n    var supportedFields = (0, _react.useMemo)(function () {\n      return getSupportedFilterFields(dataset.supportedFilterTypes, allAvailableFields);\n    }, [dataset.supportedFilterTypes, allAvailableFields]);\n    return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(FilterPanelHeader, {\n      datasets: [dataset],\n      allAvailableFields: supportedFields,\n      idx: idx,\n      filter: filter,\n      removeFilter: removeFilter,\n      enlargeFilter: enlargeFilter,\n      enlarged: filter.enlarged\n    }, /*#__PURE__*/_react[\"default\"].createElement(FieldSelector, {\n      inputTheme: \"secondary\",\n      fields: supportedFields,\n      value: Array.isArray(filter.name) ? filter.name[0] : filter.name,\n      erasable: false,\n      onSelect: onFieldSelector\n    })), /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.StyledFilterContent, {\n      className: \"filter-panel__content\"\n    }, Object.keys(datasets).length > 1 && /*#__PURE__*/_react[\"default\"].createElement(SourceDataSelector, {\n      inputTheme: \"secondary\",\n      datasets: datasets,\n      disabled: filter.freeze,\n      dataId: filter.dataId,\n      onSelect: onSourceDataSelector\n    })));\n  });\n  NewFilterPanel.displayName = 'NewFilterPanel';\n  return NewFilterPanel;\n}\nvar _default = NewFilterPanelFactory;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../../src/components/filters/filter-panels/new-filter-panel.js"],"names":["NewFilterPanelFactory","deps","FilterPanelHeaderFactory","SourceDataSelectorFactory","FieldSelectorFactory","getSupportedFilterFields","supportedFilterTypes","fields","filter","includes","field","type","FilterPanelHeader","SourceDataSelector","FieldSelector","NewFilterPanel","memo","idx","datasets","allAvailableFields","setFilter","removeFilter","enlargeFilter","onFieldSelector","name","onSourceDataSelector","value","dataset","dataId","supportedFields","enlarged","Array","isArray","Object","keys","length","freeze","displayName"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {useCallback, useMemo} from 'react';\nimport {StyledFilterContent} from 'components/common/styled-components';\nimport FilterPanelHeaderFactory from 'components/side-panel/filter-panel/filter-panel-header';\nimport SourceDataSelectorFactory from 'components/side-panel/common/source-data-selector';\nimport FieldSelectorFactory from '../../common/field-selector';\n\nNewFilterPanelFactory.deps = [\n  FilterPanelHeaderFactory,\n  SourceDataSelectorFactory,\n  FieldSelectorFactory\n];\n\nexport function getSupportedFilterFields(supportedFilterTypes, fields) {\n  return supportedFilterTypes\n    ? fields.filter(field => supportedFilterTypes.includes(field.type))\n    : fields;\n}\n\nfunction NewFilterPanelFactory(FilterPanelHeader, SourceDataSelector, FieldSelector) {\n  /** @type {import('./filter-panel-types').FilterPanelComponent} */\n  const NewFilterPanel = React.memo(\n    ({idx, filter, datasets, allAvailableFields, setFilter, removeFilter, enlargeFilter}) => {\n      const onFieldSelector = useCallback(field => setFilter(idx, 'name', field.name), [\n        idx,\n        setFilter\n      ]);\n\n      const onSourceDataSelector = useCallback(value => setFilter(idx, 'dataId', value), [\n        idx,\n        setFilter\n      ]);\n\n      const dataset = datasets[filter.dataId[0]];\n      const supportedFields = useMemo(\n        () => getSupportedFilterFields(dataset.supportedFilterTypes, allAvailableFields),\n        [dataset.supportedFilterTypes, allAvailableFields]\n      );\n\n      return (\n        <>\n          <FilterPanelHeader\n            datasets={[dataset]}\n            allAvailableFields={supportedFields}\n            idx={idx}\n            filter={filter}\n            removeFilter={removeFilter}\n            enlargeFilter={enlargeFilter}\n            enlarged={filter.enlarged}\n          >\n            <FieldSelector\n              inputTheme=\"secondary\"\n              fields={supportedFields}\n              value={Array.isArray(filter.name) ? filter.name[0] : filter.name}\n              erasable={false}\n              onSelect={onFieldSelector}\n            />\n          </FilterPanelHeader>\n          <StyledFilterContent className=\"filter-panel__content\">\n            {Object.keys(datasets).length > 1 && (\n              <SourceDataSelector\n                inputTheme=\"secondary\"\n                datasets={datasets}\n                disabled={filter.freeze}\n                dataId={filter.dataId}\n                onSelect={onSourceDataSelector}\n              />\n            )}\n          </StyledFilterContent>\n        </>\n      );\n    }\n  );\n\n  NewFilterPanel.displayName = 'NewFilterPanel';\n\n  return NewFilterPanel;\n}\n\nexport default NewFilterPanelFactory;\n"]},"metadata":{},"sourceType":"script"}
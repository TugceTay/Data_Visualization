{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _defaultSettings = require(\"../../constants/default-settings\");\nvar _icons = require(\"../common/icons\");\nvar _styledComponents = require(\"../common/styled-components\");\nvar _reactIntl = require(\"react-intl\");\nvar _localization = require(\"../../localization\");\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar propTypes = {\n  datasets: _propTypes[\"default\"].object.isRequired,\n  selectedDataset: _propTypes[\"default\"].string,\n  dataType: _propTypes[\"default\"].string.isRequired,\n  filtered: _propTypes[\"default\"].bool.isRequired,\n  // callbacks\n  applyCPUFilter: _propTypes[\"default\"].func.isRequired,\n  onClose: _propTypes[\"default\"].func.isRequired,\n  onChangeExportSelectedDataset: _propTypes[\"default\"].func.isRequired,\n  onChangeExportDataType: _propTypes[\"default\"].func.isRequired,\n  onChangeExportFiltered: _propTypes[\"default\"].func.isRequired\n};\nvar getDataRowCount = function getDataRowCount(datasets, selectedDataset, filtered, intl) {\n  var selectedData = datasets[selectedDataset];\n  if (!selectedData) {\n    return intl.formatMessage({\n      id: 'modal.exportData.fileCount'\n    }, {\n      fileCount: Object.keys(datasets).length\n    });\n  }\n  var dataContainer = selectedData.dataContainer,\n    filteredIdxCPU = selectedData.filteredIdxCPU;\n  if (filtered && !filteredIdxCPU) {\n    return '-';\n  }\n  var rowCount = filtered ? filteredIdxCPU.length : dataContainer.numRows();\n  return intl.formatMessage({\n    id: 'modal.exportData.rowCount'\n  }, {\n    rowCount: rowCount.toLocaleString()\n  });\n};\nvar ExportDataModalFactory = function ExportDataModalFactory() {\n  var ExportDataModal = /*#__PURE__*/function (_Component) {\n    (0, _inherits2[\"default\"])(ExportDataModal, _Component);\n    var _super = _createSuper(ExportDataModal);\n    function ExportDataModal() {\n      var _this;\n      (0, _classCallCheck2[\"default\"])(this, ExportDataModal);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _super.call.apply(_super, [this].concat(args));\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onSelectDataset\", function (_ref) {\n        var value = _ref.target.value;\n        _this.props.applyCPUFilter(value);\n        _this.props.onChangeExportSelectedDataset(value);\n      });\n      return _this;\n    }\n    (0, _createClass2[\"default\"])(ExportDataModal, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var toCPUFilter = this.props.selectedDataset || Object.keys(this.props.datasets);\n        this.props.applyCPUFilter(toCPUFilter);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n          supportedDataTypes = _this$props.supportedDataTypes,\n          datasets = _this$props.datasets,\n          selectedDataset = _this$props.selectedDataset,\n          dataType = _this$props.dataType,\n          filtered = _this$props.filtered,\n          onChangeExportDataType = _this$props.onChangeExportDataType,\n          onChangeExportFiltered = _this$props.onChangeExportFiltered,\n          intl = _this$props.intl;\n        return /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.StyledModalContent, {\n          className: \"export-data-modal\"\n        }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.StyledExportSection, null, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          className: \"description\"\n        }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          className: \"title\"\n        }, /*#__PURE__*/_react[\"default\"].createElement(_localization.FormattedMessage, {\n          id: 'modal.exportData.datasetTitle'\n        })), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          className: \"subtitle\"\n        }, /*#__PURE__*/_react[\"default\"].createElement(_localization.FormattedMessage, {\n          id: 'modal.exportData.datasetSubtitle'\n        }))), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          className: \"selection\"\n        }, /*#__PURE__*/_react[\"default\"].createElement(\"select\", {\n          value: selectedDataset,\n          onChange: this._onSelectDataset\n        }, [intl.formatMessage({\n          id: 'modal.exportData.allDatasets'\n        })].concat(Object.keys(datasets)).map(function (d) {\n          return /*#__PURE__*/_react[\"default\"].createElement(\"option\", {\n            key: d,\n            value: d\n          }, datasets[d] && datasets[d].label || d);\n        })))), /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.StyledExportSection, null, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          className: \"description\"\n        }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          className: \"title\"\n        }, /*#__PURE__*/_react[\"default\"].createElement(_localization.FormattedMessage, {\n          id: 'modal.exportData.dataTypeTitle'\n        })), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          className: \"subtitle\"\n        }, /*#__PURE__*/_react[\"default\"].createElement(_localization.FormattedMessage, {\n          id: 'modal.exportData.dataTypeSubtitle'\n        }))), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          className: \"selection\"\n        }, supportedDataTypes.map(function (op) {\n          return /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.StyledType, {\n            key: op.id,\n            selected: dataType === op.id,\n            available: op.available,\n            onClick: function onClick() {\n              return op.available && onChangeExportDataType(op.id);\n            }\n          }, /*#__PURE__*/_react[\"default\"].createElement(_icons.FileType, {\n            ext: op.label,\n            height: \"80px\",\n            fontSize: \"11px\"\n          }), dataType === op.id && /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.CheckMark, null));\n        }))), /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.StyledExportSection, null, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          className: \"description\"\n        }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          className: \"title\"\n        }, /*#__PURE__*/_react[\"default\"].createElement(_localization.FormattedMessage, {\n          id: 'modal.exportData.dataTypeTitle'\n        })), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          className: \"subtitle\"\n        }, /*#__PURE__*/_react[\"default\"].createElement(_localization.FormattedMessage, {\n          id: 'modal.exportData.filterDataSubtitle'\n        }))), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          className: \"selection\"\n        }, /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.StyledFilteredOption, {\n          className: \"unfiltered-option\",\n          selected: !filtered,\n          onClick: function onClick() {\n            return onChangeExportFiltered(false);\n          }\n        }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          className: \"filter-option-title\"\n        }, /*#__PURE__*/_react[\"default\"].createElement(_localization.FormattedMessage, {\n          id: 'modal.exportData.unfilteredData'\n        })), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          className: \"filter-option-subtitle\"\n        }, getDataRowCount(datasets, selectedDataset, false, intl)), !filtered && /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.CheckMark, null)), /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.StyledFilteredOption, {\n          className: \"filtered-option\",\n          selected: filtered,\n          onClick: function onClick() {\n            return onChangeExportFiltered(true);\n          }\n        }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          className: \"filter-option-title\"\n        }, /*#__PURE__*/_react[\"default\"].createElement(_localization.FormattedMessage, {\n          id: 'modal.exportData.filteredData'\n        })), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          className: \"filter-option-subtitle\"\n        }, getDataRowCount(datasets, selectedDataset, true, intl)), filtered && /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.CheckMark, null))))));\n      }\n    }]);\n    return ExportDataModal;\n  }(_react.Component);\n  ExportDataModal.propTypes = propTypes;\n  ExportDataModal.defaultProps = {\n    supportedDataTypes: _defaultSettings.EXPORT_DATA_TYPE_OPTIONS\n  };\n  return (0, _reactIntl.injectIntl)(ExportDataModal);\n};\nvar _default = ExportDataModalFactory;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../src/components/modals/export-data-modal.js"],"names":["propTypes","datasets","PropTypes","object","isRequired","selectedDataset","string","dataType","filtered","bool","applyCPUFilter","func","onClose","onChangeExportSelectedDataset","onChangeExportDataType","onChangeExportFiltered","getDataRowCount","intl","selectedData","formatMessage","id","fileCount","Object","keys","length","dataContainer","filteredIdxCPU","rowCount","numRows","toLocaleString","ExportDataModalFactory","ExportDataModal","Component","toCPUFilter","props","target","value","supportedDataTypes","_onSelectDataset","concat","map","d","label","op","available","defaultProps","EXPORT_DATA_TYPE_OPTIONS"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {EXPORT_DATA_TYPE_OPTIONS} from 'constants/default-settings';\nimport {FileType} from 'components/common/icons';\nimport {\n  StyledExportSection,\n  StyledFilteredOption,\n  StyledModalContent,\n  StyledType,\n  CheckMark\n} from 'components/common/styled-components';\nimport {injectIntl} from 'react-intl';\nimport {FormattedMessage} from 'localization';\n\nconst propTypes = {\n  datasets: PropTypes.object.isRequired,\n  selectedDataset: PropTypes.string,\n  dataType: PropTypes.string.isRequired,\n  filtered: PropTypes.bool.isRequired,\n  // callbacks\n  applyCPUFilter: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onChangeExportSelectedDataset: PropTypes.func.isRequired,\n  onChangeExportDataType: PropTypes.func.isRequired,\n  onChangeExportFiltered: PropTypes.func.isRequired\n};\n\nconst getDataRowCount = (datasets, selectedDataset, filtered, intl) => {\n  const selectedData = datasets[selectedDataset];\n  if (!selectedData) {\n    return intl.formatMessage(\n      {id: 'modal.exportData.fileCount'},\n      {fileCount: Object.keys(datasets).length}\n    );\n  }\n  const {dataContainer, filteredIdxCPU} = selectedData;\n\n  if (filtered && !filteredIdxCPU) {\n    return '-';\n  }\n\n  const rowCount = filtered ? filteredIdxCPU.length : dataContainer.numRows();\n\n  return intl.formatMessage(\n    {id: 'modal.exportData.rowCount'},\n    {rowCount: rowCount.toLocaleString()}\n  );\n};\n\nconst ExportDataModalFactory = () => {\n  class ExportDataModal extends Component {\n    componentDidMount() {\n      const toCPUFilter = this.props.selectedDataset || Object.keys(this.props.datasets);\n      this.props.applyCPUFilter(toCPUFilter);\n    }\n\n    _onSelectDataset = ({target: {value}}) => {\n      this.props.applyCPUFilter(value);\n      this.props.onChangeExportSelectedDataset(value);\n    };\n\n    render() {\n      const {\n        supportedDataTypes,\n        datasets,\n        selectedDataset,\n        dataType,\n        filtered,\n        onChangeExportDataType,\n        onChangeExportFiltered,\n        intl\n      } = this.props;\n\n      return (\n        <StyledModalContent className=\"export-data-modal\">\n          <div>\n            <StyledExportSection>\n              <div className=\"description\">\n                <div className=\"title\">\n                  <FormattedMessage id={'modal.exportData.datasetTitle'} />\n                </div>\n                <div className=\"subtitle\">\n                  <FormattedMessage id={'modal.exportData.datasetSubtitle'} />\n                </div>\n              </div>\n              <div className=\"selection\">\n                <select value={selectedDataset} onChange={this._onSelectDataset}>\n                  {[intl.formatMessage({id: 'modal.exportData.allDatasets'})]\n                    .concat(Object.keys(datasets))\n                    .map(d => (\n                      <option key={d} value={d}>\n                        {(datasets[d] && datasets[d].label) || d}\n                      </option>\n                    ))}\n                </select>\n              </div>\n            </StyledExportSection>\n            <StyledExportSection>\n              <div className=\"description\">\n                <div className=\"title\">\n                  <FormattedMessage id={'modal.exportData.dataTypeTitle'} />\n                </div>\n                <div className=\"subtitle\">\n                  <FormattedMessage id={'modal.exportData.dataTypeSubtitle'} />\n                </div>\n              </div>\n              <div className=\"selection\">\n                {supportedDataTypes.map(op => (\n                  <StyledType\n                    key={op.id}\n                    selected={dataType === op.id}\n                    available={op.available}\n                    onClick={() => op.available && onChangeExportDataType(op.id)}\n                  >\n                    <FileType ext={op.label} height=\"80px\" fontSize=\"11px\" />\n                    {dataType === op.id && <CheckMark />}\n                  </StyledType>\n                ))}\n              </div>\n            </StyledExportSection>\n            <StyledExportSection>\n              <div className=\"description\">\n                <div className=\"title\">\n                  <FormattedMessage id={'modal.exportData.dataTypeTitle'} />\n                </div>\n                <div className=\"subtitle\">\n                  <FormattedMessage id={'modal.exportData.filterDataSubtitle'} />\n                </div>\n              </div>\n              <div className=\"selection\">\n                <StyledFilteredOption\n                  className=\"unfiltered-option\"\n                  selected={!filtered}\n                  onClick={() => onChangeExportFiltered(false)}\n                >\n                  <div className=\"filter-option-title\">\n                    <FormattedMessage id={'modal.exportData.unfilteredData'} />\n                  </div>\n                  <div className=\"filter-option-subtitle\">\n                    {getDataRowCount(datasets, selectedDataset, false, intl)}\n                  </div>\n                  {!filtered && <CheckMark />}\n                </StyledFilteredOption>\n                <StyledFilteredOption\n                  className=\"filtered-option\"\n                  selected={filtered}\n                  onClick={() => onChangeExportFiltered(true)}\n                >\n                  <div className=\"filter-option-title\">\n                    <FormattedMessage id={'modal.exportData.filteredData'} />\n                  </div>\n                  <div className=\"filter-option-subtitle\">\n                    {getDataRowCount(datasets, selectedDataset, true, intl)}\n                  </div>\n                  {filtered && <CheckMark />}\n                </StyledFilteredOption>\n              </div>\n            </StyledExportSection>\n          </div>\n        </StyledModalContent>\n      );\n    }\n  }\n  ExportDataModal.propTypes = propTypes;\n  ExportDataModal.defaultProps = {\n    supportedDataTypes: EXPORT_DATA_TYPE_OPTIONS\n  };\n\n  return injectIntl(ExportDataModal);\n};\n\nexport default ExportDataModalFactory;\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nimport { loadLibrary, global } from '@loaders.gl/loader-utils';\nvar loadDecoderPromise;\nvar loadEncoderPromise;\nexport function loadDracoDecoderModule(_x) {\n  return _loadDracoDecoderModule.apply(this, arguments);\n}\nfunction _loadDracoDecoderModule() {\n  _loadDracoDecoderModule = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(options) {\n    var modules;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            modules = options.modules || {};\n            if (modules.draco3d) {\n              loadDecoderPromise = loadDecoderPromise || new Promise(function (resolve) {\n                var draco = modules.draco3d.createDecoderModule({\n                  onModuleLoaded: function onModuleLoaded() {\n                    resolve({\n                      draco: draco\n                    });\n                  }\n                });\n              });\n            } else {\n              loadDecoderPromise = loadDecoderPromise || loadDracoDecoder(options);\n            }\n            _context.next = 4;\n            return loadDecoderPromise;\n          case 4:\n            return _context.abrupt(\"return\", _context.sent);\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _loadDracoDecoderModule.apply(this, arguments);\n}\nexport function loadDracoEncoderModule(_x2) {\n  return _loadDracoEncoderModule.apply(this, arguments);\n}\nfunction _loadDracoEncoderModule() {\n  _loadDracoEncoderModule = _asyncToGenerator(_regeneratorRuntime.mark(function _callee2(options) {\n    var modules;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            modules = options.modules || {};\n            if (modules.draco3d) {\n              loadEncoderPromise = loadEncoderPromise || new Promise(function (resolve) {\n                var draco = modules.draco3d.createEncoderModule({\n                  onModuleLoaded: function onModuleLoaded() {\n                    resolve({\n                      draco: draco\n                    });\n                  }\n                });\n              });\n            } else {\n              loadEncoderPromise = loadEncoderPromise || loadDracoEncoder(options);\n            }\n            _context2.next = 4;\n            return loadEncoderPromise;\n          case 4:\n            return _context2.abrupt(\"return\", _context2.sent);\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _loadDracoEncoderModule.apply(this, arguments);\n}\nfunction loadDracoDecoder(_x3) {\n  return _loadDracoDecoder.apply(this, arguments);\n}\nfunction _loadDracoDecoder() {\n  _loadDracoDecoder = _asyncToGenerator(_regeneratorRuntime.mark(function _callee3(options) {\n    var DracoDecoderModule, wasmBinary, _yield$Promise$all, _yield$Promise$all2;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.t0 = options.draco && options.draco.decoderType;\n            _context3.next = _context3.t0 === 'js' ? 3 : _context3.t0 === 'wasm' ? 7 : 7;\n            break;\n          case 3:\n            _context3.next = 5;\n            return loadLibrary('draco_decoder.js', 'draco', options);\n          case 5:\n            DracoDecoderModule = _context3.sent;\n            return _context3.abrupt(\"break\", 21);\n          case 7:\n            _context3.t1 = Promise;\n            _context3.next = 10;\n            return loadLibrary('draco_wasm_wrapper.js', 'draco', options);\n          case 10:\n            _context3.t2 = _context3.sent;\n            _context3.next = 13;\n            return loadLibrary('draco_decoder.wasm', 'draco', options);\n          case 13:\n            _context3.t3 = _context3.sent;\n            _context3.t4 = [_context3.t2, _context3.t3];\n            _context3.next = 17;\n            return _context3.t1.all.call(_context3.t1, _context3.t4);\n          case 17:\n            _yield$Promise$all = _context3.sent;\n            _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n            DracoDecoderModule = _yield$Promise$all2[0];\n            wasmBinary = _yield$Promise$all2[1];\n          case 21:\n            DracoDecoderModule = DracoDecoderModule || global.DracoDecoderModule;\n            _context3.next = 24;\n            return initializeDracoDecoder(DracoDecoderModule, wasmBinary);\n          case 24:\n            return _context3.abrupt(\"return\", _context3.sent);\n          case 25:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _loadDracoDecoder.apply(this, arguments);\n}\nfunction initializeDracoDecoder(DracoDecoderModule, wasmBinary) {\n  var options = {};\n  if (wasmBinary) {\n    options.wasmBinary = wasmBinary;\n  }\n  return new Promise(function (resolve) {\n    DracoDecoderModule(_objectSpread(_objectSpread({}, options), {}, {\n      onModuleLoaded: function onModuleLoaded(draco) {\n        return resolve({\n          draco: draco\n        });\n      }\n    }));\n  });\n}\nfunction loadDracoEncoder(_x4) {\n  return _loadDracoEncoder.apply(this, arguments);\n}\nfunction _loadDracoEncoder() {\n  _loadDracoEncoder = _asyncToGenerator(_regeneratorRuntime.mark(function _callee4(options) {\n    var DracoEncoderModule;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return loadLibrary('draco_encoder.js', 'draco', options);\n          case 2:\n            DracoEncoderModule = _context4.sent;\n            DracoEncoderModule = DracoEncoderModule || global.DracoEncoderModule;\n            return _context4.abrupt(\"return\", new Promise(function (resolve) {\n              DracoEncoderModule({\n                onModuleLoaded: function onModuleLoaded(draco) {\n                  return resolve({\n                    draco: draco\n                  });\n                }\n              });\n            }));\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _loadDracoEncoder.apply(this, arguments);\n}","map":{"version":3,"sources":["../../../src/lib/draco-module-loader.js"],"names":["loadLibrary","global","loadDecoderPromise","loadEncoderPromise","loadDracoDecoderModule","options","modules","draco3d","Promise","draco","createDecoderModule","onModuleLoaded","resolve","loadDracoDecoder","loadDracoEncoderModule","createEncoderModule","loadDracoEncoder","decoderType","DracoDecoderModule","wasmBinary","all","initializeDracoDecoder","DracoEncoderModule"],"mappings":"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","sourcesContent":["// Dynamic DRACO module loading inspired by THREE.DRACOLoader\n// https://github.com/mrdoob/three.js/blob/398c4f39ebdb8b23eefd4a7a5ec49ec0c96c7462/examples/jsm/loaders/DRACOLoader.js\n// by Don McCurdy / https://www.donmccurdy.com / MIT license\n\nimport {loadLibrary, global} from '@loaders.gl/loader-utils';\n\nlet loadDecoderPromise;\nlet loadEncoderPromise;\n\nexport async function loadDracoDecoderModule(options) {\n  const modules = options.modules || {};\n\n  // Check if a bundled draco3d library has been supplied by application\n  if (modules.draco3d) {\n    loadDecoderPromise =\n      loadDecoderPromise ||\n      new Promise(resolve => {\n        const draco = modules.draco3d.createDecoderModule({\n          onModuleLoaded() {\n            resolve({draco});\n          }\n        });\n      });\n  } else {\n    // If not, dynamically load the WASM script from our CDN\n    loadDecoderPromise = loadDecoderPromise || loadDracoDecoder(options);\n  }\n  return await loadDecoderPromise;\n}\n\nexport async function loadDracoEncoderModule(options) {\n  const modules = options.modules || {};\n\n  // Check if a bundled draco3d library has been supplied by application\n  if (modules.draco3d) {\n    loadEncoderPromise =\n      loadEncoderPromise ||\n      new Promise(resolve => {\n        const draco = modules.draco3d.createEncoderModule({\n          onModuleLoaded() {\n            resolve({draco});\n          }\n        });\n      });\n  } else {\n    // If not, dynamically load the WASM script from our CDN\n    loadEncoderPromise = loadEncoderPromise || loadDracoEncoder(options);\n  }\n  return await loadEncoderPromise;\n}\n\n// DRACO DECODER LOADING\n\nasync function loadDracoDecoder(options) {\n  let DracoDecoderModule;\n  let wasmBinary;\n  switch (options.draco && options.draco.decoderType) {\n    case 'js':\n      DracoDecoderModule = await loadLibrary('draco_decoder.js', 'draco', options);\n      break;\n\n    case 'wasm':\n    default:\n      [DracoDecoderModule, wasmBinary] = await Promise.all([\n        await loadLibrary('draco_wasm_wrapper.js', 'draco', options),\n        await loadLibrary('draco_decoder.wasm', 'draco', options)\n      ]);\n  }\n  // Depends on how import happened...\n  // @ts-ignore\n  DracoDecoderModule = DracoDecoderModule || global.DracoDecoderModule;\n  return await initializeDracoDecoder(DracoDecoderModule, wasmBinary);\n}\n\nfunction initializeDracoDecoder(DracoDecoderModule, wasmBinary) {\n  const options = {};\n  if (wasmBinary) {\n    options.wasmBinary = wasmBinary;\n  }\n\n  return new Promise(resolve => {\n    DracoDecoderModule({\n      ...options,\n      onModuleLoaded: draco => resolve({draco}) // Module is Promise-like. Wrap in object to avoid loop.\n    });\n  });\n}\n\n// ENCODER\n\nasync function loadDracoEncoder(options) {\n  let DracoEncoderModule = await loadLibrary('draco_encoder.js', 'draco', options);\n  // @ts-ignore\n  DracoEncoderModule = DracoEncoderModule || global.DracoEncoderModule;\n\n  return new Promise(resolve => {\n    DracoEncoderModule({\n      onModuleLoaded: draco => resolve({draco}) // Module is Promise-like. Wrap in object to avoid loop.\n    });\n  });\n}\n"]},"metadata":{},"sourceType":"module"}
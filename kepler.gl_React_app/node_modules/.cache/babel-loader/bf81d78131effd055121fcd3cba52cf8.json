{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _reselect = require(\"reselect\");\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\nvar _lodash = _interopRequireDefault(require(\"lodash.get\"));\nvar _defaultSettings = require(\"../../../constants/default-settings\");\nvar _newFilterPanel = _interopRequireDefault(require(\"../../filters/filter-panels/new-filter-panel\"));\nvar _timeRangeFilterPanel = _interopRequireDefault(require(\"../../filters/filter-panels/time-range-filter-panel\"));\nvar _singleSelectFilterPanel = _interopRequireDefault(require(\"../../filters/filter-panels/single-select-filter-panel\"));\nvar _multiSelectFilterPanel = _interopRequireDefault(require(\"../../filters/filter-panels/multi-select-filter-panel\"));\nvar _rangeFilterPanel = _interopRequireDefault(require(\"../../filters/filter-panels/range-filter-panel\"));\nvar _polygonFilterPanel = _interopRequireDefault(require(\"../../filters/filter-panels/polygon-filter-panel\"));\nvar _templateObject;\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar StyledFilterPanel = _styledComponents[\"default\"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  margin-bottom: 12px;\\n  border-radius: 1px;\\n\"])));\nFilterPanelFactory.deps = [_newFilterPanel[\"default\"], _timeRangeFilterPanel[\"default\"], _singleSelectFilterPanel[\"default\"], _multiSelectFilterPanel[\"default\"], _rangeFilterPanel[\"default\"], _polygonFilterPanel[\"default\"]];\nfunction FilterPanelFactory(NewFilterPanel, TimeRangeFilterPanel, SingleSelectFilterPanel, MultiSelectFilterPanel, RangeFilterPanel, PolygonFilterPanel) {\n  var _FilterPanelComponent, _class, _temp;\n  var FilterPanelComponents = (_FilterPanelComponent = {\n    \"default\": NewFilterPanel\n  }, (0, _defineProperty2[\"default\"])(_FilterPanelComponent, _defaultSettings.FILTER_TYPES.timeRange, TimeRangeFilterPanel), (0, _defineProperty2[\"default\"])(_FilterPanelComponent, _defaultSettings.FILTER_TYPES.select, SingleSelectFilterPanel), (0, _defineProperty2[\"default\"])(_FilterPanelComponent, _defaultSettings.FILTER_TYPES.multiSelect, MultiSelectFilterPanel), (0, _defineProperty2[\"default\"])(_FilterPanelComponent, _defaultSettings.FILTER_TYPES.range, RangeFilterPanel), (0, _defineProperty2[\"default\"])(_FilterPanelComponent, _defaultSettings.FILTER_TYPES.polygon, PolygonFilterPanel), _FilterPanelComponent);\n  return _temp = _class = /*#__PURE__*/function (_Component) {\n    (0, _inherits2[\"default\"])(FilterPanel, _Component);\n    var _super = _createSuper(FilterPanel);\n    function FilterPanel() {\n      var _this;\n      (0, _classCallCheck2[\"default\"])(this, FilterPanel);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _super.call.apply(_super, [this].concat(args));\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"fieldsSelector\", function (props) {\n        var datasetId = props.filter.dataId[0];\n        if (!datasetId) {\n          return [];\n        }\n        return (0, _lodash[\"default\"])(props, ['datasets', datasetId, 'fields'], []);\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"filterSelector\", function (props) {\n        return props.filters;\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"nameSelector\", function (props) {\n        return props.filter.name;\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"dataIdSelector\", function (props) {\n        return props.filter.dataId[0];\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"availableFieldsSelector\", (0, _reselect.createSelector)(_this.fieldsSelector, _this.filterSelector, _this.nameSelector, _this.dataIdSelector, function (fields, filters, name, dataId) {\n        return fields.filter(function (f) {\n          return f.type && f.type !== _defaultSettings.ALL_FIELD_TYPES.geojson && (f.name === name || !filters.find(function (d) {\n            return d.name === f.name && d.dataId === dataId;\n          }));\n        });\n      }));\n      return _this;\n    }\n    (0, _createClass2[\"default\"])(FilterPanel, [{\n      key: \"render\",\n      value: function render() {\n        var filter = this.props.filter;\n        var type = filter.type;\n        var FilterFilterComponent = type && FilterPanelComponents[type] || FilterPanelComponents[\"default\"];\n        var allAvailableFields = this.availableFieldsSelector(this.props);\n        return /*#__PURE__*/_react[\"default\"].createElement(StyledFilterPanel, {\n          className: \"filter-panel\"\n        }, /*#__PURE__*/_react[\"default\"].createElement(FilterFilterComponent, (0, _extends2[\"default\"])({\n          allAvailableFields: allAvailableFields\n        }, this.props)));\n      }\n    }]);\n    return FilterPanel;\n  }(_react.Component), (0, _defineProperty2[\"default\"])(_class, \"propTypes\", {\n    idx: _propTypes[\"default\"].number,\n    filters: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].any).isRequired,\n    filter: _propTypes[\"default\"].object.isRequired,\n    setFilter: _propTypes[\"default\"].func.isRequired,\n    removeFilter: _propTypes[\"default\"].func.isRequired,\n    enlargeFilter: _propTypes[\"default\"].func.isRequired,\n    toggleAnimation: _propTypes[\"default\"].func.isRequired,\n    toggleFilterFeature: _propTypes[\"default\"].func.isRequired,\n    datasets: _propTypes[\"default\"].object,\n    showDatasetTable: _propTypes[\"default\"].func,\n    isAnyFilterAnimating: _propTypes[\"default\"].bool\n  }), _temp;\n}\nvar _default = FilterPanelFactory;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../../src/components/side-panel/filter-panel/filter-panel.js"],"names":["StyledFilterPanel","styled","div","FilterPanelFactory","deps","NewFilterPanelFactory","TimeRangeFilterPanelFactory","SingleSelectFilterPanelFactory","MultiSelectFilterPanelFactory","RangeFilterPanelFactory","PolygonFilterPanelFactory","NewFilterPanel","TimeRangeFilterPanel","SingleSelectFilterPanel","MultiSelectFilterPanel","RangeFilterPanel","PolygonFilterPanel","FilterPanelComponents","FILTER_TYPES","timeRange","select","multiSelect","range","polygon","Component","idx","PropTypes","number","filters","arrayOf","any","isRequired","filter","object","setFilter","func","removeFilter","enlargeFilter","toggleAnimation","toggleFilterFeature","datasets","showDatasetTable","isAnyFilterAnimating","bool","datasetId","props","dataId","name","fieldsSelector","filterSelector","nameSelector","dataIdSelector","fields","type","f","ALL_FIELD_TYPES","geojson","find","d","FilterFilterComponent","allAvailableFields","availableFieldsSelector"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {createSelector} from 'reselect';\nimport styled from 'styled-components';\nimport get from 'lodash.get';\nimport {ALL_FIELD_TYPES, FILTER_TYPES} from 'constants/default-settings';\n\nimport NewFilterPanelFactory from 'components/filters/filter-panels/new-filter-panel';\nimport TimeRangeFilterPanelFactory from 'components/filters/filter-panels/time-range-filter-panel';\nimport SingleSelectFilterPanelFactory from 'components/filters/filter-panels/single-select-filter-panel';\nimport MultiSelectFilterPanelFactory from 'components/filters/filter-panels/multi-select-filter-panel';\nimport RangeFilterPanelFactory from 'components/filters/filter-panels/range-filter-panel';\nimport PolygonFilterPanelFactory from 'components/filters/filter-panels/polygon-filter-panel';\n\nconst StyledFilterPanel = styled.div`\n  margin-bottom: 12px;\n  border-radius: 1px;\n`;\n\nFilterPanelFactory.deps = [\n  NewFilterPanelFactory,\n  TimeRangeFilterPanelFactory,\n  SingleSelectFilterPanelFactory,\n  MultiSelectFilterPanelFactory,\n  RangeFilterPanelFactory,\n  PolygonFilterPanelFactory\n];\n\nfunction FilterPanelFactory(\n  NewFilterPanel,\n  TimeRangeFilterPanel,\n  SingleSelectFilterPanel,\n  MultiSelectFilterPanel,\n  RangeFilterPanel,\n  PolygonFilterPanel\n) {\n  const FilterPanelComponents = {\n    default: NewFilterPanel,\n    [FILTER_TYPES.timeRange]: TimeRangeFilterPanel,\n    [FILTER_TYPES.select]: SingleSelectFilterPanel,\n    [FILTER_TYPES.multiSelect]: MultiSelectFilterPanel,\n    [FILTER_TYPES.range]: RangeFilterPanel,\n    [FILTER_TYPES.polygon]: PolygonFilterPanel\n  };\n\n  return class FilterPanel extends Component {\n    static propTypes = {\n      idx: PropTypes.number,\n      filters: PropTypes.arrayOf(PropTypes.any).isRequired,\n      filter: PropTypes.object.isRequired,\n      setFilter: PropTypes.func.isRequired,\n      removeFilter: PropTypes.func.isRequired,\n      enlargeFilter: PropTypes.func.isRequired,\n      toggleAnimation: PropTypes.func.isRequired,\n      toggleFilterFeature: PropTypes.func.isRequired,\n      datasets: PropTypes.object,\n      showDatasetTable: PropTypes.func,\n      isAnyFilterAnimating: PropTypes.bool\n    };\n\n    /* selectors */\n    fieldsSelector = props => {\n      const datasetId = props.filter.dataId[0];\n      if (!datasetId) {\n        return [];\n      }\n      return get(props, ['datasets', datasetId, 'fields'], []);\n    };\n\n    filterSelector = props => props.filters;\n    nameSelector = props => props.filter.name;\n    dataIdSelector = props => props.filter.dataId[0];\n\n    // only show current field and field that's not already been used as a filter\n    availableFieldsSelector = createSelector(\n      this.fieldsSelector,\n      this.filterSelector,\n      this.nameSelector,\n      this.dataIdSelector,\n      (fields, filters, name, dataId) =>\n        fields.filter(\n          f =>\n            f.type &&\n            f.type !== ALL_FIELD_TYPES.geojson &&\n            (f.name === name || !filters.find(d => d.name === f.name && d.dataId === dataId))\n        )\n    );\n\n    render() {\n      const {filter} = this.props;\n\n      const {type} = filter;\n      const FilterFilterComponent =\n        (type && FilterPanelComponents[type]) || FilterPanelComponents.default;\n      const allAvailableFields = this.availableFieldsSelector(this.props);\n\n      return (\n        <StyledFilterPanel className=\"filter-panel\">\n          <FilterFilterComponent allAvailableFields={allAvailableFields} {...this.props} />\n        </StyledFilterPanel>\n      );\n    }\n  };\n}\n\nexport default FilterPanelFactory;\n"]},"metadata":{},"sourceType":"script"}
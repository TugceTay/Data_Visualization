{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nimport { compareArrayBuffers } from '@loaders.gl/loader-utils';\nimport { normalizeLoader } from '../loader-utils/normalize-loader';\nimport { getResourceUrlAndType } from '../utils/resource-utils';\nimport { getRegisteredLoaders } from './register-loaders';\nimport { readFileSlice } from '../../iterator-utils/make-iterator/blob-iterator';\nimport { isBlob } from '../../javascript-utils/is-type';\nvar EXT_PATTERN = /\\.([^.]+)$/;\nexport function selectLoader(_x) {\n  return _selectLoader.apply(this, arguments);\n}\nfunction _selectLoader() {\n  _selectLoader = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(data) {\n    var loaders,\n      options,\n      context,\n      loader,\n      _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            loaders = _args.length > 1 && _args[1] !== undefined ? _args[1] : [];\n            options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n            context = _args.length > 3 && _args[3] !== undefined ? _args[3] : {};\n            loader = selectLoaderSync(data, loaders, _objectSpread(_objectSpread({}, options), {}, {\n              nothrow: true\n            }), context);\n            if (!loader) {\n              _context.next = 6;\n              break;\n            }\n            return _context.abrupt(\"return\", loader);\n          case 6:\n            if (!isBlob(data)) {\n              _context.next = 11;\n              break;\n            }\n            _context.next = 9;\n            return readFileSlice(data, 0, 10);\n          case 9:\n            data = _context.sent;\n            loader = selectLoaderSync(data, loaders, options, context);\n          case 11:\n            if (!(!loader && !options.nothrow)) {\n              _context.next = 13;\n              break;\n            }\n            throw new Error(getNoValidLoaderMessage(data));\n          case 13:\n            return _context.abrupt(\"return\", loader);\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _selectLoader.apply(this, arguments);\n}\nexport function selectLoaderSync(data) {\n  var loaders = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  if (loaders && !Array.isArray(loaders)) {\n    return normalizeLoader(loaders);\n  }\n  loaders = [].concat(_toConsumableArray(loaders || []), _toConsumableArray(getRegisteredLoaders()));\n  normalizeLoaders(loaders);\n  var _getResourceUrlAndTyp = getResourceUrlAndType(data),\n    url = _getResourceUrlAndTyp.url,\n    type = _getResourceUrlAndTyp.type;\n  var loader = findLoaderByUrl(loaders, url || context.url);\n  loader = loader || findLoaderByContentType(loaders, type);\n  loader = loader || findLoaderByExamingInitialData(loaders, data);\n  if (!loader && !options.nothrow) {\n    throw new Error(getNoValidLoaderMessage(data));\n  }\n  return loader;\n}\nfunction getNoValidLoaderMessage(data) {\n  var _getResourceUrlAndTyp2 = getResourceUrlAndType(data),\n    url = _getResourceUrlAndTyp2.url,\n    type = _getResourceUrlAndTyp2.type;\n  var message = 'No valid loader found';\n  if (data) {\n    message += \" data: \\\"\".concat(getFirstCharacters(data), \"\\\", contentType: \\\"\").concat(type, \"\\\"\");\n  }\n  if (url) {\n    message += \" url: \".concat(url);\n  }\n  return message;\n}\nfunction normalizeLoaders(loaders) {\n  var _iterator = _createForOfIteratorHelper(loaders),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var loader = _step.value;\n      normalizeLoader(loader);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\nfunction findLoaderByUrl(loaders, url) {\n  var match = url && url.match(EXT_PATTERN);\n  var extension = match && match[1];\n  return extension && findLoaderByExtension(loaders, extension);\n}\nfunction findLoaderByExtension(loaders, extension) {\n  extension = extension.toLowerCase();\n  var _iterator2 = _createForOfIteratorHelper(loaders),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var loader = _step2.value;\n      var _iterator3 = _createForOfIteratorHelper(loader.extensions),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var loaderExtension = _step3.value;\n          if (loaderExtension.toLowerCase() === extension) {\n            return loader;\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return null;\n}\nfunction findLoaderByContentType(loaders, mimeType) {\n  var _iterator4 = _createForOfIteratorHelper(loaders),\n    _step4;\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var loader = _step4.value;\n      if (loader.mimeTypes && loader.mimeTypes.includes(mimeType)) {\n        return loader;\n      }\n      if (mimeType === \"application/x.\".concat(loader.id)) {\n        return loader;\n      }\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n  return null;\n}\nfunction findLoaderByExamingInitialData(loaders, data) {\n  if (!data) {\n    return null;\n  }\n  var _iterator5 = _createForOfIteratorHelper(loaders),\n    _step5;\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var loader = _step5.value;\n      if (typeof data === 'string') {\n        if (testDataAgainstText(data, loader)) {\n          return loader;\n        }\n      } else if (ArrayBuffer.isView(data)) {\n        if (testDataAgainstBinary(data.buffer, data.byteOffset, loader)) {\n          return loader;\n        }\n      } else if (data instanceof ArrayBuffer) {\n        var byteOffset = 0;\n        if (testDataAgainstBinary(data, byteOffset, loader)) {\n          return loader;\n        }\n      }\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n  return null;\n}\nfunction testDataAgainstText(data, loader) {\n  return loader.testText && loader.testText(data);\n}\nfunction testDataAgainstBinary(data, byteOffset, loader) {\n  var tests = Array.isArray(loader.tests) ? loader.tests : [loader.tests];\n  return tests.some(function (test) {\n    return testBinary(data, byteOffset, loader, test);\n  });\n}\nfunction testBinary(data, byteOffset, loader, test) {\n  if (test instanceof ArrayBuffer) {\n    return compareArrayBuffers(test, data, test.byteLength);\n  }\n  switch (_typeof(test)) {\n    case 'function':\n      return test(data, loader);\n    case 'string':\n      var magic = getMagicString(data, byteOffset, test.length);\n      return test === magic;\n    default:\n      return false;\n  }\n}\nfunction getFirstCharacters(data) {\n  var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n  if (typeof data === 'string') {\n    return data.slice(0, length);\n  } else if (ArrayBuffer.isView(data)) {\n    return getMagicString(data.buffer, data.byteOffset, length);\n  } else if (data instanceof ArrayBuffer) {\n    var byteOffset = 0;\n    return getMagicString(data, byteOffset, length);\n  }\n  return '';\n}\nfunction getMagicString(arrayBuffer, byteOffset, length) {\n  if (arrayBuffer.byteLength < byteOffset + length) {\n    return '';\n  }\n  var dataView = new DataView(arrayBuffer);\n  var magic = '';\n  for (var i = 0; i < length; i++) {\n    magic += String.fromCharCode(dataView.getUint8(byteOffset + i));\n  }\n  return magic;\n}","map":{"version":3,"sources":["../../../../src/lib/api/select-loader.js"],"names":["compareArrayBuffers","normalizeLoader","getResourceUrlAndType","getRegisteredLoaders","readFileSlice","isBlob","EXT_PATTERN","selectLoader","data","loaders","options","context","loader","selectLoaderSync","nothrow","Error","getNoValidLoaderMessage","Array","isArray","normalizeLoaders","url","type","findLoaderByUrl","findLoaderByContentType","findLoaderByExamingInitialData","message","getFirstCharacters","match","extension","findLoaderByExtension","toLowerCase","loaderExtension","extensions","mimeType","mimeTypes","includes","id","testDataAgainstText","ArrayBuffer","isView","testDataAgainstBinary","buffer","byteOffset","testText","tests","some","testBinary","test","byteLength","magic","getMagicString","length","slice","arrayBuffer","dataView","DataView","i","String","fromCharCode","getUint8"],"mappings":"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","sourcesContent":["import {compareArrayBuffers} from '@loaders.gl/loader-utils';\nimport {normalizeLoader} from '../loader-utils/normalize-loader';\nimport {getResourceUrlAndType} from '../utils/resource-utils';\nimport {getRegisteredLoaders} from './register-loaders';\nimport {readFileSlice} from '../../iterator-utils/make-iterator/blob-iterator';\nimport {isBlob} from '../../javascript-utils/is-type';\nconst EXT_PATTERN = /\\.([^.]+)$/;\n\n// TODO - Need a variant that peeks at streams for parseInBatches\n// TODO - Detect multiple matching loaders? Use heuristics to grade matches?\n// TODO - Allow apps to pass context to disambiguate between multiple matches (e.g. multiple .json formats)?\n\nexport async function selectLoader(data, loaders = [], options = {}, context = {}) {\n  // First make a sync attempt, disabling exceptions\n  let loader = selectLoaderSync(data, loaders, {...options, nothrow: true}, context);\n  if (loader) {\n    return loader;\n  }\n\n  // For Blobs and Files, try to asynchronously read a small initial slice and test again with that\n  // to see if we can detect by initial content\n  if (isBlob(data)) {\n    data = await readFileSlice(data, 0, 10);\n    loader = selectLoaderSync(data, loaders, options, context);\n  }\n\n  // no loader available\n  if (!loader && !options.nothrow) {\n    throw new Error(getNoValidLoaderMessage(data));\n  }\n\n  return loader;\n}\n\n// eslint-disable-next-line complexity\nexport function selectLoaderSync(data, loaders = [], options = {}, context = {}) {\n  // if only a single loader was provided (not as array), force its use\n  // TODO - Should this behaviour be kept and documented?\n  if (loaders && !Array.isArray(loaders)) {\n    return normalizeLoader(loaders);\n  }\n\n  // Add registered loaders\n  loaders = [...(loaders || []), ...getRegisteredLoaders()];\n  normalizeLoaders(loaders);\n\n  const {url, type} = getResourceUrlAndType(data);\n\n  let loader = findLoaderByUrl(loaders, url || context.url);\n  loader = loader || findLoaderByContentType(loaders, type);\n  // NOTE: Initial data is not always available (e.g. Response, stream, async iterator)\n  loader = loader || findLoaderByExamingInitialData(loaders, data);\n\n  // no loader available\n  if (!loader && !options.nothrow) {\n    throw new Error(getNoValidLoaderMessage(data));\n  }\n\n  return loader;\n}\n\nfunction getNoValidLoaderMessage(data) {\n  const {url, type} = getResourceUrlAndType(data);\n\n  let message = 'No valid loader found';\n  if (data) {\n    message += ` data: \"${getFirstCharacters(data)}\", contentType: \"${type}\"`;\n  }\n  if (url) {\n    message += ` url: ${url}`;\n  }\n  return message;\n}\n\nfunction normalizeLoaders(loaders) {\n  for (const loader of loaders) {\n    normalizeLoader(loader);\n  }\n}\n\n// TODO - Would be nice to support http://example.com/file.glb?parameter=1\n// E.g: x = new URL('http://example.com/file.glb?load=1'; x.pathname\nfunction findLoaderByUrl(loaders, url) {\n  // Get extension\n  const match = url && url.match(EXT_PATTERN);\n  const extension = match && match[1];\n  return extension && findLoaderByExtension(loaders, extension);\n}\n\nfunction findLoaderByExtension(loaders, extension) {\n  extension = extension.toLowerCase();\n\n  for (const loader of loaders) {\n    for (const loaderExtension of loader.extensions) {\n      if (loaderExtension.toLowerCase() === extension) {\n        return loader;\n      }\n    }\n  }\n  return null;\n}\n\nfunction findLoaderByContentType(loaders, mimeType) {\n  for (const loader of loaders) {\n    if (loader.mimeTypes && loader.mimeTypes.includes(mimeType)) {\n      return loader;\n    }\n\n    // Support referring to loaders using the \"unregistered tree\"\n    // https://en.wikipedia.org/wiki/Media_type#Unregistered_tree\n    if (mimeType === `application/x.${loader.id}`) {\n      return loader;\n    }\n  }\n  return null;\n}\n\nfunction findLoaderByExamingInitialData(loaders, data) {\n  if (!data) {\n    return null;\n  }\n\n  for (const loader of loaders) {\n    if (typeof data === 'string') {\n      if (testDataAgainstText(data, loader)) {\n        return loader;\n      }\n    } else if (ArrayBuffer.isView(data)) {\n      // Typed Arrays can have offsets into underlying buffer\n      if (testDataAgainstBinary(data.buffer, data.byteOffset, loader)) {\n        return loader;\n      }\n    } else if (data instanceof ArrayBuffer) {\n      const byteOffset = 0;\n      if (testDataAgainstBinary(data, byteOffset, loader)) {\n        return loader;\n      }\n    }\n    // TODO Handle streaming case (requires creating a new AsyncIterator)\n  }\n  return null;\n}\n\nfunction testDataAgainstText(data, loader) {\n  return loader.testText && loader.testText(data);\n}\n\nfunction testDataAgainstBinary(data, byteOffset, loader) {\n  const tests = Array.isArray(loader.tests) ? loader.tests : [loader.tests];\n  return tests.some(test => testBinary(data, byteOffset, loader, test));\n}\n\nfunction testBinary(data, byteOffset, loader, test) {\n  if (test instanceof ArrayBuffer) {\n    return compareArrayBuffers(test, data, test.byteLength);\n  }\n  switch (typeof test) {\n    case 'function':\n      return test(data, loader);\n\n    case 'string':\n      // Magic bytes check: If `test` is a string, check if binary data starts with that strings\n      const magic = getMagicString(data, byteOffset, test.length);\n      return test === magic;\n\n    default:\n      return false;\n  }\n}\n\nfunction getFirstCharacters(data, length = 5) {\n  if (typeof data === 'string') {\n    return data.slice(0, length);\n  } else if (ArrayBuffer.isView(data)) {\n    // Typed Arrays can have offsets into underlying buffer\n    return getMagicString(data.buffer, data.byteOffset, length);\n  } else if (data instanceof ArrayBuffer) {\n    const byteOffset = 0;\n    return getMagicString(data, byteOffset, length);\n  }\n  return '';\n}\n\nfunction getMagicString(arrayBuffer, byteOffset, length) {\n  if (arrayBuffer.byteLength < byteOffset + length) {\n    return '';\n  }\n  const dataView = new DataView(arrayBuffer);\n  let magic = '';\n  for (let i = 0; i < length; i++) {\n    magic += String.fromCharCode(dataView.getUint8(byteOffset + i));\n  }\n  return magic;\n}\n"]},"metadata":{},"sourceType":"module"}
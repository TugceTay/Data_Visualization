{"ast":null,"code":"import { assertWebGLContext } from '@luma.gl/gltools';\nimport Texture from './texture';\nimport { loadImage } from '../utils/load-file';\nexport default class Texture2D extends Texture {\n  get [Symbol.toStringTag]() {\n    return 'Texture2D';\n  }\n  static isSupported(gl, opts) {\n    return Texture.isSupported(gl, opts);\n  }\n  constructor(gl) {\n    let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    assertWebGLContext(gl);\n    if (props instanceof Promise || typeof props === 'string') {\n      props = {\n        data: props\n      };\n    }\n    if (typeof props.data === 'string') {\n      props = Object.assign({}, props, {\n        data: loadImage(props.data)\n      });\n    }\n    super(gl, Object.assign({}, props, {\n      target: 3553\n    }));\n    this.initialize(props);\n    Object.seal(this);\n  }\n}","map":{"version":3,"sources":["../../../src/classes/texture-2d.js"],"names":["assertWebGLContext","Texture","loadImage","Texture2D","Symbol","toStringTag","isSupported","gl","opts","constructor","props","Promise","data","assign","target","initialize","Object","seal"],"mappings":"AACA,SAAQA,kBAAR,QAAiC,kBAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,SAAR,QAAwB,oBAAxB;AAEA,eAAe,MAAMC,SAAN,SAAwBF,OAAxB,CAAgC;EAEtB,KAAlBG,MAAM,CAACC,WAAW,IAAI;IACzB,OAAO,WAAP;EACD;EAEiB,OAAXC,WAAW,CAACC,EAAD,EAAKC,IAAL,EAAW;IAC3B,OAAOP,OAAO,CAACK,WAARL,CAAoBM,EAApBN,EAAwBO,IAAxBP,CAAP;EACD;EAEDQ,WAAW,CAACF,EAAD,EAAiB;IAAA,IAAZG,KAAY,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,CAAA,CAAI;IAC1BV,kBAAkB,CAACO,EAAD,CAAlBP;IAGA,IAAIU,KAAK,YAAYC,OAAjBD,IAA4B,OAAOA,KAAP,KAAiB,QAAjD,EAA2D;MACzDA,KAAK,GAAG;QAACE,IAAI,EAAEF;MAAP,CAARA;IACD;IAGD,IAAI,OAAOA,KAAK,CAACE,IAAb,KAAsB,QAA1B,EAAoC;MAClCF,KAAK,GAAG,MAAM,CAACG,MAAP,CAAc,CAAA,CAAd,EAAkBH,KAAlB,EAAyB;QAACE,IAAI,EAAEV,SAAS,CAACQ,KAAK,CAACE,IAAP;MAAhB,CAAzB,CAARF;IACD;IAED,KAAA,CAAMH,EAAN,EAAU,MAAM,CAACM,MAAP,CAAc,CAAA,CAAd,EAAkBH,KAAlB,EAAyB;MAACI,MAAM,EAAA;IAAP,CAAzB,CAAV,CAAA;IAEA,IAAA,CAAKC,UAAL,CAAgBL,KAAhB,CAAA;IAEAM,MAAM,CAACC,IAAPD,CAAY,IAAZA,CAAAA;EACD;AA5B4C","sourcesContent":["import GL from '@luma.gl/constants';\nimport {assertWebGLContext} from '@luma.gl/gltools';\nimport Texture from './texture';\nimport {loadImage} from '../utils/load-file';\n\nexport default class Texture2D extends Texture {\n  // eslint-disable-next-line accessor-pairs\n  get [Symbol.toStringTag]() {\n    return 'Texture2D';\n  }\n\n  static isSupported(gl, opts) {\n    return Texture.isSupported(gl, opts);\n  }\n\n  constructor(gl, props = {}) {\n    assertWebGLContext(gl);\n\n    // Signature: new Texture2D(gl, url | Promise)\n    if (props instanceof Promise || typeof props === 'string') {\n      props = {data: props};\n    }\n\n    // Signature: new Texture2D(gl, {data: url})\n    if (typeof props.data === 'string') {\n      props = Object.assign({}, props, {data: loadImage(props.data)});\n    }\n\n    super(gl, Object.assign({}, props, {target: GL.TEXTURE_2D}));\n\n    this.initialize(props);\n\n    Object.seal(this);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
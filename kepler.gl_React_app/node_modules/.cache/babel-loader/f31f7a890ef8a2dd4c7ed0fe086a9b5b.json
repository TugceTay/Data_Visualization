{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport Resource from './resource';\nvar ResourceManager = function () {\n  function ResourceManager(_ref) {\n    var gl = _ref.gl,\n      protocol = _ref.protocol;\n    _classCallCheck(this, ResourceManager);\n    this.protocol = protocol || 'resource://';\n    this._context = {\n      gl: gl,\n      resourceManager: this\n    };\n    this._resources = {};\n    this._consumers = {};\n    this._pruneRequest = null;\n  }\n  _createClass(ResourceManager, [{\n    key: \"contains\",\n    value: function contains(resourceId) {\n      if (resourceId.startsWith(this.protocol)) {\n        return true;\n      }\n      return resourceId in this._resources;\n    }\n  }, {\n    key: \"add\",\n    value: function add(_ref2) {\n      var resourceId = _ref2.resourceId,\n        data = _ref2.data,\n        _ref2$forceUpdate = _ref2.forceUpdate,\n        forceUpdate = _ref2$forceUpdate === void 0 ? false : _ref2$forceUpdate,\n        _ref2$persistent = _ref2.persistent,\n        persistent = _ref2$persistent === void 0 ? true : _ref2$persistent;\n      var res = this._resources[resourceId];\n      if (res) {\n        res.setData(data, forceUpdate);\n      } else {\n        res = new Resource(resourceId, data, this._context);\n        this._resources[resourceId] = res;\n      }\n      res.persistent = persistent;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(resourceId) {\n      var res = this._resources[resourceId];\n      if (res) {\n        res[\"delete\"]();\n        delete this._resources[resourceId];\n      }\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe(_ref3) {\n      var consumerId = _ref3.consumerId;\n      var consumer = this._consumers[consumerId];\n      if (consumer) {\n        for (var requestId in consumer) {\n          var request = consumer[requestId];\n          if (request.resource) {\n            request.resource.unsubscribe(request);\n          }\n        }\n        delete this._consumers[consumerId];\n        this.prune();\n      }\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(_ref4) {\n      var resourceId = _ref4.resourceId,\n        onChange = _ref4.onChange,\n        consumerId = _ref4.consumerId,\n        _ref4$requestId = _ref4.requestId,\n        requestId = _ref4$requestId === void 0 ? 'default' : _ref4$requestId;\n      var resources = this._resources,\n        protocol = this.protocol;\n      if (resourceId.startsWith(protocol)) {\n        resourceId = resourceId.replace(protocol, '');\n        if (!resources[resourceId]) {\n          this.add({\n            resourceId: resourceId,\n            data: null,\n            persistent: false\n          });\n        }\n      }\n      var res = resources[resourceId];\n      this._track(consumerId, requestId, res, onChange);\n      if (res) {\n        return res.getData();\n      }\n      return undefined;\n    }\n  }, {\n    key: \"prune\",\n    value: function prune() {\n      var _this = this;\n      if (!this._pruneRequest) {\n        this._pruneRequest = setTimeout(function () {\n          return _this._prune();\n        }, 0);\n      }\n    }\n  }, {\n    key: \"finalize\",\n    value: function finalize() {\n      for (var key in this._resources) {\n        this._resources[key][\"delete\"]();\n      }\n    }\n  }, {\n    key: \"_track\",\n    value: function _track(consumerId, requestId, resource, onChange) {\n      var consumers = this._consumers;\n      var consumer = consumers[consumerId] = consumers[consumerId] || {};\n      var request = consumer[requestId] || {};\n      if (request.resource) {\n        request.resource.unsubscribe(request);\n        request.resource = null;\n        this.prune();\n      }\n      if (resource) {\n        consumer[requestId] = request;\n        request.onChange = onChange;\n        request.resource = resource;\n        resource.subscribe(request);\n      }\n    }\n  }, {\n    key: \"_prune\",\n    value: function _prune() {\n      this._pruneRequest = null;\n      for (var _i = 0, _Object$keys = Object.keys(this._resources); _i < _Object$keys.length; _i++) {\n        var key = _Object$keys[_i];\n        var res = this._resources[key];\n        if (!res.persistent && !res.inUse()) {\n          res[\"delete\"]();\n          delete this._resources[key];\n        }\n      }\n    }\n  }]);\n  return ResourceManager;\n}();\nexport { ResourceManager as default };","map":{"version":3,"sources":["../../../../src/lib/resource/resource-manager.js"],"names":["Resource","ResourceManager","gl","protocol","_context","resourceManager","_resources","_consumers","_pruneRequest","resourceId","startsWith","data","forceUpdate","persistent","res","setData","consumerId","consumer","requestId","request","resource","unsubscribe","prune","onChange","resources","replace","add","_track","getData","undefined","setTimeout","_prune","key","consumers","subscribe","Object","keys","inUse"],"mappings":"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","sourcesContent":["/* global setTimeout */\nimport Resource from './resource';\n\nexport default class ResourceManager {\n  constructor({gl, protocol}) {\n    this.protocol = protocol || 'resource://';\n\n    this._context = {\n      gl,\n      resourceManager: this\n    };\n    this._resources = {};\n    this._consumers = {};\n\n    this._pruneRequest = null;\n  }\n\n  contains(resourceId) {\n    if (resourceId.startsWith(this.protocol)) {\n      return true;\n    }\n    return resourceId in this._resources;\n  }\n\n  add({resourceId, data, forceUpdate = false, persistent = true}) {\n    let res = this._resources[resourceId];\n\n    if (res) {\n      res.setData(data, forceUpdate);\n    } else {\n      res = new Resource(resourceId, data, this._context);\n      this._resources[resourceId] = res;\n    }\n    // persistent resources can only be removed by calling `remove`\n    // non-persistent resources may be released when there are no more consumers\n    res.persistent = persistent;\n  }\n\n  remove(resourceId) {\n    const res = this._resources[resourceId];\n\n    if (res) {\n      res.delete();\n      delete this._resources[resourceId];\n    }\n  }\n\n  unsubscribe({consumerId}) {\n    const consumer = this._consumers[consumerId];\n    if (consumer) {\n      for (const requestId in consumer) {\n        const request = consumer[requestId];\n        if (request.resource) {\n          request.resource.unsubscribe(request);\n        }\n      }\n      delete this._consumers[consumerId];\n      this.prune();\n    }\n  }\n\n  subscribe({resourceId, onChange, consumerId, requestId = 'default'}) {\n    const {_resources: resources, protocol} = this;\n    if (resourceId.startsWith(protocol)) {\n      resourceId = resourceId.replace(protocol, '');\n      if (!resources[resourceId]) {\n        // Add placeholder. When this resource becomes available, the consumer will be notified.\n        this.add({resourceId, data: null, persistent: false});\n      }\n    }\n    const res = resources[resourceId];\n    this._track(consumerId, requestId, res, onChange);\n    if (res) {\n      return res.getData();\n    }\n\n    return undefined;\n  }\n\n  prune() {\n    if (!this._pruneRequest) {\n      // prune() may be called multiple times in the same animation frame.\n      // Batch multiple requests together\n      this._pruneRequest = setTimeout(() => this._prune(), 0);\n    }\n  }\n\n  finalize() {\n    for (const key in this._resources) {\n      this._resources[key].delete();\n    }\n  }\n\n  _track(consumerId, requestId, resource, onChange) {\n    const consumers = this._consumers;\n    const consumer = (consumers[consumerId] = consumers[consumerId] || {});\n    const request = consumer[requestId] || {};\n\n    if (request.resource) {\n      request.resource.unsubscribe(request);\n      request.resource = null;\n      this.prune();\n    }\n    if (resource) {\n      consumer[requestId] = request;\n      request.onChange = onChange;\n      request.resource = resource;\n      resource.subscribe(request);\n    }\n  }\n\n  _prune() {\n    this._pruneRequest = null;\n\n    for (const key of Object.keys(this._resources)) {\n      const res = this._resources[key];\n      if (!res.persistent && !res.inUse()) {\n        res.delete();\n        delete this._resources[key];\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = DatasetInfoFactory;\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\nvar _d3Format = require(\"d3-format\");\nvar _localization = require(\"../../../localization\");\nvar _templateObject;\nvar numFormat = (0, _d3Format.format)(',');\nvar StyledDataRowCount = _styledComponents[\"default\"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  font-size: 11px;\\n  color: \", \";\\n  padding-left: 19px;\\n\"])), function (props) {\n  return props.theme.subtextColor;\n});\nfunction DatasetInfoFactory() {\n  var DatasetInfo = function DatasetInfo(_ref) {\n    var dataset = _ref.dataset;\n    return /*#__PURE__*/_react[\"default\"].createElement(StyledDataRowCount, {\n      className: \"source-data-rows\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(_localization.FormattedMessage, {\n      id: 'datasetInfo.rowCount',\n      values: {\n        rowCount: numFormat(dataset.dataContainer.numRows())\n      }\n    }));\n  };\n  return DatasetInfo;\n}","map":{"version":3,"sources":["../../../../src/components/side-panel/common/dataset-info.js"],"names":["numFormat","StyledDataRowCount","styled","div","props","theme","subtextColor","DatasetInfoFactory","DatasetInfo","dataset","rowCount","dataContainer","numRows"],"mappings":";;;;;;;;AAoBA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;AACA,IAAA,iBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;;AAEA,IAAMA,SAAS,GAAG,CAAA,CAAA,EAAA,SAAA,CAAA,MAAA,EAAO,GAAP,CAAlB;AAEA,IAAMC,kBAAkB,GAAGC,iBAAAA,CAAAA,SAAAA,CAAAA,CAAOC,GAAV,CAAA,eAAA,KAAA,eAAA,GAAA,CAAA,CAAA,EAAA,uBAAA,CAAA,SAAA,CAAA,EAAA,CAAA,iCAAA,EAAA,4BAAA,CAAA,CAAA,CAAA,EAEb,UAAA,KAAK,EAAA;EAAA,OAAIC,KAAK,CAACC,KAAND,CAAYE,YAAhB;AAAA,CAFQ,CAAxB;AAMe,SAASC,kBAAT,GAA8B;EAC3C,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAA,IAAA,EAAA;IAAA,IAAEC,OAAF,GAAA,IAAA,CAAEA,OAAF;IAAA,OAAA,aAClB,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,kBAAD,EAAA;MAAoB,SAAS,EAAC;IAA9B,CAAA,EAAA,aACE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,aAAA,CAAA,gBAAD,EAAA;MACE,EAAE,EAAE,sBADN;MAEE,MAAM,EAAE;QAACC,QAAQ,EAAEV,SAAS,CAACS,OAAO,CAACE,aAARF,CAAsBG,OAAtBH,EAAD;MAApB;IAFV,CAAA,CADF,CADkB;EAAA,CAApB;EASA,OAAOD,WAAP;AACD","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport {format} from 'd3-format';\nimport {FormattedMessage} from 'localization';\n\nconst numFormat = format(',');\n\nconst StyledDataRowCount = styled.div`\n  font-size: 11px;\n  color: ${props => props.theme.subtextColor};\n  padding-left: 19px;\n`;\n\nexport default function DatasetInfoFactory() {\n  const DatasetInfo = ({dataset}) => (\n    <StyledDataRowCount className=\"source-data-rows\">\n      <FormattedMessage\n        id={'datasetInfo.rowCount'}\n        values={{rowCount: numFormat(dataset.dataContainer.numRows())}}\n      />\n    </StyledDataRowCount>\n  );\n\n  return DatasetInfo;\n}\n"]},"metadata":{},"sourceType":"script"}
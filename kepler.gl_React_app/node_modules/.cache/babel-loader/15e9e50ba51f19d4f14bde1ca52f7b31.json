{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nfunction noop() {}\nvar DEFAULT_SETTINGS = {\n  onStart: noop,\n  onUpdate: noop,\n  onInterrupt: noop,\n  onEnd: noop\n};\nvar Transition = function () {\n  function Transition(timeline) {\n    _classCallCheck(this, Transition);\n    this._inProgress = false;\n    this._handle = null;\n    this.timeline = timeline;\n    this.settings = {};\n  }\n  _createClass(Transition, [{\n    key: \"start\",\n    value: function start(props) {\n      this.cancel();\n      this.settings = Object.assign({}, DEFAULT_SETTINGS, props);\n      this._inProgress = true;\n      this.settings.onStart(this);\n    }\n  }, {\n    key: \"end\",\n    value: function end() {\n      if (this._inProgress) {\n        this.timeline.removeChannel(this._handle);\n        this._handle = null;\n        this._inProgress = false;\n        this.settings.onEnd(this);\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      if (this._inProgress) {\n        this.settings.onInterrupt(this);\n        this.timeline.removeChannel(this._handle);\n        this._handle = null;\n        this._inProgress = false;\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      if (!this._inProgress) {\n        return false;\n      }\n      if (this._handle === null) {\n        var timeline = this.timeline,\n          settings = this.settings;\n        this._handle = timeline.addChannel({\n          delay: timeline.getTime(),\n          duration: settings.duration\n        });\n      }\n      this.time = this.timeline.getTime(this._handle);\n      this._onUpdate();\n      this.settings.onUpdate(this);\n      if (this.timeline.isFinished(this._handle)) {\n        this.end();\n      }\n      return true;\n    }\n  }, {\n    key: \"_onUpdate\",\n    value: function _onUpdate() {}\n  }, {\n    key: \"inProgress\",\n    get: function get() {\n      return this._inProgress;\n    }\n  }]);\n  return Transition;\n}();\nexport { Transition as default };","map":{"version":3,"sources":["../../../src/transitions/transition.js"],"names":["noop","DEFAULT_SETTINGS","onStart","onUpdate","onInterrupt","onEnd","Transition","timeline","_inProgress","_handle","settings","props","cancel","Object","assign","removeChannel","addChannel","delay","getTime","duration","time","_onUpdate","isFinished","end"],"mappings":";;AAAA,SAASA,IAAT,GAAgB,CAAE;AAElB,IAAMC,gBAAgB,GAAG;EACvBC,OAAO,EAAEF,IADc;EAEvBG,QAAQ,EAAEH,IAFa;EAGvBI,WAAW,EAAEJ,IAHU;EAIvBK,KAAK,EAAEL;AAJgB,CAAzB;IAOqBM,U;EAInB,SAAA,UAAA,CAAYC,QAAZ,EAAsB;IAAA,eAAA,CAAA,IAAA,EAAA,UAAA,CAAA;IACpB,IAAA,CAAKC,WAAL,GAAmB,KAAnB;IACA,IAAA,CAAKC,OAAL,GAAe,IAAf;IACA,IAAA,CAAKF,QAAL,GAAgBA,QAAhB;IAGA,IAAA,CAAKG,QAAL,GAAgB,CAAA,CAAhB;EACD;;;0BAWKC,K,EAAO;MACX,IAAA,CAAKC,MAAL,EAAA;MACA,IAAA,CAAKF,QAAL,GAAgBG,MAAM,CAACC,MAAPD,CAAc,CAAA,CAAdA,EAAkBZ,gBAAlBY,EAAoCF,KAApCE,CAAhB;MACA,IAAA,CAAKL,WAAL,GAAmB,IAAnB;MACA,IAAA,CAAKE,QAAL,CAAcR,OAAd,CAAsB,IAAtB,CAAA;IACD;;;0BAKK;MACJ,IAAI,IAAA,CAAKM,WAAT,EAAsB;QACpB,IAAA,CAAKD,QAAL,CAAcQ,aAAd,CAA4B,IAAA,CAAKN,OAAjC,CAAA;QACA,IAAA,CAAKA,OAAL,GAAe,IAAf;QACA,IAAA,CAAKD,WAAL,GAAmB,KAAnB;QACA,IAAA,CAAKE,QAAL,CAAcL,KAAd,CAAoB,IAApB,CAAA;MACD;IACF;;;6BAKQ;MACP,IAAI,IAAA,CAAKG,WAAT,EAAsB;QACpB,IAAA,CAAKE,QAAL,CAAcN,WAAd,CAA0B,IAA1B,CAAA;QACA,IAAA,CAAKG,QAAL,CAAcQ,aAAd,CAA4B,IAAA,CAAKN,OAAjC,CAAA;QACA,IAAA,CAAKA,OAAL,GAAe,IAAf;QACA,IAAA,CAAKD,WAAL,GAAmB,KAAnB;MACD;IACF;;;6BAKQ;MACP,IAAI,CAAC,IAAA,CAAKA,WAAV,EAAuB;QACrB,OAAO,KAAP;MACD;MAMD,IAAI,IAAA,CAAKC,OAAL,KAAiB,IAArB,EAA2B;QAAA,IAClBF,QADkB,GACI,IADJ,CAClBA,QADkB;UACRG,QADQ,GACI,IADJ,CACRA,QADQ;QAEzB,IAAA,CAAKD,OAAL,GAAe,QAAQ,CAACO,UAAT,CAAoB;UACjCC,KAAK,EAAEV,QAAQ,CAACW,OAATX,EAD0B;UAEjCY,QAAQ,EAAET,QAAQ,CAACS;QAFc,CAApB,CAAf;MAID;MAED,IAAA,CAAKC,IAAL,GAAY,IAAA,CAAKb,QAAL,CAAcW,OAAd,CAAsB,IAAA,CAAKT,OAA3B,CAAZ;MAEA,IAAA,CAAKY,SAAL,EAAA;MAEA,IAAA,CAAKX,QAAL,CAAcP,QAAd,CAAuB,IAAvB,CAAA;MAIA,IAAI,IAAA,CAAKI,QAAL,CAAce,UAAd,CAAyB,IAAA,CAAKb,OAA9B,CAAJ,EAA4C;QAC1C,IAAA,CAAKc,GAAL,EAAA;MACD;MACD,OAAO,IAAP;IACD;;;gCAIW,CAEX;;;wBA7EgB;MACf,OAAO,IAAA,CAAKf,WAAZ;IACD;;;;SAhBkBF,U","sourcesContent":["function noop() {}\n\nconst DEFAULT_SETTINGS = {\n  onStart: noop,\n  onUpdate: noop,\n  onInterrupt: noop,\n  onEnd: noop\n};\n\nexport default class Transition {\n  /**\n   * @params timeline {Timeline}\n   */\n  constructor(timeline) {\n    this._inProgress = false;\n    this._handle = null;\n    this.timeline = timeline;\n\n    // Defaults\n    this.settings = {};\n  }\n\n  /* Public API */\n  get inProgress() {\n    return this._inProgress;\n  }\n\n  /**\n   * (re)start this transition.\n   * @params props {object} - optional overriding props. see constructor\n   */\n  start(props) {\n    this.cancel();\n    this.settings = Object.assign({}, DEFAULT_SETTINGS, props);\n    this._inProgress = true;\n    this.settings.onStart(this);\n  }\n\n  /**\n   * end this transition if it is in progress.\n   */\n  end() {\n    if (this._inProgress) {\n      this.timeline.removeChannel(this._handle);\n      this._handle = null;\n      this._inProgress = false;\n      this.settings.onEnd(this);\n    }\n  }\n\n  /**\n   * cancel this transition if it is in progress.\n   */\n  cancel() {\n    if (this._inProgress) {\n      this.settings.onInterrupt(this);\n      this.timeline.removeChannel(this._handle);\n      this._handle = null;\n      this._inProgress = false;\n    }\n  }\n\n  /**\n   * update this transition. Returns `true` if updated.\n   */\n  update() {\n    if (!this._inProgress) {\n      return false;\n    }\n\n    // It is important to initialize the handle during `update` instead of `start`.\n    // The CPU time that the `start` frame takes should not be counted towards the duration.\n    // On the other hand, `update` always happens during a render cycle. The clock starts when the\n    // transition is rendered for the first time.\n    if (this._handle === null) {\n      const {timeline, settings} = this;\n      this._handle = timeline.addChannel({\n        delay: timeline.getTime(),\n        duration: settings.duration\n      });\n    }\n\n    this.time = this.timeline.getTime(this._handle);\n    // Call subclass method\n    this._onUpdate();\n    // Call user callback\n    this.settings.onUpdate(this);\n\n    // This only works if `settings.duration` is set\n    // Spring transition must call `end` manually\n    if (this.timeline.isFinished(this._handle)) {\n      this.end();\n    }\n    return true;\n  }\n\n  /* Private API */\n\n  _onUpdate() {\n    // for subclass override\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
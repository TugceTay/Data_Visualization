{"ast":null,"code":"var CANVAS_ONLY_STYLES = {\n  mixBlendMode: null\n};\nexport default function extractStyles(_ref) {\n  var width = _ref.width,\n    height = _ref.height,\n    style = _ref.style;\n  var containerStyle = {\n    position: 'absolute',\n    zIndex: 0,\n    left: 0,\n    top: 0,\n    width: width,\n    height: height\n  };\n  var canvasStyle = {\n    left: 0,\n    top: 0\n  };\n  if (style) {\n    for (var key in style) {\n      if (key in CANVAS_ONLY_STYLES) {\n        canvasStyle[key] = style[key];\n      } else {\n        containerStyle[key] = style[key];\n      }\n    }\n  }\n  return {\n    containerStyle: containerStyle,\n    canvasStyle: canvasStyle\n  };\n}","map":{"version":3,"sources":["../../../src/utils/extract-styles.js"],"names":["CANVAS_ONLY_STYLES","mixBlendMode","extractStyles","width","height","style","containerStyle","position","zIndex","left","top","canvasStyle","key"],"mappings":"AAAA,IAAMA,kBAAkB,GAAG;EACzBC,YAAY,EAAE;AADW,CAA3B;AAIA,eAAe,SAASC,aAAT,CAAA,IAAA,EAA+C;EAAA,IAAvBC,KAAuB,GAAA,IAAA,CAAvBA,KAAuB;IAAhBC,MAAgB,GAAA,IAAA,CAAhBA,MAAgB;IAARC,KAAQ,GAAA,IAAA,CAARA,KAAQ;EAE5D,IAAMC,cAAc,GAAG;IACrBC,QAAQ,EAAE,UADW;IAErBC,MAAM,EAAE,CAFa;IAGrBC,IAAI,EAAE,CAHe;IAIrBC,GAAG,EAAE,CAJgB;IAKrBP,KAAK,EAALA,KALqB;IAMrBC,MAAM,EAANA;EANqB,CAAvB;EAUA,IAAMO,WAAW,GAAG;IAClBF,IAAI,EAAE,CADY;IAElBC,GAAG,EAAE;EAFa,CAApB;EAKA,IAAIL,KAAJ,EAAW;IACT,KAAK,IAAMO,GAAX,IAAkBP,KAAlB,EAAyB;MACvB,IAAIO,GAAG,IAAIZ,kBAAX,EAA+B;QAE7BW,WAAW,CAACC,GAAD,CAAXD,GAAmBN,KAAK,CAACO,GAAD,CAAxBD;MACD,CAHD,MAGO;QAELL,cAAc,CAACM,GAAD,CAAdN,GAAsBD,KAAK,CAACO,GAAD,CAA3BN;MACD;IACF;EACF;EAED,OAAO;IAACA,cAAc,EAAdA,cAAD;IAAiBK,WAAW,EAAXA;EAAjB,CAAP;AACD","sourcesContent":["const CANVAS_ONLY_STYLES = {\n  mixBlendMode: null\n};\n\nexport default function extractStyles({width, height, style}) {\n  // This styling is enforced for correct positioning with children\n  const containerStyle = {\n    position: 'absolute',\n    zIndex: 0,\n    left: 0,\n    top: 0,\n    width,\n    height\n  };\n\n  // Fill the container\n  const canvasStyle = {\n    left: 0,\n    top: 0\n  };\n\n  if (style) {\n    for (const key in style) {\n      if (key in CANVAS_ONLY_STYLES) {\n        // apply style to the canvas, but not deck's children, e.g. mix-blend-mode\n        canvasStyle[key] = style[key];\n      } else {\n        // apply style to the container, e.g. position/flow settings\n        containerStyle[key] = style[key];\n      }\n    }\n  }\n\n  return {containerStyle, canvasStyle};\n}\n"]},"metadata":{},"sourceType":"module"}
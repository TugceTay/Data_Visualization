{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nvar isObject = function isObject(value) {\n  return value && _typeof(value) === 'object';\n};\nexport function asyncDeepMap(_x, _x2) {\n  return _asyncDeepMap.apply(this, arguments);\n}\nfunction _asyncDeepMap() {\n  _asyncDeepMap = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(tree, func) {\n    var options,\n      _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n            _context.next = 3;\n            return mapSubtree(tree, func, options);\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _asyncDeepMap.apply(this, arguments);\n}\nexport function mapSubtree(_x3, _x4, _x5) {\n  return _mapSubtree.apply(this, arguments);\n}\nfunction _mapSubtree() {\n  _mapSubtree = _asyncToGenerator(_regeneratorRuntime.mark(function _callee2(object, func, options) {\n    var url;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!Array.isArray(object)) {\n              _context2.next = 4;\n              break;\n            }\n            _context2.next = 3;\n            return mapArray(object, func, options);\n          case 3:\n            return _context2.abrupt(\"return\", _context2.sent);\n          case 4:\n            if (!isObject(object)) {\n              _context2.next = 8;\n              break;\n            }\n            _context2.next = 7;\n            return mapObject(object, func, options);\n          case 7:\n            return _context2.abrupt(\"return\", _context2.sent);\n          case 8:\n            url = object;\n            _context2.next = 11;\n            return func(url, options);\n          case 11:\n            return _context2.abrupt(\"return\", _context2.sent);\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _mapSubtree.apply(this, arguments);\n}\nfunction mapObject(_x6, _x7, _x8) {\n  return _mapObject.apply(this, arguments);\n}\nfunction _mapObject() {\n  _mapObject = _asyncToGenerator(_regeneratorRuntime.mark(function _callee3(object, func, options) {\n    var promises, values, _loop, key;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            promises = [];\n            values = {};\n            _loop = function _loop(key) {\n              var url = object[key];\n              var promise = mapSubtree(url, func, options).then(function (value) {\n                values[key] = value;\n              });\n              promises.push(promise);\n            };\n            for (key in object) {\n              _loop(key);\n            }\n            _context3.next = 6;\n            return Promise.all(promises);\n          case 6:\n            return _context3.abrupt(\"return\", values);\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _mapObject.apply(this, arguments);\n}\nfunction mapArray(_x9, _x10) {\n  return _mapArray.apply(this, arguments);\n}\nfunction _mapArray() {\n  _mapArray = _asyncToGenerator(_regeneratorRuntime.mark(function _callee4(urlArray, func) {\n    var options,\n      promises,\n      _args4 = arguments;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            options = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : {};\n            promises = urlArray.map(function (url) {\n              return mapSubtree(url, func, options);\n            });\n            _context4.next = 4;\n            return Promise.all(promises);\n          case 4:\n            return _context4.abrupt(\"return\", _context4.sent);\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _mapArray.apply(this, arguments);\n}","map":{"version":3,"sources":["../../../../src/lib/texture-api/async-deep-map.js"],"names":["isObject","value","asyncDeepMap","tree","func","options","mapSubtree","object","Array","isArray","mapArray","mapObject","url","promises","values","key","promise","then","push","Promise","all","urlArray","map"],"mappings":"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","sourcesContent":["/*\nAsynchronously maps a deep structure of values (e.g. objects and arrays of urls).\n\nE.g. a mipmapped cubemap\n{\n  [CUBE_FACE_FRONT]: [\n    \"image-front-0.jpg\",\n    \"image-front-1.jpg\",\n    \"image-front-2.jpg\",\n  ],\n  [CUBE_MAP_BACK]: [\n    ...\n  ]\n}\n*/\n\nconst isObject = value => value && typeof value === 'object';\n\n// Loads a deep structure of urls (objects and arrays of urls)\n// Returns an object with six key-value pairs containing the images (or image mip arrays)\n// for each cube face\nexport async function asyncDeepMap(tree, func, options = {}) {\n  return await mapSubtree(tree, func, options);\n}\n\nexport async function mapSubtree(object, func, options) {\n  if (Array.isArray(object)) {\n    return await mapArray(object, func, options);\n  }\n\n  if (isObject(object)) {\n    return await mapObject(object, func, options);\n  }\n\n  // TODO - ignore non-urls, non-arraybuffers?\n  const url = object;\n  return await func(url, options);\n}\n\n// HELPERS\n\nasync function mapObject(object, func, options) {\n  const promises = [];\n  const values = {};\n\n  for (const key in object) {\n    const url = object[key];\n    const promise = mapSubtree(url, func, options).then(value => {\n      values[key] = value;\n    });\n    promises.push(promise);\n  }\n\n  await Promise.all(promises);\n\n  return values;\n}\n\nasync function mapArray(urlArray, func, options = {}) {\n  const promises = urlArray.map(url => mapSubtree(url, func, options));\n  return await Promise.all(promises);\n}\n"]},"metadata":{},"sourceType":"module"}
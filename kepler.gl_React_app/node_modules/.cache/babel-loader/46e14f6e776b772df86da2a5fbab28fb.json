{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Layer\", {\n  enumerable: true,\n  get: function get() {\n    return _baseLayer[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"OVERLAY_TYPE\", {\n  enumerable: true,\n  get: function get() {\n    return _baseLayer.OVERLAY_TYPE;\n  }\n});\nObject.defineProperty(exports, \"LAYER_ID_LENGTH\", {\n  enumerable: true,\n  get: function get() {\n    return _baseLayer.LAYER_ID_LENGTH;\n  }\n});\nObject.defineProperty(exports, \"colorMaker\", {\n  enumerable: true,\n  get: function get() {\n    return _baseLayer.colorMaker;\n  }\n});\nObject.defineProperty(exports, \"LAYER_VIS_CONFIGS\", {\n  enumerable: true,\n  get: function get() {\n    return _layerFactory.LAYER_VIS_CONFIGS;\n  }\n});\nexports.LayerClasses = exports.KeplerGlLayers = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _pointLayer = _interopRequireDefault(require(\"./point-layer/point-layer\"));\nvar _arcLayer = _interopRequireDefault(require(\"./arc-layer/arc-layer\"));\nvar _lineLayer = _interopRequireDefault(require(\"./line-layer/line-layer\"));\nvar _gridLayer = _interopRequireDefault(require(\"./grid-layer/grid-layer\"));\nvar _hexagonLayer = _interopRequireDefault(require(\"./hexagon-layer/hexagon-layer\"));\nvar _geojsonLayer = _interopRequireDefault(require(\"./geojson-layer/geojson-layer\"));\nvar _clusterLayer = _interopRequireDefault(require(\"./cluster-layer/cluster-layer\"));\nvar _iconLayer = _interopRequireDefault(require(\"./icon-layer/icon-layer\"));\nvar _heatmapLayer = _interopRequireDefault(require(\"./heatmap-layer/heatmap-layer\"));\nvar _h3HexagonLayer = _interopRequireDefault(require(\"./h3-hexagon-layer/h3-hexagon-layer\"));\nvar _scenegraphLayer = _interopRequireDefault(require(\"./scenegraph-layer/scenegraph-layer\"));\nvar _tripLayer = _interopRequireDefault(require(\"./trip-layer/trip-layer\"));\nvar _s2GeometryLayer = _interopRequireDefault(require(\"./s2-geometry-layer/s2-geometry-layer\"));\nvar _types = require(\"./types\");\nvar _baseLayer = _interopRequireWildcard(require(\"./base-layer\"));\nvar _layerFactory = require(\"./layer-factory\");\nvar _LayerClasses;\n\n// individual layers\nvar KeplerGlLayers = {\n  PointLayer: _pointLayer[\"default\"],\n  ArcLayer: _arcLayer[\"default\"],\n  LineLayer: _lineLayer[\"default\"],\n  GridLayer: _gridLayer[\"default\"],\n  HexagonLayer: _hexagonLayer[\"default\"],\n  GeojsonLayer: _geojsonLayer[\"default\"],\n  ClusterLayer: _clusterLayer[\"default\"],\n  IconLayer: _iconLayer[\"default\"],\n  HeatmapLayer: _heatmapLayer[\"default\"],\n  H3Layer: _h3HexagonLayer[\"default\"],\n  ScenegraphLayer: _scenegraphLayer[\"default\"],\n  TripLayer: _tripLayer[\"default\"],\n  S2GeometryLayer: _s2GeometryLayer[\"default\"]\n};\nexports.KeplerGlLayers = KeplerGlLayers;\nvar LayerClasses = (_LayerClasses = {}, (0, _defineProperty2[\"default\"])(_LayerClasses, _types.LAYER_TYPES.point, _pointLayer[\"default\"]), (0, _defineProperty2[\"default\"])(_LayerClasses, _types.LAYER_TYPES.arc, _arcLayer[\"default\"]), (0, _defineProperty2[\"default\"])(_LayerClasses, _types.LAYER_TYPES.line, _lineLayer[\"default\"]), (0, _defineProperty2[\"default\"])(_LayerClasses, _types.LAYER_TYPES.grid, _gridLayer[\"default\"]), (0, _defineProperty2[\"default\"])(_LayerClasses, _types.LAYER_TYPES.hexagon, _hexagonLayer[\"default\"]), (0, _defineProperty2[\"default\"])(_LayerClasses, _types.LAYER_TYPES.geojson, _geojsonLayer[\"default\"]), (0, _defineProperty2[\"default\"])(_LayerClasses, _types.LAYER_TYPES.cluster, _clusterLayer[\"default\"]), (0, _defineProperty2[\"default\"])(_LayerClasses, _types.LAYER_TYPES.icon, _iconLayer[\"default\"]), (0, _defineProperty2[\"default\"])(_LayerClasses, _types.LAYER_TYPES.heatmap, _heatmapLayer[\"default\"]), (0, _defineProperty2[\"default\"])(_LayerClasses, _types.LAYER_TYPES.hexagonId, _h3HexagonLayer[\"default\"]), (0, _defineProperty2[\"default\"])(_LayerClasses, _types.LAYER_TYPES['3D'], _scenegraphLayer[\"default\"]), (0, _defineProperty2[\"default\"])(_LayerClasses, _types.LAYER_TYPES.trip, _tripLayer[\"default\"]), (0, _defineProperty2[\"default\"])(_LayerClasses, _types.LAYER_TYPES.s2, _s2GeometryLayer[\"default\"]), _LayerClasses);\nexports.LayerClasses = LayerClasses;","map":{"version":3,"sources":["../../src/layers/index.js"],"names":["KeplerGlLayers","PointLayer","ArcLayer","LineLayer","GridLayer","HexagonLayer","GeojsonLayer","ClusterLayer","IconLayer","HeatmapLayer","H3Layer","ScenegraphLayer","TripLayer","S2GeometryLayer","LayerClasses","LAYER_TYPES","point","arc","line","grid","hexagon","geojson","cluster","icon","heatmap","hexagonId","trip","s2"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {default as PointLayer} from './point-layer/point-layer';\nimport {default as ArcLayer} from './arc-layer/arc-layer';\nimport {default as LineLayer} from './line-layer/line-layer';\nimport {default as GridLayer} from './grid-layer/grid-layer';\nimport {default as HexagonLayer} from './hexagon-layer/hexagon-layer';\nimport {default as GeojsonLayer} from './geojson-layer/geojson-layer';\nimport {default as ClusterLayer} from './cluster-layer/cluster-layer';\nimport {default as IconLayer} from './icon-layer/icon-layer';\nimport {default as HeatmapLayer} from './heatmap-layer/heatmap-layer';\nimport {default as H3Layer} from './h3-hexagon-layer/h3-hexagon-layer';\nimport {default as ScenegraphLayer} from './scenegraph-layer/scenegraph-layer';\nimport {default as TripLayer} from './trip-layer/trip-layer';\nimport {default as S2GeometryLayer} from './s2-geometry-layer/s2-geometry-layer';\nimport {LAYER_TYPES} from './types';\n\n// base layer\nexport {default as Layer, OVERLAY_TYPE, LAYER_ID_LENGTH, colorMaker} from './base-layer';\n\n// individual layers\nexport const KeplerGlLayers = {\n  PointLayer,\n  ArcLayer,\n  LineLayer,\n  GridLayer,\n  HexagonLayer,\n  GeojsonLayer,\n  ClusterLayer,\n  IconLayer,\n  HeatmapLayer,\n  H3Layer,\n  ScenegraphLayer,\n  TripLayer,\n  S2GeometryLayer\n};\n\nexport const LayerClasses = {\n  [LAYER_TYPES.point]: PointLayer,\n  [LAYER_TYPES.arc]: ArcLayer,\n  [LAYER_TYPES.line]: LineLayer,\n  [LAYER_TYPES.grid]: GridLayer,\n  [LAYER_TYPES.hexagon]: HexagonLayer,\n  [LAYER_TYPES.geojson]: GeojsonLayer,\n  [LAYER_TYPES.cluster]: ClusterLayer,\n  [LAYER_TYPES.icon]: IconLayer,\n  [LAYER_TYPES.heatmap]: HeatmapLayer,\n  [LAYER_TYPES.hexagonId]: H3Layer,\n  [LAYER_TYPES['3D']]: ScenegraphLayer,\n  [LAYER_TYPES.trip]: TripLayer,\n  [LAYER_TYPES.s2]: S2GeometryLayer\n};\n\nexport {LAYER_VIS_CONFIGS} from './layer-factory';\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"// Purpose: include this in your module to avoids adding dependencies on\n// micro modules like 'global'\n/* global window, global, document, navigator */\nexport const userAgent = typeof navigator !== 'undefined' && navigator.userAgent ? navigator.userAgent.toLowerCase() : '';\nconst window_ = typeof window !== 'undefined' ? window : global;\nconst global_ = typeof global !== 'undefined' ? global : window;\nconst document_ = typeof document !== 'undefined' ? document : {};\nexport { window_ as window, global_ as global, document_ as document };\n/*\n * Detect whether passive option is supported by the current browser.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   #Safely_detecting_option_support\n */\nlet passiveSupported = false;\n/* eslint-disable accessor-pairs, no-empty */\ntry {\n  const options = {\n    // This function will be called when the browser\n    // attempts to access the passive property.\n    get passive() {\n      passiveSupported = true;\n      return true;\n    }\n  };\n  window_.addEventListener('test', null, options);\n  window_.removeEventListener('test', null);\n} catch (err) {\n  passiveSupported = false;\n}\nexport { passiveSupported };","map":{"version":3,"sources":["../../../src/utils/globals.ts"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA,OAAO,MAAM,SAAS,GACpB,OAAO,SAAS,KAAK,WAAW,IAAI,SAAS,CAAC,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,WAAW,EAAE,GAAG,EAAE;AAElG,MAAM,OAAO,GAAG,OAAO,MAAM,KAAK,WAAW,GAAG,MAAM,GAAG,MAAM;AAC/D,MAAM,OAAO,GAAG,OAAO,MAAM,KAAK,WAAW,GAAG,MAAM,GAAG,MAAM;AAC/D,MAAM,SAAS,GAAG,OAAO,QAAQ,KAAK,WAAW,GAAG,QAAQ,GAAG,CAAA,CAAE;AAEjE,SAAQ,OAAO,IAAI,MAAM,EAAE,OAAO,IAAI,MAAM,EAAE,SAAS,IAAI,QAAQ;AAEnE;;;;AAIG;AACH,IAAI,gBAAgB,GAAG,KAAK;AAE5B;AACA,IAAI;EACF,MAAM,OAAO,GAAG;IACd;IACA;IACA,IAAI,OAAO,GAAA;MACT,gBAAgB,GAAG,IAAI;MACvB,OAAO,IAAI;IACb;GACD;EAED,OAAO,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC;EAC/C,OAAO,CAAC,mBAAmB,CAAC,MAAM,EAAE,IAAI,CAAC;CAC1C,CAAC,OAAO,GAAG,EAAE;EACZ,gBAAgB,GAAG,KAAK;AACzB;AAED,SAAQ,gBAAgB","sourceRoot":"","sourcesContent":["// Purpose: include this in your module to avoids adding dependencies on\n// micro modules like 'global'\n/* global window, global, document, navigator */\nexport const userAgent = typeof navigator !== 'undefined' && navigator.userAgent ? navigator.userAgent.toLowerCase() : '';\nconst window_ = typeof window !== 'undefined' ? window : global;\nconst global_ = typeof global !== 'undefined' ? global : window;\nconst document_ = typeof document !== 'undefined' ? document : {};\nexport { window_ as window, global_ as global, document_ as document };\n/*\n * Detect whether passive option is supported by the current browser.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   #Safely_detecting_option_support\n */\nlet passiveSupported = false;\n/* eslint-disable accessor-pairs, no-empty */\ntry {\n    const options = {\n        // This function will be called when the browser\n        // attempts to access the passive property.\n        get passive() {\n            passiveSupported = true;\n            return true;\n        }\n    };\n    window_.addEventListener('test', null, options);\n    window_.removeEventListener('test', null);\n}\ncatch (err) {\n    passiveSupported = false;\n}\nexport { passiveSupported };\n//# sourceMappingURL=globals.js.map"]},"metadata":{},"sourceType":"module"}
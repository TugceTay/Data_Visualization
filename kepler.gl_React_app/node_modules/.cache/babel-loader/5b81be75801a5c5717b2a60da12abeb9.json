{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\nvar _templateObject, _templateObject2;\n\n/** @typedef {import('./progress-bar').ProgressBarProps} ProgressBarProps */\nvar StyledBar = _styledComponents[\"default\"].span.attrs({\n  className: 'progress-bar__bar'\n})(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  background-color: \", \";\\n  /* transition: width 200ms; */\\n  display: block;\\n\"])), function (props) {\n  return props.barColor || props.theme.progressBarColor;\n});\nvar StyledTrack = _styledComponents[\"default\"].div.attrs({\n  className: 'progress-bar'\n})(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  background-color: \", \";\\n\"])), function (props) {\n  return props.trackColor || props.theme.progressBarTrackColor;\n});\n/** @type {React.FunctionComponent<ProgressBarProps>} */\n\nvar ProgressBar = function ProgressBar(_ref) {\n  var percent = _ref.percent,\n    _ref$height = _ref.height,\n    height = _ref$height === void 0 ? 4 : _ref$height,\n    isLoading = _ref.isLoading,\n    barColor = _ref.barColor,\n    trackColor = _ref.trackColor,\n    theme = _ref.theme;\n  return /*#__PURE__*/_react[\"default\"].createElement(StyledTrack, {\n    trackColor: trackColor,\n    theme: theme\n  }, /*#__PURE__*/_react[\"default\"].createElement(StyledBar, {\n    barColor: barColor,\n    style: {\n      width: percent,\n      height: \"\".concat(height, \"px\"),\n      opacity: isLoading ? 1 : 0\n    }\n  }));\n};\nvar _default = ProgressBar;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../src/components/common/progress-bar.js"],"names":["StyledBar","span","attrs","className","props","barColor","theme","progressBarColor","StyledTrack","div","trackColor","progressBarTrackColor","ProgressBar","percent","height","isLoading","width","opacity"],"mappings":";;;;;;;;AAoBA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;AACA,IAAA,iBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;;;AAEA;AAEA,IAAMA,SAAS,GAAG,iBAAA,CAAA,SAAA,CAAA,CAAOC,IAAP,CAAYC,KAAZ,CAAkB;EAClCC,SAAS,EAAE;AADuB,CAAlB,CAAH,CAAA,eAAA,KAAA,eAAA,GAAA,CAAA,CAAA,EAAA,uBAAA,CAAA,SAAA,CAAA,EAAA,CAAA,wBAAA,EAAA,0DAAA,CAAA,CAAA,CAAA,EAGO,UAAA,KAAK,EAAA;EAAA,OAAIC,KAAK,CAACC,QAAND,IAAkBA,KAAK,CAACE,KAANF,CAAYG,gBAAlC;AAAA,CAHZ,CAAf;AAOA,IAAMC,WAAW,GAAG,iBAAA,CAAA,SAAA,CAAA,CAAOC,GAAP,CAAWP,KAAX,CAAiB;EACnCC,SAAS,EAAE;AADwB,CAAjB,CAAH,CAAA,gBAAA,KAAA,gBAAA,GAAA,CAAA,CAAA,EAAA,uBAAA,CAAA,SAAA,CAAA,EAAA,CAAA,wBAAA,EAAA,KAAA,CAAA,CAAA,CAAA,EAGK,UAAA,KAAK,EAAA;EAAA,OAAIC,KAAK,CAACM,UAANN,IAAoBA,KAAK,CAACE,KAANF,CAAYO,qBAApC;AAAA,CAHV,CAAjB;AAMA;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAA,IAAA,EAAA;EAAA,IAAEC,OAAF,GAAA,IAAA,CAAEA,OAAF;IAAA,WAAA,GAAA,IAAA,CAAWC,MAAX;IAAWA,MAAX,GAAA,WAAA,KAAA,KAAA,CAAA,GAAoB,CAApB,GAAA,WAAA;IAAuBC,SAAvB,GAAA,IAAA,CAAuBA,SAAvB;IAAkCV,QAAlC,GAAA,IAAA,CAAkCA,QAAlC;IAA4CK,UAA5C,GAAA,IAAA,CAA4CA,UAA5C;IAAwDJ,KAAxD,GAAA,IAAA,CAAwDA,KAAxD;EAAA,OAAA,aAClB,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,WAAD,EAAA;IAAa,UAAU,EAAEI,UAAzB;IAAqC,KAAK,EAAEJ;EAA5C,CAAA,EAAA,aACE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,SAAD,EAAA;IACE,QAAQ,EAAED,QADZ;IAEE,KAAK,EAAE;MAACW,KAAK,EAAEH,OAAR;MAAiBC,MAAM,EAAA,EAAA,CAAA,MAAA,CAAKA,MAAL,EAAA,IAAA,CAAvB;MAAwCG,OAAO,EAAEF,SAAS,GAAG,CAAH,GAAO;IAAjE;EAFT,CAAA,CADF,CADkB;AAAA,CAApB;eASeH,W","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React from 'react';\nimport styled from 'styled-components';\n\n/** @typedef {import('./progress-bar').ProgressBarProps} ProgressBarProps */\n\nconst StyledBar = styled.span.attrs({\n  className: 'progress-bar__bar'\n})`\n  background-color: ${props => props.barColor || props.theme.progressBarColor};\n  /* transition: width 200ms; */\n  display: block;\n`;\nconst StyledTrack = styled.div.attrs({\n  className: 'progress-bar'\n})`\n  background-color: ${props => props.trackColor || props.theme.progressBarTrackColor};\n`;\n\n/** @type {React.FunctionComponent<ProgressBarProps>} */\nconst ProgressBar = ({percent, height = 4, isLoading, barColor, trackColor, theme}) => (\n  <StyledTrack trackColor={trackColor} theme={theme}>\n    <StyledBar\n      barColor={barColor}\n      style={{width: percent, height: `${height}px`, opacity: isLoading ? 1 : 0}}\n    />\n  </StyledTrack>\n);\n\nexport default ProgressBar;\n"]},"metadata":{},"sourceType":"script"}
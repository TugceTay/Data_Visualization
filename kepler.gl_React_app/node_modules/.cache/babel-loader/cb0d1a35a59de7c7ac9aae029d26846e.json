{"ast":null,"code":"function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nimport assert from '../utils/assert';\nimport GLTFScenegraph from '../gltf-scenegraph';\nimport { KHR_LIGHTS_PUNCTUAL } from '../gltf-constants';\nexport function decode(gltfData, options) {\n  var gltfScenegraph = new GLTFScenegraph(gltfData);\n  var json = gltfScenegraph.json;\n  var extension = gltfScenegraph.getExtension(KHR_LIGHTS_PUNCTUAL);\n  if (extension) {\n    gltfScenegraph.json.lights = extension.lights;\n    gltfScenegraph.removeExtension(KHR_LIGHTS_PUNCTUAL);\n  }\n  var _iterator = _createForOfIteratorHelper(json.nodes || []),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var node = _step.value;\n      var nodeExtension = gltfScenegraph.getObjectExtension(node, KHR_LIGHTS_PUNCTUAL);\n      if (nodeExtension) {\n        node.light = nodeExtension.light;\n      }\n      gltfScenegraph.removeObjectExtension(node, KHR_LIGHTS_PUNCTUAL);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\nexport function encode(gltfData, options) {\n  var gltfScenegraph = new GLTFScenegraph(gltfData);\n  var json = gltfScenegraph.json;\n  if (json.lights) {\n    var extension = gltfScenegraph.addExtension(KHR_LIGHTS_PUNCTUAL);\n    assert(!extension.lights);\n    extension.lights = json.lights;\n    delete json.lights;\n  }\n  if (gltfScenegraph.json.lights) {\n    var _iterator2 = _createForOfIteratorHelper(gltfScenegraph.json.lights),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var light = _step2.value;\n        var node = light.node;\n        gltfScenegraph.addObjectExtension(node, KHR_LIGHTS_PUNCTUAL, light);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    delete gltfScenegraph.json.lights;\n  }\n}","map":{"version":3,"sources":["../../../../src/lib/extensions/KHR_lights_punctual.js"],"names":["assert","GLTFScenegraph","KHR_LIGHTS_PUNCTUAL","decode","gltfData","options","gltfScenegraph","json","extension","getExtension","lights","removeExtension","node","nodes","nodeExtension","getObjectExtension","light","removeObjectExtension","encode","addExtension","addObjectExtension"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,OAAOA,MAAP,MAAmB,iBAAnB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,SAAQC,mBAAR,QAAkC,mBAAlC;AAEA,OAAO,SAASC,MAAT,CAAgBC,QAAhB,EAA0BC,OAA1B,EAAmC;EACxC,IAAMC,cAAc,GAAG,IAAIL,cAAJ,CAAmBG,QAAnB,CAAvB;EADwC,IAEjCG,IAFiC,GAEzBD,cAFyB,CAEjCC,IAFiC;EAKxC,IAAMC,SAAS,GAAGF,cAAc,CAACG,YAAfH,CAA4BJ,mBAA5BI,CAAlB;EACA,IAAIE,SAAJ,EAAe;IAEbF,cAAc,CAACC,IAAfD,CAAoBI,MAApBJ,GAA6BE,SAAS,CAACE,MAAvCJ;IACAA,cAAc,CAACK,eAAfL,CAA+BJ,mBAA/BI,CAAAA;EACD;EAVuC,IAAA,SAAA,GAAA,0BAAA,CAcrBC,IAAI,CAACM,KAALN,IAAc,EAdO,CAAA;IAAA,KAAA;EAAA,IAAA;IAcxC,KAAA,SAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,KAAA,GAAA,SAAA,CAAA,CAAA,EAAA,EAAA,IAAA,GAAqC;MAAA,IAA1BK,IAA0B,GAAA,KAAA,CAAA,KAAA;MACnC,IAAME,aAAa,GAAGR,cAAc,CAACS,kBAAfT,CAAkCM,IAAlCN,EAAwCJ,mBAAxCI,CAAtB;MACA,IAAIQ,aAAJ,EAAmB;QAEjBF,IAAI,CAACI,KAALJ,GAAaE,aAAa,CAACE,KAA3BJ;MACD;MACDN,cAAc,CAACW,qBAAfX,CAAqCM,IAArCN,EAA2CJ,mBAA3CI,CAAAA;IACD;EArBuC,CAAA,CAAA,OAAA,GAAA,EAAA;IAAA,SAAA,CAAA,CAAA,CAAA,GAAA,CAAA;EAAA,CAAA,SAAA;IAAA,SAAA,CAAA,CAAA,EAAA;EAAA;AAsBzC;AAGD,OAAO,SAASY,MAAT,CAAgBd,QAAhB,EAA0BC,OAA1B,EAAmC;EACxC,IAAMC,cAAc,GAAG,IAAIL,cAAJ,CAAmBG,QAAnB,CAAvB;EADwC,IAEjCG,IAFiC,GAEzBD,cAFyB,CAEjCC,IAFiC;EAIxC,IAAIA,IAAI,CAACG,MAAT,EAAiB;IACf,IAAMF,SAAS,GAAGF,cAAc,CAACa,YAAfb,CAA4BJ,mBAA5BI,CAAlB;IAEAN,MAAM,CAAC,CAACQ,SAAS,CAACE,MAAZ,CAANV;IAEAQ,SAAS,CAACE,MAAVF,GAAmBD,IAAI,CAACG,MAAxBF;IACA,OAAOD,IAAI,CAACG,MAAZ;EACD;EAID,IAAIJ,cAAc,CAACC,IAAfD,CAAoBI,MAAxB,EAAgC;IAAA,IAAA,UAAA,GAAA,0BAAA,CACVJ,cAAc,CAACC,IAAfD,CAAoBI,MADV,CAAA;MAAA,MAAA;IAAA,IAAA;MAC9B,KAAA,UAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,MAAA,GAAA,UAAA,CAAA,CAAA,EAAA,EAAA,IAAA,GAAgD;QAAA,IAArCM,KAAqC,GAAA,MAAA,CAAA,KAAA;QAC9C,IAAMJ,IAAI,GAAGI,KAAK,CAACJ,IAAnB;QACAN,cAAc,CAACc,kBAAfd,CAAkCM,IAAlCN,EAAwCJ,mBAAxCI,EAA6DU,KAA7DV,CAAAA;MACD;IAJ6B,CAAA,CAAA,OAAA,GAAA,EAAA;MAAA,UAAA,CAAA,CAAA,CAAA,GAAA,CAAA;IAAA,CAAA,SAAA;MAAA,UAAA,CAAA,CAAA,EAAA;IAAA;IAK9B,OAAOA,cAAc,CAACC,IAAfD,CAAoBI,MAA3B;EACD;AACF","sourcesContent":["// GLTF EXTENSION: KHR_lights_punctual\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n\nimport assert from '../utils/assert';\nimport GLTFScenegraph from '../gltf-scenegraph';\nimport {KHR_LIGHTS_PUNCTUAL} from '../gltf-constants';\n\nexport function decode(gltfData, options) {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  // Move the light array out of the extension and remove the extension\n  const extension = gltfScenegraph.getExtension(KHR_LIGHTS_PUNCTUAL);\n  if (extension) {\n    // @ts-ignore\n    gltfScenegraph.json.lights = extension.lights;\n    gltfScenegraph.removeExtension(KHR_LIGHTS_PUNCTUAL);\n  }\n\n  // Any nodes that have the extension, add lights field pointing to light object\n  // and remove the extension\n  for (const node of json.nodes || []) {\n    const nodeExtension = gltfScenegraph.getObjectExtension(node, KHR_LIGHTS_PUNCTUAL);\n    if (nodeExtension) {\n      // @ts-ignore\n      node.light = nodeExtension.light;\n    }\n    gltfScenegraph.removeObjectExtension(node, KHR_LIGHTS_PUNCTUAL);\n  }\n}\n\n// Move the light ar ray out of the extension and remove the extension\nexport function encode(gltfData, options) {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  if (json.lights) {\n    const extension = gltfScenegraph.addExtension(KHR_LIGHTS_PUNCTUAL);\n    // @ts-ignore\n    assert(!extension.lights);\n    // @ts-ignore\n    extension.lights = json.lights;\n    delete json.lights;\n  }\n\n  // Any nodes that have lights field pointing to light object\n  // add the extension\n  if (gltfScenegraph.json.lights) {\n    for (const light of gltfScenegraph.json.lights) {\n      const node = light.node;\n      gltfScenegraph.addObjectExtension(node, KHR_LIGHTS_PUNCTUAL, light);\n    }\n    delete gltfScenegraph.json.lights;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
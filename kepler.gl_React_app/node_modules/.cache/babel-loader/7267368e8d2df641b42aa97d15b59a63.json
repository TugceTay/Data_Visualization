{"ast":null,"code":"// This file is autogenerated. It's used to publish CJS to npm.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.tinycolor = factory());\n})(this, function () {\n  'use strict';\n\n  // https://github.com/bgrins/TinyColor\n  // Brian Grinstead, MIT License\n  const trimLeft = /^\\s+/;\n  const trimRight = /\\s+$/;\n  function tinycolor(color, opts) {\n    color = color ? color : \"\";\n    opts = opts || {};\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n      return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n      return new tinycolor(color, opts);\n    }\n    var rgb = inputToRGB(color);\n    this._originalInput = color, this._r = rgb.r, this._g = rgb.g, this._b = rgb.b, this._a = rgb.a, this._roundA = Math.round(100 * this._a) / 100, this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) this._r = Math.round(this._r);\n    if (this._g < 1) this._g = Math.round(this._g);\n    if (this._b < 1) this._b = Math.round(this._b);\n    this._ok = rgb.ok;\n  }\n  tinycolor.prototype = {\n    isDark: function () {\n      return this.getBrightness() < 128;\n    },\n    isLight: function () {\n      return !this.isDark();\n    },\n    isValid: function () {\n      return this._ok;\n    },\n    getOriginalInput: function () {\n      return this._originalInput;\n    },\n    getFormat: function () {\n      return this._format;\n    },\n    getAlpha: function () {\n      return this._a;\n    },\n    getBrightness: function () {\n      //http://www.w3.org/TR/AERT#color-contrast\n      var rgb = this.toRgb();\n      return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function () {\n      //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n      var rgb = this.toRgb();\n      var RsRGB, GsRGB, BsRGB, R, G, B;\n      RsRGB = rgb.r / 255;\n      GsRGB = rgb.g / 255;\n      BsRGB = rgb.b / 255;\n      if (RsRGB <= 0.03928) R = RsRGB / 12.92;else R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\n      if (GsRGB <= 0.03928) G = GsRGB / 12.92;else G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\n      if (BsRGB <= 0.03928) B = BsRGB / 12.92;else B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\n      return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n    },\n    setAlpha: function (value) {\n      this._a = boundAlpha(value);\n      this._roundA = Math.round(100 * this._a) / 100;\n      return this;\n    },\n    toHsv: function () {\n      var hsv = rgbToHsv(this._r, this._g, this._b);\n      return {\n        h: hsv.h * 360,\n        s: hsv.s,\n        v: hsv.v,\n        a: this._a\n      };\n    },\n    toHsvString: function () {\n      var hsv = rgbToHsv(this._r, this._g, this._b);\n      var h = Math.round(hsv.h * 360),\n        s = Math.round(hsv.s * 100),\n        v = Math.round(hsv.v * 100);\n      return this._a == 1 ? \"hsv(\" + h + \", \" + s + \"%, \" + v + \"%)\" : \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \" + this._roundA + \")\";\n    },\n    toHsl: function () {\n      var hsl = rgbToHsl(this._r, this._g, this._b);\n      return {\n        h: hsl.h * 360,\n        s: hsl.s,\n        l: hsl.l,\n        a: this._a\n      };\n    },\n    toHslString: function () {\n      var hsl = rgbToHsl(this._r, this._g, this._b);\n      var h = Math.round(hsl.h * 360),\n        s = Math.round(hsl.s * 100),\n        l = Math.round(hsl.l * 100);\n      return this._a == 1 ? \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\" : \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \" + this._roundA + \")\";\n    },\n    toHex: function (allow3Char) {\n      return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function (allow3Char) {\n      return \"#\" + this.toHex(allow3Char);\n    },\n    toHex8: function (allow4Char) {\n      return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function (allow4Char) {\n      return \"#\" + this.toHex8(allow4Char);\n    },\n    toRgb: function () {\n      return {\n        r: Math.round(this._r),\n        g: Math.round(this._g),\n        b: Math.round(this._b),\n        a: this._a\n      };\n    },\n    toRgbString: function () {\n      return this._a == 1 ? \"rgb(\" + Math.round(this._r) + \", \" + Math.round(this._g) + \", \" + Math.round(this._b) + \")\" : \"rgba(\" + Math.round(this._r) + \", \" + Math.round(this._g) + \", \" + Math.round(this._b) + \", \" + this._roundA + \")\";\n    },\n    toPercentageRgb: function () {\n      return {\n        r: Math.round(bound01(this._r, 255) * 100) + \"%\",\n        g: Math.round(bound01(this._g, 255) * 100) + \"%\",\n        b: Math.round(bound01(this._b, 255) * 100) + \"%\",\n        a: this._a\n      };\n    },\n    toPercentageRgbString: function () {\n      return this._a == 1 ? \"rgb(\" + Math.round(bound01(this._r, 255) * 100) + \"%, \" + Math.round(bound01(this._g, 255) * 100) + \"%, \" + Math.round(bound01(this._b, 255) * 100) + \"%)\" : \"rgba(\" + Math.round(bound01(this._r, 255) * 100) + \"%, \" + Math.round(bound01(this._g, 255) * 100) + \"%, \" + Math.round(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n    },\n    toName: function () {\n      if (this._a === 0) {\n        return \"transparent\";\n      }\n      if (this._a < 1) {\n        return false;\n      }\n      return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function (secondColor) {\n      var hex8String = \"#\" + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n      var secondHex8String = hex8String;\n      var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n      if (secondColor) {\n        var s = tinycolor(secondColor);\n        secondHex8String = \"#\" + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n      }\n      return \"progid:DXImageTransform.Microsoft.gradient(\" + gradientType + \"startColorstr=\" + hex8String + \",endColorstr=\" + secondHex8String + \")\";\n    },\n    toString: function (format) {\n      var formatSet = !!format;\n      format = format || this._format;\n      var formattedString = false;\n      var hasAlpha = this._a < 1 && this._a >= 0;\n      var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n      if (needsAlphaFormat) {\n        // Special case for \"transparent\", all other non-alpha formats\n        // will return rgba when there is transparency.\n        if (format === \"name\" && this._a === 0) {\n          return this.toName();\n        }\n        return this.toRgbString();\n      }\n      if (format === \"rgb\") {\n        formattedString = this.toRgbString();\n      }\n      if (format === \"prgb\") {\n        formattedString = this.toPercentageRgbString();\n      }\n      if (format === \"hex\" || format === \"hex6\") {\n        formattedString = this.toHexString();\n      }\n      if (format === \"hex3\") {\n        formattedString = this.toHexString(true);\n      }\n      if (format === \"hex4\") {\n        formattedString = this.toHex8String(true);\n      }\n      if (format === \"hex8\") {\n        formattedString = this.toHex8String();\n      }\n      if (format === \"name\") {\n        formattedString = this.toName();\n      }\n      if (format === \"hsl\") {\n        formattedString = this.toHslString();\n      }\n      if (format === \"hsv\") {\n        formattedString = this.toHsvString();\n      }\n      return formattedString || this.toHexString();\n    },\n    clone: function () {\n      return tinycolor(this.toString());\n    },\n    _applyModification: function (fn, args) {\n      var color = fn.apply(null, [this].concat([].slice.call(args)));\n      this._r = color._r;\n      this._g = color._g;\n      this._b = color._b;\n      this.setAlpha(color._a);\n      return this;\n    },\n    lighten: function () {\n      return this._applyModification(lighten, arguments);\n    },\n    brighten: function () {\n      return this._applyModification(brighten, arguments);\n    },\n    darken: function () {\n      return this._applyModification(darken, arguments);\n    },\n    desaturate: function () {\n      return this._applyModification(desaturate, arguments);\n    },\n    saturate: function () {\n      return this._applyModification(saturate, arguments);\n    },\n    greyscale: function () {\n      return this._applyModification(greyscale, arguments);\n    },\n    spin: function () {\n      return this._applyModification(spin, arguments);\n    },\n    _applyCombination: function (fn, args) {\n      return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function () {\n      return this._applyCombination(analogous, arguments);\n    },\n    complement: function () {\n      return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function () {\n      return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function () {\n      return this._applyCombination(splitcomplement, arguments);\n    },\n    // Disabled until https://github.com/bgrins/TinyColor/issues/254\n    // polyad: function (number) {\n    //   return this._applyCombination(polyad, [number]);\n    // },\n    triad: function () {\n      return this._applyCombination(polyad, [3]);\n    },\n    tetrad: function () {\n      return this._applyCombination(polyad, [4]);\n    }\n  };\n\n  // If input is an object, force 1 into \"1.0\" to handle ratios properly\n  // String input requires \"1.0\" as input, so 1 will be treated as 1\n  tinycolor.fromRatio = function (color, opts) {\n    if (typeof color == \"object\") {\n      var newColor = {};\n      for (var i in color) {\n        if (color.hasOwnProperty(i)) {\n          if (i === \"a\") {\n            newColor[i] = color[i];\n          } else {\n            newColor[i] = convertToPercentage(color[i]);\n          }\n        }\n      }\n      color = newColor;\n    }\n    return tinycolor(color, opts);\n  };\n\n  // Given a string or object, convert that input to RGB\n  // Possible string inputs:\n  //\n  //     \"red\"\n  //     \"#f00\" or \"f00\"\n  //     \"#ff0000\" or \"ff0000\"\n  //     \"#ff000000\" or \"ff000000\"\n  //     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n  //     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n  //     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n  //     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n  //     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n  //     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n  //     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n  //\n  function inputToRGB(color) {\n    var rgb = {\n      r: 0,\n      g: 0,\n      b: 0\n    };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n    if (typeof color == \"string\") {\n      color = stringInputToObject(color);\n    }\n    if (typeof color == \"object\") {\n      if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n        rgb = rgbToRgb(color.r, color.g, color.b);\n        ok = true;\n        format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n      } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n        s = convertToPercentage(color.s);\n        v = convertToPercentage(color.v);\n        rgb = hsvToRgb(color.h, s, v);\n        ok = true;\n        format = \"hsv\";\n      } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n        s = convertToPercentage(color.s);\n        l = convertToPercentage(color.l);\n        rgb = hslToRgb(color.h, s, l);\n        ok = true;\n        format = \"hsl\";\n      }\n      if (color.hasOwnProperty(\"a\")) {\n        a = color.a;\n      }\n    }\n    a = boundAlpha(a);\n    return {\n      ok: ok,\n      format: color.format || format,\n      r: Math.min(255, Math.max(rgb.r, 0)),\n      g: Math.min(255, Math.max(rgb.g, 0)),\n      b: Math.min(255, Math.max(rgb.b, 0)),\n      a: a\n    };\n  }\n\n  // Conversion Functions\n  // --------------------\n\n  // `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n  // <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n  // `rgbToRgb`\n  // Handle bounds / percentage checking to conform to CSS color spec\n  // <http://www.w3.org/TR/css3-color/>\n  // *Assumes:* r, g, b in [0, 255] or [0, 1]\n  // *Returns:* { r, g, b } in [0, 255]\n  function rgbToRgb(r, g, b) {\n    return {\n      r: bound01(r, 255) * 255,\n      g: bound01(g, 255) * 255,\n      b: bound01(b, 255) * 255\n    };\n  }\n\n  // `rgbToHsl`\n  // Converts an RGB color value to HSL.\n  // *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n  // *Returns:* { h, s, l } in [0,1]\n  function rgbToHsl(r, g, b) {\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n    var max = Math.max(r, g, b),\n      min = Math.min(r, g, b);\n    var h,\n      s,\n      l = (max + min) / 2;\n    if (max == min) {\n      h = s = 0; // achromatic\n    } else {\n      var d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n        case g:\n          h = (b - r) / d + 2;\n          break;\n        case b:\n          h = (r - g) / d + 4;\n          break;\n      }\n      h /= 6;\n    }\n    return {\n      h: h,\n      s: s,\n      l: l\n    };\n  }\n\n  // `hslToRgb`\n  // Converts an HSL color value to RGB.\n  // *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n  // *Returns:* { r, g, b } in the set [0, 255]\n  function hslToRgb(h, s, l) {\n    var r, g, b;\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n    function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n      return p;\n    }\n    if (s === 0) {\n      r = g = b = l; // achromatic\n    } else {\n      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      var p = 2 * l - q;\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n    return {\n      r: r * 255,\n      g: g * 255,\n      b: b * 255\n    };\n  }\n\n  // `rgbToHsv`\n  // Converts an RGB color value to HSV\n  // *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n  // *Returns:* { h, s, v } in [0,1]\n  function rgbToHsv(r, g, b) {\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n    var max = Math.max(r, g, b),\n      min = Math.min(r, g, b);\n    var h,\n      s,\n      v = max;\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n    if (max == min) {\n      h = 0; // achromatic\n    } else {\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n        case g:\n          h = (b - r) / d + 2;\n          break;\n        case b:\n          h = (r - g) / d + 4;\n          break;\n      }\n      h /= 6;\n    }\n    return {\n      h: h,\n      s: s,\n      v: v\n    };\n  }\n\n  // `hsvToRgb`\n  // Converts an HSV color value to RGB.\n  // *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n  // *Returns:* { r, g, b } in the set [0, 255]\n  function hsvToRgb(h, s, v) {\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n    var i = Math.floor(h),\n      f = h - i,\n      p = v * (1 - s),\n      q = v * (1 - f * s),\n      t = v * (1 - (1 - f) * s),\n      mod = i % 6,\n      r = [v, q, p, p, t, v][mod],\n      g = [t, v, v, q, p, p][mod],\n      b = [p, p, t, v, v, q][mod];\n    return {\n      r: r * 255,\n      g: g * 255,\n      b: b * 255\n    };\n  }\n\n  // `rgbToHex`\n  // Converts an RGB color to hex\n  // Assumes r, g, and b are contained in the set [0, 255]\n  // Returns a 3 or 6 character hex\n  function rgbToHex(r, g, b, allow3Char) {\n    var hex = [pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16))];\n\n    // Return a 3 character hex if possible\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n      return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n    return hex.join(\"\");\n  }\n\n  // `rgbaToHex`\n  // Converts an RGBA color plus alpha transparency to hex\n  // Assumes r, g, b are contained in the set [0, 255] and\n  // a in [0, 1]. Returns a 4 or 8 character rgba hex\n  function rgbaToHex(r, g, b, a, allow4Char) {\n    var hex = [pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16)), pad2(convertDecimalToHex(a))];\n\n    // Return a 4 character hex if possible\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n      return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n    return hex.join(\"\");\n  }\n\n  // `rgbaToArgbHex`\n  // Converts an RGBA color to an ARGB Hex8 string\n  // Rarely used, but required for \"toFilter()\"\n  function rgbaToArgbHex(r, g, b, a) {\n    var hex = [pad2(convertDecimalToHex(a)), pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16))];\n    return hex.join(\"\");\n  }\n\n  // `equals`\n  // Can be called with any tinycolor input\n  tinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) return false;\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n  };\n  tinycolor.random = function () {\n    return tinycolor.fromRatio({\n      r: Math.random(),\n      g: Math.random(),\n      b: Math.random()\n    });\n  };\n\n  // Modification Functions\n  // ----------------------\n  // Thanks to less.js for some of the basics here\n  // <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\n  function desaturate(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n  }\n  function saturate(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n  }\n  function greyscale(color) {\n    return tinycolor(color).desaturate(100);\n  }\n  function lighten(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n  }\n  function brighten(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));\n    rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));\n    rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));\n    return tinycolor(rgb);\n  }\n  function darken(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n  }\n\n  // Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n  // Values outside of this range will be wrapped into this range.\n  function spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n  }\n\n  // Combination Functions\n  // ---------------------\n  // Thanks to jQuery xColor for some of the ideas behind these\n  // <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\n  function complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n  }\n  function polyad(color, number) {\n    if (isNaN(number) || number <= 0) {\n      throw new Error(\"Argument to polyad must be a positive number\");\n    }\n    var hsl = tinycolor(color).toHsl();\n    var result = [tinycolor(color)];\n    var step = 360 / number;\n    for (var i = 1; i < number; i++) {\n      result.push(tinycolor({\n        h: (hsl.h + i * step) % 360,\n        s: hsl.s,\n        l: hsl.l\n      }));\n    }\n    return result;\n  }\n  function splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [tinycolor(color), tinycolor({\n      h: (h + 72) % 360,\n      s: hsl.s,\n      l: hsl.l\n    }), tinycolor({\n      h: (h + 216) % 360,\n      s: hsl.s,\n      l: hsl.l\n    })];\n  }\n  function analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n    for (hsl.h = (hsl.h - (part * results >> 1) + 720) % 360; --results;) {\n      hsl.h = (hsl.h + part) % 360;\n      ret.push(tinycolor(hsl));\n    }\n    return ret;\n  }\n  function monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h,\n      s = hsv.s,\n      v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n    while (results--) {\n      ret.push(tinycolor({\n        h: h,\n        s: s,\n        v: v\n      }));\n      v = (v + modification) % 1;\n    }\n    return ret;\n  }\n\n  // Utility Functions\n  // ---------------------\n\n  tinycolor.mix = function (color1, color2, amount) {\n    amount = amount === 0 ? 0 : amount || 50;\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n    var p = amount / 100;\n    var rgba = {\n      r: (rgb2.r - rgb1.r) * p + rgb1.r,\n      g: (rgb2.g - rgb1.g) * p + rgb1.g,\n      b: (rgb2.b - rgb1.b) * p + rgb1.b,\n      a: (rgb2.a - rgb1.a) * p + rgb1.a\n    };\n    return tinycolor(rgba);\n  };\n\n  // Readability Functions\n  // ---------------------\n  // <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n  // `contrast`\n  // Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\n  tinycolor.readability = function (color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(), c2.getLuminance()) + 0.05) / (Math.min(c1.getLuminance(), c2.getLuminance()) + 0.05);\n  };\n\n  // `isReadable`\n  // Ensure that foreground and background color combinations meet WCAG2 guidelines.\n  // The third argument is an optional Object.\n  //      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n  //      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n  // If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n  // *Example*\n  //    tinycolor.isReadable(\"#000\", \"#111\") => false\n  //    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\n  tinycolor.isReadable = function (color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n    out = false;\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n      case \"AAsmall\":\n      case \"AAAlarge\":\n        out = readability >= 4.5;\n        break;\n      case \"AAlarge\":\n        out = readability >= 3;\n        break;\n      case \"AAAsmall\":\n        out = readability >= 7;\n        break;\n    }\n    return out;\n  };\n\n  // `mostReadable`\n  // Given a base color and a list of possible foreground or background\n  // colors for that base, returns the most readable color.\n  // Optionally returns Black or White if the most readable color is unreadable.\n  // *Example*\n  //    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n  //    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n  //    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n  //    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\n  tinycolor.mostReadable = function (baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors;\n    level = args.level;\n    size = args.size;\n    for (var i = 0; i < colorList.length; i++) {\n      readability = tinycolor.readability(baseColor, colorList[i]);\n      if (readability > bestScore) {\n        bestScore = readability;\n        bestColor = tinycolor(colorList[i]);\n      }\n    }\n    if (tinycolor.isReadable(baseColor, bestColor, {\n      level: level,\n      size: size\n    }) || !includeFallbackColors) {\n      return bestColor;\n    } else {\n      args.includeFallbackColors = false;\n      return tinycolor.mostReadable(baseColor, [\"#fff\", \"#000\"], args);\n    }\n  };\n\n  // Big List of Colors\n  // ------------------\n  // <https://www.w3.org/TR/css-color-4/#named-colors>\n  var names = tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\"\n  };\n\n  // Make it easy to access colors via `hexNames[hex]`\n  var hexNames = tinycolor.hexNames = flip(names);\n\n  // Utilities\n  // ---------\n\n  // `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\n  function flip(o) {\n    var flipped = {};\n    for (var i in o) {\n      if (o.hasOwnProperty(i)) {\n        flipped[o[i]] = i;\n      }\n    }\n    return flipped;\n  }\n\n  // Return a valid alpha value [0,1] with all invalid values being set to 1\n  function boundAlpha(a) {\n    a = parseFloat(a);\n    if (isNaN(a) || a < 0 || a > 1) {\n      a = 1;\n    }\n    return a;\n  }\n\n  // Take input from [0, n] and return it as [0, 1]\n  function bound01(n, max) {\n    if (isOnePointZero(n)) n = \"100%\";\n    var processPercent = isPercentage(n);\n    n = Math.min(max, Math.max(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n      n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if (Math.abs(n - max) < 0.000001) {\n      return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return n % max / parseFloat(max);\n  }\n\n  // Force a number between 0 and 1\n  function clamp01(val) {\n    return Math.min(1, Math.max(0, val));\n  }\n\n  // Parse a base-16 hex value into a base-10 integer\n  function parseIntFromHex(val) {\n    return parseInt(val, 16);\n  }\n\n  // Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n  // <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\n  function isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf(\".\") != -1 && parseFloat(n) === 1;\n  }\n\n  // Check to see if string passed in is a percentage\n  function isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf(\"%\") != -1;\n  }\n\n  // Force a hex value to have 2 characters\n  function pad2(c) {\n    return c.length == 1 ? \"0\" + c : \"\" + c;\n  }\n\n  // Replace a decimal with it's percentage value\n  function convertToPercentage(n) {\n    if (n <= 1) {\n      n = n * 100 + \"%\";\n    }\n    return n;\n  }\n\n  // Converts a decimal to a hex value\n  function convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n  }\n  // Converts a hex value to a decimal\n  function convertHexToDecimal(h) {\n    return parseIntFromHex(h) / 255;\n  }\n  var matchers = function () {\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    return {\n      CSS_UNIT: new RegExp(CSS_UNIT),\n      rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n      rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n      hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n      hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n      hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n      hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n      hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n      hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n      hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n      hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n  }();\n\n  // `isValidCSSUnit`\n  // Take in a single string / number and check to see if it looks like a CSS unit\n  // (see `matchers` above for definition).\n  function isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n  }\n\n  // `stringInputToObject`\n  // Permissive string parsing.  Take in a number of formats, and output an object\n  // based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\n  function stringInputToObject(color) {\n    color = color.replace(trimLeft, \"\").replace(trimRight, \"\").toLowerCase();\n    var named = false;\n    if (names[color]) {\n      color = names[color];\n      named = true;\n    } else if (color == \"transparent\") {\n      return {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 0,\n        format: \"name\"\n      };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if (match = matchers.rgb.exec(color)) {\n      return {\n        r: match[1],\n        g: match[2],\n        b: match[3]\n      };\n    }\n    if (match = matchers.rgba.exec(color)) {\n      return {\n        r: match[1],\n        g: match[2],\n        b: match[3],\n        a: match[4]\n      };\n    }\n    if (match = matchers.hsl.exec(color)) {\n      return {\n        h: match[1],\n        s: match[2],\n        l: match[3]\n      };\n    }\n    if (match = matchers.hsla.exec(color)) {\n      return {\n        h: match[1],\n        s: match[2],\n        l: match[3],\n        a: match[4]\n      };\n    }\n    if (match = matchers.hsv.exec(color)) {\n      return {\n        h: match[1],\n        s: match[2],\n        v: match[3]\n      };\n    }\n    if (match = matchers.hsva.exec(color)) {\n      return {\n        h: match[1],\n        s: match[2],\n        v: match[3],\n        a: match[4]\n      };\n    }\n    if (match = matchers.hex8.exec(color)) {\n      return {\n        r: parseIntFromHex(match[1]),\n        g: parseIntFromHex(match[2]),\n        b: parseIntFromHex(match[3]),\n        a: convertHexToDecimal(match[4]),\n        format: named ? \"name\" : \"hex8\"\n      };\n    }\n    if (match = matchers.hex6.exec(color)) {\n      return {\n        r: parseIntFromHex(match[1]),\n        g: parseIntFromHex(match[2]),\n        b: parseIntFromHex(match[3]),\n        format: named ? \"name\" : \"hex\"\n      };\n    }\n    if (match = matchers.hex4.exec(color)) {\n      return {\n        r: parseIntFromHex(match[1] + \"\" + match[1]),\n        g: parseIntFromHex(match[2] + \"\" + match[2]),\n        b: parseIntFromHex(match[3] + \"\" + match[3]),\n        a: convertHexToDecimal(match[4] + \"\" + match[4]),\n        format: named ? \"name\" : \"hex8\"\n      };\n    }\n    if (match = matchers.hex3.exec(color)) {\n      return {\n        r: parseIntFromHex(match[1] + \"\" + match[1]),\n        g: parseIntFromHex(match[2] + \"\" + match[2]),\n        b: parseIntFromHex(match[3] + \"\" + match[3]),\n        format: named ? \"name\" : \"hex\"\n      };\n    }\n    return false;\n  }\n  function validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\n      level: \"AA\",\n      size: \"small\"\n    };\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n    if (level !== \"AA\" && level !== \"AAA\") {\n      level = \"AA\";\n    }\n    if (size !== \"small\" && size !== \"large\") {\n      size = \"small\";\n    }\n    return {\n      level: level,\n      size: size\n    };\n  }\n  return tinycolor;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","globalThis","self","tinycolor","trimLeft","trimRight","color","opts","rgb","inputToRGB","_originalInput","_r","r","_g","g","_b","b","_a","a","_roundA","Math","round","_format","format","_gradientType","gradientType","_ok","ok","prototype","isDark","getBrightness","isLight","isValid","getOriginalInput","getFormat","getAlpha","toRgb","getLuminance","RsRGB","GsRGB","BsRGB","R","G","B","pow","setAlpha","value","boundAlpha","toHsv","hsv","rgbToHsv","h","s","v","toHsvString","toHsl","hsl","rgbToHsl","l","toHslString","toHex","allow3Char","rgbToHex","toHexString","toHex8","allow4Char","rgbaToHex","toHex8String","toRgbString","toPercentageRgb","bound01","toPercentageRgbString","toName","hexNames","toFilter","secondColor","hex8String","rgbaToArgbHex","secondHex8String","toString","formatSet","formattedString","hasAlpha","needsAlphaFormat","clone","_applyModification","fn","args","apply","concat","slice","call","lighten","arguments","brighten","darken","desaturate","saturate","greyscale","spin","_applyCombination","analogous","complement","monochromatic","splitcomplement","triad","polyad","tetrad","fromRatio","newColor","i","hasOwnProperty","convertToPercentage","stringInputToObject","isValidCSSUnit","rgbToRgb","String","substr","hsvToRgb","hslToRgb","min","max","d","hue2rgb","p","q","t","floor","f","mod","hex","pad2","charAt","join","convertDecimalToHex","equals","color1","color2","random","amount","clamp01","hue","number","isNaN","Error","result","step","push","results","slices","part","ret","modification","mix","rgb1","rgb2","rgba","readability","c1","c2","isReadable","wcag2","wcag2Parms","out","validateWCAG2Parms","level","size","mostReadable","baseColor","colorList","bestColor","bestScore","includeFallbackColors","length","names","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","flip","o","flipped","parseFloat","n","isOnePointZero","processPercent","isPercentage","parseInt","abs","val","parseIntFromHex","indexOf","c","convertHexToDecimal","matchers","CSS_INTEGER","CSS_NUMBER","CSS_UNIT","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","RegExp","hsla","hsva","hex3","hex6","hex4","hex8","exec","replace","toLowerCase","named","match","parms","toUpperCase"],"sources":["C:/Users/tugcetay/Documents/github/Data_visualization/kepler.gl_React_app/my_app/node_modules/tinycolor2/cjs/tinycolor.js"],"sourcesContent":["// This file is autogenerated. It's used to publish CJS to npm.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.tinycolor = factory());\n})(this, (function () { 'use strict';\n\n  // https://github.com/bgrins/TinyColor\n  // Brian Grinstead, MIT License\n\n  const trimLeft = /^\\s+/;\n  const trimRight = /\\s+$/;\n\n  function tinycolor(color, opts) {\n    color = color ? color : \"\";\n    opts = opts || {};\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n      return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n      return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    (this._originalInput = color),\n      (this._r = rgb.r),\n      (this._g = rgb.g),\n      (this._b = rgb.b),\n      (this._a = rgb.a),\n      (this._roundA = Math.round(100 * this._a) / 100),\n      (this._format = opts.format || rgb.format);\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) this._r = Math.round(this._r);\n    if (this._g < 1) this._g = Math.round(this._g);\n    if (this._b < 1) this._b = Math.round(this._b);\n\n    this._ok = rgb.ok;\n  }\n\n  tinycolor.prototype = {\n    isDark: function () {\n      return this.getBrightness() < 128;\n    },\n    isLight: function () {\n      return !this.isDark();\n    },\n    isValid: function () {\n      return this._ok;\n    },\n    getOriginalInput: function () {\n      return this._originalInput;\n    },\n    getFormat: function () {\n      return this._format;\n    },\n    getAlpha: function () {\n      return this._a;\n    },\n    getBrightness: function () {\n      //http://www.w3.org/TR/AERT#color-contrast\n      var rgb = this.toRgb();\n      return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function () {\n      //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n      var rgb = this.toRgb();\n      var RsRGB, GsRGB, BsRGB, R, G, B;\n      RsRGB = rgb.r / 255;\n      GsRGB = rgb.g / 255;\n      BsRGB = rgb.b / 255;\n\n      if (RsRGB <= 0.03928) R = RsRGB / 12.92;\n      else R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\n      if (GsRGB <= 0.03928) G = GsRGB / 12.92;\n      else G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\n      if (BsRGB <= 0.03928) B = BsRGB / 12.92;\n      else B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\n      return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n    },\n    setAlpha: function (value) {\n      this._a = boundAlpha(value);\n      this._roundA = Math.round(100 * this._a) / 100;\n      return this;\n    },\n    toHsv: function () {\n      var hsv = rgbToHsv(this._r, this._g, this._b);\n      return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n    },\n    toHsvString: function () {\n      var hsv = rgbToHsv(this._r, this._g, this._b);\n      var h = Math.round(hsv.h * 360),\n        s = Math.round(hsv.s * 100),\n        v = Math.round(hsv.v * 100);\n      return this._a == 1\n        ? \"hsv(\" + h + \", \" + s + \"%, \" + v + \"%)\"\n        : \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \" + this._roundA + \")\";\n    },\n    toHsl: function () {\n      var hsl = rgbToHsl(this._r, this._g, this._b);\n      return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n    },\n    toHslString: function () {\n      var hsl = rgbToHsl(this._r, this._g, this._b);\n      var h = Math.round(hsl.h * 360),\n        s = Math.round(hsl.s * 100),\n        l = Math.round(hsl.l * 100);\n      return this._a == 1\n        ? \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\"\n        : \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \" + this._roundA + \")\";\n    },\n    toHex: function (allow3Char) {\n      return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function (allow3Char) {\n      return \"#\" + this.toHex(allow3Char);\n    },\n    toHex8: function (allow4Char) {\n      return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function (allow4Char) {\n      return \"#\" + this.toHex8(allow4Char);\n    },\n    toRgb: function () {\n      return {\n        r: Math.round(this._r),\n        g: Math.round(this._g),\n        b: Math.round(this._b),\n        a: this._a,\n      };\n    },\n    toRgbString: function () {\n      return this._a == 1\n        ? \"rgb(\" +\n            Math.round(this._r) +\n            \", \" +\n            Math.round(this._g) +\n            \", \" +\n            Math.round(this._b) +\n            \")\"\n        : \"rgba(\" +\n            Math.round(this._r) +\n            \", \" +\n            Math.round(this._g) +\n            \", \" +\n            Math.round(this._b) +\n            \", \" +\n            this._roundA +\n            \")\";\n    },\n    toPercentageRgb: function () {\n      return {\n        r: Math.round(bound01(this._r, 255) * 100) + \"%\",\n        g: Math.round(bound01(this._g, 255) * 100) + \"%\",\n        b: Math.round(bound01(this._b, 255) * 100) + \"%\",\n        a: this._a,\n      };\n    },\n    toPercentageRgbString: function () {\n      return this._a == 1\n        ? \"rgb(\" +\n            Math.round(bound01(this._r, 255) * 100) +\n            \"%, \" +\n            Math.round(bound01(this._g, 255) * 100) +\n            \"%, \" +\n            Math.round(bound01(this._b, 255) * 100) +\n            \"%)\"\n        : \"rgba(\" +\n            Math.round(bound01(this._r, 255) * 100) +\n            \"%, \" +\n            Math.round(bound01(this._g, 255) * 100) +\n            \"%, \" +\n            Math.round(bound01(this._b, 255) * 100) +\n            \"%, \" +\n            this._roundA +\n            \")\";\n    },\n    toName: function () {\n      if (this._a === 0) {\n        return \"transparent\";\n      }\n\n      if (this._a < 1) {\n        return false;\n      }\n\n      return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function (secondColor) {\n      var hex8String = \"#\" + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n      var secondHex8String = hex8String;\n      var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n      if (secondColor) {\n        var s = tinycolor(secondColor);\n        secondHex8String = \"#\" + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n      }\n\n      return (\n        \"progid:DXImageTransform.Microsoft.gradient(\" +\n        gradientType +\n        \"startColorstr=\" +\n        hex8String +\n        \",endColorstr=\" +\n        secondHex8String +\n        \")\"\n      );\n    },\n    toString: function (format) {\n      var formatSet = !!format;\n      format = format || this._format;\n\n      var formattedString = false;\n      var hasAlpha = this._a < 1 && this._a >= 0;\n      var needsAlphaFormat =\n        !formatSet &&\n        hasAlpha &&\n        (format === \"hex\" ||\n          format === \"hex6\" ||\n          format === \"hex3\" ||\n          format === \"hex4\" ||\n          format === \"hex8\" ||\n          format === \"name\");\n\n      if (needsAlphaFormat) {\n        // Special case for \"transparent\", all other non-alpha formats\n        // will return rgba when there is transparency.\n        if (format === \"name\" && this._a === 0) {\n          return this.toName();\n        }\n        return this.toRgbString();\n      }\n      if (format === \"rgb\") {\n        formattedString = this.toRgbString();\n      }\n      if (format === \"prgb\") {\n        formattedString = this.toPercentageRgbString();\n      }\n      if (format === \"hex\" || format === \"hex6\") {\n        formattedString = this.toHexString();\n      }\n      if (format === \"hex3\") {\n        formattedString = this.toHexString(true);\n      }\n      if (format === \"hex4\") {\n        formattedString = this.toHex8String(true);\n      }\n      if (format === \"hex8\") {\n        formattedString = this.toHex8String();\n      }\n      if (format === \"name\") {\n        formattedString = this.toName();\n      }\n      if (format === \"hsl\") {\n        formattedString = this.toHslString();\n      }\n      if (format === \"hsv\") {\n        formattedString = this.toHsvString();\n      }\n\n      return formattedString || this.toHexString();\n    },\n    clone: function () {\n      return tinycolor(this.toString());\n    },\n\n    _applyModification: function (fn, args) {\n      var color = fn.apply(null, [this].concat([].slice.call(args)));\n      this._r = color._r;\n      this._g = color._g;\n      this._b = color._b;\n      this.setAlpha(color._a);\n      return this;\n    },\n    lighten: function () {\n      return this._applyModification(lighten, arguments);\n    },\n    brighten: function () {\n      return this._applyModification(brighten, arguments);\n    },\n    darken: function () {\n      return this._applyModification(darken, arguments);\n    },\n    desaturate: function () {\n      return this._applyModification(desaturate, arguments);\n    },\n    saturate: function () {\n      return this._applyModification(saturate, arguments);\n    },\n    greyscale: function () {\n      return this._applyModification(greyscale, arguments);\n    },\n    spin: function () {\n      return this._applyModification(spin, arguments);\n    },\n\n    _applyCombination: function (fn, args) {\n      return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function () {\n      return this._applyCombination(analogous, arguments);\n    },\n    complement: function () {\n      return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function () {\n      return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function () {\n      return this._applyCombination(splitcomplement, arguments);\n    },\n    // Disabled until https://github.com/bgrins/TinyColor/issues/254\n    // polyad: function (number) {\n    //   return this._applyCombination(polyad, [number]);\n    // },\n    triad: function () {\n      return this._applyCombination(polyad, [3]);\n    },\n    tetrad: function () {\n      return this._applyCombination(polyad, [4]);\n    },\n  };\n\n  // If input is an object, force 1 into \"1.0\" to handle ratios properly\n  // String input requires \"1.0\" as input, so 1 will be treated as 1\n  tinycolor.fromRatio = function (color, opts) {\n    if (typeof color == \"object\") {\n      var newColor = {};\n      for (var i in color) {\n        if (color.hasOwnProperty(i)) {\n          if (i === \"a\") {\n            newColor[i] = color[i];\n          } else {\n            newColor[i] = convertToPercentage(color[i]);\n          }\n        }\n      }\n      color = newColor;\n    }\n\n    return tinycolor(color, opts);\n  };\n\n  // Given a string or object, convert that input to RGB\n  // Possible string inputs:\n  //\n  //     \"red\"\n  //     \"#f00\" or \"f00\"\n  //     \"#ff0000\" or \"ff0000\"\n  //     \"#ff000000\" or \"ff000000\"\n  //     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n  //     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n  //     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n  //     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n  //     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n  //     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n  //     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n  //\n  function inputToRGB(color) {\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == \"string\") {\n      color = stringInputToObject(color);\n    }\n\n    if (typeof color == \"object\") {\n      if (\n        isValidCSSUnit(color.r) &&\n        isValidCSSUnit(color.g) &&\n        isValidCSSUnit(color.b)\n      ) {\n        rgb = rgbToRgb(color.r, color.g, color.b);\n        ok = true;\n        format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n      } else if (\n        isValidCSSUnit(color.h) &&\n        isValidCSSUnit(color.s) &&\n        isValidCSSUnit(color.v)\n      ) {\n        s = convertToPercentage(color.s);\n        v = convertToPercentage(color.v);\n        rgb = hsvToRgb(color.h, s, v);\n        ok = true;\n        format = \"hsv\";\n      } else if (\n        isValidCSSUnit(color.h) &&\n        isValidCSSUnit(color.s) &&\n        isValidCSSUnit(color.l)\n      ) {\n        s = convertToPercentage(color.s);\n        l = convertToPercentage(color.l);\n        rgb = hslToRgb(color.h, s, l);\n        ok = true;\n        format = \"hsl\";\n      }\n\n      if (color.hasOwnProperty(\"a\")) {\n        a = color.a;\n      }\n    }\n\n    a = boundAlpha(a);\n\n    return {\n      ok: ok,\n      format: color.format || format,\n      r: Math.min(255, Math.max(rgb.r, 0)),\n      g: Math.min(255, Math.max(rgb.g, 0)),\n      b: Math.min(255, Math.max(rgb.b, 0)),\n      a: a,\n    };\n  }\n\n  // Conversion Functions\n  // --------------------\n\n  // `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n  // <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n  // `rgbToRgb`\n  // Handle bounds / percentage checking to conform to CSS color spec\n  // <http://www.w3.org/TR/css3-color/>\n  // *Assumes:* r, g, b in [0, 255] or [0, 1]\n  // *Returns:* { r, g, b } in [0, 255]\n  function rgbToRgb(r, g, b) {\n    return {\n      r: bound01(r, 255) * 255,\n      g: bound01(g, 255) * 255,\n      b: bound01(b, 255) * 255,\n    };\n  }\n\n  // `rgbToHsl`\n  // Converts an RGB color value to HSL.\n  // *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n  // *Returns:* { h, s, l } in [0,1]\n  function rgbToHsl(r, g, b) {\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = Math.max(r, g, b),\n      min = Math.min(r, g, b);\n    var h,\n      s,\n      l = (max + min) / 2;\n\n    if (max == min) {\n      h = s = 0; // achromatic\n    } else {\n      var d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n        case g:\n          h = (b - r) / d + 2;\n          break;\n        case b:\n          h = (r - g) / d + 4;\n          break;\n      }\n\n      h /= 6;\n    }\n\n    return { h: h, s: s, l: l };\n  }\n\n  // `hslToRgb`\n  // Converts an HSL color value to RGB.\n  // *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n  // *Returns:* { r, g, b } in the set [0, 255]\n  function hslToRgb(h, s, l) {\n    var r, g, b;\n\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n      return p;\n    }\n\n    if (s === 0) {\n      r = g = b = l; // achromatic\n    } else {\n      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      var p = 2 * l - q;\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n  }\n\n  // `rgbToHsv`\n  // Converts an RGB color value to HSV\n  // *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n  // *Returns:* { h, s, v } in [0,1]\n  function rgbToHsv(r, g, b) {\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = Math.max(r, g, b),\n      min = Math.min(r, g, b);\n    var h,\n      s,\n      v = max;\n\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if (max == min) {\n      h = 0; // achromatic\n    } else {\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n        case g:\n          h = (b - r) / d + 2;\n          break;\n        case b:\n          h = (r - g) / d + 4;\n          break;\n      }\n      h /= 6;\n    }\n    return { h: h, s: s, v: v };\n  }\n\n  // `hsvToRgb`\n  // Converts an HSV color value to RGB.\n  // *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n  // *Returns:* { r, g, b } in the set [0, 255]\n  function hsvToRgb(h, s, v) {\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n\n    var i = Math.floor(h),\n      f = h - i,\n      p = v * (1 - s),\n      q = v * (1 - f * s),\n      t = v * (1 - (1 - f) * s),\n      mod = i % 6,\n      r = [v, q, p, p, t, v][mod],\n      g = [t, v, v, q, p, p][mod],\n      b = [p, p, t, v, v, q][mod];\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n  }\n\n  // `rgbToHex`\n  // Converts an RGB color to hex\n  // Assumes r, g, and b are contained in the set [0, 255]\n  // Returns a 3 or 6 character hex\n  function rgbToHex(r, g, b, allow3Char) {\n    var hex = [\n      pad2(Math.round(r).toString(16)),\n      pad2(Math.round(g).toString(16)),\n      pad2(Math.round(b).toString(16)),\n    ];\n\n    // Return a 3 character hex if possible\n    if (\n      allow3Char &&\n      hex[0].charAt(0) == hex[0].charAt(1) &&\n      hex[1].charAt(0) == hex[1].charAt(1) &&\n      hex[2].charAt(0) == hex[2].charAt(1)\n    ) {\n      return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join(\"\");\n  }\n\n  // `rgbaToHex`\n  // Converts an RGBA color plus alpha transparency to hex\n  // Assumes r, g, b are contained in the set [0, 255] and\n  // a in [0, 1]. Returns a 4 or 8 character rgba hex\n  function rgbaToHex(r, g, b, a, allow4Char) {\n    var hex = [\n      pad2(Math.round(r).toString(16)),\n      pad2(Math.round(g).toString(16)),\n      pad2(Math.round(b).toString(16)),\n      pad2(convertDecimalToHex(a)),\n    ];\n\n    // Return a 4 character hex if possible\n    if (\n      allow4Char &&\n      hex[0].charAt(0) == hex[0].charAt(1) &&\n      hex[1].charAt(0) == hex[1].charAt(1) &&\n      hex[2].charAt(0) == hex[2].charAt(1) &&\n      hex[3].charAt(0) == hex[3].charAt(1)\n    ) {\n      return (\n        hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0)\n      );\n    }\n\n    return hex.join(\"\");\n  }\n\n  // `rgbaToArgbHex`\n  // Converts an RGBA color to an ARGB Hex8 string\n  // Rarely used, but required for \"toFilter()\"\n  function rgbaToArgbHex(r, g, b, a) {\n    var hex = [\n      pad2(convertDecimalToHex(a)),\n      pad2(Math.round(r).toString(16)),\n      pad2(Math.round(g).toString(16)),\n      pad2(Math.round(b).toString(16)),\n    ];\n\n    return hex.join(\"\");\n  }\n\n  // `equals`\n  // Can be called with any tinycolor input\n  tinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) return false;\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n  };\n\n  tinycolor.random = function () {\n    return tinycolor.fromRatio({\n      r: Math.random(),\n      g: Math.random(),\n      b: Math.random(),\n    });\n  };\n\n  // Modification Functions\n  // ----------------------\n  // Thanks to less.js for some of the basics here\n  // <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\n  function desaturate(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n  }\n\n  function saturate(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n  }\n\n  function greyscale(color) {\n    return tinycolor(color).desaturate(100);\n  }\n\n  function lighten(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n  }\n\n  function brighten(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));\n    rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));\n    rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));\n    return tinycolor(rgb);\n  }\n\n  function darken(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n  }\n\n  // Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n  // Values outside of this range will be wrapped into this range.\n  function spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n  }\n\n  // Combination Functions\n  // ---------------------\n  // Thanks to jQuery xColor for some of the ideas behind these\n  // <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\n  function complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n  }\n\n  function polyad(color, number) {\n    if (isNaN(number) || number <= 0) {\n      throw new Error(\"Argument to polyad must be a positive number\");\n    }\n    var hsl = tinycolor(color).toHsl();\n    var result = [tinycolor(color)];\n    var step = 360 / number;\n    for (var i = 1; i < number; i++) {\n      result.push(tinycolor({ h: (hsl.h + i * step) % 360, s: hsl.s, l: hsl.l }));\n    }\n\n    return result;\n  }\n\n  function splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n      tinycolor(color),\n      tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l }),\n      tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l }),\n    ];\n  }\n\n  function analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = (hsl.h - ((part * results) >> 1) + 720) % 360; --results; ) {\n      hsl.h = (hsl.h + part) % 360;\n      ret.push(tinycolor(hsl));\n    }\n    return ret;\n  }\n\n  function monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h,\n      s = hsv.s,\n      v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n      ret.push(tinycolor({ h: h, s: s, v: v }));\n      v = (v + modification) % 1;\n    }\n\n    return ret;\n  }\n\n  // Utility Functions\n  // ---------------------\n\n  tinycolor.mix = function (color1, color2, amount) {\n    amount = amount === 0 ? 0 : amount || 50;\n\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n\n    var p = amount / 100;\n\n    var rgba = {\n      r: (rgb2.r - rgb1.r) * p + rgb1.r,\n      g: (rgb2.g - rgb1.g) * p + rgb1.g,\n      b: (rgb2.b - rgb1.b) * p + rgb1.b,\n      a: (rgb2.a - rgb1.a) * p + rgb1.a,\n    };\n\n    return tinycolor(rgba);\n  };\n\n  // Readability Functions\n  // ---------------------\n  // <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n  // `contrast`\n  // Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\n  tinycolor.readability = function (color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (\n      (Math.max(c1.getLuminance(), c2.getLuminance()) + 0.05) /\n      (Math.min(c1.getLuminance(), c2.getLuminance()) + 0.05)\n    );\n  };\n\n  // `isReadable`\n  // Ensure that foreground and background color combinations meet WCAG2 guidelines.\n  // The third argument is an optional Object.\n  //      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n  //      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n  // If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n  // *Example*\n  //    tinycolor.isReadable(\"#000\", \"#111\") => false\n  //    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\n  tinycolor.isReadable = function (color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n\n    out = false;\n\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n      case \"AAsmall\":\n      case \"AAAlarge\":\n        out = readability >= 4.5;\n        break;\n      case \"AAlarge\":\n        out = readability >= 3;\n        break;\n      case \"AAAsmall\":\n        out = readability >= 7;\n        break;\n    }\n    return out;\n  };\n\n  // `mostReadable`\n  // Given a base color and a list of possible foreground or background\n  // colors for that base, returns the most readable color.\n  // Optionally returns Black or White if the most readable color is unreadable.\n  // *Example*\n  //    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n  //    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n  //    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n  //    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\n  tinycolor.mostReadable = function (baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors;\n    level = args.level;\n    size = args.size;\n\n    for (var i = 0; i < colorList.length; i++) {\n      readability = tinycolor.readability(baseColor, colorList[i]);\n      if (readability > bestScore) {\n        bestScore = readability;\n        bestColor = tinycolor(colorList[i]);\n      }\n    }\n\n    if (\n      tinycolor.isReadable(baseColor, bestColor, {\n        level: level,\n        size: size,\n      }) ||\n      !includeFallbackColors\n    ) {\n      return bestColor;\n    } else {\n      args.includeFallbackColors = false;\n      return tinycolor.mostReadable(baseColor, [\"#fff\", \"#000\"], args);\n    }\n  };\n\n  // Big List of Colors\n  // ------------------\n  // <https://www.w3.org/TR/css-color-4/#named-colors>\n  var names = (tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\",\n  });\n\n  // Make it easy to access colors via `hexNames[hex]`\n  var hexNames = (tinycolor.hexNames = flip(names));\n\n  // Utilities\n  // ---------\n\n  // `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\n  function flip(o) {\n    var flipped = {};\n    for (var i in o) {\n      if (o.hasOwnProperty(i)) {\n        flipped[o[i]] = i;\n      }\n    }\n    return flipped;\n  }\n\n  // Return a valid alpha value [0,1] with all invalid values being set to 1\n  function boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n      a = 1;\n    }\n\n    return a;\n  }\n\n  // Take input from [0, n] and return it as [0, 1]\n  function bound01(n, max) {\n    if (isOnePointZero(n)) n = \"100%\";\n\n    var processPercent = isPercentage(n);\n    n = Math.min(max, Math.max(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n      n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if (Math.abs(n - max) < 0.000001) {\n      return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return (n % max) / parseFloat(max);\n  }\n\n  // Force a number between 0 and 1\n  function clamp01(val) {\n    return Math.min(1, Math.max(0, val));\n  }\n\n  // Parse a base-16 hex value into a base-10 integer\n  function parseIntFromHex(val) {\n    return parseInt(val, 16);\n  }\n\n  // Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n  // <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\n  function isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf(\".\") != -1 && parseFloat(n) === 1;\n  }\n\n  // Check to see if string passed in is a percentage\n  function isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf(\"%\") != -1;\n  }\n\n  // Force a hex value to have 2 characters\n  function pad2(c) {\n    return c.length == 1 ? \"0\" + c : \"\" + c;\n  }\n\n  // Replace a decimal with it's percentage value\n  function convertToPercentage(n) {\n    if (n <= 1) {\n      n = n * 100 + \"%\";\n    }\n\n    return n;\n  }\n\n  // Converts a decimal to a hex value\n  function convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n  }\n  // Converts a hex value to a decimal\n  function convertHexToDecimal(h) {\n    return parseIntFromHex(h) / 255;\n  }\n\n  var matchers = (function () {\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 =\n      \"[\\\\s|\\\\(]+(\" +\n      CSS_UNIT +\n      \")[,|\\\\s]+(\" +\n      CSS_UNIT +\n      \")[,|\\\\s]+(\" +\n      CSS_UNIT +\n      \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 =\n      \"[\\\\s|\\\\(]+(\" +\n      CSS_UNIT +\n      \")[,|\\\\s]+(\" +\n      CSS_UNIT +\n      \")[,|\\\\s]+(\" +\n      CSS_UNIT +\n      \")[,|\\\\s]+(\" +\n      CSS_UNIT +\n      \")\\\\s*\\\\)?\";\n\n    return {\n      CSS_UNIT: new RegExp(CSS_UNIT),\n      rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n      rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n      hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n      hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n      hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n      hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n      hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n      hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n      hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n      hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n    };\n  })();\n\n  // `isValidCSSUnit`\n  // Take in a single string / number and check to see if it looks like a CSS unit\n  // (see `matchers` above for definition).\n  function isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n  }\n\n  // `stringInputToObject`\n  // Permissive string parsing.  Take in a number of formats, and output an object\n  // based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\n  function stringInputToObject(color) {\n    color = color.replace(trimLeft, \"\").replace(trimRight, \"\").toLowerCase();\n    var named = false;\n    if (names[color]) {\n      color = names[color];\n      named = true;\n    } else if (color == \"transparent\") {\n      return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if ((match = matchers.rgb.exec(color))) {\n      return { r: match[1], g: match[2], b: match[3] };\n    }\n    if ((match = matchers.rgba.exec(color))) {\n      return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsl.exec(color))) {\n      return { h: match[1], s: match[2], l: match[3] };\n    }\n    if ((match = matchers.hsla.exec(color))) {\n      return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsv.exec(color))) {\n      return { h: match[1], s: match[2], v: match[3] };\n    }\n    if ((match = matchers.hsva.exec(color))) {\n      return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    if ((match = matchers.hex8.exec(color))) {\n      return {\n        r: parseIntFromHex(match[1]),\n        g: parseIntFromHex(match[2]),\n        b: parseIntFromHex(match[3]),\n        a: convertHexToDecimal(match[4]),\n        format: named ? \"name\" : \"hex8\",\n      };\n    }\n    if ((match = matchers.hex6.exec(color))) {\n      return {\n        r: parseIntFromHex(match[1]),\n        g: parseIntFromHex(match[2]),\n        b: parseIntFromHex(match[3]),\n        format: named ? \"name\" : \"hex\",\n      };\n    }\n    if ((match = matchers.hex4.exec(color))) {\n      return {\n        r: parseIntFromHex(match[1] + \"\" + match[1]),\n        g: parseIntFromHex(match[2] + \"\" + match[2]),\n        b: parseIntFromHex(match[3] + \"\" + match[3]),\n        a: convertHexToDecimal(match[4] + \"\" + match[4]),\n        format: named ? \"name\" : \"hex8\",\n      };\n    }\n    if ((match = matchers.hex3.exec(color))) {\n      return {\n        r: parseIntFromHex(match[1] + \"\" + match[1]),\n        g: parseIntFromHex(match[2] + \"\" + match[2]),\n        b: parseIntFromHex(match[3] + \"\" + match[3]),\n        format: named ? \"name\" : \"hex\",\n      };\n    }\n\n    return false;\n  }\n\n  function validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || { level: \"AA\", size: \"small\" };\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n    if (level !== \"AA\" && level !== \"AAA\") {\n      level = \"AA\";\n    }\n    if (size !== \"small\" && size !== \"large\") {\n      size = \"small\";\n    }\n    return { level: level, size: size };\n  }\n\n  return tinycolor;\n\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport View from './view';\nimport Viewport from '../viewports/viewport';\nimport { Matrix4 } from 'math.gl';\nimport OrthographicController from '../controllers/orthographic-controller';\nvar viewMatrix = new Matrix4().lookAt({\n  eye: [0, 0, 1]\n});\nfunction getProjectionMatrix(_ref) {\n  var width = _ref.width,\n    height = _ref.height,\n    near = _ref.near,\n    far = _ref.far;\n  width = width || 1;\n  height = height || 1;\n  return new Matrix4().ortho({\n    left: -width / 2,\n    right: width / 2,\n    bottom: height / 2,\n    top: -height / 2,\n    near: near,\n    far: far\n  });\n}\nvar OrthographicViewport = function (_Viewport) {\n  _inherits(OrthographicViewport, _Viewport);\n  function OrthographicViewport(_ref2) {\n    var _this;\n    var id = _ref2.id,\n      x = _ref2.x,\n      y = _ref2.y,\n      width = _ref2.width,\n      height = _ref2.height,\n      _ref2$near = _ref2.near,\n      near = _ref2$near === void 0 ? 0.1 : _ref2$near,\n      _ref2$far = _ref2.far,\n      far = _ref2$far === void 0 ? 1000 : _ref2$far,\n      _ref2$zoom = _ref2.zoom,\n      zoom = _ref2$zoom === void 0 ? 0 : _ref2$zoom,\n      _ref2$target = _ref2.target,\n      target = _ref2$target === void 0 ? [0, 0, 0] : _ref2$target;\n    _classCallCheck(this, OrthographicViewport);\n    var scale = Math.pow(2, zoom);\n    return _possibleConstructorReturn(_this, new Viewport({\n      id: id,\n      x: x,\n      y: y,\n      width: width,\n      height: height,\n      position: target,\n      viewMatrix: viewMatrix.clone().scale(scale),\n      projectionMatrix: getProjectionMatrix({\n        width: width,\n        height: height,\n        near: near,\n        far: far\n      }),\n      zoom: zoom\n    }));\n  }\n  return OrthographicViewport;\n}(Viewport);\nvar OrthographicView = function (_View) {\n  _inherits(OrthographicView, _View);\n  function OrthographicView(props) {\n    _classCallCheck(this, OrthographicView);\n    return _possibleConstructorReturn(this, _getPrototypeOf(OrthographicView).call(this, Object.assign({}, props, {\n      type: OrthographicViewport\n    })));\n  }\n  _createClass(OrthographicView, [{\n    key: \"controller\",\n    get: function get() {\n      return this._getControllerProps({\n        type: OrthographicController\n      });\n    }\n  }]);\n  return OrthographicView;\n}(View);\nexport { OrthographicView as default };\nOrthographicView.displayName = 'OrthographicView';","map":{"version":3,"sources":["../../../src/views/orthographic-view.js"],"names":["View","Viewport","Matrix4","OrthographicController","viewMatrix","lookAt","eye","getProjectionMatrix","width","height","near","far","ortho","left","right","bottom","top","OrthographicViewport","id","x","y","zoom","target","scale","Math","pow","position","clone","projectionMatrix","OrthographicView","props","assign","type","_getControllerProps","displayName"],"mappings":"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","sourcesContent":["import View from './view';\nimport Viewport from '../viewports/viewport';\n\nimport {Matrix4} from 'math.gl';\nimport OrthographicController from '../controllers/orthographic-controller';\n\nconst viewMatrix = new Matrix4().lookAt({eye: [0, 0, 1]});\n\nfunction getProjectionMatrix({width, height, near, far}) {\n  // Make sure Matrix4.ortho doesn't crash on 0 width/height\n  width = width || 1;\n  height = height || 1;\n\n  return new Matrix4().ortho({\n    left: -width / 2,\n    right: width / 2,\n    bottom: height / 2,\n    top: -height / 2,\n    near,\n    far\n  });\n}\n\nclass OrthographicViewport extends Viewport {\n  constructor({id, x, y, width, height, near = 0.1, far = 1000, zoom = 0, target = [0, 0, 0]}) {\n    const scale = Math.pow(2, zoom);\n    return new Viewport({\n      id,\n      x,\n      y,\n      width,\n      height,\n      position: target,\n      viewMatrix: viewMatrix.clone().scale(scale),\n      projectionMatrix: getProjectionMatrix({width, height, near, far}),\n      zoom\n    });\n  }\n}\n\nexport default class OrthographicView extends View {\n  constructor(props) {\n    super(\n      Object.assign({}, props, {\n        type: OrthographicViewport\n      })\n    );\n  }\n\n  get controller() {\n    return this._getControllerProps({\n      type: OrthographicController\n    });\n  }\n}\n\nOrthographicView.displayName = 'OrthographicView';\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hexToRgb = hexToRgb;\nexports.isHexColor = isHexColor;\nexports.rgbToHex = rgbToHex;\nexports.getColorGroupByName = getColorGroupByName;\nexports.reverseColorRange = reverseColorRange;\nexports.createLinearGradient = createLinearGradient;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\n\n// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/**\n * get r g b from hex code\n *\n * @param {string} hex\n * @returns {import('reducers/types').RGBColor} array of r g bs\n */\nfunction hexToRgb(hex) {\n  var result = isHexColor(hex);\n  if (!result) {\n    return [0, 0, 0];\n  }\n  var r = parseInt(result[1], 16);\n  var g = parseInt(result[2], 16);\n  var b = parseInt(result[3], 16);\n  return [r, g, b];\n}\nfunction isHexColor(hex) {\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result;\n}\nfunction PadNum(c) {\n  var hex = c.toString(16);\n  return hex.length === 1 ? \"0\".concat(hex) : hex;\n}\n/**\n * get hex from r g b\n *\n * @param {array} rgb\n * @returns {string} hex string\n */\n\nfunction rgbToHex(_ref) {\n  var _ref2 = (0, _slicedToArray2[\"default\"])(_ref, 3),\n    r = _ref2[0],\n    g = _ref2[1],\n    b = _ref2[2];\n  return \"#\".concat([r, g, b].map(function (n) {\n    return PadNum(n);\n  }).join('')).toUpperCase();\n}\n/**\n * Get color group name by parsing name, discard step in the name\n * e.g. Global Warming 6 -> Global Warming\n *\n * @param {Object} colorRange\n * @return {string | null}\n */\n\nfunction getColorGroupByName(colorRange) {\n  if (!colorRange || typeof colorRange.name !== 'string') {\n    return null;\n  }\n  return colorRange.name.replace(/\\b[^a-zA-Z]+$/, '');\n}\n/**\n * Get a reversed colorRange\n * @param {Boolean} reversed\n * @param {Object} colorRange\n */\n\nfunction reverseColorRange(reversed, colorRange) {\n  if (!colorRange) return null; // if (colorRange.reversed) return colorRange;\n\n  return _objectSpread(_objectSpread({}, colorRange), {}, {\n    reversed: reversed,\n    colors: colorRange.colors.slice().reverse()\n  });\n}\n/**\n * given a list of rgb arrays it will generate a linear gradient css rule\n * @param direction\n * @param {Array} colors\n * @return {string}\n */\n\nfunction createLinearGradient(direction, colors) {\n  var step = parseFloat((100.0 / colors.length).toFixed(2));\n  var bands = colors.map(function (rgb, index) {\n    return \"rgba(\".concat(rgb.join(','), \", 1) \").concat(step * index, \"%, rgba(\").concat(rgb.join(','), \", 1) \").concat(step * (index + 1), \"%\");\n  });\n  return \"linear-gradient(to \".concat(direction, \", \").concat(bands.join(','), \")\");\n}","map":{"version":3,"sources":["../../src/utils/color-utils.js"],"names":["hexToRgb","hex","result","isHexColor","r","parseInt","g","b","exec","PadNum","c","toString","length","rgbToHex","map","n","join","toUpperCase","getColorGroupByName","colorRange","name","replace","reverseColorRange","reversed","colors","slice","reverse","createLinearGradient","direction","step","parseFloat","toFixed","bands","rgb","index"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/**\n * get r g b from hex code\n *\n * @param {string} hex\n * @returns {import('reducers/types').RGBColor} array of r g bs\n */\nexport function hexToRgb(hex) {\n  const result = isHexColor(hex);\n\n  if (!result) {\n    return [0, 0, 0];\n  }\n\n  const r = parseInt(result[1], 16);\n  const g = parseInt(result[2], 16);\n  const b = parseInt(result[3], 16);\n\n  return [r, g, b];\n}\n\nexport function isHexColor(hex) {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n  return result;\n}\n\nfunction PadNum(c) {\n  const hex = c.toString(16);\n  return hex.length === 1 ? `0${hex}` : hex;\n}\n\n/**\n * get hex from r g b\n *\n * @param {array} rgb\n * @returns {string} hex string\n */\nexport function rgbToHex([r, g, b]) {\n  return `#${[r, g, b].map(n => PadNum(n)).join('')}`.toUpperCase();\n}\n\n/**\n * Get color group name by parsing name, discard step in the name\n * e.g. Global Warming 6 -> Global Warming\n *\n * @param {Object} colorRange\n * @return {string | null}\n */\nexport function getColorGroupByName(colorRange) {\n  if (!colorRange || typeof colorRange.name !== 'string') {\n    return null;\n  }\n\n  return colorRange.name.replace(/\\b[^a-zA-Z]+$/, '');\n}\n\n/**\n * Get a reversed colorRange\n * @param {Boolean} reversed\n * @param {Object} colorRange\n */\nexport function reverseColorRange(reversed, colorRange) {\n  if (!colorRange) return null;\n  // if (colorRange.reversed) return colorRange;\n  return {\n    ...colorRange,\n    reversed,\n    colors: colorRange.colors.slice().reverse()\n  };\n}\n\n/**\n * given a list of rgb arrays it will generate a linear gradient css rule\n * @param direction\n * @param {Array} colors\n * @return {string}\n */\nexport function createLinearGradient(direction, colors) {\n  const step = parseFloat((100.0 / colors.length).toFixed(2));\n  const bands = colors.map((rgb, index) => {\n    return `rgba(${rgb.join(',')}, 1) ${step * index}%, rgba(${rgb.join(',')}, 1) ${step *\n      (index + 1)}%`;\n  });\n\n  return `linear-gradient(to ${direction}, ${bands.join(',')})`;\n}\n"]},"metadata":{},"sourceType":"script"}
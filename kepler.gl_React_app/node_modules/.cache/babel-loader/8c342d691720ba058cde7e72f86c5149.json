{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _wrapAsyncGenerator from \"@babel/runtime/helpers/esm/wrapAsyncGenerator\";\nimport _awaitAsyncGenerator from \"@babel/runtime/helpers/esm/awaitAsyncGenerator\";\nimport _asyncIterator from \"@babel/runtime/helpers/esm/asyncIterator\";\nimport _asyncGeneratorDelegate from \"@babel/runtime/helpers/esm/asyncGeneratorDelegate\";\nvar VERSION = typeof \"2.3.13\" !== 'undefined' ? \"2.3.13\" : 'latest';\nexport var NullLoader = {\n  id: 'image',\n  name: 'Images',\n  version: VERSION,\n  mimeTypes: ['application/x.empty'],\n  extensions: ['null'],\n  parse: function () {\n    var _parse = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(arrayBuffer, options) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", arrayBuffer);\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    function parse(_x, _x2) {\n      return _parse.apply(this, arguments);\n    }\n    return parse;\n  }(),\n  parseSync: function parseSync(arrayBuffer, options) {\n    return arrayBuffer;\n  },\n  parseInBatches: function () {\n    var _parseInBatches2 = _asyncToGenerator(_regeneratorRuntime.mark(function _callee3(asyncIterator, options) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", function () {\n                var _parseInBatches = _wrapAsyncGenerator(_regeneratorRuntime.mark(function _callee2() {\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          return _context2.delegateYield(_asyncGeneratorDelegate(_asyncIterator(asyncIterator), _awaitAsyncGenerator), \"t0\", 1);\n                        case 1:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                }));\n                function parseInBatches() {\n                  return _parseInBatches.apply(this, arguments);\n                }\n                return parseInBatches;\n              }()());\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    function parseInBatches(_x3, _x4) {\n      return _parseInBatches2.apply(this, arguments);\n    }\n    return parseInBatches;\n  }(),\n  tests: [function () {\n    return false;\n  }],\n  options: {}\n};","map":{"version":3,"sources":["../../src/null-loader.js"],"names":["VERSION","NullLoader","id","name","version","mimeTypes","extensions","parse","arrayBuffer","options","parseSync","parseInBatches","asyncIterator","tests"],"mappings":"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","sourcesContent":["// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\n/** @typedef {import('@loaders.gl/loader-utils').LoaderObject} LoaderObject */\n\n/**\n * Loads any data and returns null (or optionally passes through data unparsed)\n * @type {LoaderObject}\n * @todo Should be moved to `@loaders.gl/core`\n * */\nexport const NullLoader = {\n  id: 'image',\n  name: 'Images',\n  version: VERSION,\n  mimeTypes: ['application/x.empty'],\n  extensions: ['null'],\n  parse: async (arrayBuffer, options) => arrayBuffer,\n  parseSync: (arrayBuffer, options) => arrayBuffer,\n  // @ts-ignore\n  parseInBatches: async (asyncIterator, options) =>\n    (async function* parseInBatches() {\n      // @ts-ignore\n      yield* asyncIterator;\n    })(),\n  tests: [() => false],\n  options: {}\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { getFirstCharacters } from '../binary-utils/get-first-characters';\nexport function parseJSON(string) {\n  try {\n    return JSON.parse(string);\n  } catch (_) {\n    throw new Error(\"Failed to parse JSON from data starting with \\\"\".concat(getFirstCharacters(string), \"\\\"\"));\n  }\n}","map":{"version":3,"sources":["../../../../src/lib/parser-utils/parse-json.js"],"names":["getFirstCharacters","parseJSON","string","JSON","parse","_","Error"],"mappings":"AAAA,SAAQA,kBAAR,QAAiC,sCAAjC;AAGA,OAAO,SAASC,SAAT,CAAmBC,MAAnB,EAA2B;EAChC,IAAI;IACF,OAAOC,IAAI,CAACC,KAALD,CAAWD,MAAXC,CAAP;EACD,CAFD,CAEE,OAAOE,CAAP,EAAU;IACV,MAAM,IAAIC,KAAJ,CAAA,iDAAA,CAAA,MAAA,CAA2DN,kBAAkB,CAACE,MAAD,CAA7E,EAAA,IAAA,CAAA,CAAN;EACD;AACF","sourcesContent":["import {getFirstCharacters} from '../binary-utils/get-first-characters';\n\n// Minimal JSON parser with a meaningful error message\nexport function parseJSON(string) {\n  try {\n    return JSON.parse(string);\n  } catch (_) {\n    throw new Error(`Failed to parse JSON from data starting with \"${getFirstCharacters(string)}\"`);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nimport { Type } from './enum';\nexport var DataType = function () {\n  function DataType() {\n    _classCallCheck(this, DataType);\n  }\n  _createClass(DataType, [{\n    key: \"compareTo\",\n    value: function compareTo(other) {\n      return this === other;\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.NONE;\n    }\n  }], [{\n    key: \"isNull\",\n    value: function isNull(x) {\n      return x && x.typeId === Type.Null;\n    }\n  }, {\n    key: \"isInt\",\n    value: function isInt(x) {\n      return x && x.typeId === Type.Int;\n    }\n  }, {\n    key: \"isFloat\",\n    value: function isFloat(x) {\n      return x && x.typeId === Type.Float;\n    }\n  }, {\n    key: \"isBinary\",\n    value: function isBinary(x) {\n      return x && x.typeId === Type.Binary;\n    }\n  }, {\n    key: \"isUtf8\",\n    value: function isUtf8(x) {\n      return x && x.typeId === Type.Utf8;\n    }\n  }, {\n    key: \"isBool\",\n    value: function isBool(x) {\n      return x && x.typeId === Type.Bool;\n    }\n  }, {\n    key: \"isDecimal\",\n    value: function isDecimal(x) {\n      return x && x.typeId === Type.Decimal;\n    }\n  }, {\n    key: \"isDate\",\n    value: function isDate(x) {\n      return x && x.typeId === Type.Date;\n    }\n  }, {\n    key: \"isTime\",\n    value: function isTime(x) {\n      return x && x.typeId === Type.Time;\n    }\n  }, {\n    key: \"isTimestamp\",\n    value: function isTimestamp(x) {\n      return x && x.typeId === Type.Timestamp;\n    }\n  }, {\n    key: \"isInterval\",\n    value: function isInterval(x) {\n      return x && x.typeId === Type.Interval;\n    }\n  }, {\n    key: \"isList\",\n    value: function isList(x) {\n      return x && x.typeId === Type.List;\n    }\n  }, {\n    key: \"isStruct\",\n    value: function isStruct(x) {\n      return x && x.typeId === Type.Struct;\n    }\n  }, {\n    key: \"isUnion\",\n    value: function isUnion(x) {\n      return x && x.typeId === Type.Union;\n    }\n  }, {\n    key: \"isFixedSizeBinary\",\n    value: function isFixedSizeBinary(x) {\n      return x && x.typeId === Type.FixedSizeBinary;\n    }\n  }, {\n    key: \"isFixedSizeList\",\n    value: function isFixedSizeList(x) {\n      return x && x.typeId === Type.FixedSizeList;\n    }\n  }, {\n    key: \"isMap\",\n    value: function isMap(x) {\n      return x && x.typeId === Type.Map;\n    }\n  }, {\n    key: \"isDictionary\",\n    value: function isDictionary(x) {\n      return x && x.typeId === Type.Dictionary;\n    }\n  }]);\n  return DataType;\n}();\nexport var Null = function (_DataType) {\n  _inherits(Null, _DataType);\n  var _super = _createSuper(Null);\n  function Null() {\n    _classCallCheck(this, Null);\n    return _super.apply(this, arguments);\n  }\n  _createClass(Null, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"Null\";\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Null;\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return 'Null';\n    }\n  }]);\n  return Null;\n}(DataType);\nexport var Bool = function (_DataType2) {\n  _inherits(Bool, _DataType2);\n  var _super2 = _createSuper(Bool);\n  function Bool() {\n    _classCallCheck(this, Bool);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(Bool, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"Bool\";\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Bool;\n    }\n  }, {\n    key: \"ArrayType\",\n    get: function get() {\n      return Uint8Array;\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return 'Bool';\n    }\n  }]);\n  return Bool;\n}(DataType);\nexport var Int = function (_DataType3) {\n  _inherits(Int, _DataType3);\n  var _super3 = _createSuper(Int);\n  function Int(isSigned, bitWidth) {\n    var _this;\n    _classCallCheck(this, Int);\n    _this = _super3.call(this);\n    _this.isSigned = isSigned;\n    _this.bitWidth = bitWidth;\n    return _this;\n  }\n  _createClass(Int, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.isSigned ? \"I\" : \"Ui\", \"nt\").concat(this.bitWidth);\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Int;\n    }\n  }, {\n    key: \"ArrayType\",\n    get: function get() {\n      switch (this.bitWidth) {\n        case 8:\n          return this.isSigned ? Int8Array : Uint8Array;\n        case 16:\n          return this.isSigned ? Int16Array : Uint16Array;\n        case 32:\n          return this.isSigned ? Int32Array : Uint32Array;\n        case 64:\n          return this.isSigned ? Int32Array : Uint32Array;\n        default:\n          throw new Error(\"Unrecognized \".concat(this[Symbol.toStringTag], \" type\"));\n      }\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return 'Int';\n    }\n  }]);\n  return Int;\n}(DataType);\nexport var Int8 = function (_Int) {\n  _inherits(Int8, _Int);\n  var _super4 = _createSuper(Int8);\n  function Int8() {\n    _classCallCheck(this, Int8);\n    return _super4.call(this, true, 8);\n  }\n  return Int8;\n}(Int);\nexport var Int16 = function (_Int2) {\n  _inherits(Int16, _Int2);\n  var _super5 = _createSuper(Int16);\n  function Int16() {\n    _classCallCheck(this, Int16);\n    return _super5.call(this, true, 16);\n  }\n  return Int16;\n}(Int);\nexport var Int32 = function (_Int3) {\n  _inherits(Int32, _Int3);\n  var _super6 = _createSuper(Int32);\n  function Int32() {\n    _classCallCheck(this, Int32);\n    return _super6.call(this, true, 32);\n  }\n  return Int32;\n}(Int);\nexport var Int64 = function (_Int4) {\n  _inherits(Int64, _Int4);\n  var _super7 = _createSuper(Int64);\n  function Int64() {\n    _classCallCheck(this, Int64);\n    return _super7.call(this, true, 64);\n  }\n  return Int64;\n}(Int);\nexport var Uint8 = function (_Int5) {\n  _inherits(Uint8, _Int5);\n  var _super8 = _createSuper(Uint8);\n  function Uint8() {\n    _classCallCheck(this, Uint8);\n    return _super8.call(this, false, 8);\n  }\n  return Uint8;\n}(Int);\nexport var Uint16 = function (_Int6) {\n  _inherits(Uint16, _Int6);\n  var _super9 = _createSuper(Uint16);\n  function Uint16() {\n    _classCallCheck(this, Uint16);\n    return _super9.call(this, false, 16);\n  }\n  return Uint16;\n}(Int);\nexport var Uint32 = function (_Int7) {\n  _inherits(Uint32, _Int7);\n  var _super10 = _createSuper(Uint32);\n  function Uint32() {\n    _classCallCheck(this, Uint32);\n    return _super10.call(this, false, 32);\n  }\n  return Uint32;\n}(Int);\nexport var Uint64 = function (_Int8) {\n  _inherits(Uint64, _Int8);\n  var _super11 = _createSuper(Uint64);\n  function Uint64() {\n    _classCallCheck(this, Uint64);\n    return _super11.call(this, false, 64);\n  }\n  return Uint64;\n}(Int);\nvar Precision = {\n  HALF: 16,\n  SINGLE: 32,\n  DOUBLE: 64\n};\nexport var Float = function (_DataType4) {\n  _inherits(Float, _DataType4);\n  var _super12 = _createSuper(Float);\n  function Float(precision) {\n    var _this2;\n    _classCallCheck(this, Float);\n    _this2 = _super12.call(this);\n    _this2.precision = precision;\n    return _this2;\n  }\n  _createClass(Float, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"Float\".concat(this.precision);\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Float;\n    }\n  }, {\n    key: \"ArrayType\",\n    get: function get() {\n      switch (this.precision) {\n        case Precision.HALF:\n          return Uint16Array;\n        case Precision.SINGLE:\n          return Float32Array;\n        case Precision.DOUBLE:\n          return Float64Array;\n        default:\n          throw new Error(\"Unrecognized \".concat(this[Symbol.toStringTag], \" type\"));\n      }\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return 'Float';\n    }\n  }]);\n  return Float;\n}(DataType);\nexport var Float16 = function (_Float) {\n  _inherits(Float16, _Float);\n  var _super13 = _createSuper(Float16);\n  function Float16() {\n    _classCallCheck(this, Float16);\n    return _super13.call(this, Precision.HALF);\n  }\n  return Float16;\n}(Float);\nexport var Float32 = function (_Float2) {\n  _inherits(Float32, _Float2);\n  var _super14 = _createSuper(Float32);\n  function Float32() {\n    _classCallCheck(this, Float32);\n    return _super14.call(this, Precision.SINGLE);\n  }\n  return Float32;\n}(Float);\nexport var Float64 = function (_Float3) {\n  _inherits(Float64, _Float3);\n  var _super15 = _createSuper(Float64);\n  function Float64() {\n    _classCallCheck(this, Float64);\n    return _super15.call(this, Precision.DOUBLE);\n  }\n  return Float64;\n}(Float);\nexport var Utf8 = function (_DataType5) {\n  _inherits(Utf8, _DataType5);\n  var _super16 = _createSuper(Utf8);\n  function Utf8() {\n    _classCallCheck(this, Utf8);\n    return _super16.apply(this, arguments);\n  }\n  _createClass(Utf8, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"Utf8\";\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Utf8;\n    }\n  }, {\n    key: \"ArrayType\",\n    get: function get() {\n      return Uint8Array;\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return 'Utf8';\n    }\n  }]);\n  return Utf8;\n}(DataType);\nvar DateUnit = {\n  DAY: 0,\n  MILLISECOND: 1\n};\nvar _Date = function (_DataType6) {\n  _inherits(_Date, _DataType6);\n  var _super17 = _createSuper(_Date);\n  function _Date(unit) {\n    var _this3;\n    _classCallCheck(this, _Date);\n    _this3 = _super17.call(this);\n    _this3.unit = unit;\n    return _this3;\n  }\n  _createClass(_Date, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"Date\".concat((this.unit + 1) * 32, \"<\").concat(DateUnit[this.unit], \">\");\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Date;\n    }\n  }, {\n    key: \"ArrayType\",\n    get: function get() {\n      return Int32Array;\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return 'Date';\n    }\n  }]);\n  return _Date;\n}(DataType);\nexport { _Date as Date };\nexport var DateDay = function (_Date2) {\n  _inherits(DateDay, _Date2);\n  var _super18 = _createSuper(DateDay);\n  function DateDay() {\n    _classCallCheck(this, DateDay);\n    return _super18.call(this, DateUnit.DAY);\n  }\n  return DateDay;\n}(_Date);\nexport var DateMillisecond = function (_Date3) {\n  _inherits(DateMillisecond, _Date3);\n  var _super19 = _createSuper(DateMillisecond);\n  function DateMillisecond() {\n    _classCallCheck(this, DateMillisecond);\n    return _super19.call(this, DateUnit.MILLISECOND);\n  }\n  return DateMillisecond;\n}(_Date);\nvar TimeUnit = {\n  SECOND: 1,\n  MILLISECOND: 1e3,\n  MICROSECOND: 1e6,\n  NANOSECOND: 1e9\n};\nexport var Time = function (_DataType7) {\n  _inherits(Time, _DataType7);\n  var _super20 = _createSuper(Time);\n  function Time(unit, bitWidth) {\n    var _this4;\n    _classCallCheck(this, Time);\n    _this4 = _super20.call(this);\n    _this4.unit = unit;\n    _this4.bitWidth = bitWidth;\n    return _this4;\n  }\n  _createClass(Time, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"Time\".concat(this.bitWidth, \"<\").concat(TimeUnit[this.unit], \">\");\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Time;\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return 'Time';\n    }\n  }, {\n    key: \"ArrayType\",\n    get: function get() {\n      return Int32Array;\n    }\n  }]);\n  return Time;\n}(DataType);\nexport var TimeSecond = function (_Time) {\n  _inherits(TimeSecond, _Time);\n  var _super21 = _createSuper(TimeSecond);\n  function TimeSecond() {\n    _classCallCheck(this, TimeSecond);\n    return _super21.call(this, TimeUnit.SECOND, 32);\n  }\n  return TimeSecond;\n}(Time);\nexport var TimeMillisecond = function (_Time2) {\n  _inherits(TimeMillisecond, _Time2);\n  var _super22 = _createSuper(TimeMillisecond);\n  function TimeMillisecond() {\n    _classCallCheck(this, TimeMillisecond);\n    return _super22.call(this, TimeUnit.MILLISECOND, 32);\n  }\n  return TimeMillisecond;\n}(Time);\nexport var Timestamp = function (_DataType8) {\n  _inherits(Timestamp, _DataType8);\n  var _super23 = _createSuper(Timestamp);\n  function Timestamp(unit) {\n    var _this5;\n    var timezone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    _classCallCheck(this, Timestamp);\n    _this5 = _super23.call(this);\n    _this5.unit = unit;\n    _this5.timezone = timezone;\n    return _this5;\n  }\n  _createClass(Timestamp, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"Timestamp<\".concat(TimeUnit[this.unit]).concat(this.timezone ? \", \".concat(this.timezone) : \"\", \">\");\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Timestamp;\n    }\n  }, {\n    key: \"ArrayType\",\n    get: function get() {\n      return Int32Array;\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return 'Timestamp';\n    }\n  }]);\n  return Timestamp;\n}(DataType);\nexport var TimestampSecond = function (_Timestamp) {\n  _inherits(TimestampSecond, _Timestamp);\n  var _super24 = _createSuper(TimestampSecond);\n  function TimestampSecond() {\n    var timezone = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    _classCallCheck(this, TimestampSecond);\n    return _super24.call(this, TimeUnit.SECOND, timezone);\n  }\n  return TimestampSecond;\n}(Timestamp);\nexport var TimestampMillisecond = function (_Timestamp2) {\n  _inherits(TimestampMillisecond, _Timestamp2);\n  var _super25 = _createSuper(TimestampMillisecond);\n  function TimestampMillisecond() {\n    var timezone = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    _classCallCheck(this, TimestampMillisecond);\n    return _super25.call(this, TimeUnit.MILLISECOND, timezone);\n  }\n  return TimestampMillisecond;\n}(Timestamp);\nexport var TimestampMicrosecond = function (_Timestamp3) {\n  _inherits(TimestampMicrosecond, _Timestamp3);\n  var _super26 = _createSuper(TimestampMicrosecond);\n  function TimestampMicrosecond() {\n    var timezone = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    _classCallCheck(this, TimestampMicrosecond);\n    return _super26.call(this, TimeUnit.MICROSECOND, timezone);\n  }\n  return TimestampMicrosecond;\n}(Timestamp);\nexport var TimestampNanosecond = function (_Timestamp4) {\n  _inherits(TimestampNanosecond, _Timestamp4);\n  var _super27 = _createSuper(TimestampNanosecond);\n  function TimestampNanosecond() {\n    var timezone = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    _classCallCheck(this, TimestampNanosecond);\n    return _super27.call(this, TimeUnit.NANOSECOND, timezone);\n  }\n  return TimestampNanosecond;\n}(Timestamp);\nvar IntervalUnit = {\n  DAY_TIME: 0,\n  YEAR_MONTH: 1\n};\nexport var Interval = function (_DataType9) {\n  _inherits(Interval, _DataType9);\n  var _super28 = _createSuper(Interval);\n  function Interval(unit) {\n    var _this6;\n    _classCallCheck(this, Interval);\n    _this6 = _super28.call(this);\n    _this6.unit = unit;\n    return _this6;\n  }\n  _createClass(Interval, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"Interval<\".concat(IntervalUnit[this.unit], \">\");\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Interval;\n    }\n  }, {\n    key: \"ArrayType\",\n    get: function get() {\n      return Int32Array;\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return 'Interval';\n    }\n  }]);\n  return Interval;\n}(DataType);\nexport var IntervalDayTime = function (_Interval) {\n  _inherits(IntervalDayTime, _Interval);\n  var _super29 = _createSuper(IntervalDayTime);\n  function IntervalDayTime() {\n    _classCallCheck(this, IntervalDayTime);\n    return _super29.call(this, IntervalUnit.DAY_TIME);\n  }\n  return IntervalDayTime;\n}(Interval);\nexport var IntervalYearMonth = function (_Interval2) {\n  _inherits(IntervalYearMonth, _Interval2);\n  var _super30 = _createSuper(IntervalYearMonth);\n  function IntervalYearMonth() {\n    _classCallCheck(this, IntervalYearMonth);\n    return _super30.call(this, IntervalUnit.YEAR_MONTH);\n  }\n  return IntervalYearMonth;\n}(Interval);\nexport var FixedSizeList = function (_DataType10) {\n  _inherits(FixedSizeList, _DataType10);\n  var _super31 = _createSuper(FixedSizeList);\n  function FixedSizeList(listSize, child) {\n    var _this7;\n    _classCallCheck(this, FixedSizeList);\n    _this7 = _super31.call(this);\n    _this7.listSize = listSize;\n    _this7.children = [child];\n    return _this7;\n  }\n  _createClass(FixedSizeList, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"FixedSizeList[\".concat(this.listSize, \"]<\").concat(this.valueType, \">\");\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.FixedSizeList;\n    }\n  }, {\n    key: \"valueType\",\n    get: function get() {\n      return this.children[0].type;\n    }\n  }, {\n    key: \"valueField\",\n    get: function get() {\n      return this.children[0];\n    }\n  }, {\n    key: \"ArrayType\",\n    get: function get() {\n      return this.valueType.ArrayType;\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return 'FixedSizeList';\n    }\n  }]);\n  return FixedSizeList;\n}(DataType);","map":{"version":3,"sources":["../../../../../src/lib/types/arrow-like/type.js"],"names":["Type","DataType","x","typeId","Null","Int","Float","Binary","Utf8","Bool","Decimal","Date","Time","Timestamp","Interval","List","Struct","Union","FixedSizeBinary","FixedSizeList","Map","Dictionary","NONE","other","Symbol","toStringTag","Uint8Array","isSigned","bitWidth","Int8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Error","Int8","Int16","Int32","Int64","Uint8","Uint16","Uint32","Uint64","Precision","HALF","SINGLE","DOUBLE","precision","Float32Array","Float64Array","Float16","Float32","Float64","DateUnit","DAY","MILLISECOND","unit","DateDay","DateMillisecond","TimeUnit","SECOND","MICROSECOND","NANOSECOND","TimeSecond","TimeMillisecond","timezone","TimestampSecond","TimestampMillisecond","TimestampMicrosecond","TimestampNanosecond","IntervalUnit","DAY_TIME","YEAR_MONTH","IntervalDayTime","IntervalYearMonth","listSize","child","children","type","valueType","ArrayType"],"mappings":"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","sourcesContent":["// This code is adapted from ArrowJS https://github.com/apache/arrow\n// under Apache license http://www.apache.org/licenses/LICENSE-2.0\n\nimport {Type} from './enum';\n\nexport class DataType {\n  static isNull(x) {\n    return x && x.typeId === Type.Null;\n  }\n  static isInt(x) {\n    return x && x.typeId === Type.Int;\n  }\n  static isFloat(x) {\n    return x && x.typeId === Type.Float;\n  }\n  static isBinary(x) {\n    return x && x.typeId === Type.Binary;\n  }\n  static isUtf8(x) {\n    return x && x.typeId === Type.Utf8;\n  }\n  static isBool(x) {\n    return x && x.typeId === Type.Bool;\n  }\n  static isDecimal(x) {\n    return x && x.typeId === Type.Decimal;\n  }\n  static isDate(x) {\n    return x && x.typeId === Type.Date;\n  }\n  static isTime(x) {\n    return x && x.typeId === Type.Time;\n  }\n  static isTimestamp(x) {\n    return x && x.typeId === Type.Timestamp;\n  }\n  static isInterval(x) {\n    return x && x.typeId === Type.Interval;\n  }\n  static isList(x) {\n    return x && x.typeId === Type.List;\n  }\n  static isStruct(x) {\n    return x && x.typeId === Type.Struct;\n  }\n  static isUnion(x) {\n    return x && x.typeId === Type.Union;\n  }\n  static isFixedSizeBinary(x) {\n    return x && x.typeId === Type.FixedSizeBinary;\n  }\n  static isFixedSizeList(x) {\n    return x && x.typeId === Type.FixedSizeList;\n  }\n  static isMap(x) {\n    return x && x.typeId === Type.Map;\n  }\n  static isDictionary(x) {\n    return x && x.typeId === Type.Dictionary;\n  }\n\n  get typeId() {\n    return Type.NONE;\n  }\n  // get ArrayType() { return Array; }\n  compareTo(other) {\n    // TODO\n    return this === other; // comparer.visit(this, other);\n  }\n}\n\n// NULL\n\nexport class Null extends DataType {\n  get typeId() {\n    return Type.Null;\n  }\n  get [Symbol.toStringTag]() {\n    return 'Null';\n  }\n  toString() {\n    return `Null`;\n  }\n}\n\n// BOOLEANS\n\nexport class Bool extends DataType {\n  get typeId() {\n    return Type.Bool;\n  }\n  get ArrayType() {\n    return Uint8Array;\n  }\n  get [Symbol.toStringTag]() {\n    return 'Bool';\n  }\n  toString() {\n    return `Bool`;\n  }\n}\n\n// INTS\n\nexport class Int extends DataType {\n  constructor(isSigned, bitWidth) {\n    super();\n    this.isSigned = isSigned;\n    this.bitWidth = bitWidth;\n  }\n  get typeId() {\n    return Type.Int;\n  }\n  get ArrayType() {\n    switch (this.bitWidth) {\n      case 8:\n        return this.isSigned ? Int8Array : Uint8Array;\n      case 16:\n        return this.isSigned ? Int16Array : Uint16Array;\n      case 32:\n        return this.isSigned ? Int32Array : Uint32Array;\n      case 64:\n        return this.isSigned ? Int32Array : Uint32Array;\n      default:\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n  }\n  get [Symbol.toStringTag]() {\n    return 'Int';\n  }\n  toString() {\n    return `${this.isSigned ? `I` : `Ui`}nt${this.bitWidth}`;\n  }\n}\n\nexport class Int8 extends Int {\n  constructor() {\n    super(true, 8);\n  }\n}\nexport class Int16 extends Int {\n  constructor() {\n    super(true, 16);\n  }\n}\nexport class Int32 extends Int {\n  constructor() {\n    super(true, 32);\n  }\n}\nexport class Int64 extends Int {\n  constructor() {\n    super(true, 64);\n  }\n}\nexport class Uint8 extends Int {\n  constructor() {\n    super(false, 8);\n  }\n}\nexport class Uint16 extends Int {\n  constructor() {\n    super(false, 16);\n  }\n}\nexport class Uint32 extends Int {\n  constructor() {\n    super(false, 32);\n  }\n}\nexport class Uint64 extends Int {\n  constructor() {\n    super(false, 64);\n  }\n}\n\n// FLOATS\n\nconst Precision = {\n  HALF: 16,\n  SINGLE: 32,\n  DOUBLE: 64\n};\n\nexport class Float extends DataType {\n  constructor(precision) {\n    super();\n    this.precision = precision;\n  }\n  get typeId() {\n    return Type.Float;\n  }\n  get ArrayType() {\n    switch (this.precision) {\n      case Precision.HALF:\n        return Uint16Array;\n      case Precision.SINGLE:\n        return Float32Array;\n      case Precision.DOUBLE:\n        return Float64Array;\n      default:\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n  }\n  get [Symbol.toStringTag]() {\n    return 'Float';\n  }\n  toString() {\n    return `Float${this.precision}`;\n  }\n}\n\nexport class Float16 extends Float {\n  constructor() {\n    super(Precision.HALF);\n  }\n}\nexport class Float32 extends Float {\n  constructor() {\n    super(Precision.SINGLE);\n  }\n}\nexport class Float64 extends Float {\n  constructor() {\n    super(Precision.DOUBLE);\n  }\n}\n\n// STRINGS\n\nexport class Utf8 extends DataType {\n  get typeId() {\n    return Type.Utf8;\n  }\n  get ArrayType() {\n    return Uint8Array;\n  }\n  get [Symbol.toStringTag]() {\n    return 'Utf8';\n  }\n  toString() {\n    return `Utf8`;\n  }\n}\n\n// DATES, TIMES AND INTERVALS\n\nconst DateUnit = {\n  DAY: 0,\n  MILLISECOND: 1\n};\n\nexport class Date extends DataType {\n  constructor(unit) {\n    super();\n    this.unit = unit;\n  }\n  get typeId() {\n    return Type.Date;\n  }\n  get ArrayType() {\n    return Int32Array;\n  }\n  get [Symbol.toStringTag]() {\n    return 'Date';\n  }\n  toString() {\n    return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`;\n  }\n}\n\nexport class DateDay extends Date {\n  constructor() {\n    super(DateUnit.DAY);\n  }\n}\nexport class DateMillisecond extends Date {\n  constructor() {\n    super(DateUnit.MILLISECOND);\n  }\n}\n\nconst TimeUnit = {\n  SECOND: 1,\n  MILLISECOND: 1e3,\n  MICROSECOND: 1e6,\n  NANOSECOND: 1e9\n};\n\nexport class Time extends DataType {\n  constructor(unit, bitWidth) {\n    super();\n    this.unit = unit;\n    this.bitWidth = bitWidth;\n  }\n  get typeId() {\n    return Type.Time;\n  }\n  toString() {\n    return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`;\n  }\n  get [Symbol.toStringTag]() {\n    return 'Time';\n  }\n  get ArrayType() {\n    return Int32Array;\n  }\n}\n\nexport class TimeSecond extends Time {\n  constructor() {\n    super(TimeUnit.SECOND, 32);\n  }\n}\nexport class TimeMillisecond extends Time {\n  constructor() {\n    super(TimeUnit.MILLISECOND, 32);\n  }\n}\n// export class TimeMicrosecond extends Time { constructor() { super(TimeUnit.MICROSECOND, 64); } }\n// export class TimeNanosecond extends Time { constructor() { super(TimeUnit.NANOSECOND, 64); } }\n\nexport class Timestamp extends DataType {\n  constructor(unit, timezone = null) {\n    super();\n    this.unit = unit;\n    this.timezone = timezone;\n  }\n  get typeId() {\n    return Type.Timestamp;\n  }\n  get ArrayType() {\n    return Int32Array;\n  }\n  get [Symbol.toStringTag]() {\n    return 'Timestamp';\n  }\n  toString() {\n    return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ``}>`;\n  }\n}\n\nexport class TimestampSecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.SECOND, timezone);\n  }\n}\nexport class TimestampMillisecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.MILLISECOND, timezone);\n  }\n}\nexport class TimestampMicrosecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.MICROSECOND, timezone);\n  }\n}\nexport class TimestampNanosecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.NANOSECOND, timezone);\n  }\n}\n\nconst IntervalUnit = {\n  DAY_TIME: 0,\n  YEAR_MONTH: 1\n};\n\nexport class Interval extends DataType {\n  constructor(unit) {\n    super();\n    this.unit = unit;\n  }\n  get typeId() {\n    return Type.Interval;\n  }\n  get ArrayType() {\n    return Int32Array;\n  }\n  get [Symbol.toStringTag]() {\n    return 'Interval';\n  }\n  toString() {\n    return `Interval<${IntervalUnit[this.unit]}>`;\n  }\n}\n\nexport class IntervalDayTime extends Interval {\n  constructor() {\n    super(IntervalUnit.DAY_TIME);\n  }\n}\nexport class IntervalYearMonth extends Interval {\n  constructor() {\n    super(IntervalUnit.YEAR_MONTH);\n  }\n}\n\nexport class FixedSizeList extends DataType {\n  constructor(listSize, child) {\n    super();\n    this.listSize = listSize;\n    this.children = [child];\n  }\n  get typeId() {\n    return Type.FixedSizeList;\n  }\n  get valueType() {\n    return this.children[0].type;\n  }\n  get valueField() {\n    return this.children[0];\n  }\n  get ArrayType() {\n    return this.valueType.ArrayType;\n  }\n  get [Symbol.toStringTag]() {\n    return 'FixedSizeList';\n  }\n  toString() {\n    return `FixedSizeList[${this.listSize}]<${this.valueType}>`;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
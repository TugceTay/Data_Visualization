{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _styledComponents = _interopRequireWildcard(require(\"styled-components\"));\nvar _progressBar = _interopRequireDefault(require(\"../progress-bar\"));\nvar _styledComponents2 = require(\"../styled-components\");\nvar _utils = require(\"../../../utils/utils\");\nvar _templateObject, _templateObject2, _templateObject3;\n\n/** @typedef {import('./file-upload-progress').FileUploadProgressProps} FileUploadProgressProps*/\nvar StyledFileProgress = _styledComponents[\"default\"].div.attrs({\n  className: 'file-upload__progress'\n})(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  color: \", \";\\n  font-size: 12px;\\n  margin-top: 12px;\\n  border-image: initial;\\n  padding: 8px 12px;\\n\\n  .top-row {\\n    display: flex;\\n    justify-content: space-between;\\n  }\\n\\n  .file-name {\\n    font-weight: 500;\\n  }\\n  .middle-row {\\n    margin-top: 6px;\\n  }\\n  .bottom-row {\\n    margin-top: 6px;\\n    text-align: start;\\n  }\\n\"])), function (props) {\n  return props.theme.textColorLT;\n});\nvar StyledProgressWrapper = _styledComponents[\"default\"].div.attrs({\n  className: 'file-upload__progress__wrapper'\n})(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  width: 400px;\\n\"])));\nvar StyledContainer = _styledComponents[\"default\"].div(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  width: 100%;\\n  display: flex;\\n  justify-content: center;\\n\"])));\nvar formatPercent = function formatPercent(percent) {\n  return \"\".concat(Math.floor(percent * 100), \"%\");\n};\n/**\n * @param {object} params\n * @param {string} params.message\n * @param {string} params.fileName\n * @param {number} params.percent\n * @param {any} params.error\n * @param {object} params.theme\n */\n\nvar UploadProgress = function UploadProgress(_ref) {\n  var message = _ref.message,\n    fileName = _ref.fileName,\n    percent = _ref.percent,\n    error = _ref.error,\n    theme = _ref.theme;\n  var percentStr = formatPercent(percent);\n  var barColor = error ? theme.errorColor : theme.activeColorLT;\n  return /*#__PURE__*/_react[\"default\"].createElement(StyledFileProgress, {\n    className: \"file-upload-progress__message\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"top-row\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_styledComponents2.TruncatedTitleText, {\n    className: \"file-name\",\n    title: fileName\n  }, fileName), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"percent\"\n  }, percentStr)), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"middle-row\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_progressBar[\"default\"], {\n    percent: percentStr,\n    barColor: barColor,\n    isLoading: true,\n    theme: theme\n  })), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"bottom-row\",\n    style: {\n      color: error ? theme.errorColor : theme.textColorLT\n    }\n  }, error ? (0, _utils.getError)(error) : message));\n};\n/** @type {React.FunctionComponent<FileUploadProgressProps>} */\n\nvar FileUploadProgress = function FileUploadProgress(_ref2) {\n  var fileLoadingProgress = _ref2.fileLoadingProgress,\n    theme = _ref2.theme;\n  return /*#__PURE__*/_react[\"default\"].createElement(StyledContainer, null, /*#__PURE__*/_react[\"default\"].createElement(StyledProgressWrapper, null, Object.values(fileLoadingProgress).map(function (item) {\n    return /*#__PURE__*/_react[\"default\"].createElement(UploadProgress, (0, _extends2[\"default\"])({}, item, {\n      key: item.fileName,\n      theme: theme\n    }));\n  })));\n};\nvar _default = (0, _styledComponents.withTheme)(FileUploadProgress);\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../../src/components/common/file-uploader/file-upload-progress.js"],"names":["StyledFileProgress","div","attrs","className","props","theme","textColorLT","StyledProgressWrapper","StyledContainer","styled","formatPercent","Math","floor","percent","UploadProgress","message","fileName","error","percentStr","barColor","errorColor","activeColorLT","color","FileUploadProgress","fileLoadingProgress","values","map","item"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React from 'react';\nimport styled, {withTheme} from 'styled-components';\nimport ProgressBar from '../progress-bar';\nimport {TruncatedTitleText} from 'components/common/styled-components';\nimport {getError} from 'utils/utils';\n\n/** @typedef {import('./file-upload-progress').FileUploadProgressProps} FileUploadProgressProps*/\n\nconst StyledFileProgress = styled.div.attrs({\n  className: 'file-upload__progress'\n})`\n  color: ${props => props.theme.textColorLT};\n  font-size: 12px;\n  margin-top: 12px;\n  border-image: initial;\n  padding: 8px 12px;\n\n  .top-row {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .file-name {\n    font-weight: 500;\n  }\n  .middle-row {\n    margin-top: 6px;\n  }\n  .bottom-row {\n    margin-top: 6px;\n    text-align: start;\n  }\n`;\n\nconst StyledProgressWrapper = styled.div.attrs({\n  className: 'file-upload__progress__wrapper'\n})`\n  width: 400px;\n`;\n\nconst StyledContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst formatPercent = percent => `${Math.floor(percent * 100)}%`;\n\n/**\n * @param {object} params\n * @param {string} params.message\n * @param {string} params.fileName\n * @param {number} params.percent\n * @param {any} params.error\n * @param {object} params.theme\n */\nconst UploadProgress = ({message, fileName, percent, error, theme}) => {\n  const percentStr = formatPercent(percent);\n  const barColor = error ? theme.errorColor : theme.activeColorLT;\n\n  return (\n    <StyledFileProgress className=\"file-upload-progress__message\">\n      <div className=\"top-row\">\n        <TruncatedTitleText className=\"file-name\" title={fileName}>\n          {fileName}\n        </TruncatedTitleText>\n        <div className=\"percent\">{percentStr}</div>\n      </div>\n      <div className=\"middle-row\">\n        <ProgressBar percent={percentStr} barColor={barColor} isLoading theme={theme} />\n      </div>\n      <div className=\"bottom-row\" style={{color: error ? theme.errorColor : theme.textColorLT}}>\n        {error ? getError(error) : message}\n      </div>\n    </StyledFileProgress>\n  );\n};\n\n/** @type {React.FunctionComponent<FileUploadProgressProps>} */\nconst FileUploadProgress = ({fileLoadingProgress, theme}) => (\n  <StyledContainer>\n    <StyledProgressWrapper>\n      {Object.values(fileLoadingProgress).map(item => (\n        <UploadProgress {...item} key={item.fileName} theme={theme} />\n      ))}\n    </StyledProgressWrapper>\n  </StyledContainer>\n);\n\nexport default withTheme(FileUploadProgress);\n"]},"metadata":{},"sourceType":"script"}
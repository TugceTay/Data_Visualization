{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _icons = require(\"../common/icons\");\nvar _styledComponents = require(\"../common/styled-components\");\nvar _mapControlTooltip = _interopRequireDefault(require(\"./map-control-tooltip\"));\nvar _mapControlPanel = _interopRequireDefault(require(\"./map-control-panel\"));\n\n// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nToggle3dButtonFactory.deps = [_mapControlTooltip[\"default\"], _mapControlPanel[\"default\"]];\nfunction Toggle3dButtonFactory(MapControlTooltip) {\n  var defaultActionIcons = {\n    cube: _icons.Cube3d\n  };\n  /** @type {import('./toggle-3d-button').Toggle3dButtonComponent} */\n\n  var Toggle3dButton = function Toggle3dButton(_ref) {\n    var dragRotate = _ref.dragRotate,\n      onTogglePerspective = _ref.onTogglePerspective,\n      _ref$actionIcons = _ref.actionIcons,\n      actionIcons = _ref$actionIcons === void 0 ? defaultActionIcons : _ref$actionIcons,\n      mapControls = _ref.mapControls;\n    var onClick = (0, _react.useCallback)(function (event) {\n      event.preventDefault();\n      onTogglePerspective();\n    }, [onTogglePerspective]);\n    var isVisible = (0, _react.useMemo)(function () {\n      return ((mapControls === null || mapControls === void 0 ? void 0 : mapControls.toggle3d) || {}).show;\n    }, [mapControls]);\n    return isVisible ? /*#__PURE__*/_react[\"default\"].createElement(_styledComponents.MapControlButton, {\n      onClick: onClick,\n      className: (0, _classnames[\"default\"])('map-control-button', 'toggle-3d', {\n        map3d: dragRotate\n      }),\n      active: dragRotate,\n      \"data-tip\": true,\n      \"data-for\": \"action-3d\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(actionIcons.cube, {\n      height: \"22px\"\n    }), /*#__PURE__*/_react[\"default\"].createElement(MapControlTooltip, {\n      id: \"action-3d\",\n      message: dragRotate ? 'tooltip.disable3DMap' : 'tooltip.3DMap'\n    })) : null;\n  };\n  Toggle3dButton.displayName = 'Toggle3dButton';\n  return /*#__PURE__*/_react[\"default\"].memo(Toggle3dButton);\n}\nvar _default = Toggle3dButtonFactory;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../src/components/map/toggle-3d-button.js"],"names":["Toggle3dButtonFactory","deps","MapControlTooltipFactory","MapControlPanelFactory","MapControlTooltip","defaultActionIcons","cube","Cube3d","Toggle3dButton","dragRotate","onTogglePerspective","actionIcons","mapControls","onClick","event","preventDefault","isVisible","toggle3d","show","map3d","displayName","React","memo"],"mappings":";;;;;;;;AAoBA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;AAEA,IAAA,MAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;AACA,IAAA,iBAAA,GAAA,OAAA,CAAA,6BAAA,CAAA;AACA,IAAA,kBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,uBAAA,CAAA,CAAA;AACA,IAAA,gBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,qBAAA,CAAA,CAAA;;AA1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUAA,qBAAqB,CAACC,IAAtBD,GAA6B,CAACE,kBAAAA,CAAAA,SAAAA,CAAD,EAA2BC,gBAAAA,CAAAA,SAAAA,CAA3B,CAA7BH;AAEA,SAASA,qBAAT,CAA+BI,iBAA/B,EAAkD;EAChD,IAAMC,kBAAkB,GAAG;IACzBC,IAAI,EAAEC,MAAAA,CAAAA;EADmB,CAA3B;EAGA;;EACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAA,IAAA,EAKjB;IAAA,IAJJC,UAII,GAAA,IAAA,CAJJA,UAII;MAHJC,mBAGI,GAAA,IAAA,CAHJA,mBAGI;MAAA,gBAAA,GAAA,IAAA,CAFJC,WAEI;MAFJA,WAEI,GAAA,gBAAA,KAAA,KAAA,CAAA,GAFUN,kBAEV,GAAA,gBAAA;MADJO,WACI,GAAA,IAAA,CADJA,WACI;IACJ,IAAMC,OAAO,GAAG,CAAA,CAAA,EAAA,MAAA,CAAA,WAAA,EACd,UAAA,KAAK,EAAI;MACPC,KAAK,CAACC,cAAND,EAAAA;MACAJ,mBAAmB,EAAA;IACpB,CAJa,EAKd,CAACA,mBAAD,CALc,CAAhB;IAQA,IAAMM,SAAS,GAAG,CAAA,CAAA,EAAA,MAAA,CAAA,OAAA,EAAQ,YAAM;MAC9B,OAAO,CAAC,CAAA,WAAW,KAAA,IAAX,IAAA,WAAW,KAAA,KAAA,CAAX,GAAA,KAAA,CAAA,GAAA,WAAW,CAAEC,QAAb,KAAyB,CAAA,CAA1B,EAA8BC,IAArC;IACD,CAFiB,EAEf,CAACN,WAAD,CAFe,CAAlB;IAIA,OAAOI,SAAS,GAAA,aACb,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,iBAAA,CAAA,gBAAD,EAAA;MACC,OAAO,EAAEH,OADV;MAEC,SAAS,EAAE,CAAA,CAAA,EAAA,WAAA,CAAA,SAAA,CAAA,EAAW,oBAAX,EAAiC,WAAjC,EAA8C;QAACM,KAAK,EAAEV;MAAR,CAA9C,CAFZ;MAGC,MAAM,EAAEA,UAHT;MAIC,UAAA,EAAA,IAJD;MAKC,UAAA,EAAS;IALV,CAAA,EAAA,aAOC,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,WAAD,CAAa,IAAb,EAAA;MAAkB,MAAM,EAAC;IAAzB,CAAA,CAPD,EAAA,aAQC,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,iBAAD,EAAA;MACE,EAAE,EAAC,WADL;MAEE,OAAO,EAAEA,UAAU,GAAG,sBAAH,GAA4B;IAFjD,CAAA,CARD,CADa,GAcZ,IAdJ;EAeD,CAjCD;EAmCAD,cAAc,CAACY,WAAfZ,GAA6B,gBAA7BA;EACA,OAAA,aAAOa,MAAAA,CAAAA,SAAAA,CAAAA,CAAMC,IAAND,CAAWb,cAAXa,CAAP;AACD;eAEcrB,qB","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {useCallback, useMemo} from 'react';\nimport classnames from 'classnames';\n\nimport {Cube3d} from 'components/common/icons';\nimport {MapControlButton} from 'components/common/styled-components';\nimport MapControlTooltipFactory from './map-control-tooltip';\nimport MapControlPanelFactory from './map-control-panel';\n\nToggle3dButtonFactory.deps = [MapControlTooltipFactory, MapControlPanelFactory];\n\nfunction Toggle3dButtonFactory(MapControlTooltip) {\n  const defaultActionIcons = {\n    cube: Cube3d\n  };\n  /** @type {import('./toggle-3d-button').Toggle3dButtonComponent} */\n  const Toggle3dButton = ({\n    dragRotate,\n    onTogglePerspective,\n    actionIcons = defaultActionIcons,\n    mapControls\n  }) => {\n    const onClick = useCallback(\n      event => {\n        event.preventDefault();\n        onTogglePerspective();\n      },\n      [onTogglePerspective]\n    );\n\n    const isVisible = useMemo(() => {\n      return (mapControls?.toggle3d || {}).show;\n    }, [mapControls]);\n\n    return isVisible ? (\n      (<MapControlButton\n        onClick={onClick}\n        className={classnames('map-control-button', 'toggle-3d', {map3d: dragRotate})}\n        active={dragRotate}\n        data-tip\n        data-for=\"action-3d\"\n      >\n        <actionIcons.cube height=\"22px\" />\n        <MapControlTooltip\n          id=\"action-3d\"\n          message={dragRotate ? 'tooltip.disable3DMap' : 'tooltip.3DMap'}\n        />\n      </MapControlButton>)\n    ) : null;\n  };\n\n  Toggle3dButton.displayName = 'Toggle3dButton';\n  return React.memo(Toggle3dButton);\n}\n\nexport default Toggle3dButtonFactory;\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _awaitAsyncGenerator from \"@babel/runtime/helpers/esm/awaitAsyncGenerator\";\nimport _wrapAsyncGenerator from \"@babel/runtime/helpers/esm/wrapAsyncGenerator\";\nimport _asyncIterator from \"@babel/runtime/helpers/esm/asyncIterator\";\nimport { isBrowser, nodeVersion, toArrayBuffer } from '@loaders.gl/loader-utils';\nexport function makeStreamIterator(stream) {\n  if (isBrowser || nodeVersion >= 10) {\n    if (typeof stream[Symbol.asyncIterator] === 'function') {\n      return makeToArrayBufferIterator(stream);\n    }\n    if (typeof stream.getIterator === 'function') {\n      return stream.getIterator();\n    }\n  }\n  return isBrowser ? makeBrowserStreamIterator(stream) : makeNodeStreamIterator(stream);\n}\nfunction makeToArrayBufferIterator(_x) {\n  return _makeToArrayBufferIterator.apply(this, arguments);\n}\nfunction _makeToArrayBufferIterator() {\n  _makeToArrayBufferIterator = _wrapAsyncGenerator(_regeneratorRuntime.mark(function _callee(asyncIterator) {\n    var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, chunk;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _iteratorNormalCompletion = true;\n            _didIteratorError = false;\n            _context.prev = 2;\n            _iterator = _asyncIterator(asyncIterator);\n          case 4:\n            _context.next = 6;\n            return _awaitAsyncGenerator(_iterator.next());\n          case 6:\n            _step = _context.sent;\n            _iteratorNormalCompletion = _step.done;\n            _context.next = 10;\n            return _awaitAsyncGenerator(_step.value);\n          case 10:\n            _value = _context.sent;\n            if (_iteratorNormalCompletion) {\n              _context.next = 18;\n              break;\n            }\n            chunk = _value;\n            _context.next = 15;\n            return toArrayBuffer(chunk);\n          case 15:\n            _iteratorNormalCompletion = true;\n            _context.next = 4;\n            break;\n          case 18:\n            _context.next = 24;\n            break;\n          case 20:\n            _context.prev = 20;\n            _context.t0 = _context[\"catch\"](2);\n            _didIteratorError = true;\n            _iteratorError = _context.t0;\n          case 24:\n            _context.prev = 24;\n            _context.prev = 25;\n            if (!(!_iteratorNormalCompletion && _iterator[\"return\"] != null)) {\n              _context.next = 29;\n              break;\n            }\n            _context.next = 29;\n            return _awaitAsyncGenerator(_iterator[\"return\"]());\n          case 29:\n            _context.prev = 29;\n            if (!_didIteratorError) {\n              _context.next = 32;\n              break;\n            }\n            throw _iteratorError;\n          case 32:\n            return _context.finish(29);\n          case 33:\n            return _context.finish(24);\n          case 34:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 20, 24, 34], [25,, 29, 33]]);\n  }));\n  return _makeToArrayBufferIterator.apply(this, arguments);\n}\nfunction makeBrowserStreamIterator(_x2) {\n  return _makeBrowserStreamIterator.apply(this, arguments);\n}\nfunction _makeBrowserStreamIterator() {\n  _makeBrowserStreamIterator = _wrapAsyncGenerator(_regeneratorRuntime.mark(function _callee2(stream) {\n    var reader, _yield$_awaitAsyncGen, done, value;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            reader = stream.getReader();\n            _context2.prev = 1;\n          case 2:\n            if (!true) {\n              _context2.next = 14;\n              break;\n            }\n            _context2.next = 5;\n            return _awaitAsyncGenerator(reader.read());\n          case 5:\n            _yield$_awaitAsyncGen = _context2.sent;\n            done = _yield$_awaitAsyncGen.done;\n            value = _yield$_awaitAsyncGen.value;\n            if (!done) {\n              _context2.next = 10;\n              break;\n            }\n            return _context2.abrupt(\"return\");\n          case 10:\n            _context2.next = 12;\n            return toArrayBuffer(value);\n          case 12:\n            _context2.next = 2;\n            break;\n          case 14:\n            _context2.next = 19;\n            break;\n          case 16:\n            _context2.prev = 16;\n            _context2.t0 = _context2[\"catch\"](1);\n            reader.releaseLock();\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 16]]);\n  }));\n  return _makeBrowserStreamIterator.apply(this, arguments);\n}\nfunction makeNodeStreamIterator(_x3) {\n  return _makeNodeStreamIterator.apply(this, arguments);\n}\nfunction _makeNodeStreamIterator() {\n  _makeNodeStreamIterator = _wrapAsyncGenerator(_regeneratorRuntime.mark(function _callee3(stream) {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _awaitAsyncGenerator(stream);\n          case 2:\n            stream = _context3.sent;\n          case 3:\n            if (!true) {\n              _context3.next = 15;\n              break;\n            }\n            data = stream.read();\n            if (!(data !== null)) {\n              _context3.next = 9;\n              break;\n            }\n            _context3.next = 8;\n            return toArrayBuffer(data);\n          case 8:\n            return _context3.abrupt(\"continue\", 3);\n          case 9:\n            if (!stream._readableState.ended) {\n              _context3.next = 11;\n              break;\n            }\n            return _context3.abrupt(\"return\");\n          case 11:\n            _context3.next = 13;\n            return _awaitAsyncGenerator(onceReadable(stream));\n          case 13:\n            _context3.next = 3;\n            break;\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _makeNodeStreamIterator.apply(this, arguments);\n}\nfunction onceReadable(_x4) {\n  return _onceReadable.apply(this, arguments);\n}\nfunction _onceReadable() {\n  _onceReadable = _asyncToGenerator(_regeneratorRuntime.mark(function _callee4(stream) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", new Promise(function (resolve) {\n              stream.once('readable', resolve);\n            }));\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _onceReadable.apply(this, arguments);\n}","map":{"version":3,"sources":["../../../../src/iterator-utils/make-iterator/stream-iterator.js"],"names":["isBrowser","nodeVersion","toArrayBuffer","makeStreamIterator","stream","Symbol","asyncIterator","makeToArrayBufferIterator","getIterator","makeBrowserStreamIterator","makeNodeStreamIterator","chunk","reader","getReader","done","value","read","releaseLock","data","_readableState","ended","onceReadable","Promise","once","resolve"],"mappings":"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","sourcesContent":["import {isBrowser, nodeVersion, toArrayBuffer} from '@loaders.gl/loader-utils';\n\nexport function makeStreamIterator(stream) {\n  // Hacky test for node version to ensure we don't call bad polyfills\n  if (isBrowser || nodeVersion >= 10) {\n    // NODE 10+: stream is an asyncIterator\n    if (typeof stream[Symbol.asyncIterator] === 'function') {\n      return makeToArrayBufferIterator(stream);\n    }\n\n    // WhatWG: stream is supposed to have a `getIterator` method\n    if (typeof stream.getIterator === 'function') {\n      return stream.getIterator();\n    }\n  }\n\n  return isBrowser ? makeBrowserStreamIterator(stream) : makeNodeStreamIterator(stream);\n}\n\n/** Coerce each chunk to ArrayBuffer */\nasync function* makeToArrayBufferIterator(asyncIterator) {\n  for await (const chunk of asyncIterator) {\n    yield toArrayBuffer(chunk);\n  }\n}\n\n// BROWSER IMPLEMENTATION\n// See https://jakearchibald.com/2017/async-iterators-and-generators/#making-streams-iterate\n\nasync function* makeBrowserStreamIterator(stream) {\n  // In the brower, we first need to get a lock on the stream\n  const reader = stream.getReader();\n\n  try {\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      // Read from the stream\n      // value is a Uint8Array\n      const {done, value} = await reader.read();\n      // Exit if we're done\n      if (done) {\n        return;\n      }\n      // Else yield the chunk\n      yield toArrayBuffer(value);\n    }\n  } catch (error) {\n    // TODO - examples makes it look like this should always be called,\n    // but that generates exceptions so only call it if we do not reach the end\n    reader.releaseLock();\n  }\n}\n\n// NODE <10 IMPLEMENTATION\n// See https://github.com/bustle/streaming-iterables, MIT license\n\nasync function* makeNodeStreamIterator(stream) {\n  // Node createStream will return promises to handle http requests\n  stream = await stream;\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const data = stream.read();\n    if (data !== null) {\n      yield toArrayBuffer(data);\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (stream._readableState.ended) {\n      return;\n    }\n    await onceReadable(stream);\n  }\n}\n\nasync function onceReadable(stream) {\n  return new Promise(resolve => {\n    stream.once('readable', resolve);\n  });\n}\n"]},"metadata":{},"sourceType":"module"}
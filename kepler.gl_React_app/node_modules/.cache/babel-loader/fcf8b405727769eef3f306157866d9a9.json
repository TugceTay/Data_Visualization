{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = ModalContainerFactory;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _styledComponents = require(\"styled-components\");\nvar _reactDom = require(\"react-dom\");\nvar _reselect = require(\"reselect\");\nvar _lodash = _interopRequireDefault(require(\"lodash.get\"));\nvar _document = _interopRequireDefault(require(\"global/document\"));\nvar _defaultSettings = require(\"../constants/default-settings\");\nvar _modalDialog = _interopRequireDefault(require(\"./modals/modal-dialog\"));\nvar _exportUtils = require(\"../utils/export-utils\");\nvar _mapInfoUtils = require(\"../utils/map-info-utils\");\nvar _deleteDataModal = _interopRequireDefault(require(\"./modals/delete-data-modal\"));\nvar _overwriteMapModal = _interopRequireDefault(require(\"./modals/overwrite-map-modal\"));\nvar _dataTableModal = _interopRequireDefault(require(\"./modals/data-table-modal\"));\nvar _loadDataModal = _interopRequireDefault(require(\"./modals/load-data-modal\"));\nvar _exportImageModal = _interopRequireDefault(require(\"./modals/export-image-modal\"));\nvar _exportDataModal = _interopRequireDefault(require(\"./modals/export-data-modal\"));\nvar _exportMapModal = _interopRequireDefault(require(\"./modals/export-map-modal/export-map-modal\"));\nvar _addMapStyleModal = _interopRequireDefault(require(\"./modals/add-map-style-modal\"));\nvar _saveMapModal = _interopRequireDefault(require(\"./modals/save-map-modal\"));\nvar _shareMapModal = _interopRequireDefault(require(\"./modals/share-map-modal\"));\nvar _mediaBreakpoints = require(\"../styles/media-breakpoints\");\nvar _keyevent = _interopRequireDefault(require(\"../constants/keyevent\"));\nvar _visStateSelectors = require(\"../reducers/vis-state-selectors\");\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8;\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar DataTableModalStyle = (0, _styledComponents.css)(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  top: 80px;\\n  padding: 32px 0 0 0;\\n  width: 90vw;\\n  max-width: 90vw;\\n\\n  \", \" \", \";\\n\"])), _mediaBreakpoints.media.portable(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n    padding: 0;\\n  \"]))), _mediaBreakpoints.media.palm(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n    padding: 0;\\n    margin: 0 auto;\\n  \"]))));\nvar smallModalCss = (0, _styledComponents.css)(_templateObject4 || (_templateObject4 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  width: 40%;\\n  padding: 40px 40px 32px 40px;\\n\"])));\nvar LoadDataModalStyle = (0, _styledComponents.css)(_templateObject5 || (_templateObject5 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  top: 60px;\\n\"])));\nvar DefaultStyle = (0, _styledComponents.css)(_templateObject6 || (_templateObject6 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  max-width: 960px;\\n\"])));\nModalContainerFactory.deps = [_deleteDataModal[\"default\"], _overwriteMapModal[\"default\"], _dataTableModal[\"default\"], _loadDataModal[\"default\"], _exportImageModal[\"default\"], _exportDataModal[\"default\"], _exportMapModal[\"default\"], _addMapStyleModal[\"default\"], _modalDialog[\"default\"], _saveMapModal[\"default\"], _shareMapModal[\"default\"]];\nfunction ModalContainerFactory(DeleteDatasetModal, OverWriteMapModal, DataTableModal, LoadDataModal, ExportImageModal, ExportDataModal, ExportMapModal, AddMapStyleModal, ModalDialog, SaveMapModal, ShareMapModal) {\n  /** @typedef {import('./modal-container').ModalContainerProps} ModalContainerProps */\n\n  /** @augments React.Component<ModalContainerProps> */\n  var ModalContainer = /*#__PURE__*/function (_Component) {\n    (0, _inherits2[\"default\"])(ModalContainer, _Component);\n    var _super = _createSuper(ModalContainer);\n    function ModalContainer() {\n      var _this;\n      (0, _classCallCheck2[\"default\"])(this, ModalContainer);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _super.call.apply(_super, [this].concat(args));\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"componentDidMount\", function () {\n        _document[\"default\"].addEventListener('keyup', _this._onKeyUp);\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"cloudProviders\", function (props) {\n        return props.cloudProviders;\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"providerWithStorage\", (0, _reselect.createSelector)(_this.cloudProviders, function (cloudProviders) {\n        return cloudProviders.filter(function (p) {\n          return p.hasPrivateStorage();\n        });\n      }));\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"providerWithShare\", (0, _reselect.createSelector)(_this.cloudProviders, function (cloudProviders) {\n        return cloudProviders.filter(function (p) {\n          return p.hasSharingUrl();\n        });\n      }));\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onKeyUp\", function (event) {\n        var keyCode = event.keyCode;\n        if (keyCode === _keyevent[\"default\"].DOM_VK_ESCAPE) {\n          _this._closeModal();\n        }\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_closeModal\", function () {\n        _this.props.uiStateActions.toggleModal(null);\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_deleteDataset\", function (key) {\n        _this.props.visStateActions.removeDataset(key);\n        _this._closeModal();\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onAddCustomMapStyle\", function () {\n        _this.props.mapStyleActions.addCustomMapStyle();\n        _this._closeModal();\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onFileUpload\", function (fileList) {\n        _this.props.visStateActions.loadFiles(fileList);\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onExportImage\", function () {\n        if (!_this.props.uiState.exportImage.processing) {\n          (0, _exportUtils.exportImage)(_this.props, \"\".concat(_this.props.appName, \".png\"));\n          _this.props.uiStateActions.cleanupExportImage();\n          _this._closeModal();\n        }\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onExportData\", function () {\n        (0, _exportUtils.exportData)(_this.props, _this.props.uiState.exportData);\n        _this._closeModal();\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onExportMap\", function () {\n        var uiState = _this.props.uiState;\n        var format = uiState.exportMap.format;\n        (format === _defaultSettings.EXPORT_MAP_FORMATS.HTML ? _exportUtils.exportHtml : _exportUtils.exportJson)(_this.props, _this.props.uiState.exportMap[format] || {});\n        _this._closeModal();\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_exportFileToCloud\", function (_ref) {\n        var provider = _ref.provider,\n          isPublic = _ref.isPublic,\n          overwrite = _ref.overwrite,\n          closeModal = _ref.closeModal;\n        var toSave = (0, _exportUtils.exportMap)(_this.props);\n        _this.props.providerActions.exportFileToCloud({\n          // @ts-ignore\n          mapData: toSave,\n          provider: provider,\n          options: {\n            isPublic: isPublic,\n            overwrite: overwrite\n          },\n          closeModal: closeModal,\n          onSuccess: _this.props.onExportToCloudSuccess,\n          onError: _this.props.onExportToCloudError\n        });\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onSaveMap\", function () {\n        var overwrite = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        var currentProvider = _this.props.providerState.currentProvider; // @ts-ignore\n\n        var provider = _this.props.cloudProviders.find(function (p) {\n          return p.name === currentProvider;\n        });\n        _this._exportFileToCloud({\n          provider: provider,\n          isPublic: false,\n          overwrite: overwrite,\n          closeModal: true\n        });\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onOverwriteMap\", function () {\n        _this._onSaveMap(true);\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onShareMapUrl\", function (provider) {\n        _this._exportFileToCloud({\n          provider: provider,\n          isPublic: true,\n          overwrite: false,\n          closeModal: false\n        });\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onCloseSaveMap\", function () {\n        _this.props.providerActions.resetProviderStatus();\n        _this._closeModal();\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onLoadCloudMap\", function (payload) {\n        _this.props.providerActions.loadCloudMap(_objectSpread(_objectSpread({}, payload), {}, {\n          onSuccess: _this.props.onLoadCloudMapSuccess,\n          onError: _this.props.onLoadCloudMapError\n        }));\n      });\n      return _this;\n    }\n    (0, _createClass2[\"default\"])(ModalContainer, [{\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        _document[\"default\"].removeEventListener('keyup', this._onKeyUp);\n      }\n    }, {\n      key: \"render\",\n      value: /* eslint-disable complexity */\n      function render() {\n        var _this2 = this;\n        var _this$props = this.props,\n          containerW = _this$props.containerW,\n          containerH = _this$props.containerH,\n          mapStyle = _this$props.mapStyle,\n          mapState = _this$props.mapState,\n          uiState = _this$props.uiState,\n          visState = _this$props.visState,\n          rootNode = _this$props.rootNode,\n          visStateActions = _this$props.visStateActions,\n          uiStateActions = _this$props.uiStateActions,\n          providerState = _this$props.providerState;\n        var currentModal = uiState.currentModal,\n          datasetKeyToRemove = uiState.datasetKeyToRemove;\n        var datasets = visState.datasets,\n          layers = visState.layers,\n          editingDataset = visState.editingDataset;\n        var template = null;\n        var modalProps = {}; // TODO - currentModal is a string\n        // @ts-ignore\n\n        if (currentModal && currentModal.id && currentModal.template) {\n          // if currentMdoal template is already provided\n          // TODO: need to check whether template is valid\n          // @ts-ignore\n          template = /*#__PURE__*/_react[\"default\"].createElement(currentModal.template, null); // @ts-ignore\n\n          modalProps = currentModal.modalProps;\n        } else {\n          switch (currentModal) {\n            case _defaultSettings.DATA_TABLE_ID:\n              var width = containerW * 0.9;\n              template = /*#__PURE__*/_react[\"default\"].createElement(DataTableModal, {\n                width: containerW * 0.9,\n                height: containerH * 0.85,\n                datasets: datasets,\n                dataId: editingDataset,\n                showDatasetTable: visStateActions.showDatasetTable,\n                sortTableColumn: visStateActions.sortTableColumn,\n                pinTableColumn: visStateActions.pinTableColumn,\n                copyTableColumn: visStateActions.copyTableColumn\n              }); // TODO: we need to make this width consistent with the css rule defined modal.js:32 max-width: 70vw\n\n              modalProps.cssStyle = (0, _styledComponents.css)(_templateObject7 || (_templateObject7 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n              \", \";\\n              \", \";\\n            \"])), DataTableModalStyle, _mediaBreakpoints.media.palm(_templateObject8 || (_templateObject8 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n                width: \", \"px;\\n              \"])), width));\n              break;\n            case _defaultSettings.DELETE_DATA_ID:\n              // validate options\n              if (datasetKeyToRemove && datasets && datasets[datasetKeyToRemove]) {\n                template = /*#__PURE__*/_react[\"default\"].createElement(DeleteDatasetModal, {\n                  dataset: datasets[datasetKeyToRemove],\n                  layers: layers\n                });\n                modalProps = {\n                  title: 'modal.title.deleteDataset',\n                  cssStyle: smallModalCss,\n                  footer: true,\n                  onConfirm: function onConfirm() {\n                    return _this2._deleteDataset(datasetKeyToRemove);\n                  },\n                  onCancel: this._closeModal,\n                  confirmButton: {\n                    negative: true,\n                    large: true,\n                    children: 'modal.button.delete'\n                  }\n                };\n              }\n              break;\n            // in case we add a new case after this one\n\n            case _defaultSettings.ADD_DATA_ID:\n              template = /*#__PURE__*/_react[\"default\"].createElement(LoadDataModal, (0, _extends2[\"default\"])({}, providerState, {\n                onClose: this._closeModal,\n                onFileUpload: this._onFileUpload,\n                onLoadCloudMap: this._onLoadCloudMap,\n                cloudProviders: this.providerWithStorage(this.props),\n                onSetCloudProvider: this.props.providerActions.setCloudProvider,\n                getSavedMaps: this.props.providerActions.getSavedMaps,\n                loadFiles: uiState.loadFiles,\n                fileLoading: visState.fileLoading,\n                fileLoadingProgress: visState.fileLoadingProgress,\n                fileFormatNames: (0, _visStateSelectors.getFileFormatNames)(this.props.visState),\n                fileExtensions: (0, _visStateSelectors.getFileExtensions)(this.props.visState)\n              }));\n              modalProps = {\n                title: 'modal.title.addDataToMap',\n                cssStyle: LoadDataModalStyle,\n                footer: false,\n                onConfirm: this._closeModal\n              };\n              break;\n            case _defaultSettings.EXPORT_IMAGE_ID:\n              template = /*#__PURE__*/_react[\"default\"].createElement(ExportImageModal, {\n                exportImage: uiState.exportImage,\n                mapW: containerW,\n                mapH: containerH,\n                onUpdateImageSetting: uiStateActions.setExportImageSetting,\n                cleanupExportImage: uiStateActions.cleanupExportImage\n              });\n              modalProps = {\n                title: 'modal.title.exportImage',\n                cssStyle: '',\n                footer: true,\n                onCancel: this._closeModal,\n                onConfirm: this._onExportImage,\n                confirmButton: {\n                  large: true,\n                  disabled: uiState.exportImage.processing,\n                  children: 'modal.button.download'\n                }\n              };\n              break;\n            case _defaultSettings.EXPORT_DATA_ID:\n              template = /*#__PURE__*/_react[\"default\"].createElement(ExportDataModal, (0, _extends2[\"default\"])({}, uiState.exportData, {\n                supportedDataTypes: _defaultSettings.EXPORT_DATA_TYPE_OPTIONS,\n                datasets: datasets,\n                applyCPUFilter: this.props.visStateActions.applyCPUFilter,\n                onClose: this._closeModal,\n                onChangeExportDataType: uiStateActions.setExportDataType,\n                onChangeExportSelectedDataset: uiStateActions.setExportSelectedDataset,\n                onChangeExportFiltered: uiStateActions.setExportFiltered\n              }));\n              modalProps = {\n                title: 'modal.title.exportData',\n                cssStyle: '',\n                footer: true,\n                onCancel: this._closeModal,\n                onConfirm: this._onExportData,\n                confirmButton: {\n                  large: true,\n                  children: 'modal.button.export'\n                }\n              };\n              break;\n            case _defaultSettings.EXPORT_MAP_ID:\n              var keplerGlConfig = visState.schema.getConfigToSave({\n                mapStyle: mapStyle,\n                visState: visState,\n                mapState: mapState,\n                uiState: uiState\n              });\n              template = /*#__PURE__*/_react[\"default\"].createElement(ExportMapModal, {\n                config: keplerGlConfig,\n                options: uiState.exportMap,\n                onChangeExportMapFormat: uiStateActions.setExportMapFormat,\n                onEditUserMapboxAccessToken: uiStateActions.setUserMapboxAccessToken,\n                onChangeExportMapHTMLMode: uiStateActions.setExportHTMLMapMode\n              });\n              modalProps = {\n                title: 'modal.title.exportMap',\n                cssStyle: '',\n                footer: true,\n                onCancel: this._closeModal,\n                onConfirm: this._onExportMap,\n                confirmButton: {\n                  large: true,\n                  children: 'modal.button.export'\n                }\n              };\n              break;\n            case _defaultSettings.ADD_MAP_STYLE_ID:\n              template = /*#__PURE__*/_react[\"default\"].createElement(AddMapStyleModal, {\n                mapboxApiAccessToken: this.props.mapboxApiAccessToken,\n                mapboxApiUrl: this.props.mapboxApiUrl,\n                mapState: this.props.mapState,\n                inputStyle: mapStyle.inputStyle,\n                inputMapStyle: this.props.mapStyleActions.inputMapStyle,\n                loadCustomMapStyle: this.props.mapStyleActions.loadCustomMapStyle\n              });\n              modalProps = {\n                title: 'modal.title.addCustomMapboxStyle',\n                cssStyle: '',\n                footer: true,\n                onCancel: this._closeModal,\n                onConfirm: this._onAddCustomMapStyle,\n                confirmButton: {\n                  large: true,\n                  disabled: !mapStyle.inputStyle.style,\n                  children: 'modal.button.addStyle'\n                }\n              };\n              break;\n            case _defaultSettings.SAVE_MAP_ID:\n              template = /*#__PURE__*/_react[\"default\"].createElement(SaveMapModal, (0, _extends2[\"default\"])({}, providerState, {\n                exportImage: uiState.exportImage,\n                mapInfo: visState.mapInfo,\n                onSetMapInfo: visStateActions.setMapInfo,\n                cloudProviders: this.providerWithStorage(this.props),\n                onSetCloudProvider: this.props.providerActions.setCloudProvider,\n                cleanupExportImage: uiStateActions.cleanupExportImage,\n                onUpdateImageSetting: uiStateActions.setExportImageSetting\n              }));\n              modalProps = {\n                title: 'modal.title.saveMap',\n                cssStyle: '',\n                footer: true,\n                onCancel: this._closeModal,\n                onConfirm: function onConfirm() {\n                  return _this2._onSaveMap(false);\n                },\n                confirmButton: {\n                  large: true,\n                  disabled: uiState.exportImage.processing || !(0, _mapInfoUtils.isValidMapInfo)(visState.mapInfo) || !providerState.currentProvider,\n                  children: 'modal.button.save'\n                }\n              };\n              break;\n            case _defaultSettings.OVERWRITE_MAP_ID:\n              template = /*#__PURE__*/_react[\"default\"].createElement(OverWriteMapModal, (0, _extends2[\"default\"])({}, providerState, {\n                cloudProviders: this.props.cloudProviders,\n                title: (0, _lodash[\"default\"])(visState, ['mapInfo', 'title']),\n                onSetCloudProvider: this.props.providerActions.setCloudProvider,\n                onUpdateImageSetting: uiStateActions.setExportImageSetting,\n                cleanupExportImage: uiStateActions.cleanupExportImage\n              }));\n              modalProps = {\n                title: 'Overwrite Existing File?',\n                cssStyle: smallModalCss,\n                footer: true,\n                onConfirm: this._onOverwriteMap,\n                onCancel: this._closeModal,\n                confirmButton: {\n                  large: true,\n                  children: 'Yes',\n                  disabled: uiState.exportImage.processing || !(0, _mapInfoUtils.isValidMapInfo)(visState.mapInfo) || !providerState.currentProvider\n                }\n              };\n              break;\n            case _defaultSettings.SHARE_MAP_ID:\n              template = /*#__PURE__*/_react[\"default\"].createElement(ShareMapModal, (0, _extends2[\"default\"])({}, providerState, {\n                isReady: !uiState.exportImage.processing,\n                cloudProviders: this.providerWithShare(this.props),\n                onExport: this._onShareMapUrl,\n                onSetCloudProvider: this.props.providerActions.setCloudProvider,\n                cleanupExportImage: uiStateActions.cleanupExportImage,\n                onUpdateImageSetting: uiStateActions.setExportImageSetting\n              }));\n              modalProps = {\n                title: 'modal.title.shareURL',\n                cssStyle: '',\n                onCancel: this._onCloseSaveMap\n              };\n              break;\n            default:\n              break;\n          }\n        }\n        return this.props.rootNode ? /*#__PURE__*/_react[\"default\"].createElement(ModalDialog, (0, _extends2[\"default\"])({\n          parentSelector: function parentSelector() {\n            return (0, _reactDom.findDOMNode)(rootNode);\n          },\n          isOpen: Boolean(currentModal),\n          onCancel: this._closeModal\n        }, modalProps, {\n          cssStyle: DefaultStyle.concat(modalProps.cssStyle)\n        }), template) : null;\n      }\n      /* eslint-enable complexity */\n    }]);\n\n    return ModalContainer;\n  }(_react.Component);\n  (0, _defineProperty2[\"default\"])(ModalContainer, \"propTypes\", {\n    rootNode: _propTypes[\"default\"].object,\n    containerW: _propTypes[\"default\"].number,\n    containerH: _propTypes[\"default\"].number,\n    mapboxApiAccessToken: _propTypes[\"default\"].string.isRequired,\n    mapboxApiUrl: _propTypes[\"default\"].string,\n    mapState: _propTypes[\"default\"].object.isRequired,\n    mapStyle: _propTypes[\"default\"].object.isRequired,\n    uiState: _propTypes[\"default\"].object.isRequired,\n    visState: _propTypes[\"default\"].object.isRequired,\n    visStateActions: _propTypes[\"default\"].object.isRequired,\n    uiStateActions: _propTypes[\"default\"].object.isRequired,\n    mapStyleActions: _propTypes[\"default\"].object.isRequired,\n    onSaveToStorage: _propTypes[\"default\"].func,\n    cloudProviders: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].object)\n  });\n  return ModalContainer;\n}","map":{"version":3,"sources":["../../src/components/modal-container.js"],"names":["DataTableModalStyle","css","media","portable","palm","smallModalCss","LoadDataModalStyle","DefaultStyle","ModalContainerFactory","deps","DeleteDatasetModalFactory","OverWriteMapModalFactory","DataTableModalFactory","LoadDataModalFactory","ExportImageModalFactory","ExportDataModalFactory","ExportMapModalFactory","AddMapStyleModalFactory","ModalDialogFactory","SaveMapModalFactory","ShareMapModalFactory","DeleteDatasetModal","OverWriteMapModal","DataTableModal","LoadDataModal","ExportImageModal","ExportDataModal","ExportMapModal","AddMapStyleModal","ModalDialog","SaveMapModal","ShareMapModal","ModalContainer","Component","rootNode","PropTypes","object","containerW","number","containerH","mapboxApiAccessToken","string","isRequired","mapboxApiUrl","mapState","mapStyle","uiState","visState","visStateActions","uiStateActions","mapStyleActions","onSaveToStorage","func","cloudProviders","arrayOf","document","addEventListener","_onKeyUp","removeEventListener","props","filter","p","hasPrivateStorage","hasSharingUrl","keyCode","event","KeyEvent","DOM_VK_ESCAPE","_closeModal","toggleModal","removeDataset","key","addCustomMapStyle","loadFiles","fileList","exportImage","processing","appName","cleanupExportImage","exportData","format","exportMap","EXPORT_MAP_FORMATS","HTML","exportHtml","exportJson","provider","isPublic","overwrite","closeModal","toSave","providerActions","exportFileToCloud","mapData","options","onSuccess","onExportToCloudSuccess","onError","onExportToCloudError","currentProvider","providerState","find","name","_exportFileToCloud","_onSaveMap","resetProviderStatus","loadCloudMap","payload","onLoadCloudMapSuccess","onLoadCloudMapError","currentModal","datasetKeyToRemove","datasets","layers","editingDataset","template","modalProps","id","DATA_TABLE_ID","width","showDatasetTable","sortTableColumn","pinTableColumn","copyTableColumn","cssStyle","DELETE_DATA_ID","title","footer","onConfirm","_deleteDataset","onCancel","confirmButton","negative","large","children","ADD_DATA_ID","_onFileUpload","_onLoadCloudMap","providerWithStorage","setCloudProvider","getSavedMaps","fileLoading","fileLoadingProgress","EXPORT_IMAGE_ID","setExportImageSetting","_onExportImage","disabled","EXPORT_DATA_ID","EXPORT_DATA_TYPE_OPTIONS","applyCPUFilter","setExportDataType","setExportSelectedDataset","setExportFiltered","_onExportData","EXPORT_MAP_ID","keplerGlConfig","schema","getConfigToSave","setExportMapFormat","setUserMapboxAccessToken","setExportHTMLMapMode","_onExportMap","ADD_MAP_STYLE_ID","inputStyle","inputMapStyle","loadCustomMapStyle","_onAddCustomMapStyle","style","SAVE_MAP_ID","mapInfo","setMapInfo","OVERWRITE_MAP_ID","_onOverwriteMap","SHARE_MAP_ID","providerWithShare","_onShareMapUrl","_onCloseSaveMap","Boolean","concat"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {css} from 'styled-components';\nimport {findDOMNode} from 'react-dom';\nimport {createSelector} from 'reselect';\nimport get from 'lodash.get';\nimport document from 'global/document';\n\nimport {EXPORT_DATA_TYPE_OPTIONS, EXPORT_MAP_FORMATS} from 'constants/default-settings';\nimport ModalDialogFactory from './modals/modal-dialog';\nimport {exportJson, exportHtml, exportData, exportImage, exportMap} from 'utils/export-utils';\nimport {isValidMapInfo} from 'utils/map-info-utils';\n\n// modals\nimport DeleteDatasetModalFactory from './modals/delete-data-modal';\nimport OverWriteMapModalFactory from './modals/overwrite-map-modal';\nimport DataTableModalFactory from './modals/data-table-modal';\nimport LoadDataModalFactory from './modals/load-data-modal';\nimport ExportImageModalFactory from './modals/export-image-modal';\nimport ExportDataModalFactory from './modals/export-data-modal';\nimport ExportMapModalFactory from './modals/export-map-modal/export-map-modal';\nimport AddMapStyleModalFactory from './modals/add-map-style-modal';\nimport SaveMapModalFactory from './modals/save-map-modal';\nimport ShareMapModalFactory from './modals/share-map-modal';\n\n// Breakpoints\nimport {media} from 'styles/media-breakpoints';\n\n// Template\nimport {\n  ADD_DATA_ID,\n  DATA_TABLE_ID,\n  DELETE_DATA_ID,\n  EXPORT_DATA_ID,\n  EXPORT_IMAGE_ID,\n  EXPORT_MAP_ID,\n  ADD_MAP_STYLE_ID,\n  SAVE_MAP_ID,\n  SHARE_MAP_ID,\n  OVERWRITE_MAP_ID\n} from 'constants/default-settings';\n\nimport KeyEvent from 'constants/keyevent';\nimport {getFileFormatNames, getFileExtensions} from '../reducers/vis-state-selectors';\n\nconst DataTableModalStyle = css`\n  top: 80px;\n  padding: 32px 0 0 0;\n  width: 90vw;\n  max-width: 90vw;\n\n  ${media.portable`\n    padding: 0;\n  `} ${media.palm`\n    padding: 0;\n    margin: 0 auto;\n  `};\n`;\nconst smallModalCss = css`\n  width: 40%;\n  padding: 40px 40px 32px 40px;\n`;\n\nconst LoadDataModalStyle = css`\n  top: 60px;\n`;\n\nconst DefaultStyle = css`\n  max-width: 960px;\n`;\n\nModalContainerFactory.deps = [\n  DeleteDatasetModalFactory,\n  OverWriteMapModalFactory,\n  DataTableModalFactory,\n  LoadDataModalFactory,\n  ExportImageModalFactory,\n  ExportDataModalFactory,\n  ExportMapModalFactory,\n  AddMapStyleModalFactory,\n  ModalDialogFactory,\n  SaveMapModalFactory,\n  ShareMapModalFactory\n];\n\nexport default function ModalContainerFactory(\n  DeleteDatasetModal,\n  OverWriteMapModal,\n  DataTableModal,\n  LoadDataModal,\n  ExportImageModal,\n  ExportDataModal,\n  ExportMapModal,\n  AddMapStyleModal,\n  ModalDialog,\n  SaveMapModal,\n  ShareMapModal\n) {\n  /** @typedef {import('./modal-container').ModalContainerProps} ModalContainerProps */\n  /** @augments React.Component<ModalContainerProps> */\n  class ModalContainer extends Component {\n    // TODO - remove when prop types are fully exported\n    static propTypes = {\n      rootNode: PropTypes.object,\n      containerW: PropTypes.number,\n      containerH: PropTypes.number,\n      mapboxApiAccessToken: PropTypes.string.isRequired,\n      mapboxApiUrl: PropTypes.string,\n      mapState: PropTypes.object.isRequired,\n      mapStyle: PropTypes.object.isRequired,\n      uiState: PropTypes.object.isRequired,\n      visState: PropTypes.object.isRequired,\n      visStateActions: PropTypes.object.isRequired,\n      uiStateActions: PropTypes.object.isRequired,\n      mapStyleActions: PropTypes.object.isRequired,\n      onSaveToStorage: PropTypes.func,\n      cloudProviders: PropTypes.arrayOf(PropTypes.object)\n    };\n    componentDidMount = () => {\n      document.addEventListener('keyup', this._onKeyUp);\n    };\n    componentWillUnmount() {\n      document.removeEventListener('keyup', this._onKeyUp);\n    }\n\n    cloudProviders = props => props.cloudProviders;\n    providerWithStorage = createSelector(this.cloudProviders, cloudProviders =>\n      cloudProviders.filter(p => p.hasPrivateStorage())\n    );\n    providerWithShare = createSelector(this.cloudProviders, cloudProviders =>\n      cloudProviders.filter(p => p.hasSharingUrl())\n    );\n\n    _onKeyUp = event => {\n      const keyCode = event.keyCode;\n      if (keyCode === KeyEvent.DOM_VK_ESCAPE) {\n        this._closeModal();\n      }\n    };\n\n    _closeModal = () => {\n      this.props.uiStateActions.toggleModal(null);\n    };\n\n    _deleteDataset = key => {\n      this.props.visStateActions.removeDataset(key);\n      this._closeModal();\n    };\n\n    _onAddCustomMapStyle = () => {\n      this.props.mapStyleActions.addCustomMapStyle();\n      this._closeModal();\n    };\n\n    _onFileUpload = fileList => {\n      this.props.visStateActions.loadFiles(fileList);\n    };\n\n    _onExportImage = () => {\n      if (!this.props.uiState.exportImage.processing) {\n        exportImage(this.props, `${this.props.appName}.png`);\n        this.props.uiStateActions.cleanupExportImage();\n        this._closeModal();\n      }\n    };\n\n    _onExportData = () => {\n      exportData(this.props, this.props.uiState.exportData);\n      this._closeModal();\n    };\n\n    _onExportMap = () => {\n      const {uiState} = this.props;\n      const {format} = uiState.exportMap;\n      (format === EXPORT_MAP_FORMATS.HTML ? exportHtml : exportJson)(\n        this.props,\n        this.props.uiState.exportMap[format] || {}\n      );\n      this._closeModal();\n    };\n\n    _exportFileToCloud = ({provider, isPublic, overwrite, closeModal}) => {\n      const toSave = exportMap(this.props);\n\n      this.props.providerActions.exportFileToCloud({\n        // @ts-ignore\n        mapData: toSave,\n        provider,\n        options: {\n          isPublic,\n          overwrite\n        },\n        closeModal,\n        onSuccess: this.props.onExportToCloudSuccess,\n        onError: this.props.onExportToCloudError\n      });\n    };\n\n    _onSaveMap = (overwrite = false) => {\n      const {currentProvider} = this.props.providerState;\n      // @ts-ignore\n      const provider = this.props.cloudProviders.find(p => p.name === currentProvider);\n      this._exportFileToCloud({\n        provider,\n        isPublic: false,\n        overwrite,\n        closeModal: true\n      });\n    };\n\n    _onOverwriteMap = () => {\n      this._onSaveMap(true);\n    };\n\n    _onShareMapUrl = provider => {\n      this._exportFileToCloud({provider, isPublic: true, overwrite: false, closeModal: false});\n    };\n\n    _onCloseSaveMap = () => {\n      this.props.providerActions.resetProviderStatus();\n      this._closeModal();\n    };\n\n    _onLoadCloudMap = payload => {\n      this.props.providerActions.loadCloudMap({\n        ...payload,\n        onSuccess: this.props.onLoadCloudMapSuccess,\n        onError: this.props.onLoadCloudMapError\n      });\n    };\n\n    /* eslint-disable complexity */\n    render() {\n      const {\n        containerW,\n        containerH,\n        mapStyle,\n        mapState,\n        uiState,\n        visState,\n        rootNode,\n        visStateActions,\n        uiStateActions,\n        providerState\n      } = this.props;\n      const {currentModal, datasetKeyToRemove} = uiState;\n      const {datasets, layers, editingDataset} = visState;\n\n      let template = null;\n      let modalProps = {};\n\n      // TODO - currentModal is a string\n      // @ts-ignore\n      if (currentModal && currentModal.id && currentModal.template) {\n        // if currentMdoal template is already provided\n        // TODO: need to check whether template is valid\n        // @ts-ignore\n        template = <currentModal.template />;\n        // @ts-ignore\n        modalProps = currentModal.modalProps;\n      } else {\n        switch (currentModal) {\n          case DATA_TABLE_ID:\n            const width = containerW * 0.9;\n            template = (\n              <DataTableModal\n                width={containerW * 0.9}\n                height={containerH * 0.85}\n                datasets={datasets}\n                dataId={editingDataset}\n                showDatasetTable={visStateActions.showDatasetTable}\n                sortTableColumn={visStateActions.sortTableColumn}\n                pinTableColumn={visStateActions.pinTableColumn}\n                copyTableColumn={visStateActions.copyTableColumn}\n              />\n            );\n\n            // TODO: we need to make this width consistent with the css rule defined modal.js:32 max-width: 70vw\n            modalProps.cssStyle = css`\n              ${DataTableModalStyle};\n              ${media.palm`\n                width: ${width}px;\n              `};\n            `;\n            break;\n          case DELETE_DATA_ID:\n            // validate options\n            if (datasetKeyToRemove && datasets && datasets[datasetKeyToRemove]) {\n              template = (\n                <DeleteDatasetModal dataset={datasets[datasetKeyToRemove]} layers={layers} />\n              );\n              modalProps = {\n                title: 'modal.title.deleteDataset',\n                cssStyle: smallModalCss,\n                footer: true,\n                onConfirm: () => this._deleteDataset(datasetKeyToRemove),\n                onCancel: this._closeModal,\n                confirmButton: {\n                  negative: true,\n                  large: true,\n                  children: 'modal.button.delete'\n                }\n              };\n            }\n            break; // in case we add a new case after this one\n          case ADD_DATA_ID:\n            template = (\n              <LoadDataModal\n                {...providerState}\n                onClose={this._closeModal}\n                onFileUpload={this._onFileUpload}\n                onLoadCloudMap={this._onLoadCloudMap}\n                cloudProviders={this.providerWithStorage(this.props)}\n                onSetCloudProvider={this.props.providerActions.setCloudProvider}\n                getSavedMaps={this.props.providerActions.getSavedMaps}\n                loadFiles={uiState.loadFiles}\n                fileLoading={visState.fileLoading}\n                fileLoadingProgress={visState.fileLoadingProgress}\n                fileFormatNames={getFileFormatNames(this.props.visState)}\n                fileExtensions={getFileExtensions(this.props.visState)}\n              />\n            );\n            modalProps = {\n              title: 'modal.title.addDataToMap',\n              cssStyle: LoadDataModalStyle,\n              footer: false,\n              onConfirm: this._closeModal\n            };\n            break;\n          case EXPORT_IMAGE_ID:\n            template = (\n              <ExportImageModal\n                exportImage={uiState.exportImage}\n                mapW={containerW}\n                mapH={containerH}\n                onUpdateImageSetting={uiStateActions.setExportImageSetting}\n                cleanupExportImage={uiStateActions.cleanupExportImage}\n              />\n            );\n            modalProps = {\n              title: 'modal.title.exportImage',\n              cssStyle: '',\n              footer: true,\n              onCancel: this._closeModal,\n              onConfirm: this._onExportImage,\n              confirmButton: {\n                large: true,\n                disabled: uiState.exportImage.processing,\n                children: 'modal.button.download'\n              }\n            };\n            break;\n          case EXPORT_DATA_ID:\n            template = (\n              <ExportDataModal\n                {...uiState.exportData}\n                supportedDataTypes={EXPORT_DATA_TYPE_OPTIONS}\n                datasets={datasets}\n                applyCPUFilter={this.props.visStateActions.applyCPUFilter}\n                onClose={this._closeModal}\n                onChangeExportDataType={uiStateActions.setExportDataType}\n                onChangeExportSelectedDataset={uiStateActions.setExportSelectedDataset}\n                onChangeExportFiltered={uiStateActions.setExportFiltered}\n              />\n            );\n            modalProps = {\n              title: 'modal.title.exportData',\n              cssStyle: '',\n              footer: true,\n              onCancel: this._closeModal,\n              onConfirm: this._onExportData,\n              confirmButton: {\n                large: true,\n                children: 'modal.button.export'\n              }\n            };\n            break;\n          case EXPORT_MAP_ID:\n            const keplerGlConfig = visState.schema.getConfigToSave({\n              mapStyle,\n              visState,\n              mapState,\n              uiState\n            });\n            template = (\n              <ExportMapModal\n                config={keplerGlConfig}\n                options={uiState.exportMap}\n                onChangeExportMapFormat={uiStateActions.setExportMapFormat}\n                onEditUserMapboxAccessToken={uiStateActions.setUserMapboxAccessToken}\n                onChangeExportMapHTMLMode={uiStateActions.setExportHTMLMapMode}\n              />\n            );\n            modalProps = {\n              title: 'modal.title.exportMap',\n              cssStyle: '',\n              footer: true,\n              onCancel: this._closeModal,\n              onConfirm: this._onExportMap,\n              confirmButton: {\n                large: true,\n                children: 'modal.button.export'\n              }\n            };\n            break;\n          case ADD_MAP_STYLE_ID:\n            template = (\n              <AddMapStyleModal\n                mapboxApiAccessToken={this.props.mapboxApiAccessToken}\n                mapboxApiUrl={this.props.mapboxApiUrl}\n                mapState={this.props.mapState}\n                inputStyle={mapStyle.inputStyle}\n                inputMapStyle={this.props.mapStyleActions.inputMapStyle}\n                loadCustomMapStyle={this.props.mapStyleActions.loadCustomMapStyle}\n              />\n            );\n            modalProps = {\n              title: 'modal.title.addCustomMapboxStyle',\n              cssStyle: '',\n              footer: true,\n              onCancel: this._closeModal,\n              onConfirm: this._onAddCustomMapStyle,\n              confirmButton: {\n                large: true,\n                disabled: !mapStyle.inputStyle.style,\n                children: 'modal.button.addStyle'\n              }\n            };\n            break;\n          case SAVE_MAP_ID:\n            template = (\n              <SaveMapModal\n                {...providerState}\n                exportImage={uiState.exportImage}\n                mapInfo={visState.mapInfo}\n                onSetMapInfo={visStateActions.setMapInfo}\n                cloudProviders={this.providerWithStorage(this.props)}\n                onSetCloudProvider={this.props.providerActions.setCloudProvider}\n                cleanupExportImage={uiStateActions.cleanupExportImage}\n                onUpdateImageSetting={uiStateActions.setExportImageSetting}\n              />\n            );\n            modalProps = {\n              title: 'modal.title.saveMap',\n              cssStyle: '',\n              footer: true,\n              onCancel: this._closeModal,\n              onConfirm: () => this._onSaveMap(false),\n              confirmButton: {\n                large: true,\n                disabled:\n                  uiState.exportImage.processing ||\n                  !isValidMapInfo(visState.mapInfo) ||\n                  !providerState.currentProvider,\n                children: 'modal.button.save'\n              }\n            };\n            break;\n          case OVERWRITE_MAP_ID:\n            template = (\n              <OverWriteMapModal\n                {...providerState}\n                cloudProviders={this.props.cloudProviders}\n                title={get(visState, ['mapInfo', 'title'])}\n                onSetCloudProvider={this.props.providerActions.setCloudProvider}\n                onUpdateImageSetting={uiStateActions.setExportImageSetting}\n                cleanupExportImage={uiStateActions.cleanupExportImage}\n              />\n            );\n            modalProps = {\n              title: 'Overwrite Existing File?',\n              cssStyle: smallModalCss,\n              footer: true,\n              onConfirm: this._onOverwriteMap,\n              onCancel: this._closeModal,\n              confirmButton: {\n                large: true,\n                children: 'Yes',\n                disabled:\n                  uiState.exportImage.processing ||\n                  !isValidMapInfo(visState.mapInfo) ||\n                  !providerState.currentProvider\n              }\n            };\n            break;\n          case SHARE_MAP_ID:\n            template = (\n              <ShareMapModal\n                {...providerState}\n                isReady={!uiState.exportImage.processing}\n                cloudProviders={this.providerWithShare(this.props)}\n                onExport={this._onShareMapUrl}\n                onSetCloudProvider={this.props.providerActions.setCloudProvider}\n                cleanupExportImage={uiStateActions.cleanupExportImage}\n                onUpdateImageSetting={uiStateActions.setExportImageSetting}\n              />\n            );\n            modalProps = {\n              title: 'modal.title.shareURL',\n              cssStyle: '',\n              onCancel: this._onCloseSaveMap\n            };\n            break;\n          default:\n            break;\n        }\n      }\n\n      return this.props.rootNode ? (\n        <ModalDialog\n          parentSelector={() => findDOMNode(rootNode)}\n          isOpen={Boolean(currentModal)}\n          onCancel={this._closeModal}\n          {...modalProps}\n          cssStyle={DefaultStyle.concat(modalProps.cssStyle)}\n        >\n          {template}\n        </ModalDialog>\n      ) : null;\n    }\n    /* eslint-enable complexity */\n  }\n\n  return ModalContainer;\n}\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.aggregate = aggregate;\nexports.getMode = exports.getFrequency = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _d3Array = require(\"d3-array\");\nvar _defaultSettings = require(\"../constants/default-settings\");\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nvar getFrequency = function getFrequency(data) {\n  return data.reduce(function (uniques, val) {\n    return _objectSpread(_objectSpread({}, uniques), {}, (0, _defineProperty2[\"default\"])({}, val, (uniques[val] || 0) + 1));\n  }, {});\n};\nexports.getFrequency = getFrequency;\nvar getMode = function getMode(data) {\n  var occur = getFrequency(data);\n  return Object.keys(occur).reduce(function (prev, key) {\n    return occur[prev] >= occur[key] ? prev : key;\n  }, Object.keys(occur)[0]);\n};\nexports.getMode = getMode;\nfunction aggregate(data, technique) {\n  switch (technique) {\n    case _defaultSettings.AGGREGATION_TYPES.average:\n      return (0, _d3Array.mean)(data);\n    case _defaultSettings.AGGREGATION_TYPES.countUnique:\n      return Object.keys(data.reduce(function (uniques, val) {\n        uniques[val] = uniques[val] || 0;\n        uniques[val] += 1;\n        return uniques;\n      }, {})).length;\n    case _defaultSettings.AGGREGATION_TYPES.mode:\n      return getMode(data);\n    case _defaultSettings.AGGREGATION_TYPES.maximum:\n      return (0, _d3Array.max)(data);\n    case _defaultSettings.AGGREGATION_TYPES.minimum:\n      return (0, _d3Array.min)(data);\n    case _defaultSettings.AGGREGATION_TYPES.median:\n      return (0, _d3Array.median)(data);\n    case _defaultSettings.AGGREGATION_TYPES.stdev:\n      return (0, _d3Array.deviation)(data);\n    case _defaultSettings.AGGREGATION_TYPES.sum:\n      return (0, _d3Array.sum)(data);\n    case _defaultSettings.AGGREGATION_TYPES.variance:\n      return (0, _d3Array.variance)(data);\n    default:\n      return data.length;\n  }\n}","map":{"version":3,"sources":["../../src/utils/aggregate-utils.js"],"names":["getFrequency","reduce","uniques","val","getMode","occur","data","keys","prev","key","Object","aggregate","technique","AGGREGATION_TYPES","average","countUnique","length","mode","maximum","minimum","median","stdev","sum","variance"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {deviation, min, max, mean, median, sum, variance} from 'd3-array';\nimport {AGGREGATION_TYPES} from 'constants/default-settings';\n\nexport const getFrequency = data =>\n  data.reduce(\n    (uniques, val) => ({\n      ...uniques,\n      [val]: (uniques[val] || 0) + 1\n    }),\n    {}\n  );\n\nexport const getMode = data => {\n  const occur = getFrequency(data);\n  return Object.keys(occur).reduce(\n    (prev, key) => (occur[prev] >= occur[key] ? prev : key),\n    Object.keys(occur)[0]\n  );\n};\n\nexport function aggregate(data, technique) {\n  switch (technique) {\n    case AGGREGATION_TYPES.average:\n      return mean(data);\n    case AGGREGATION_TYPES.countUnique:\n      return Object.keys(\n        data.reduce((uniques, val) => {\n          uniques[val] = uniques[val] || 0;\n          uniques[val] += 1;\n          return uniques;\n        }, {})\n      ).length;\n    case AGGREGATION_TYPES.mode:\n      return getMode(data);\n\n    case AGGREGATION_TYPES.maximum:\n      return max(data);\n    case AGGREGATION_TYPES.minimum:\n      return min(data);\n    case AGGREGATION_TYPES.median:\n      return median(data);\n    case AGGREGATION_TYPES.stdev:\n      return deviation(data);\n    case AGGREGATION_TYPES.sum:\n      return sum(data);\n    case AGGREGATION_TYPES.variance:\n      return variance(data);\n    default:\n      return data.length;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}
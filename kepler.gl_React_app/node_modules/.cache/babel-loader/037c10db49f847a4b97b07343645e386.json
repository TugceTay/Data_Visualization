{"ast":null,"code":"/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport withIntl from './injectIntl';\nconst FormattedPlural = props => {\n  const {\n    value,\n    other,\n    children,\n    intl: {\n      formatPlural,\n      textComponent: Text\n    }\n  } = props;\n  const pluralCategory = formatPlural(value, props);\n  const formattedPlural = props[pluralCategory] || other;\n  if (typeof children === 'function') {\n    return children(formattedPlural);\n  }\n  if (Text) {\n    return React.createElement(Text, null, formattedPlural);\n  }\n  // Work around @types/react where React.FC cannot return string\n  return formattedPlural;\n};\nFormattedPlural.defaultProps = {\n  type: 'cardinal'\n};\nFormattedPlural.displayName = 'FormattedPlural';\nexport default withIntl(FormattedPlural);","map":{"version":3,"names":["React","withIntl","FormattedPlural","props","value","other","children","intl","formatPlural","textComponent","Text","pluralCategory","formattedPlural","createElement","defaultProps","type","displayName"],"sources":["C:/Users/tugcetay/Documents/github/Data/Data_Visualization/kepler.gl_React_app/node_modules/react-intl/lib/components/plural.js"],"sourcesContent":["/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport withIntl from './injectIntl';\nconst FormattedPlural = props => {\n    const { value, other, children, intl: { formatPlural, textComponent: Text }, } = props;\n    const pluralCategory = formatPlural(value, props);\n    const formattedPlural = props[pluralCategory] || other;\n    if (typeof children === 'function') {\n        return children(formattedPlural);\n    }\n    if (Text) {\n        return React.createElement(Text, null, formattedPlural);\n    }\n    // Work around @types/react where React.FC cannot return string\n    return formattedPlural;\n};\nFormattedPlural.defaultProps = {\n    type: 'cardinal',\n};\nFormattedPlural.displayName = 'FormattedPlural';\nexport default withIntl(FormattedPlural);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,QAAQ,MAAM,cAAc;AACnC,MAAMC,eAAe,GAAGC,KAAK,IAAI;EAC7B,MAAM;IAAEC,KAAK;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,IAAI,EAAE;MAAEC,YAAY;MAAEC,aAAa,EAAEC;IAAK;EAAG,CAAC,GAAGP,KAAK;EACtF,MAAMQ,cAAc,GAAGH,YAAY,CAACJ,KAAK,EAAED,KAAK,CAAC;EACjD,MAAMS,eAAe,GAAGT,KAAK,CAACQ,cAAc,CAAC,IAAIN,KAAK;EACtD,IAAI,OAAOC,QAAQ,KAAK,UAAU,EAAE;IAChC,OAAOA,QAAQ,CAACM,eAAe,CAAC;EACpC;EACA,IAAIF,IAAI,EAAE;IACN,OAAOV,KAAK,CAACa,aAAa,CAACH,IAAI,EAAE,IAAI,EAAEE,eAAe,CAAC;EAC3D;EACA;EACA,OAAOA,eAAe;AAC1B,CAAC;AACDV,eAAe,CAACY,YAAY,GAAG;EAC3BC,IAAI,EAAE;AACV,CAAC;AACDb,eAAe,CAACc,WAAW,GAAG,iBAAiB;AAC/C,eAAef,QAAQ,CAACC,eAAe,CAAC"},"metadata":{},"sourceType":"module"}
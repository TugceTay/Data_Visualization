{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _wrapNativeSuper from \"@babel/runtime/helpers/esm/wrapNativeSuper\";\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar ArrayQueue = function (_Array) {\n  _inherits(ArrayQueue, _Array);\n  var _super = _createSuper(ArrayQueue);\n  function ArrayQueue() {\n    _classCallCheck(this, ArrayQueue);\n    return _super.apply(this, arguments);\n  }\n  _createClass(ArrayQueue, [{\n    key: \"enqueue\",\n    value: function enqueue(value) {\n      return this.push(value);\n    }\n  }, {\n    key: \"dequeue\",\n    value: function dequeue() {\n      return this.shift();\n    }\n  }]);\n  return ArrayQueue;\n}(_wrapNativeSuper(Array));\nexport function takeAsync(_x) {\n  return _takeAsync.apply(this, arguments);\n}\nfunction _takeAsync() {\n  _takeAsync = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(asyncIterable) {\n    var count,\n      result,\n      iterator,\n      _yield$iterator$next,\n      value,\n      done,\n      _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            count = _args.length > 1 && _args[1] !== undefined ? _args[1] : Infinity;\n            result = [];\n            iterator = asyncIterable[Symbol.asyncIterator]();\n          case 3:\n            if (!(result.length < count)) {\n              _context.next = 14;\n              break;\n            }\n            _context.next = 6;\n            return iterator.next();\n          case 6:\n            _yield$iterator$next = _context.sent;\n            value = _yield$iterator$next.value;\n            done = _yield$iterator$next.done;\n            if (!done) {\n              _context.next = 11;\n              break;\n            }\n            return _context.abrupt(\"break\", 14);\n          case 11:\n            result.push(value);\n            _context.next = 3;\n            break;\n          case 14:\n            return _context.abrupt(\"return\", result);\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _takeAsync.apply(this, arguments);\n}\nvar AsyncQueue = function () {\n  function AsyncQueue() {\n    _classCallCheck(this, AsyncQueue);\n    this._values = new ArrayQueue();\n    this._settlers = new ArrayQueue();\n    this._closed = false;\n  }\n  _createClass(AsyncQueue, [{\n    key: \"close\",\n    value: function close() {\n      while (this._settlers.length > 0) {\n        this._settlers.dequeue().resolve({\n          done: true\n        });\n      }\n      this._closed = true;\n    }\n  }, {\n    key: Symbol.asyncIterator,\n    value: function value() {\n      return this;\n    }\n  }, {\n    key: \"enqueue\",\n    value: function enqueue(value) {\n      if (this._closed) {\n        throw new Error('Closed');\n      }\n      if (this._settlers.length > 0) {\n        if (this._values.length > 0) {\n          throw new Error('Illegal internal state');\n        }\n        var settler = this._settlers.dequeue();\n        if (value instanceof Error) {\n          settler.reject(value);\n        } else {\n          settler.resolve({\n            value: value\n          });\n        }\n      } else {\n        this._values.enqueue(value);\n      }\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      var _this = this;\n      if (this._values.length > 0) {\n        var value = this._values.dequeue();\n        if (value instanceof Error) {\n          return Promise.reject(value);\n        }\n        return Promise.resolve({\n          value: value\n        });\n      }\n      if (this._closed) {\n        if (this._settlers.length > 0) {\n          throw new Error('Illegal internal state');\n        }\n        return Promise.resolve({\n          done: true\n        });\n      }\n      return new Promise(function (resolve, reject) {\n        _this._settlers.enqueue({\n          resolve: resolve,\n          reject: reject\n        });\n      });\n    }\n  }]);\n  return AsyncQueue;\n}();\nexport { AsyncQueue as default };","map":{"version":3,"sources":["../../../../src/lib/utils/async-queue.js"],"names":["ArrayQueue","Array","value","push","shift","takeAsync","asyncIterable","count","Infinity","result","iterator","Symbol","asyncIterator","length","done","next","AsyncQueue","_values","_settlers","_closed","dequeue","resolve","Error","settler","reject","enqueue","Promise"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAGMA,U;;;;;;;;;4BACIE,K,EAAO;MAEb,OAAO,IAAA,CAAKC,IAAL,CAAUD,KAAV,CAAP;IACD;;;8BACS;MAER,OAAO,IAAA,CAAKE,KAAL,EAAP;IACD;;;mBARsBH,K;AAezB,OAAA,SAAsBI,SAAtB,CAAA,EAAA,EAAA;EAAA,OAAA,UAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA;AAAA;;0DAAO,SAAA,OAAA,CAAyBC,aAAzB,EAAA;IAAA,IAAA,KAAA;MAAA,MAAA;MAAA,QAAA;MAAA,oBAAA;MAAA,KAAA;MAAA,IAAA;MAAA,KAAA,GAAA,SAAA;IAAA,OAAA,mBAAA,CAAA,IAAA,CAAA,SAAA,QAAA,CAAA,QAAA,EAAA;MAAA,OAAA,CAAA,EAAA;QAAA,QAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;UAAA,KAAA,CAAA;YAAwCC,KAAxC,GAAA,KAAA,CAAA,MAAA,GAAA,CAAA,IAAA,KAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,KAAA,CAAA,CAAA,CAAA,GAAgDC,QAAhD;YACCC,MADD,GACU,EADV;YAECC,QAFD,GAEYJ,aAAa,CAACK,MAAM,CAACC,aAAR,CAAbN,EAFZ;UAAA,KAAA,CAAA;YAAA,IAAA,EAGEG,MAAM,CAACI,MAAPJ,GAAgBF,KAHlB,CAAA,EAAA;cAAA,QAAA,CAAA,IAAA,GAAA,EAAA;cAAA;YAAA;YAAA,QAAA,CAAA,IAAA,GAAA,CAAA;YAAA,OAIyBG,QAAQ,CAACK,IAATL,EAJzB;UAAA,KAAA,CAAA;YAAA,oBAAA,GAAA,QAAA,CAAA,IAAA;YAIIR,KAJJ,GAAA,oBAAA,CAIIA,KAJJ;YAIWY,IAJX,GAAA,oBAAA,CAIWA,IAJX;YAAA,IAAA,CAKCA,IALD,EAAA;cAAA,QAAA,CAAA,IAAA,GAAA,EAAA;cAAA;YAAA;YAAA,OAAA,QAAA,CAAA,MAAA,CAAA,OAAA,EAAA,EAAA,CAAA;UAAA,KAAA,EAAA;YAQHL,MAAM,CAACN,IAAPM,CAAYP,KAAZO,CAAAA;YARG,QAAA,CAAA,IAAA,GAAA,CAAA;YAAA;UAAA,KAAA,EAAA;YAAA,OAAA,QAAA,CAAA,MAAA,CAAA,QAAA,EAUEA,MAVF,CAAA;UAAA,KAAA,EAAA;UAAA,KAAA,KAAA;YAAA,OAAA,QAAA,CAAA,IAAA,EAAA;QAAA;MAAA;IAAA,CAAA,EAAA,OAAA,CAAA;EAAA,C;;;IAacO,U;EACnB,SAAA,UAAA,GAAc;IAAA,eAAA,CAAA,IAAA,EAAA,UAAA,CAAA;IAEZ,IAAA,CAAKC,OAAL,GAAe,IAAIjB,UAAJ,EAAf;IAEA,IAAA,CAAKkB,SAAL,GAAiB,IAAIlB,UAAJ,EAAjB;IACA,IAAA,CAAKmB,OAAL,GAAe,KAAf;EACD;;;4BAEO;MACN,OAAO,IAAA,CAAKD,SAAL,CAAeL,MAAf,GAAwB,CAA/B,EAAkC;QAChC,IAAA,CAAKK,SAAL,CAAeE,OAAf,EAAA,CAAyBC,OAAzB,CAAiC;UAACP,IAAI,EAAE;QAAP,CAAjC,CAAA;MACD;MACD,IAAA,CAAKK,OAAL,GAAe,IAAf;IACD;;SAEAR,MAAM,CAACC,a;4BAAiB;MACvB,OAAO,IAAP;IACD;;;4BAEOV,K,EAAO;MACb,IAAI,IAAA,CAAKiB,OAAT,EAAkB;QAChB,MAAM,IAAIG,KAAJ,CAAU,QAAV,CAAN;MACD;MAED,IAAI,IAAA,CAAKJ,SAAL,CAAeL,MAAf,GAAwB,CAA5B,EAA+B;QAC7B,IAAI,IAAA,CAAKI,OAAL,CAAaJ,MAAb,GAAsB,CAA1B,EAA6B;UAC3B,MAAM,IAAIS,KAAJ,CAAU,wBAAV,CAAN;QACD;QACD,IAAMC,OAAO,GAAG,IAAA,CAAKL,SAAL,CAAeE,OAAf,EAAhB;QACA,IAAIlB,KAAK,YAAYoB,KAArB,EAA4B;UAC1BC,OAAO,CAACC,MAARD,CAAerB,KAAfqB,CAAAA;QACD,CAFD,MAEO;UACLA,OAAO,CAACF,OAARE,CAAgB;YAACrB,KAAK,EAALA;UAAD,CAAhBqB,CAAAA;QACD;MACF,CAVD,MAUO;QACL,IAAA,CAAKN,OAAL,CAAaQ,OAAb,CAAqBvB,KAArB,CAAA;MACD;IACF;;;2BAKM;MAAA,IAAA,KAAA,GAAA,IAAA;MACL,IAAI,IAAA,CAAKe,OAAL,CAAaJ,MAAb,GAAsB,CAA1B,EAA6B;QAC3B,IAAMX,KAAK,GAAG,IAAA,CAAKe,OAAL,CAAaG,OAAb,EAAd;QACA,IAAIlB,KAAK,YAAYoB,KAArB,EAA4B;UAC1B,OAAOI,OAAO,CAACF,MAARE,CAAexB,KAAfwB,CAAP;QACD;QACD,OAAO,OAAO,CAACL,OAAR,CAAgB;UAACnB,KAAK,EAALA;QAAD,CAAhB,CAAP;MACD;MAED,IAAI,IAAA,CAAKiB,OAAT,EAAkB;QAChB,IAAI,IAAA,CAAKD,SAAL,CAAeL,MAAf,GAAwB,CAA5B,EAA+B;UAC7B,MAAM,IAAIS,KAAJ,CAAU,wBAAV,CAAN;QACD;QACD,OAAO,OAAO,CAACD,OAAR,CAAgB;UAACP,IAAI,EAAE;QAAP,CAAhB,CAAP;MACD;MAED,OAAO,IAAIY,OAAJ,CAAY,UAACL,OAAD,EAAUG,MAAV,EAAqB;QACtC,KAAI,CAACN,SAAL,CAAeO,OAAf,CAAuB;UAACJ,OAAO,EAAPA,OAAD;UAAUG,MAAM,EAANA;QAAV,CAAvB,CAAA;MACD,CAFM,CAAP;IAGD;;;;SA9DkBR,U","sourcesContent":["// From https://github.com/rauschma/async-iter-demo/tree/master/src under MIT license\n// http://2ality.com/2016/10/asynchronous-iteration.html\n\nclass ArrayQueue extends Array {\n  enqueue(value) {\n    // Add at the end\n    return this.push(value);\n  }\n  dequeue() {\n    // Remove first element\n    return this.shift();\n  }\n}\n\n/**\n * @returns a Promise for an Array with the elements\n * in `asyncIterable`\n */\nexport async function takeAsync(asyncIterable, count = Infinity) {\n  const result = [];\n  const iterator = asyncIterable[Symbol.asyncIterator]();\n  while (result.length < count) {\n    const {value, done} = await iterator.next();\n    if (done) {\n      break;\n    }\n    result.push(value);\n  }\n  return result;\n}\n\nexport default class AsyncQueue {\n  constructor() {\n    // enqueues > dequeues\n    this._values = new ArrayQueue();\n    // dequeues > enqueues\n    this._settlers = new ArrayQueue();\n    this._closed = false;\n  }\n\n  close() {\n    while (this._settlers.length > 0) {\n      this._settlers.dequeue().resolve({done: true});\n    }\n    this._closed = true;\n  }\n\n  [Symbol.asyncIterator]() {\n    return this;\n  }\n\n  enqueue(value) {\n    if (this._closed) {\n      throw new Error('Closed');\n    }\n\n    if (this._settlers.length > 0) {\n      if (this._values.length > 0) {\n        throw new Error('Illegal internal state');\n      }\n      const settler = this._settlers.dequeue();\n      if (value instanceof Error) {\n        settler.reject(value);\n      } else {\n        settler.resolve({value});\n      }\n    } else {\n      this._values.enqueue(value);\n    }\n  }\n\n  /**\n   * @returns a Promise for an IteratorResult\n   */\n  next() {\n    if (this._values.length > 0) {\n      const value = this._values.dequeue();\n      if (value instanceof Error) {\n        return Promise.reject(value);\n      }\n      return Promise.resolve({value});\n    }\n\n    if (this._closed) {\n      if (this._settlers.length > 0) {\n        throw new Error('Illegal internal state');\n      }\n      return Promise.resolve({done: true});\n    }\n    // Wait for new values to be enqueued\n    return new Promise((resolve, reject) => {\n      this._settlers.enqueue({resolve, reject});\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
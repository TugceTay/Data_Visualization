{"ast":null,"code":"import { window, process, isBrowser } from '@probe.gl/env';\nexport function getHiResTimestamp() {\n  let timestamp;\n  if (isBrowser && 'performance' in window) {\n    var _window$performance, _window$performance$n;\n    timestamp = window === null || window === void 0 ? void 0 : (_window$performance = window.performance) === null || _window$performance === void 0 ? void 0 : (_window$performance$n = _window$performance.now) === null || _window$performance$n === void 0 ? void 0 : _window$performance$n.call(_window$performance);\n  } else if ('hrtime' in process) {\n    var _process$hrtime;\n    const timeParts = process === null || process === void 0 ? void 0 : (_process$hrtime = process.hrtime) === null || _process$hrtime === void 0 ? void 0 : _process$hrtime.call(process);\n    timestamp = timeParts[0] * 1000 + timeParts[1] / 1e6;\n  } else {\n    timestamp = Date.now();\n  }\n  return timestamp;\n}","map":{"version":3,"sources":["../../../src/utils/hi-res-timestamp.ts"],"names":["window","process","isBrowser","getHiResTimestamp","timestamp","performance","now","timeParts","hrtime","Date"],"mappings":"AAEA,SAAQA,MAAR,EAAgBC,OAAhB,EAAyBC,SAAzB,QAAyC,eAAzC;AAGA,OAAO,SAASC,iBAAT,GAA6B;EAClC,IAAIC,SAAJ;EACA,IAAIF,SAAS,IAAI,aAAA,IAAiBF,MAAlC,EAA0C;IAAA,IAAA,mBAAA,EAAA,qBAAA;IACxCI,SAAS,GAAGJ,MAAH,KAAA,IAAA,IAAGA,MAAH,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,mBAAA,GAAGA,MAAM,CAAEK,WAAX,MAAA,IAAA,IAAA,mBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,qBAAA,GAAGL,mBAAAA,CAAqBM,GAAxB,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAGN,qBAAAA,CAAAA,IAAAA,CAAAA,mBAAAA,CAAZI;EACD,CAFD,MAEO,IAAI,QAAA,IAAYH,OAAhB,EAAyB;IAAA,IAAA,eAAA;IAE9B,MAAMM,SAAS,GAAGN,OAAH,KAAA,IAAA,IAAGA,OAAH,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,eAAA,GAAGA,OAAO,CAAEO,MAAZ,MAAA,IAAA,IAAA,eAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAGP,eAAAA,CAAAA,IAAAA,CAAAA,OAAO,CAAzB;IACAG,SAAS,GAAGG,SAAS,CAAC,CAAD,CAATA,GAAe,IAAfA,GAAsBA,SAAS,CAAC,CAAD,CAATA,GAAe,GAAjDH;EACD,CAJM,MAIA;IACLA,SAAS,GAAGK,IAAI,CAACH,GAALG,EAAZL;EACD;EAED,OAAOA,SAAP;AACD","sourcesContent":["// probe.gl, MIT license\n\nimport {window, process, isBrowser} from '@probe.gl/env';\n\n/** Get best timer available. */\nexport function getHiResTimestamp() {\n  let timestamp;\n  if (isBrowser && 'performance' in window) {\n    timestamp = window?.performance?.now?.();\n  } else if ('hrtime' in process) {\n    // @ts-ignore\n    const timeParts = process?.hrtime?.();\n    timestamp = timeParts[0] * 1000 + timeParts[1] / 1e6;\n  } else {\n    timestamp = Date.now();\n  }\n\n  return timestamp;\n}\n"]},"metadata":{},"sourceType":"module"}
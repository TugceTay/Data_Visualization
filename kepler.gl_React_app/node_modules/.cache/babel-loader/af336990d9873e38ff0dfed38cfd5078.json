{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { isResponse } from '../../javascript-utils/is-type';\nimport { getResourceContentLength, getResourceUrlAndType } from './resource-utils';\nexport function makeResponse(_x) {\n  return _makeResponse.apply(this, arguments);\n}\nfunction _makeResponse() {\n  _makeResponse = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(resource) {\n    var headers, contentLength, _getResourceUrlAndTyp, url, type, initialDataUrl, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!isResponse(resource)) {\n              _context.next = 2;\n              break;\n            }\n            return _context.abrupt(\"return\", resource);\n          case 2:\n            headers = {};\n            contentLength = getResourceContentLength(resource);\n            if (contentLength >= 0) {\n              headers['content-length'] = String(contentLength);\n            }\n            _getResourceUrlAndTyp = getResourceUrlAndType(resource), url = _getResourceUrlAndTyp.url, type = _getResourceUrlAndTyp.type;\n            if (type) {\n              headers['content-type'] = type;\n            }\n            _context.next = 9;\n            return getInitialDataUrl(resource);\n          case 9:\n            initialDataUrl = _context.sent;\n            if (initialDataUrl) {\n              headers['x-first-bytes'] = initialDataUrl;\n            }\n            if (typeof resource === 'string') {\n              resource = new TextEncoder().encode(resource);\n            }\n            response = new Response(resource, {\n              headers: headers\n            });\n            Object.defineProperty(response, 'url', {\n              value: url\n            });\n            return _context.abrupt(\"return\", response);\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _makeResponse.apply(this, arguments);\n}\nexport function checkResponse(_x2) {\n  return _checkResponse.apply(this, arguments);\n}\nfunction _checkResponse() {\n  _checkResponse = _asyncToGenerator(_regeneratorRuntime.mark(function _callee2(response) {\n    var message;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (response.ok) {\n              _context2.next = 5;\n              break;\n            }\n            _context2.next = 3;\n            return getResponseError(response);\n          case 3:\n            message = _context2.sent;\n            throw new Error(message);\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _checkResponse.apply(this, arguments);\n}\nexport function checkResponseSync(response) {\n  if (!response.ok) {\n    var message = \"\".concat(response.status, \" \").concat(response.statusText);\n    message = message.length > 60 ? \"\".concat(message.slice(60), \"...\") : message;\n    throw new Error(message);\n  }\n}\nfunction getResponseError(_x3) {\n  return _getResponseError.apply(this, arguments);\n}\nfunction _getResponseError() {\n  _getResponseError = _asyncToGenerator(_regeneratorRuntime.mark(function _callee3(response) {\n    var message, contentType, text;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            message = \"Failed to fetch resource \".concat(response.url, \" (\").concat(response.status, \"): \");\n            _context3.prev = 1;\n            contentType = response.headers.get('Content-Type');\n            text = response.statusText;\n            if (!contentType.includes('application/json')) {\n              _context3.next = 11;\n              break;\n            }\n            _context3.t0 = text;\n            _context3.t1 = \" \";\n            _context3.next = 9;\n            return response.text();\n          case 9:\n            _context3.t2 = _context3.sent;\n            text = _context3.t0 += _context3.t1.concat.call(_context3.t1, _context3.t2);\n          case 11:\n            message += text;\n            message = message.length > 60 ? \"\".concat(message.slice(60), \"...\") : message;\n            _context3.next = 17;\n            break;\n          case 15:\n            _context3.prev = 15;\n            _context3.t3 = _context3[\"catch\"](1);\n          case 17:\n            return _context3.abrupt(\"return\", message);\n          case 18:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 15]]);\n  }));\n  return _getResponseError.apply(this, arguments);\n}\nfunction getInitialDataUrl(_x4) {\n  return _getInitialDataUrl.apply(this, arguments);\n}\nfunction _getInitialDataUrl() {\n  _getInitialDataUrl = _asyncToGenerator(_regeneratorRuntime.mark(function _callee4(resource) {\n    var INITIAL_DATA_LENGTH, blobSlice, slice, base64;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            INITIAL_DATA_LENGTH = 5;\n            if (!(typeof resource === 'string')) {\n              _context4.next = 3;\n              break;\n            }\n            return _context4.abrupt(\"return\", \"data:,\".concat(resource.slice(0, INITIAL_DATA_LENGTH)));\n          case 3:\n            if (!(resource instanceof Blob)) {\n              _context4.next = 8;\n              break;\n            }\n            blobSlice = resource.slice(0, 5);\n            _context4.next = 7;\n            return new Promise(function (resolve) {\n              var reader = new FileReader();\n              reader.onload = function (event) {\n                return resolve(event.target && event.target.result);\n              };\n              reader.readAsDataURL(blobSlice);\n            });\n          case 7:\n            return _context4.abrupt(\"return\", _context4.sent);\n          case 8:\n            if (!(resource instanceof ArrayBuffer)) {\n              _context4.next = 12;\n              break;\n            }\n            slice = resource.slice(0, INITIAL_DATA_LENGTH);\n            base64 = arrayBufferToBase64(slice);\n            return _context4.abrupt(\"return\", \"data:base64,\".concat(base64));\n          case 12:\n            return _context4.abrupt(\"return\", null);\n          case 13:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _getInitialDataUrl.apply(this, arguments);\n}\nfunction arrayBufferToBase64(buffer) {\n  var binary = '';\n  var bytes = new Uint8Array(buffer);\n  for (var i = 0; i < bytes.byteLength; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return btoa(binary);\n}","map":{"version":3,"sources":["../../../../src/lib/utils/response-utils.js"],"names":["isResponse","getResourceContentLength","getResourceUrlAndType","makeResponse","resource","headers","contentLength","String","url","type","initialDataUrl","getInitialDataUrl","TextEncoder","encode","response","Response","Object","defineProperty","value","checkResponse","ok","message","getResponseError","Error","checkResponseSync","status","statusText","length","slice","contentType","get","text","includes","INITIAL_DATA_LENGTH","Blob","blobSlice","Promise","reader","FileReader","onload","resolve","event","target","result","readAsDataURL","ArrayBuffer","base64","arrayBufferToBase64","buffer","binary","bytes","Uint8Array","i","byteLength","fromCharCode","btoa"],"mappings":"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","sourcesContent":["/* global Response, TextEncoder, Blob, FileReader, btoa */\nimport {isResponse} from '../../javascript-utils/is-type';\nimport {getResourceContentLength, getResourceUrlAndType} from './resource-utils';\n\nexport async function makeResponse(resource) {\n  if (isResponse(resource)) {\n    return resource;\n  }\n\n  // Add content-length header if possible\n  /** @type {Record<string, string>} */\n  const headers = {};\n\n  const contentLength = getResourceContentLength(resource);\n  if (contentLength >= 0) {\n    headers['content-length'] = String(contentLength);\n  }\n\n  // `new Response(File)` does not preserve content-type and URL\n  // so we add them here\n  const {url, type} = getResourceUrlAndType(resource);\n  if (type) {\n    headers['content-type'] = type;\n  }\n\n  // Add a custom header with initial bytes if available\n  const initialDataUrl = await getInitialDataUrl(resource);\n  if (initialDataUrl) {\n    headers['x-first-bytes'] = initialDataUrl;\n  }\n\n  // TODO - is this the best way of handling strings?\n  // Maybe package as data URL instead?\n  if (typeof resource === 'string') {\n    // Convert to ArrayBuffer to avoid Response treating it as a URL\n    resource = new TextEncoder().encode(resource);\n  }\n\n  // Attempt to create a Response from the resource, adding headers and setting url\n  const response = new Response(resource, {headers});\n  // We can't control `Response.url` via constructor, use a property override to record URL.\n  Object.defineProperty(response, 'url', {value: url});\n  return response;\n}\n\nexport async function checkResponse(response) {\n  if (!response.ok) {\n    const message = await getResponseError(response);\n    throw new Error(message);\n  }\n}\n\nexport function checkResponseSync(response) {\n  if (!response.ok) {\n    let message = `${response.status} ${response.statusText}`;\n    message = message.length > 60 ? `${message.slice(60)}...` : message;\n    throw new Error(message);\n  }\n}\n\n// HELPERS\n\nasync function getResponseError(response) {\n  let message = `Failed to fetch resource ${response.url} (${response.status}): `;\n  try {\n    const contentType = response.headers.get('Content-Type');\n    let text = response.statusText;\n    if (contentType.includes('application/json')) {\n      text += ` ${await response.text()}`;\n    }\n    message += text;\n    message = message.length > 60 ? `${message.slice(60)}...` : message;\n  } catch (error) {\n    // eslint forbids return in a finally statement, so we just catch here\n  }\n  return message;\n}\n\nasync function getInitialDataUrl(resource) {\n  const INITIAL_DATA_LENGTH = 5;\n  if (typeof resource === 'string') {\n    return `data:,${resource.slice(0, INITIAL_DATA_LENGTH)}`;\n  }\n  if (resource instanceof Blob) {\n    const blobSlice = resource.slice(0, 5);\n    return await new Promise(resolve => {\n      const reader = new FileReader();\n      reader.onload = event => resolve(event.target && event.target.result);\n      reader.readAsDataURL(blobSlice);\n    });\n  }\n  if (resource instanceof ArrayBuffer) {\n    const slice = resource.slice(0, INITIAL_DATA_LENGTH);\n    const base64 = arrayBufferToBase64(slice);\n    return `data:base64,${base64}`;\n  }\n  return null;\n}\n\n// https://stackoverflow.com/questions/9267899/arraybuffer-to-base64-encoded-string\nfunction arrayBufferToBase64(buffer) {\n  let binary = '';\n  const bytes = new Uint8Array(buffer);\n  for (let i = 0; i < bytes.byteLength; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return btoa(binary);\n}\n"]},"metadata":{},"sourceType":"module"}
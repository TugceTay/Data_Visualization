{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createDataContainer = createDataContainer;\nexports.createIndexedDataContainer = createIndexedDataContainer;\nexports.getSampleData = getSampleData;\nexports.DataForm = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _rowDataContainer = require(\"./row-data-container\");\nvar _indexedDataContainer = require(\"./indexed-data-container\");\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\n\n/** @type {import('./data-container-utils').DataForm} */\nvar DataForm = {\n  ROWS_ARRAY: 'ROWS_ARRAY'\n};\n/** @type {import('./data-container-utils').DataContainerOptions} */\n\nexports.DataForm = DataForm;\nvar defaultOptions = {\n  inputDataFormat: DataForm.ROWS_ARRAY\n};\n/** @type {typeof import('./data-container-utils').createDataContainer} */\n\nfunction createDataContainer(data) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions;\n  options = _objectSpread(_objectSpread({}, defaultOptions), options);\n  if (options.inputDataFormat === DataForm.ROWS_ARRAY) {\n    return new _rowDataContainer.RowDataContainer({\n      rows: data,\n      fields: options.fields\n    });\n  }\n  throw Error('Failed to create a data container: not implemented format');\n}\n/** @type {typeof import('./data-container-utils').createIndexedDataContainer} */\n\nfunction createIndexedDataContainer(dataContainer, indices) {\n  return new _indexedDataContainer.IndexedDataContainer(dataContainer, indices);\n}\n/** @type {typeof import('./data-container-utils').getSampleData} */\n\nfunction getSampleData(dataContainer) {\n  var sampleSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;\n  var numberOfRows = dataContainer.numRows();\n  var sampleStep = Math.max(Math.floor(numberOfRows / sampleSize), 1);\n  var indices = [];\n  for (var i = 0; i < numberOfRows; i += sampleStep) {\n    indices.push(i);\n  }\n  return createIndexedDataContainer(dataContainer, indices);\n}","map":{"version":3,"sources":["../../../src/utils/table-utils/data-container-utils.js"],"names":["DataForm","ROWS_ARRAY","defaultOptions","inputDataFormat","createDataContainer","data","options","RowDataContainer","rows","fields","Error","createIndexedDataContainer","dataContainer","indices","IndexedDataContainer","getSampleData","sampleSize","numberOfRows","numRows","sampleStep","Math","max","floor","i","push"],"mappings":";;;;;;;;;;;AAoBA,IAAA,iBAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;AACA,IAAA,qBAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACO,IAAMA,QAAQ,GAAG;EACtBC,UAAU,EAAE;AADU,CAAjB;AAIP;;;AACA,IAAMC,cAAc,GAAG;EACrBC,eAAe,EAAEH,QAAQ,CAACC;AADL,CAAvB;AAIA;;AACO,SAASG,mBAAT,CAA6BC,IAA7B,EAA6D;EAAA,IAA1BC,OAA0B,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAhBJ,cAAgB;EAClEI,OAAO,GAAA,aAAA,CAAA,aAAA,CAAA,CAAA,CAAA,EAAOJ,cAAP,CAAA,EAA0BI,OAA1B,CAAPA;EAEA,IAAIA,OAAO,CAACH,eAARG,KAA4BN,QAAQ,CAACC,UAAzC,EAAqD;IACnD,OAAO,IAAIM,iBAAAA,CAAAA,gBAAJ,CAAqB;MAACC,IAAI,EAAEH,IAAP;MAAaI,MAAM,EAAEH,OAAO,CAACG;IAA7B,CAArB,CAAP;EACD;EAED,MAAMC,KAAK,CAAC,2DAAD,CAAX;AACD;AAED;;AACO,SAASC,0BAAT,CAAoCC,aAApC,EAAmDC,OAAnD,EAA4D;EACjE,OAAO,IAAIC,qBAAAA,CAAAA,oBAAJ,CAAyBF,aAAzB,EAAwCC,OAAxC,CAAP;AACD;AAED;;AACO,SAASE,aAAT,CAAuBH,aAAvB,EAAwD;EAAA,IAAlBI,UAAkB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAL,GAAK;EAC7D,IAAMC,YAAY,GAAGL,aAAa,CAACM,OAAdN,EAArB;EACA,IAAMO,UAAU,GAAGC,IAAI,CAACC,GAALD,CAASA,IAAI,CAACE,KAALF,CAAWH,YAAY,GAAGD,UAA1BI,CAATA,EAAgD,CAAhDA,CAAnB;EAEA,IAAMP,OAAO,GAAG,EAAhB;EACA,KAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,YAApB,EAAkCM,CAAC,IAAIJ,UAAvC,EAAmD;IACjDN,OAAO,CAACW,IAARX,CAAaU,CAAbV,CAAAA;EACD;EAED,OAAOF,0BAA0B,CAACC,aAAD,EAAgBC,OAAhB,CAAjC;AACD","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {RowDataContainer} from './row-data-container';\nimport {IndexedDataContainer} from './indexed-data-container';\n\n/** @type {import('./data-container-utils').DataForm} */\nexport const DataForm = {\n  ROWS_ARRAY: 'ROWS_ARRAY'\n};\n\n/** @type {import('./data-container-utils').DataContainerOptions} */\nconst defaultOptions = {\n  inputDataFormat: DataForm.ROWS_ARRAY\n};\n\n/** @type {typeof import('./data-container-utils').createDataContainer} */\nexport function createDataContainer(data, options = defaultOptions) {\n  options = {...defaultOptions, ...options};\n\n  if (options.inputDataFormat === DataForm.ROWS_ARRAY) {\n    return new RowDataContainer({rows: data, fields: options.fields});\n  }\n\n  throw Error('Failed to create a data container: not implemented format');\n}\n\n/** @type {typeof import('./data-container-utils').createIndexedDataContainer} */\nexport function createIndexedDataContainer(dataContainer, indices) {\n  return new IndexedDataContainer(dataContainer, indices);\n}\n\n/** @type {typeof import('./data-container-utils').getSampleData} */\nexport function getSampleData(dataContainer, sampleSize = 500) {\n  const numberOfRows = dataContainer.numRows();\n  const sampleStep = Math.max(Math.floor(numberOfRows / sampleSize), 1);\n\n  const indices = [];\n  for (let i = 0; i < numberOfRows; i += sampleStep) {\n    indices.push(i);\n  }\n\n  return createIndexedDataContainer(dataContainer, indices);\n}\n"]},"metadata":{},"sourceType":"script"}
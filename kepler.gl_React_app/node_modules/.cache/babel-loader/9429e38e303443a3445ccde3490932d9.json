{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PureFeatureActionPanelFactory = PureFeatureActionPanelFactory;\nexports[\"default\"] = FeatureActionPanelFactory;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactIntl = require(\"react-intl\");\nvar _actionPanel = _interopRequireWildcard(require(\"../common/action-panel\"));\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\nvar _reactOnclickoutside = _interopRequireDefault(require(\"react-onclickoutside\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _icons = require(\"../common/icons\");\nvar _copyToClipboard = _interopRequireDefault(require(\"copy-to-clipboard\"));\nvar _templateObject;\nvar LAYOVER_OFFSET = 4;\nvar StyledActionsLayer = _styledComponents[\"default\"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  position: absolute;\\n\"])));\nPureFeatureActionPanelFactory.deps = [];\nfunction PureFeatureActionPanelFactory() {\n  var FeatureActionPanel = function FeatureActionPanel(_ref) {\n    var className = _ref.className,\n      datasets = _ref.datasets,\n      selectedFeature = _ref.selectedFeature,\n      position = _ref.position,\n      layers = _ref.layers,\n      currentFilter = _ref.currentFilter,\n      onToggleLayer = _ref.onToggleLayer,\n      onDeleteFeature = _ref.onDeleteFeature;\n    var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      copied = _useState2[0],\n      setCopied = _useState2[1];\n    var _ref2 = currentFilter || {},\n      _ref2$layerId = _ref2.layerId,\n      layerId = _ref2$layerId === void 0 ? [] : _ref2$layerId;\n    var intl = (0, _reactIntl.useIntl)();\n    var copyGeometry = (0, _react.useCallback)(function () {\n      if (selectedFeature !== null && selectedFeature !== void 0 && selectedFeature.geometry) (0, _copyToClipboard[\"default\"])(JSON.stringify(selectedFeature.geometry));\n      setCopied(true);\n    }, [selectedFeature === null || selectedFeature === void 0 ? void 0 : selectedFeature.geometry]);\n    return /*#__PURE__*/_react[\"default\"].createElement(StyledActionsLayer, {\n      className: (0, _classnames[\"default\"])('feature-action-panel', className),\n      style: {\n        top: \"\".concat(position.y + LAYOVER_OFFSET, \"px\"),\n        left: \"\".concat(position.x + LAYOVER_OFFSET, \"px\")\n      }\n    }, /*#__PURE__*/_react[\"default\"].createElement(_actionPanel[\"default\"], null, /*#__PURE__*/_react[\"default\"].createElement(_actionPanel.ActionPanelItem, {\n      className: \"editor-layers-list\",\n      label: intl.formatMessage({\n        id: 'editor.filterLayer',\n        defaultMessage: 'Filter layers'\n      }),\n      Icon: _icons.Layers\n    }, layers.map(function (layer, index) {\n      return /*#__PURE__*/_react[\"default\"].createElement(_actionPanel.ActionPanelItem, {\n        key: index,\n        label: layer.config.label,\n        color: datasets[layer.config.dataId].color,\n        isSelection: true,\n        isActive: layerId.includes(layer.id),\n        onClick: function onClick() {\n          return onToggleLayer(layer);\n        },\n        className: \"layer-panel-item\"\n      });\n    })), /*#__PURE__*/_react[\"default\"].createElement(_actionPanel.ActionPanelItem, {\n      label: intl.formatMessage({\n        id: 'editor.copyGeometry',\n        defaultMessage: 'Copy Geometry'\n      }),\n      className: \"delete-panel-item\",\n      Icon: copied ? _icons.Checkmark : _icons.Copy,\n      onClick: copyGeometry\n    }), /*#__PURE__*/_react[\"default\"].createElement(_actionPanel.ActionPanelItem, {\n      label: intl.formatMessage({\n        id: 'tooltip.delete',\n        defaultMessage: 'Delete'\n      }),\n      className: \"delete-panel-item\",\n      Icon: _icons.Trash,\n      onClick: onDeleteFeature\n    })));\n  };\n  FeatureActionPanel.displayName = 'FeatureActionPanel';\n  FeatureActionPanel.propTypes = {\n    className: _propTypes[\"default\"].string,\n    datasets: _propTypes[\"default\"].object.isRequired,\n    position: _propTypes[\"default\"].object.isRequired,\n    layers: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].object).isRequired,\n    currentFilter: _propTypes[\"default\"].object,\n    onClose: _propTypes[\"default\"].func.isRequired,\n    onDeleteFeature: _propTypes[\"default\"].func.isRequired\n  };\n  FeatureActionPanel.defaultProps = {\n    position: {}\n  };\n  return FeatureActionPanel;\n}\nFeatureActionPanelFactory.deps = PureFeatureActionPanelFactory.deps;\nfunction FeatureActionPanelFactory() {\n  var PureFeatureActionPanel = PureFeatureActionPanelFactory();\n  var ClickOutsideFeatureActionPanel = function ClickOutsideFeatureActionPanel(props) {\n    // @ts-ignore\n    ClickOutsideFeatureActionPanel.handleClickOutside = function (e) {\n      var _props$onClose;\n      e.preventDefault();\n      e.stopPropagation();\n      (_props$onClose = props.onClose) === null || _props$onClose === void 0 ? void 0 : _props$onClose.call(props);\n    };\n    return /*#__PURE__*/_react[\"default\"].createElement(PureFeatureActionPanel, props);\n  };\n  var clickOutsideConfig = {\n    // @ts-ignore\n    handleClickOutside: function handleClickOutside() {\n      return ClickOutsideFeatureActionPanel.handleClickOutside;\n    }\n  };\n  return (0, _reactOnclickoutside[\"default\"])(ClickOutsideFeatureActionPanel, clickOutsideConfig);\n}","map":{"version":3,"sources":["../../../src/components/editor/feature-action-panel.js"],"names":["LAYOVER_OFFSET","StyledActionsLayer","styled","div","PureFeatureActionPanelFactory","deps","FeatureActionPanel","className","datasets","selectedFeature","position","layers","currentFilter","onToggleLayer","onDeleteFeature","copied","setCopied","layerId","intl","copyGeometry","geometry","JSON","stringify","top","y","left","x","formatMessage","id","defaultMessage","Layers","map","layer","index","config","label","dataId","color","includes","Checkmark","Copy","Trash","displayName","propTypes","PropTypes","string","object","isRequired","arrayOf","onClose","func","defaultProps","FeatureActionPanelFactory","PureFeatureActionPanel","ClickOutsideFeatureActionPanel","handleClickOutside","e","preventDefault","stopPropagation","props","clickOutsideConfig"],"mappings":";;;;;;;;;;;AAoBA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;AAEA,IAAA,YAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,wBAAA,CAAA,CAAA;AACA,IAAA,iBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;AACA,IAAA,oBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,sBAAA,CAAA,CAAA;AACA,IAAA,UAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;AACA,IAAA,gBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;;AAEA,IAAMA,cAAc,GAAG,CAAvB;AAEA,IAAMC,kBAAkB,GAAGC,iBAAAA,CAAAA,SAAAA,CAAAA,CAAOC,GAAV,CAAA,eAAA,KAAA,eAAA,GAAA,CAAA,CAAA,EAAA,uBAAA,CAAA,SAAA,CAAA,EAAA,CAAA,2BAAA,CAAA,CAAA,CAAA,CAAxB;AAIAC,6BAA6B,CAACC,IAA9BD,GAAqC,EAArCA;AAEO,SAASA,6BAAT,GAAyC;EAC9C,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAAA,IAAA,EASrB;IAAA,IARJC,SAQI,GAAA,IAAA,CARJA,SAQI;MAPJC,QAOI,GAAA,IAAA,CAPJA,QAOI;MANJC,eAMI,GAAA,IAAA,CANJA,eAMI;MALJC,QAKI,GAAA,IAAA,CALJA,QAKI;MAJJC,MAII,GAAA,IAAA,CAJJA,MAII;MAHJC,aAGI,GAAA,IAAA,CAHJA,aAGI;MAFJC,aAEI,GAAA,IAAA,CAFJA,aAEI;MADJC,eACI,GAAA,IAAA,CADJA,eACI;IAAA,IAAA,SAAA,GACwB,CAAA,CAAA,EAAA,MAAA,CAAA,QAAA,EAAS,KAAT,CADxB;MAAA,UAAA,GAAA,CAAA,CAAA,EAAA,eAAA,CAAA,SAAA,CAAA,EAAA,SAAA,EAAA,CAAA,CAAA;MACGC,MADH,GAAA,UAAA,CAAA,CAAA,CAAA;MACWC,SADX,GAAA,UAAA,CAAA,CAAA,CAAA;IAAA,IAAA,KAAA,GAEmBJ,aAAa,IAAI,CAAA,CAFpC;MAAA,aAAA,GAAA,KAAA,CAEGK,OAFH;MAEGA,OAFH,GAAA,aAAA,KAAA,KAAA,CAAA,GAEa,EAFb,GAAA,aAAA;IAGJ,IAAMC,IAAI,GAAG,CAAA,CAAA,EAAA,UAAA,CAAA,OAAA,GAAb;IAEA,IAAMC,YAAY,GAAG,CAAA,CAAA,EAAA,MAAA,CAAA,WAAA,EAAY,YAAM;MACrC,IAAIV,eAAJ,KAAA,IAAA,IAAIA,eAAJ,KAAA,KAAA,CAAA,IAAIA,eAAe,CAAEW,QAArB,EAA+B,CAAA,CAAA,EAAA,gBAAA,CAAA,SAAA,CAAA,EAAKC,IAAI,CAACC,SAALD,CAAeZ,eAAe,CAACW,QAA/BC,CAAL,CAAA;MAC/BL,SAAS,CAAC,IAAD,CAATA;IACD,CAHoB,EAGlB,CAACP,eAAD,KAAA,IAAA,IAACA,eAAD,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAACA,eAAe,CAAEW,QAAlB,CAHkB,CAArB;IAKA,OAAA,aACE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,kBAAD,EAAA;MACE,SAAS,EAAE,CAAA,CAAA,EAAA,WAAA,CAAA,SAAA,CAAA,EAAW,sBAAX,EAAmCb,SAAnC,CADb;MAEE,KAAK,EAAE;QACLgB,GAAG,EAAA,EAAA,CAAA,MAAA,CAAKb,QAAQ,CAACc,CAATd,GAAaV,cAAlB,EAAA,IAAA,CADE;QAELyB,IAAI,EAAA,EAAA,CAAA,MAAA,CAAKf,QAAQ,CAACgB,CAAThB,GAAaV,cAAlB,EAAA,IAAA;MAFC;IAFT,CAAA,EAAA,aAOE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,YAAA,CAAA,SAAA,CAAD,EAAA,IAAA,EAAA,aACE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,YAAA,CAAA,eAAD,EAAA;MACE,SAAS,EAAC,oBADZ;MAEE,KAAK,EAAE,IAAI,CAAC2B,aAAL,CAAmB;QAACC,EAAE,EAAE,oBAAL;QAA2BC,cAAc,EAAE;MAA3C,CAAnB,CAFT;MAGE,IAAI,EAAEC,MAAAA,CAAAA;IAHR,CAAA,EAKG,MAAM,CAACC,GAAP,CAAW,UAACC,KAAD,EAAQC,KAAR,EAAA;MAAA,OAAA,aACV,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,YAAA,CAAA,eAAD,EAAA;QACE,GAAG,EAAEA,KADP;QAEE,KAAK,EAAED,KAAK,CAACE,MAANF,CAAaG,KAFtB;QAGE,KAAK,EAAE3B,QAAQ,CAACwB,KAAK,CAACE,MAANF,CAAaI,MAAd,CAAR5B,CAA8B6B,KAHvC;QAIE,WAAW,EAAE,IAJf;QAKE,QAAQ,EAAEpB,OAAO,CAACqB,QAARrB,CAAiBe,KAAK,CAACJ,EAAvBX,CALZ;QAME,OAAO,EAAE,SAAA,OAAA,GAAA;UAAA,OAAMJ,aAAa,CAACmB,KAAD,CAAnB;QAAA,CANX;QAOE,SAAS,EAAC;MAPZ,CAAA,CADU;IAAA,CAAX,CALH,CADF,EAAA,aAkBE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,YAAA,CAAA,eAAD,EAAA;MACE,KAAK,EAAE,IAAI,CAACL,aAAL,CAAmB;QAACC,EAAE,EAAE,qBAAL;QAA4BC,cAAc,EAAE;MAA5C,CAAnB,CADT;MAEE,SAAS,EAAC,mBAFZ;MAGE,IAAI,EAAEd,MAAM,GAAGwB,MAAAA,CAAAA,SAAH,GAAeC,MAAAA,CAAAA,IAH7B;MAIE,OAAO,EAAErB;IAJX,CAAA,CAlBF,EAAA,aAyBE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,YAAA,CAAA,eAAD,EAAA;MACE,KAAK,EAAE,IAAI,CAACQ,aAAL,CAAmB;QAACC,EAAE,EAAE,gBAAL;QAAuBC,cAAc,EAAE;MAAvC,CAAnB,CADT;MAEE,SAAS,EAAC,mBAFZ;MAGE,IAAI,EAAEY,MAAAA,CAAAA,KAHR;MAIE,OAAO,EAAE3B;IAJX,CAAA,CAzBF,CAPF,CADF;EA0CD,CA7DD;EA+DAR,kBAAkB,CAACoC,WAAnBpC,GAAiC,oBAAjCA;EACAA,kBAAkB,CAACqC,SAAnBrC,GAA+B;IAC7BC,SAAS,EAAEqC,UAAAA,CAAAA,SAAAA,CAAAA,CAAUC,MADQ;IAE7BrC,QAAQ,EAAEoC,UAAAA,CAAAA,SAAAA,CAAAA,CAAUE,MAAVF,CAAiBG,UAFE;IAG7BrC,QAAQ,EAAEkC,UAAAA,CAAAA,SAAAA,CAAAA,CAAUE,MAAVF,CAAiBG,UAHE;IAI7BpC,MAAM,EAAEiC,UAAAA,CAAAA,SAAAA,CAAAA,CAAUI,OAAVJ,CAAkBA,UAAAA,CAAAA,SAAAA,CAAAA,CAAUE,MAA5BF,CAAAA,CAAoCG,UAJf;IAK7BnC,aAAa,EAAEgC,UAAAA,CAAAA,SAAAA,CAAAA,CAAUE,MALI;IAM7BG,OAAO,EAAEL,UAAAA,CAAAA,SAAAA,CAAAA,CAAUM,IAAVN,CAAeG,UANK;IAO7BjC,eAAe,EAAE8B,UAAAA,CAAAA,SAAAA,CAAAA,CAAUM,IAAVN,CAAeG;EAPH,CAA/BzC;EAUAA,kBAAkB,CAAC6C,YAAnB7C,GAAkC;IAChCI,QAAQ,EAAE,CAAA;EADsB,CAAlCJ;EAIA,OAAOA,kBAAP;AACD;AAED8C,yBAAyB,CAAC/C,IAA1B+C,GAAiChD,6BAA6B,CAACC,IAA/D+C;AAEe,SAASA,yBAAT,GAAqC;EAClD,IAAMC,sBAAsB,GAAGjD,6BAA6B,EAA5D;EAEA,IAAMkD,8BAA8B,GAAG,SAAjCA,8BAAiC,CAAA,KAAK,EAAI;IAC9C;IACAA,8BAA8B,CAACC,kBAA/BD,GAAoD,UAAA,CAAC,EAAI;MAAA,IAAA,cAAA;MACvDE,CAAC,CAACC,cAAFD,EAAAA;MACAA,CAAC,CAACE,eAAFF,EAAAA;MACA,CAAA,cAAA,GAAA,KAAK,CAACP,OAAN,MAAA,IAAA,IAAA,cAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,cAAA,CAAA,IAAA,CAAA,KAAK,CAAA;IACN,CAJDK;IAKA,OAAA,aAAO,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,sBAAD,EAA4BK,KAA5B,CAAP;EACD,CARD;EAUA,IAAMC,kBAAkB,GAAG;IACzB;IACAL,kBAAkB,EAAE,SAAA,kBAAA,GAAA;MAAA,OAAMD,8BAA8B,CAACC,kBAArC;IAAA;EAFK,CAA3B;EAKA,OAAO,CAAA,CAAA,EAAA,oBAAA,CAAA,SAAA,CAAA,EAAeD,8BAAf,EAA+CM,kBAA/C,CAAP;AACD","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {useCallback, useState} from 'react';\nimport {useIntl} from 'react-intl';\n\nimport ActionPanel, {ActionPanelItem} from 'components/common/action-panel';\nimport styled from 'styled-components';\nimport onClickOutside from 'react-onclickoutside';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport {Trash, Layers, Copy, Checkmark} from 'components/common/icons';\nimport copy from 'copy-to-clipboard';\n\nconst LAYOVER_OFFSET = 4;\n\nconst StyledActionsLayer = styled.div`\n  position: absolute;\n`;\n\nPureFeatureActionPanelFactory.deps = [];\n\nexport function PureFeatureActionPanelFactory() {\n  const FeatureActionPanel = ({\n    className,\n    datasets,\n    selectedFeature,\n    position,\n    layers,\n    currentFilter,\n    onToggleLayer,\n    onDeleteFeature\n  }) => {\n    const [copied, setCopied] = useState(false);\n    const {layerId = []} = currentFilter || {};\n    const intl = useIntl();\n\n    const copyGeometry = useCallback(() => {\n      if (selectedFeature?.geometry) copy(JSON.stringify(selectedFeature.geometry));\n      setCopied(true);\n    }, [selectedFeature?.geometry]);\n\n    return (\n      <StyledActionsLayer\n        className={classnames('feature-action-panel', className)}\n        style={{\n          top: `${position.y + LAYOVER_OFFSET}px`,\n          left: `${position.x + LAYOVER_OFFSET}px`\n        }}\n      >\n        <ActionPanel>\n          <ActionPanelItem\n            className=\"editor-layers-list\"\n            label={intl.formatMessage({id: 'editor.filterLayer', defaultMessage: 'Filter layers'})}\n            Icon={Layers}\n          >\n            {layers.map((layer, index) => (\n              <ActionPanelItem\n                key={index}\n                label={layer.config.label}\n                color={datasets[layer.config.dataId].color}\n                isSelection={true}\n                isActive={layerId.includes(layer.id)}\n                onClick={() => onToggleLayer(layer)}\n                className=\"layer-panel-item\"\n              />\n            ))}\n          </ActionPanelItem>\n          <ActionPanelItem\n            label={intl.formatMessage({id: 'editor.copyGeometry', defaultMessage: 'Copy Geometry'})}\n            className=\"delete-panel-item\"\n            Icon={copied ? Checkmark : Copy}\n            onClick={copyGeometry}\n          />\n\n          <ActionPanelItem\n            label={intl.formatMessage({id: 'tooltip.delete', defaultMessage: 'Delete'})}\n            className=\"delete-panel-item\"\n            Icon={Trash}\n            onClick={onDeleteFeature}\n          />\n        </ActionPanel>\n      </StyledActionsLayer>\n    );\n  };\n\n  FeatureActionPanel.displayName = 'FeatureActionPanel';\n  FeatureActionPanel.propTypes = {\n    className: PropTypes.string,\n    datasets: PropTypes.object.isRequired,\n    position: PropTypes.object.isRequired,\n    layers: PropTypes.arrayOf(PropTypes.object).isRequired,\n    currentFilter: PropTypes.object,\n    onClose: PropTypes.func.isRequired,\n    onDeleteFeature: PropTypes.func.isRequired\n  };\n\n  FeatureActionPanel.defaultProps = {\n    position: {}\n  };\n\n  return FeatureActionPanel;\n}\n\nFeatureActionPanelFactory.deps = PureFeatureActionPanelFactory.deps;\n\nexport default function FeatureActionPanelFactory() {\n  const PureFeatureActionPanel = PureFeatureActionPanelFactory();\n\n  const ClickOutsideFeatureActionPanel = props => {\n    // @ts-ignore\n    ClickOutsideFeatureActionPanel.handleClickOutside = e => {\n      e.preventDefault();\n      e.stopPropagation();\n      props.onClose?.();\n    };\n    return <PureFeatureActionPanel {...props} />;\n  };\n\n  const clickOutsideConfig = {\n    // @ts-ignore\n    handleClickOutside: () => ClickOutsideFeatureActionPanel.handleClickOutside\n  };\n\n  return onClickOutside(ClickOutsideFeatureActionPanel, clickOutsideConfig);\n}\n"]},"metadata":{},"sourceType":"script"}
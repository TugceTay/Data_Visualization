{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\nvar _chickletedInput = require(\"../../../common/item-selector/chickleted-input\");\nvar _icons = require(\"../../../common/icons\");\nvar _dropdownList = _interopRequireDefault(require(\"../../../common/item-selector/dropdown-list\"));\nvar _styledComponents2 = require(\"../../../common/styled-components\");\nvar _localization = require(\"../../../../localization\");\nvar _reactOnclickoutside = _interopRequireDefault(require(\"react-onclickoutside\"));\nvar _defaultSettings = require(\"../../../../constants/default-settings\");\nvar _tooltip = require(\"../../../../constants/tooltip\");\nvar _dataUtils = require(\"../../../../utils/data-utils\");\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nvar TIME_DISPLAY = '2020-05-11 14:00';\nvar getValue = function getValue(fmt) {\n  return fmt[_tooltip.TOOLTIP_KEY];\n};\nvar addDTimeLabel = function addDTimeLabel(formats) {\n  return formats.map(function (f) {\n    return _objectSpread(_objectSpread({}, f), {}, {\n      label: f.type === _tooltip.TOOLTIP_FORMAT_TYPES.DATE_TIME || f.type === _tooltip.TOOLTIP_FORMAT_TYPES.DATE ? (0, _dataUtils.getFormatter)(getValue(f))(TIME_DISPLAY) : f.label\n    });\n  });\n};\nfunction getFormatLabels(fields, fieldName) {\n  var fieldType = fields.find(function (f) {\n    return f.name === fieldName;\n  }).type;\n  var tooltipTypes = fieldType && _defaultSettings.FIELD_OPTS[fieldType].format.tooltip || [];\n  var formatLabels = Object.values(_tooltip.TOOLTIP_FORMATS).filter(function (t) {\n    return tooltipTypes.includes(t.type);\n  });\n  return addDTimeLabel(formatLabels);\n}\nvar ChickletAddonWrapper = _styledComponents[\"default\"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  position: relative;\\n\"])));\nvar ChickletAddon = _styledComponents[\"default\"].div(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  margin-right: 4px;\\n\"])));\nvar StyledPopover = _styledComponents[\"default\"].div(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  margin-left: -64px;\\n  position: absolute;\\n  top: 20px;\\n  width: 140px;\\n  z-index: 101;\\n\"])));\nvar hashStyles = {\n  SHOW: 'SHOW',\n  ACTIVE: 'ACTIVE'\n};\nvar IconDiv = _styledComponents[\"default\"].div.attrs({\n  className: 'tooltip-chicklet__icon'\n})(_templateObject4 || (_templateObject4 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  color: \", \";\\n\"])), function (props) {\n  return props.status === hashStyles.SHOW ? props.theme.subtextColorActive : props.status === hashStyles.ACTIVE ? props.theme.activeColor : props.theme.textColor;\n});\nfunction getFormatTooltip(formatLabels, format) {\n  if (!format) {\n    return null;\n  }\n  var formatLabel = formatLabels.find(function (fl) {\n    return getValue(fl) === format;\n  });\n  if (formatLabel) {\n    return formatLabel.label;\n  }\n  return (0, _typeof2[\"default\"])(format) === 'object' ? JSON.stringify(format, null, 2) : String(format);\n}\nfunction TooltipChickletFactory(dataId, config, onChange, fields) {\n  var TooltipChicklet = /*#__PURE__*/function (_Component) {\n    (0, _inherits2[\"default\"])(TooltipChicklet, _Component);\n    var _super = _createSuper(TooltipChicklet);\n    function TooltipChicklet() {\n      var _this;\n      (0, _classCallCheck2[\"default\"])(this, TooltipChicklet);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _super.call.apply(_super, [this].concat(args));\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"state\", {\n        show: false\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"handleClickOutside\", function (e) {\n        if (_this.node.contains(e.target)) {\n          return;\n        }\n        _this.setState({\n          show: false\n        });\n      });\n      return _this;\n    }\n    (0, _createClass2[\"default\"])(TooltipChicklet, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside, false);\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside, false);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n        var _this$props = this.props,\n          disabled = _this$props.disabled,\n          item = _this$props.item,\n          displayOption = _this$props.displayOption,\n          remove = _this$props.remove;\n        var show = this.state.show;\n        var tooltipField = config.fieldsToShow[dataId].find(function (fieldToShow) {\n          return fieldToShow.name === item.name;\n        });\n        if (!tooltipField) {\n          return null;\n        }\n        var formatLabels = getFormatLabels(fields, tooltipField.name);\n        var hasFormat = Boolean(tooltipField.format);\n        var selectionIndex = formatLabels.findIndex(function (fl) {\n          return getValue(fl) === tooltipField.format;\n        });\n        var hashStyle = show ? hashStyles.SHOW : hasFormat ? hashStyles.ACTIVE : null;\n        return /*#__PURE__*/_react[\"default\"].createElement(_chickletedInput.ChickletButton, {\n          ref: function ref(node) {\n            return _this2.node = node;\n          }\n        }, /*#__PURE__*/_react[\"default\"].createElement(_chickletedInput.ChickletTag, null, displayOption(item)), formatLabels.length > 1 && /*#__PURE__*/_react[\"default\"].createElement(ChickletAddonWrapper, null, /*#__PURE__*/_react[\"default\"].createElement(ChickletAddon, {\n          \"data-tip\": true,\n          \"data-for\": \"addon-\".concat(tooltipField.name)\n        }, /*#__PURE__*/_react[\"default\"].createElement(IconDiv, {\n          status: hashStyle\n        }, /*#__PURE__*/_react[\"default\"].createElement(_icons.Hash, {\n          height: \"8px\",\n          onClick: function onClick(e) {\n            e.stopPropagation();\n            _this2.setState({\n              show: Boolean(!show)\n            });\n          }\n        })), /*#__PURE__*/_react[\"default\"].createElement(_styledComponents2.Tooltip, {\n          id: \"addon-\".concat(tooltipField.name),\n          effect: \"solid\"\n        }, /*#__PURE__*/_react[\"default\"].createElement(\"span\", null, hasFormat ? getFormatTooltip(formatLabels, tooltipField.format) : /*#__PURE__*/_react[\"default\"].createElement(_localization.FormattedMessage, {\n          id: 'fieldSelector.formatting'\n        })))), show && /*#__PURE__*/_react[\"default\"].createElement(StyledPopover, null, /*#__PURE__*/_react[\"default\"].createElement(_dropdownList[\"default\"], {\n          options: formatLabels,\n          selectionIndex: selectionIndex,\n          displayOption: function displayOption(_ref) {\n            var label = _ref.label;\n            return label;\n          },\n          onOptionSelected: function onOptionSelected(result, e) {\n            e.stopPropagation();\n            _this2.setState({\n              show: false\n            });\n            var oldFieldsToShow = config.fieldsToShow[dataId];\n            var fieldsToShow = oldFieldsToShow.map(function (fieldToShow) {\n              return fieldToShow.name === tooltipField.name ? {\n                name: tooltipField.name,\n                format: getValue(result)\n              } : fieldToShow;\n            });\n            var newConfig = _objectSpread(_objectSpread({}, config), {}, {\n              fieldsToShow: _objectSpread(_objectSpread({}, config.fieldsToShow), {}, (0, _defineProperty2[\"default\"])({}, dataId, fieldsToShow))\n            });\n            onChange(newConfig);\n          }\n        }))), /*#__PURE__*/_react[\"default\"].createElement(_icons.Delete, {\n          onClick: disabled ? null : remove\n        }));\n      }\n    }]);\n    return TooltipChicklet;\n  }(_react.Component);\n  return (0, _reactOnclickoutside[\"default\"])(TooltipChicklet);\n}\nvar _default = TooltipChickletFactory;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../../../src/components/side-panel/interaction-panel/tooltip-config/tooltip-chicklet.js"],"names":["TIME_DISPLAY","getValue","fmt","TOOLTIP_KEY","addDTimeLabel","map","f","label","type","TOOLTIP_FORMAT_TYPES","DATE_TIME","DATE","getFormatLabels","fields","fieldName","fieldType","find","name","tooltipTypes","FIELD_OPTS","format","tooltip","formatLabels","values","TOOLTIP_FORMATS","filter","includes","t","ChickletAddonWrapper","styled","div","ChickletAddon","StyledPopover","hashStyles","SHOW","ACTIVE","IconDiv","attrs","className","props","status","theme","subtextColorActive","activeColor","textColor","getFormatTooltip","formatLabel","fl","JSON","stringify","String","TooltipChickletFactory","dataId","config","onChange","TooltipChicklet","Component","show","document","addEventListener","handleClickOutside","removeEventListener","node","contains","e","target","setState","disabled","item","displayOption","remove","state","tooltipField","fieldsToShow","fieldToShow","hasFormat","Boolean","selectionIndex","findIndex","hashStyle","length","stopPropagation","result","oldFieldsToShow","newConfig"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {Component} from 'react';\nimport styled from 'styled-components';\nimport {ChickletButton, ChickletTag} from 'components/common/item-selector/chickleted-input';\nimport {Hash, Delete} from 'components/common/icons';\nimport DropdownList from 'components/common/item-selector/dropdown-list';\nimport {Tooltip} from 'components/common/styled-components';\nimport {FormattedMessage} from 'localization';\nimport onClickOutside from 'react-onclickoutside';\nimport {FIELD_OPTS} from 'constants/default-settings';\nimport {TOOLTIP_FORMATS, TOOLTIP_FORMAT_TYPES, TOOLTIP_KEY} from 'constants/tooltip';\nimport {getFormatter} from 'utils/data-utils';\n\nconst TIME_DISPLAY = '2020-05-11 14:00';\nconst getValue = fmt => fmt[TOOLTIP_KEY];\n\nconst addDTimeLabel = formats =>\n  formats.map(f => ({\n    ...f,\n    label:\n      f.type === TOOLTIP_FORMAT_TYPES.DATE_TIME || f.type === TOOLTIP_FORMAT_TYPES.DATE\n        ? getFormatter(getValue(f))(TIME_DISPLAY)\n        : f.label\n  }));\n\nfunction getFormatLabels(fields, fieldName) {\n  const fieldType = fields.find(f => f.name === fieldName).type;\n  const tooltipTypes = (fieldType && FIELD_OPTS[fieldType].format.tooltip) || [];\n  const formatLabels = Object.values(TOOLTIP_FORMATS).filter(t => tooltipTypes.includes(t.type));\n\n  return addDTimeLabel(formatLabels);\n}\n\nconst ChickletAddonWrapper = styled.div`\n  position: relative;\n`;\n\nconst ChickletAddon = styled.div`\n  margin-right: 4px;\n`;\n\nconst StyledPopover = styled.div`\n  margin-left: -64px;\n  position: absolute;\n  top: 20px;\n  width: 140px;\n  z-index: 101;\n`;\n\nconst hashStyles = {\n  SHOW: 'SHOW',\n  ACTIVE: 'ACTIVE'\n};\n\nconst IconDiv = styled.div.attrs({\n  className: 'tooltip-chicklet__icon'\n})`\n  color: ${props =>\n    props.status === hashStyles.SHOW\n      ? props.theme.subtextColorActive\n      : props.status === hashStyles.ACTIVE\n      ? props.theme.activeColor\n      : props.theme.textColor};\n`;\n\nfunction getFormatTooltip(formatLabels, format) {\n  if (!format) {\n    return null;\n  }\n  const formatLabel = formatLabels.find(fl => getValue(fl) === format);\n  if (formatLabel) {\n    return formatLabel.label;\n  }\n  return typeof format === 'object' ? JSON.stringify(format, null, 2) : String(format);\n}\n\nfunction TooltipChickletFactory(dataId, config, onChange, fields) {\n  class TooltipChicklet extends Component {\n    state = {\n      show: false\n    };\n\n    componentDidMount() {\n      document.addEventListener('mousedown', this.handleClickOutside, false);\n    }\n\n    componentWillUnmount() {\n      document.removeEventListener('mousedown', this.handleClickOutside, false);\n    }\n\n    handleClickOutside = e => {\n      if (this.node.contains(e.target)) {\n        return;\n      }\n      this.setState({show: false});\n    };\n\n    render() {\n      const {disabled, item, displayOption, remove} = this.props;\n      const {show} = this.state;\n      const tooltipField = config.fieldsToShow[dataId].find(\n        fieldToShow => fieldToShow.name === item.name\n      );\n      if (!tooltipField) {\n        return null;\n      }\n      const formatLabels = getFormatLabels(fields, tooltipField.name);\n      const hasFormat = Boolean(tooltipField.format);\n      const selectionIndex = formatLabels.findIndex(fl => getValue(fl) === tooltipField.format);\n      const hashStyle = show ? hashStyles.SHOW : hasFormat ? hashStyles.ACTIVE : null;\n\n      return (\n        <ChickletButton ref={node => (this.node = node)}>\n          <ChickletTag>{displayOption(item)}</ChickletTag>\n          {formatLabels.length > 1 && (\n            <ChickletAddonWrapper>\n              <ChickletAddon data-tip data-for={`addon-${tooltipField.name}`}>\n                <IconDiv status={hashStyle}>\n                  <Hash\n                    height=\"8px\"\n                    onClick={e => {\n                      e.stopPropagation();\n                      this.setState({show: Boolean(!show)});\n                    }}\n                  />\n                </IconDiv>\n                <Tooltip id={`addon-${tooltipField.name}`} effect=\"solid\">\n                  <span>\n                    {hasFormat ? (\n                      getFormatTooltip(formatLabels, tooltipField.format)\n                    ) : (\n                      <FormattedMessage id={'fieldSelector.formatting'} />\n                    )}\n                  </span>\n                </Tooltip>\n              </ChickletAddon>\n              {show && (\n                <StyledPopover>\n                  <DropdownList\n                    options={formatLabels}\n                    selectionIndex={selectionIndex}\n                    displayOption={({label}) => label}\n                    onOptionSelected={(result, e) => {\n                      e.stopPropagation();\n                      this.setState({\n                        show: false\n                      });\n\n                      const oldFieldsToShow = config.fieldsToShow[dataId];\n                      const fieldsToShow = oldFieldsToShow.map(fieldToShow => {\n                        return fieldToShow.name === tooltipField.name\n                          ? {\n                              name: tooltipField.name,\n                              format: getValue(result)\n                            }\n                          : fieldToShow;\n                      });\n                      const newConfig = {\n                        ...config,\n                        fieldsToShow: {\n                          ...config.fieldsToShow,\n                          [dataId]: fieldsToShow\n                        }\n                      };\n                      onChange(newConfig);\n                    }}\n                  />\n                </StyledPopover>\n              )}\n            </ChickletAddonWrapper>\n          )}\n          <Delete onClick={disabled ? null : remove} />\n        </ChickletButton>\n      );\n    }\n  }\n  return onClickOutside(TooltipChicklet);\n}\n\nexport default TooltipChickletFactory;\n"]},"metadata":{},"sourceType":"script"}
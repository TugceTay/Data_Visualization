{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _react = require(\"react\");\nvar _d3Array = require(\"d3-array\");\nvar _window = require(\"global/window\");\nvar _console = _interopRequireDefault(require(\"global/console\"));\nvar _defaultSettings = require(\"../../../constants/default-settings\");\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction AnimationControllerFactory() {\n  /**\n   * 4 Animation Window Types\n   * 1. free\n   *  |->  |->\n   * Current time is a fixed range, animate a moving window that calls next animation frames continuously\n   * The increment id based on domain / BASE_SPEED * SPEED\n   *\n   * 2. incremental\n   * |    |->\n   * Same as free, current time is a growing range, only the max value of range increment during animation.\n   * The increment is also based on domain / BASE_SPEED * SPEED\n   *\n   * 3. point\n   * o -> o\n   * Current time is a point, animate a moving point calls next animation frame continuously\n   * The increment is based on domain / BASE_SPEED * SPEED\n   *\n   * 4. interval\n   * o ~> o\n   * Current time is a point. An array of sorted time steps are provided,\n   * animate a moving point jumps to the next step\n   */\n  var AnimationController = /*#__PURE__*/function (_Component) {\n    (0, _inherits2[\"default\"])(AnimationController, _Component);\n    var _super = _createSuper(AnimationController);\n    function AnimationController() {\n      var _this;\n      (0, _classCallCheck2[\"default\"])(this, AnimationController);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _super.call.apply(_super, [this].concat(args));\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"state\", {\n        isAnimating: false\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_timer\", null);\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_animate\", function (delay) {\n        _this._startTime = new Date().getTime();\n        var loop = function loop() {\n          var current = new Date().getTime(); // @ts-ignore\n\n          var delta = current - _this._startTime;\n          if (delta >= delay) {\n            _this._nextFrame();\n            _this._startTime = new Date().getTime();\n          } else {\n            _this._timer = (0, _window.requestAnimationFrame)(loop);\n          }\n        };\n        _this._timer = (0, _window.requestAnimationFrame)(loop);\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_resetAnimationByDomain\", function () {\n        var _this$props = _this.props,\n          domain = _this$props.domain,\n          value = _this$props.value,\n          animationWindow = _this$props.animationWindow;\n        if (Array.isArray(value)) {\n          if (animationWindow === _defaultSettings.ANIMATION_WINDOW.incremental) {\n            _this.props.updateAnimation([value[0], value[0] + 1]);\n          } else {\n            _this.props.updateAnimation([domain[0], domain[0] + value[1] - value[0]]);\n          }\n        } else {\n          _this.props.updateAnimation(domain[0]);\n        }\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_resetAnimtionByTimeStep\", function () {\n        // go to the first steps\n        _this.props.updateAnimation([_this.props.steps[0], 0]);\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_resetAnimation\", function () {\n        if (_this.props.animationWindow === _defaultSettings.ANIMATION_WINDOW.interval) {\n          _this._resetAnimtionByTimeStep();\n        } else {\n          _this._resetAnimationByDomain();\n        }\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_startAnimation\", function () {\n        var speed = _this.props.speed;\n        _this._clearTimer();\n        if (speed > 0) {\n          if (_this.props.animationWindow === _defaultSettings.ANIMATION_WINDOW.interval) {\n            // animate by interval\n            // 30*600\n            var steps = _this.props.steps;\n            if (!Array.isArray(steps) || !steps.length) {\n              _console[\"default\"].warn('animation steps should be an array');\n              return;\n            } // when speed = 1, animation should loop through 600 frames at 60 FPS\n            // calculate delay based on # steps\n\n            var delay = _defaultSettings.BASE_SPEED * (1000 / _defaultSettings.FPS) / steps.length / (speed || 1);\n            _this._animate(delay);\n          } else {\n            _this._timer = (0, _window.requestAnimationFrame)(_this._nextFrame);\n          }\n        }\n        _this.setState({\n          isAnimating: true\n        });\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_clearTimer\", function () {\n        if (_this._timer) {\n          (0, _window.cancelAnimationFrame)(_this._timer);\n          _this._timer = null;\n        }\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_pauseAnimation\", function () {\n        _this._clearTimer();\n        _this.setState({\n          isAnimating: false\n        });\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_nextFrame\", function () {\n        _this._timer = null;\n        var nextValue = _this.props.animationWindow === _defaultSettings.ANIMATION_WINDOW.interval ? _this._nextFrameByTimeStep() : _this._nextFrameByDomain();\n        _this.props.updateAnimation(nextValue);\n      });\n      return _this;\n    }\n    (0, _createClass2[\"default\"])(AnimationController, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this._startOrPauseAnimation();\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate() {\n        this._startOrPauseAnimation();\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        if (this._timer) {\n          (0, _window.cancelAnimationFrame)(this._timer);\n        }\n      }\n    }, {\n      key: \"_startOrPauseAnimation\",\n      value: function _startOrPauseAnimation() {\n        var _this$props2 = this.props,\n          isAnimating = _this$props2.isAnimating,\n          speed = _this$props2.speed;\n        if (!this._timer && isAnimating && speed > 0) {\n          this._startAnimation();\n        } else if (this._timer && !isAnimating) {\n          this._pauseAnimation();\n        }\n      }\n    }, {\n      key: \"_nextFrameByDomain\",\n      value: function _nextFrameByDomain() {\n        var _this$props3 = this.props,\n          domain = _this$props3.domain,\n          value = _this$props3.value,\n          speed = _this$props3.speed,\n          baseSpeed = _this$props3.baseSpeed,\n          animationWindow = _this$props3.animationWindow;\n        var delta = (domain[1] - domain[0]) / baseSpeed * speed; // loop when reaches the end\n        // current time is a range\n\n        if (Array.isArray(value)) {\n          var value0;\n          var value1;\n          var readEnd = value[1] + delta > domain[1];\n          if (animationWindow === _defaultSettings.ANIMATION_WINDOW.incremental) {\n            value0 = value[0];\n            value1 = readEnd ? value[0] + 1 : value[1] + delta;\n          } else {\n            value0 = readEnd ? domain[0] : value[0] + delta;\n            value1 = value0 + value[1] - value[0];\n          }\n          return [value0, value1];\n        } // current time is a point\n\n        return value + delta > domain[1] ? domain[0] : value + delta;\n      }\n    }, {\n      key: \"_nextFrameByTimeStep\",\n      value: function _nextFrameByTimeStep() {\n        var _this$props4 = this.props,\n          steps = _this$props4.steps,\n          value = _this$props4.value;\n        var val = Array.isArray(value) ? value[0] : value;\n        var index = (0, _d3Array.bisectLeft)(steps, val);\n        var nextIdx = index >= steps.length - 1 ? 0 : index + 1;\n        return [steps[nextIdx], nextIdx];\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var isAnimating = this.state.isAnimating;\n        var children = this.props.children;\n        return typeof children === 'function' ? children(isAnimating, this._startAnimation, this._pauseAnimation, this._resetAnimation) : null;\n      }\n    }]);\n    return AnimationController;\n  }(_react.Component);\n  (0, _defineProperty2[\"default\"])(AnimationController, \"defaultProps\", {\n    baseSpeed: _defaultSettings.BASE_SPEED,\n    speed: 1,\n    steps: null,\n    animationWindow: _defaultSettings.ANIMATION_WINDOW.free\n  });\n  return AnimationController;\n}\nvar _default = AnimationControllerFactory;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../../src/components/common/animation-control/animation-controller.js"],"names":["AnimationControllerFactory","AnimationController","Component","baseSpeed","BASE_SPEED","speed","steps","animationWindow","ANIMATION_WINDOW","free","isAnimating","_startOrPauseAnimation","_timer","props","_startAnimation","_pauseAnimation","_startTime","Date","getTime","loop","current","delta","delay","_nextFrame","domain","value","Array","isArray","incremental","updateAnimation","interval","_resetAnimtionByTimeStep","_resetAnimationByDomain","_clearTimer","length","Console","warn","FPS","_animate","setState","nextValue","_nextFrameByTimeStep","_nextFrameByDomain","value0","value1","readEnd","val","index","nextIdx","state","children","_resetAnimation"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Component} from 'react';\nimport {bisectLeft} from 'd3-array';\nimport {requestAnimationFrame, cancelAnimationFrame} from 'global/window';\nimport Console from 'global/console';\nimport {BASE_SPEED, FPS, ANIMATION_WINDOW} from 'constants/default-settings';\n\nfunction AnimationControllerFactory() {\n  /**\n   * 4 Animation Window Types\n   * 1. free\n   *  |->  |->\n   * Current time is a fixed range, animate a moving window that calls next animation frames continuously\n   * The increment id based on domain / BASE_SPEED * SPEED\n   *\n   * 2. incremental\n   * |    |->\n   * Same as free, current time is a growing range, only the max value of range increment during animation.\n   * The increment is also based on domain / BASE_SPEED * SPEED\n   *\n   * 3. point\n   * o -> o\n   * Current time is a point, animate a moving point calls next animation frame continuously\n   * The increment is based on domain / BASE_SPEED * SPEED\n   *\n   * 4. interval\n   * o ~> o\n   * Current time is a point. An array of sorted time steps are provided,\n   * animate a moving point jumps to the next step\n   */\n  class AnimationController extends Component {\n    // TODO: convert the entire component to use hooks in the next PR\n    static defaultProps = {\n      baseSpeed: BASE_SPEED,\n      speed: 1,\n      steps: null,\n      animationWindow: ANIMATION_WINDOW.free\n    };\n\n    state = {\n      isAnimating: false\n    };\n\n    componentDidMount() {\n      this._startOrPauseAnimation();\n    }\n\n    componentDidUpdate() {\n      this._startOrPauseAnimation();\n    }\n\n    componentWillUnmount() {\n      if (this._timer) {\n        cancelAnimationFrame(this._timer);\n      }\n    }\n\n    _timer = null;\n\n    _startOrPauseAnimation() {\n      const {isAnimating, speed} = this.props;\n      if (!this._timer && isAnimating && speed > 0) {\n        this._startAnimation();\n      } else if (this._timer && !isAnimating) {\n        this._pauseAnimation();\n      }\n    }\n\n    _animate = delay => {\n      this._startTime = new Date().getTime();\n\n      const loop = () => {\n        const current = new Date().getTime();\n        // @ts-ignore\n        const delta = current - this._startTime;\n\n        if (delta >= delay) {\n          this._nextFrame();\n          this._startTime = new Date().getTime();\n        } else {\n          this._timer = requestAnimationFrame(loop);\n        }\n      };\n\n      this._timer = requestAnimationFrame(loop);\n    };\n\n    _resetAnimationByDomain = () => {\n      const {domain, value, animationWindow} = this.props;\n      if (Array.isArray(value)) {\n        if (animationWindow === ANIMATION_WINDOW.incremental) {\n          this.props.updateAnimation([value[0], value[0] + 1]);\n        } else {\n          this.props.updateAnimation([domain[0], domain[0] + value[1] - value[0]]);\n        }\n      } else {\n        this.props.updateAnimation(domain[0]);\n      }\n    };\n\n    _resetAnimtionByTimeStep = () => {\n      // go to the first steps\n      this.props.updateAnimation([this.props.steps[0], 0]);\n    };\n\n    _resetAnimation = () => {\n      if (this.props.animationWindow === ANIMATION_WINDOW.interval) {\n        this._resetAnimtionByTimeStep();\n      } else {\n        this._resetAnimationByDomain();\n      }\n    };\n\n    _startAnimation = () => {\n      const {speed} = this.props;\n      this._clearTimer();\n      if (speed > 0) {\n        if (this.props.animationWindow === ANIMATION_WINDOW.interval) {\n          // animate by interval\n          // 30*600\n          const {steps} = this.props;\n          if (!Array.isArray(steps) || !steps.length) {\n            Console.warn('animation steps should be an array');\n            return;\n          }\n          // when speed = 1, animation should loop through 600 frames at 60 FPS\n          // calculate delay based on # steps\n          const delay = (BASE_SPEED * (1000 / FPS)) / steps.length / (speed || 1);\n          this._animate(delay);\n        } else {\n          this._timer = requestAnimationFrame(this._nextFrame);\n        }\n      }\n      this.setState({isAnimating: true});\n    };\n\n    _clearTimer = () => {\n      if (this._timer) {\n        cancelAnimationFrame(this._timer);\n        this._timer = null;\n      }\n    };\n\n    _pauseAnimation = () => {\n      this._clearTimer();\n      this.setState({isAnimating: false});\n    };\n\n    _nextFrame = () => {\n      this._timer = null;\n      const nextValue =\n        this.props.animationWindow === ANIMATION_WINDOW.interval\n          ? this._nextFrameByTimeStep()\n          : this._nextFrameByDomain();\n\n      this.props.updateAnimation(nextValue);\n    };\n\n    _nextFrameByDomain() {\n      const {domain, value, speed, baseSpeed, animationWindow} = this.props;\n      const delta = ((domain[1] - domain[0]) / baseSpeed) * speed;\n\n      // loop when reaches the end\n      // current time is a range\n      if (Array.isArray(value)) {\n        let value0;\n        let value1;\n        const readEnd = value[1] + delta > domain[1];\n        if (animationWindow === ANIMATION_WINDOW.incremental) {\n          value0 = value[0];\n          value1 = readEnd ? value[0] + 1 : value[1] + delta;\n        } else {\n          value0 = readEnd ? domain[0] : value[0] + delta;\n          value1 = value0 + value[1] - value[0];\n        }\n        return [value0, value1];\n      }\n\n      // current time is a point\n      return value + delta > domain[1] ? domain[0] : value + delta;\n    }\n\n    _nextFrameByTimeStep() {\n      const {steps, value} = this.props;\n      const val = Array.isArray(value) ? value[0] : value;\n      const index = bisectLeft(steps, val);\n      const nextIdx = index >= steps.length - 1 ? 0 : index + 1;\n\n      return [steps[nextIdx], nextIdx];\n    }\n\n    render() {\n      const {isAnimating} = this.state;\n      const {children} = this.props;\n\n      return typeof children === 'function'\n        ? children(isAnimating, this._startAnimation, this._pauseAnimation, this._resetAnimation)\n        : null;\n    }\n  }\n\n  return AnimationController;\n}\n\nexport default AnimationControllerFactory;\n"]},"metadata":{},"sourceType":"script"}
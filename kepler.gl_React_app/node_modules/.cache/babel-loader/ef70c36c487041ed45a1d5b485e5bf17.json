{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { deepEqual } from '../utils/deep-equal';\nimport { default as LightingEffect } from '../effects/lighting/lighting-effect';\nvar DEFAULT_LIGHTING_EFFECT = new LightingEffect();\nvar EffectManager = function () {\n  function EffectManager() {\n    _classCallCheck(this, EffectManager);\n    this.effects = [];\n    this._internalEffects = [];\n    this._needsRedraw = 'Initial render';\n    this.setEffects();\n  }\n  _createClass(EffectManager, [{\n    key: \"setProps\",\n    value: function setProps(props) {\n      if ('effects' in props) {\n        if (props.effects.length !== this.effects.length || !deepEqual(props.effects, this.effects)) {\n          this.setEffects(props.effects);\n          this._needsRedraw = 'effects changed';\n        }\n      }\n    }\n  }, {\n    key: \"needsRedraw\",\n    value: function needsRedraw() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        clearRedrawFlags: false\n      };\n      var redraw = this._needsRedraw;\n      if (opts.clearRedrawFlags) {\n        this._needsRedraw = false;\n      }\n      return redraw;\n    }\n  }, {\n    key: \"getEffects\",\n    value: function getEffects() {\n      return this._internalEffects;\n    }\n  }, {\n    key: \"finalize\",\n    value: function finalize() {\n      this.cleanup();\n    }\n  }, {\n    key: \"setEffects\",\n    value: function setEffects() {\n      var effects = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.cleanup();\n      this.effects = effects;\n      this._createInternalEffects();\n    }\n  }, {\n    key: \"cleanup\",\n    value: function cleanup() {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n      try {\n        for (var _iterator = this.effects[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var effect = _step.value;\n          effect.cleanup();\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n      try {\n        for (var _iterator2 = this._internalEffects[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var _effect = _step2.value;\n          _effect.cleanup();\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n      this.effects.length = 0;\n      this._internalEffects.length = 0;\n    }\n  }, {\n    key: \"_createInternalEffects\",\n    value: function _createInternalEffects() {\n      this._internalEffects = this.effects.slice();\n      if (!this.effects.some(function (effect) {\n        return effect instanceof LightingEffect;\n      })) {\n        this._internalEffects.push(DEFAULT_LIGHTING_EFFECT);\n      }\n    }\n  }]);\n  return EffectManager;\n}();\nexport { EffectManager as default };","map":{"version":3,"sources":["../../../src/lib/effect-manager.js"],"names":["deepEqual","default","LightingEffect","DEFAULT_LIGHTING_EFFECT","EffectManager","effects","_internalEffects","_needsRedraw","setEffects","props","length","opts","clearRedrawFlags","redraw","cleanup","_createInternalEffects","effect","slice","some","push"],"mappings":";;AAAA,SAAQA,SAAR,QAAwB,qBAAxB;AACA,SAAQC,OAAO,IAAIC,cAAnB,QAAwC,qCAAxC;AAEA,IAAMC,uBAAuB,GAAG,IAAID,cAAJ,EAAhC;IAEqBE,a;EACnB,SAAA,aAAA,GAAc;IAAA,eAAA,CAAA,IAAA,EAAA,aAAA,CAAA;IACZ,IAAA,CAAKC,OAAL,GAAe,EAAf;IACA,IAAA,CAAKC,gBAAL,GAAwB,EAAxB;IACA,IAAA,CAAKC,YAAL,GAAoB,gBAApB;IACA,IAAA,CAAKC,UAAL,EAAA;EACD;;;6BAEQC,K,EAAO;MACd,IAAI,SAAA,IAAaA,KAAjB,EAAwB;QACtB,IAAIA,KAAK,CAACJ,OAANI,CAAcC,MAAdD,KAAyB,IAAA,CAAKJ,OAAL,CAAaK,MAAtCD,IAAgD,CAACT,SAAS,CAACS,KAAK,CAACJ,OAAP,EAAgB,IAAA,CAAKA,OAArB,CAA9D,EAA6F;UAC3F,IAAA,CAAKG,UAAL,CAAgBC,KAAK,CAACJ,OAAtB,CAAA;UACA,IAAA,CAAKE,YAAL,GAAoB,iBAApB;QACD;MACF;IACF;;;kCAE6C;MAAA,IAAlCI,IAAkC,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAA3B;QAACC,gBAAgB,EAAE;MAAnB,CAA2B;MAC5C,IAAMC,MAAM,GAAG,IAAA,CAAKN,YAApB;MACA,IAAII,IAAI,CAACC,gBAAT,EAA2B;QACzB,IAAA,CAAKL,YAAL,GAAoB,KAApB;MACD;MACD,OAAOM,MAAP;IACD;;;iCAEY;MACX,OAAO,IAAA,CAAKP,gBAAZ;IACD;;;+BAEU;MACT,IAAA,CAAKQ,OAAL,EAAA;IACD;;;iCAGwB;MAAA,IAAdT,OAAc,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,EAAI;MACvB,IAAA,CAAKS,OAAL,EAAA;MACA,IAAA,CAAKT,OAAL,GAAeA,OAAf;MACA,IAAA,CAAKU,sBAAL,EAAA;IACD;;;8BAES;MAAA,IAAA,yBAAA,GAAA,IAAA;MAAA,IAAA,iBAAA,GAAA,KAAA;MAAA,IAAA,cAAA,GAAA,SAAA;MAAA,IAAA;QACR,KAAA,IAAA,SAAA,GAAqB,IAAA,CAAKV,OAA1B,CAAA,MAAA,CAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA,EAAA,yBAAA,GAAA,CAAA,KAAA,GAAA,SAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,EAAA,yBAAA,GAAA,IAAA,EAAmC;UAAA,IAAxBW,MAAwB,GAAA,KAAA,CAAA,KAAA;UACjCA,MAAM,CAACF,OAAPE,EAAAA;QACD;MAHO,CAAA,CAAA,OAAA,GAAA,EAAA;QAAA,iBAAA,GAAA,IAAA;QAAA,cAAA,GAAA,GAAA;MAAA,CAAA,SAAA;QAAA,IAAA;UAAA,IAAA,CAAA,yBAAA,IAAA,SAAA,CAAA,QAAA,CAAA,IAAA,IAAA,EAAA;YAAA,SAAA,CAAA,QAAA,CAAA,EAAA;UAAA;QAAA,CAAA,SAAA;UAAA,IAAA,iBAAA,EAAA;YAAA,MAAA,cAAA;UAAA;QAAA;MAAA;MAAA,IAAA,0BAAA,GAAA,IAAA;MAAA,IAAA,kBAAA,GAAA,KAAA;MAAA,IAAA,eAAA,GAAA,SAAA;MAAA,IAAA;QAKR,KAAA,IAAA,UAAA,GAAqB,IAAA,CAAKV,gBAA1B,CAAA,MAAA,CAAA,QAAA,CAAA,EAAA,EAAA,MAAA,EAAA,EAAA,0BAAA,GAAA,CAAA,MAAA,GAAA,UAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,EAAA,0BAAA,GAAA,IAAA,EAA4C;UAAA,IAAjCU,OAAiC,GAAA,MAAA,CAAA,KAAA;UAC1CA,OAAM,CAACF,OAAPE,EAAAA;QACD;MAPO,CAAA,CAAA,OAAA,GAAA,EAAA;QAAA,kBAAA,GAAA,IAAA;QAAA,eAAA,GAAA,GAAA;MAAA,CAAA,SAAA;QAAA,IAAA;UAAA,IAAA,CAAA,0BAAA,IAAA,UAAA,CAAA,QAAA,CAAA,IAAA,IAAA,EAAA;YAAA,UAAA,CAAA,QAAA,CAAA,EAAA;UAAA;QAAA,CAAA,SAAA;UAAA,IAAA,kBAAA,EAAA;YAAA,MAAA,eAAA;UAAA;QAAA;MAAA;MAQR,IAAA,CAAKX,OAAL,CAAaK,MAAb,GAAsB,CAAtB;MACA,IAAA,CAAKJ,gBAAL,CAAsBI,MAAtB,GAA+B,CAA/B;IACD;;;6CAEwB;MACvB,IAAA,CAAKJ,gBAAL,GAAwB,IAAA,CAAKD,OAAL,CAAaY,KAAb,EAAxB;MACA,IAAI,CAAC,IAAA,CAAKZ,OAAL,CAAaa,IAAb,CAAkB,UAAA,MAAM,EAAA;QAAA,OAAIF,MAAM,YAAYd,cAAtB;MAAA,CAAxB,CAAL,EAAoE;QAClE,IAAA,CAAKI,gBAAL,CAAsBa,IAAtB,CAA2BhB,uBAA3B,CAAA;MACD;IACF;;;;SAzDkBC,a","sourcesContent":["import {deepEqual} from '../utils/deep-equal';\nimport {default as LightingEffect} from '../effects/lighting/lighting-effect';\n\nconst DEFAULT_LIGHTING_EFFECT = new LightingEffect();\n\nexport default class EffectManager {\n  constructor() {\n    this.effects = [];\n    this._internalEffects = [];\n    this._needsRedraw = 'Initial render';\n    this.setEffects();\n  }\n\n  setProps(props) {\n    if ('effects' in props) {\n      if (props.effects.length !== this.effects.length || !deepEqual(props.effects, this.effects)) {\n        this.setEffects(props.effects);\n        this._needsRedraw = 'effects changed';\n      }\n    }\n  }\n\n  needsRedraw(opts = {clearRedrawFlags: false}) {\n    const redraw = this._needsRedraw;\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n    return redraw;\n  }\n\n  getEffects() {\n    return this._internalEffects;\n  }\n\n  finalize() {\n    this.cleanup();\n  }\n\n  // Private\n  setEffects(effects = []) {\n    this.cleanup();\n    this.effects = effects;\n    this._createInternalEffects();\n  }\n\n  cleanup() {\n    for (const effect of this.effects) {\n      effect.cleanup();\n    }\n\n    for (const effect of this._internalEffects) {\n      effect.cleanup();\n    }\n    this.effects.length = 0;\n    this._internalEffects.length = 0;\n  }\n\n  _createInternalEffects() {\n    this._internalEffects = this.effects.slice();\n    if (!this.effects.some(effect => effect instanceof LightingEffect)) {\n      this._internalEffects.push(DEFAULT_LIGHTING_EFFECT);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
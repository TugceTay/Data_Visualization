{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nimport Viewport from './viewport';\nimport { pixelsToWorld, getViewMatrix, addMetersToLngLat as _addMetersToLngLat, getProjectionParameters, fitBounds as _fitBounds, getBounds as _getBounds } from '@math.gl/web-mercator';\nimport * as vec2 from 'gl-matrix/vec2';\nimport { Matrix4 } from 'math.gl';\nvar WebMercatorViewport = function (_Viewport) {\n  _inherits(WebMercatorViewport, _Viewport);\n  function WebMercatorViewport() {\n    var _this;\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, WebMercatorViewport);\n    var _opts$latitude = opts.latitude,\n      latitude = _opts$latitude === void 0 ? 0 : _opts$latitude,\n      _opts$longitude = opts.longitude,\n      longitude = _opts$longitude === void 0 ? 0 : _opts$longitude,\n      _opts$zoom = opts.zoom,\n      zoom = _opts$zoom === void 0 ? 11 : _opts$zoom,\n      _opts$pitch = opts.pitch,\n      pitch = _opts$pitch === void 0 ? 0 : _opts$pitch,\n      _opts$bearing = opts.bearing,\n      bearing = _opts$bearing === void 0 ? 0 : _opts$bearing,\n      _opts$nearZMultiplier = opts.nearZMultiplier,\n      nearZMultiplier = _opts$nearZMultiplier === void 0 ? 0.1 : _opts$nearZMultiplier,\n      _opts$farZMultiplier = opts.farZMultiplier,\n      farZMultiplier = _opts$farZMultiplier === void 0 ? 1.01 : _opts$farZMultiplier,\n      _opts$orthographic = opts.orthographic,\n      orthographic = _opts$orthographic === void 0 ? false : _opts$orthographic,\n      _opts$repeat = opts.repeat,\n      repeat = _opts$repeat === void 0 ? false : _opts$repeat,\n      _opts$worldOffset = opts.worldOffset,\n      worldOffset = _opts$worldOffset === void 0 ? 0 : _opts$worldOffset;\n    var width = opts.width,\n      height = opts.height,\n      _opts$altitude = opts.altitude,\n      altitude = _opts$altitude === void 0 ? 1.5 : _opts$altitude;\n    var scale = Math.pow(2, zoom);\n    width = width || 1;\n    height = height || 1;\n    altitude = Math.max(0.75, altitude);\n    var _getProjectionParamet = getProjectionParameters({\n        width: width,\n        height: height,\n        pitch: pitch,\n        altitude: altitude,\n        nearZMultiplier: nearZMultiplier,\n        farZMultiplier: farZMultiplier\n      }),\n      fov = _getProjectionParamet.fov,\n      aspect = _getProjectionParamet.aspect,\n      focalDistance = _getProjectionParamet.focalDistance,\n      near = _getProjectionParamet.near,\n      far = _getProjectionParamet.far;\n    var viewMatrixUncentered = getViewMatrix({\n      height: height,\n      pitch: pitch,\n      bearing: bearing,\n      scale: scale,\n      altitude: altitude\n    });\n    if (worldOffset) {\n      var viewOffset = new Matrix4().translate([512 * worldOffset, 0, 0]);\n      viewMatrixUncentered = viewOffset.multiplyLeft(viewMatrixUncentered);\n    }\n    var viewportOpts = Object.assign({}, opts, {\n      width: width,\n      height: height,\n      viewMatrix: viewMatrixUncentered,\n      longitude: longitude,\n      latitude: latitude,\n      zoom: zoom,\n      orthographic: orthographic,\n      fovyRadians: fov,\n      aspect: aspect,\n      focalDistance: orthographic ? focalDistance : 1,\n      near: near,\n      far: far\n    });\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WebMercatorViewport).call(this, viewportOpts));\n    _this.latitude = latitude;\n    _this.longitude = longitude;\n    _this.zoom = zoom;\n    _this.pitch = pitch;\n    _this.bearing = bearing;\n    _this.altitude = altitude;\n    _this.orthographic = orthographic;\n    _this._subViewports = repeat ? [] : null;\n    Object.freeze(_assertThisInitialized(_this));\n    return _this;\n  }\n  _createClass(WebMercatorViewport, [{\n    key: \"addMetersToLngLat\",\n    value: function addMetersToLngLat(lngLatZ, xyz) {\n      return _addMetersToLngLat(lngLatZ, xyz);\n    }\n  }, {\n    key: \"getMapCenterByLngLatPosition\",\n    value: function getMapCenterByLngLatPosition(_ref) {\n      var lngLat = _ref.lngLat,\n        pos = _ref.pos;\n      var fromLocation = pixelsToWorld(pos, this.pixelUnprojectionMatrix);\n      var toLocation = this.projectFlat(lngLat);\n      var translate = vec2.add([], toLocation, vec2.negate([], fromLocation));\n      var newCenter = vec2.add([], this.center, translate);\n      return this.unprojectFlat(newCenter);\n    }\n  }, {\n    key: \"getBounds\",\n    value: function getBounds() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var corners = _getBounds(this, options.z || 0);\n      return [Math.min(corners[0][0], corners[1][0], corners[2][0], corners[3][0]), Math.min(corners[0][1], corners[1][1], corners[2][1], corners[3][1]), Math.max(corners[0][0], corners[1][0], corners[2][0], corners[3][0]), Math.max(corners[0][1], corners[1][1], corners[2][1], corners[3][1])];\n    }\n  }, {\n    key: \"fitBounds\",\n    value: function fitBounds(bounds) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var width = this.width,\n        height = this.height;\n      var _fitBounds2 = _fitBounds(Object.assign({\n          width: width,\n          height: height,\n          bounds: bounds\n        }, options)),\n        longitude = _fitBounds2.longitude,\n        latitude = _fitBounds2.latitude,\n        zoom = _fitBounds2.zoom;\n      return new WebMercatorViewport({\n        width: width,\n        height: height,\n        longitude: longitude,\n        latitude: latitude,\n        zoom: zoom\n      });\n    }\n  }, {\n    key: \"subViewports\",\n    get: function get() {\n      if (this._subViewports && !this._subViewports.length) {\n        var bounds = this.getBounds();\n        var minOffset = Math.floor((bounds[0] + 180) / 360);\n        var maxOffset = Math.ceil((bounds[2] - 180) / 360);\n        for (var x = minOffset; x <= maxOffset; x++) {\n          var offsetViewport = x ? new WebMercatorViewport(_objectSpread({}, this, {\n            worldOffset: x\n          })) : this;\n          this._subViewports.push(offsetViewport);\n        }\n      }\n      return this._subViewports;\n    }\n  }]);\n  return WebMercatorViewport;\n}(Viewport);\nexport { WebMercatorViewport as default };\nWebMercatorViewport.displayName = 'WebMercatorViewport';","map":{"version":3,"sources":["../../../src/viewports/web-mercator-viewport.js"],"names":["Viewport","pixelsToWorld","getViewMatrix","addMetersToLngLat","getProjectionParameters","fitBounds","getBounds","vec2","Matrix4","WebMercatorViewport","opts","latitude","longitude","zoom","pitch","bearing","nearZMultiplier","farZMultiplier","orthographic","repeat","worldOffset","width","height","altitude","scale","Math","pow","max","fov","aspect","focalDistance","near","far","viewMatrixUncentered","viewOffset","translate","multiplyLeft","viewportOpts","assign","viewMatrix","fovyRadians","_subViewports","Object","freeze","length","bounds","minOffset","floor","maxOffset","ceil","x","offsetViewport","push","lngLatZ","xyz","lngLat","pos","fromLocation","pixelUnprojectionMatrix","toLocation","projectFlat","add","negate","newCenter","center","unprojectFlat","options","corners","z","min","displayName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// View and Projection Matrix calculations for mapbox-js style\n// map view properties\nimport Viewport from './viewport';\n\nimport {\n  pixelsToWorld,\n  getViewMatrix,\n  addMetersToLngLat,\n  getProjectionParameters,\n  fitBounds,\n  getBounds\n} from '@math.gl/web-mercator';\n\n// TODO - import from math.gl\nimport * as vec2 from 'gl-matrix/vec2';\nimport {Matrix4} from 'math.gl';\n\nexport default class WebMercatorViewport extends Viewport {\n  /**\n   * @classdesc\n   * Creates view/projection matrices from mercator params\n   * Note: The Viewport is immutable in the sense that it only has accessors.\n   * A new viewport instance should be created if any parameters have changed.\n   */\n  /* eslint-disable complexity, max-statements */\n  constructor(opts = {}) {\n    const {\n      latitude = 0,\n      longitude = 0,\n      zoom = 11,\n      pitch = 0,\n      bearing = 0,\n      nearZMultiplier = 0.1,\n      farZMultiplier = 1.01,\n      orthographic = false,\n\n      repeat = false,\n      worldOffset = 0\n    } = opts;\n\n    let {width, height, altitude = 1.5} = opts;\n    const scale = Math.pow(2, zoom);\n\n    // Silently allow apps to send in 0,0 to facilitate isomorphic render etc\n    width = width || 1;\n    height = height || 1;\n\n    // Altitude - prevent division by 0\n    // TODO - just throw an Error instead?\n    altitude = Math.max(0.75, altitude);\n\n    const {fov, aspect, focalDistance, near, far} = getProjectionParameters({\n      width,\n      height,\n      pitch,\n      altitude,\n      nearZMultiplier,\n      farZMultiplier\n    });\n\n    // The uncentered matrix allows us two move the center addition to the\n    // shader (cheap) which gives a coordinate system that has its center in\n    // the layer's center position. This makes rotations and other modelMatrx\n    // transforms much more useful.\n    let viewMatrixUncentered = getViewMatrix({\n      height,\n      pitch,\n      bearing,\n      scale,\n      altitude\n    });\n\n    if (worldOffset) {\n      const viewOffset = new Matrix4().translate([512 * worldOffset, 0, 0]);\n      viewMatrixUncentered = viewOffset.multiplyLeft(viewMatrixUncentered);\n    }\n\n    const viewportOpts = Object.assign({}, opts, {\n      // x, y,\n      width,\n      height,\n\n      // view matrix\n      viewMatrix: viewMatrixUncentered,\n      longitude,\n      latitude,\n      zoom,\n\n      // projection matrix parameters\n      orthographic,\n      fovyRadians: fov,\n      aspect,\n      // TODO Viewport is already carefully set up to \"focus\" on ground, so can't use focal distance\n      focalDistance: orthographic ? focalDistance : 1,\n      near,\n      far\n    });\n\n    super(viewportOpts);\n\n    // Save parameters\n    this.latitude = latitude;\n    this.longitude = longitude;\n    this.zoom = zoom;\n    this.pitch = pitch;\n    this.bearing = bearing;\n    this.altitude = altitude;\n\n    this.orthographic = orthographic;\n\n    this._subViewports = repeat ? [] : null;\n\n    Object.freeze(this);\n  }\n  /* eslint-enable complexity, max-statements */\n\n  get subViewports() {\n    if (this._subViewports && !this._subViewports.length) {\n      // Cache sub viewports so that we only calculate them once\n      const bounds = this.getBounds();\n\n      const minOffset = Math.floor((bounds[0] + 180) / 360);\n      const maxOffset = Math.ceil((bounds[2] - 180) / 360);\n\n      for (let x = minOffset; x <= maxOffset; x++) {\n        const offsetViewport = x\n          ? new WebMercatorViewport({\n              ...this,\n              worldOffset: x\n            })\n          : this;\n        this._subViewports.push(offsetViewport);\n      }\n    }\n    return this._subViewports;\n  }\n\n  /**\n   * Add a meter delta to a base lnglat coordinate, returning a new lnglat array\n   *\n   * Note: Uses simple linear approximation around the viewport center\n   * Error increases with size of offset (roughly 1% per 100km)\n   *\n   * @param {[Number,Number]|[Number,Number,Number]) lngLatZ - base coordinate\n   * @param {[Number,Number]|[Number,Number,Number]) xyz - array of meter deltas\n   * @return {[Number,Number]|[Number,Number,Number]) array of [lng,lat,z] deltas\n   */\n  addMetersToLngLat(lngLatZ, xyz) {\n    return addMetersToLngLat(lngLatZ, xyz);\n  }\n\n  /**\n   * Get the map center that place a given [lng, lat] coordinate at screen\n   * point [x, y]\n   *\n   * @param {Array} lngLat - [lng,lat] coordinates\n   *   Specifies a point on the sphere.\n   * @param {Array} pos - [x,y] coordinates\n   *   Specifies a point on the screen.\n   * @return {Array} [lng,lat] new map center.\n   */\n  getMapCenterByLngLatPosition({lngLat, pos}) {\n    const fromLocation = pixelsToWorld(pos, this.pixelUnprojectionMatrix);\n    const toLocation = this.projectFlat(lngLat);\n\n    const translate = vec2.add([], toLocation, vec2.negate([], fromLocation));\n    const newCenter = vec2.add([], this.center, translate);\n\n    return this.unprojectFlat(newCenter);\n  }\n\n  getBounds(options = {}) {\n    const corners = getBounds(this, options.z || 0);\n\n    return [\n      Math.min(corners[0][0], corners[1][0], corners[2][0], corners[3][0]),\n      Math.min(corners[0][1], corners[1][1], corners[2][1], corners[3][1]),\n      Math.max(corners[0][0], corners[1][0], corners[2][0], corners[3][0]),\n      Math.max(corners[0][1], corners[1][1], corners[2][1], corners[3][1])\n    ];\n  }\n\n  /**\n   * Returns a new viewport that fit around the given rectangle.\n   * Only supports non-perspective mode.\n   * @param {Array} bounds - [[lon, lat], [lon, lat]]\n   * @param {Number} [options.padding] - The amount of padding in pixels to add to the given bounds.\n   * @param {Array} [options.offset] - The center of the given bounds relative to the map's center,\n   *    [x, y] measured in pixels.\n   * @returns {WebMercatorViewport}\n   */\n  fitBounds(bounds, options = {}) {\n    const {width, height} = this;\n    const {longitude, latitude, zoom} = fitBounds(Object.assign({width, height, bounds}, options));\n    return new WebMercatorViewport({width, height, longitude, latitude, zoom});\n  }\n}\n\nWebMercatorViewport.displayName = 'WebMercatorViewport';\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.visStateSchema = exports.visStateSchemaV1 = exports.visStateSchemaV0 = exports.propertiesV1 = exports.propertiesV0 = exports.filterPropsV1 = exports.SplitMapsSchema = exports.DimensionFieldSchema = exports.filterPropsV0 = exports.InteractionSchemaV1 = exports.FilterSchemaV0 = exports.LayerSchemaV0 = exports.layerPropsV1 = exports.layerPropsV0 = exports.dimensionPropsV0 = void 0;\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _lodash = _interopRequireDefault(require(\"lodash.pick\"));\nvar _versions = require(\"./versions\");\nvar _filterUtils = require(\"../utils/filter-utils\");\nvar _layerFactory = require(\"../layers/layer-factory\");\nvar _schema = _interopRequireDefault(require(\"./schema\"));\nvar _lodash2 = _interopRequireDefault(require(\"lodash.clonedeep\"));\nvar _dataUtils = require(\"../utils/data-utils\");\nvar _visStateSchema;\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * V0 Schema\n */\nvar dimensionPropsV0 = ['name', 'type']; // in v0 geojson there is only sizeField\n// in v1 geojson\n// stroke base on -> sizeField\n// height based on -> heightField\n// radius based on -> radiusField\n// here we make our wiredst guess on which channel sizeField belongs to\n\nexports.dimensionPropsV0 = dimensionPropsV0;\nfunction geojsonSizeFieldV0ToV1(config) {\n  var defaultRaiuds = 10;\n  var defaultRadiusRange = [0, 50]; // if extruded, sizeField is most likely used for height\n\n  if (config.visConfig.extruded) {\n    return 'heightField';\n  } // if show stroke enabled, sizeField is most likely used for stroke\n\n  if (config.visConfig.stroked) {\n    return 'sizeField';\n  } // if radius changed, or radius Range Changed, sizeField is most likely used for radius\n  // this is the most unreliable guess, that's why we put it in the end\n\n  if (config.visConfig.radius !== defaultRaiuds || config.visConfig.radiusRange.some(function (d, i) {\n    return d !== defaultRadiusRange[i];\n  })) {\n    return 'radiusField';\n  }\n  return 'sizeField';\n} // convert v0 to v1 layer config\n\nvar DimensionFieldSchemaV0 = /*#__PURE__*/function (_Schema) {\n  (0, _inherits2[\"default\"])(DimensionFieldSchemaV0, _Schema);\n  var _super = _createSuper(DimensionFieldSchemaV0);\n  function DimensionFieldSchemaV0() {\n    var _this;\n    (0, _classCallCheck2[\"default\"])(this, DimensionFieldSchemaV0);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"version\", _versions.VERSIONS.v0);\n    return _this;\n  }\n  (0, _createClass2[\"default\"])(DimensionFieldSchemaV0, [{\n    key: \"save\",\n    value: function save(field) {\n      // should not be called anymore\n      return (0, _defineProperty2[\"default\"])({}, this.key, field !== null ? this.savePropertiesOrApplySchema(field)[this.key] : null);\n    }\n  }, {\n    key: \"load\",\n    value: function load(field, parents, accumulated) {\n      var _parents$slice = parents.slice(-1),\n        _parents$slice2 = (0, _slicedToArray2[\"default\"])(_parents$slice, 1),\n        config = _parents$slice2[0];\n      var fieldName = this.key;\n      if (config.type === 'geojson' && this.key === 'sizeField' && field) {\n        fieldName = geojsonSizeFieldV0ToV1(config);\n      } // fold into visualChannels to be load by VisualChannelSchemaV1\n\n      return {\n        visualChannels: _objectSpread(_objectSpread({}, accumulated.visualChannels || {}), {}, (0, _defineProperty2[\"default\"])({}, fieldName, field))\n      };\n    }\n  }]);\n  return DimensionFieldSchemaV0;\n}(_schema[\"default\"]);\nvar DimensionScaleSchemaV0 = /*#__PURE__*/function (_Schema2) {\n  (0, _inherits2[\"default\"])(DimensionScaleSchemaV0, _Schema2);\n  var _super2 = _createSuper(DimensionScaleSchemaV0);\n  function DimensionScaleSchemaV0() {\n    var _this2;\n    (0, _classCallCheck2[\"default\"])(this, DimensionScaleSchemaV0);\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    _this2 = _super2.call.apply(_super2, [this].concat(args));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this2), \"version\", _versions.VERSIONS.v0);\n    return _this2;\n  }\n  (0, _createClass2[\"default\"])(DimensionScaleSchemaV0, [{\n    key: \"save\",\n    value: function save(scale) {\n      return (0, _defineProperty2[\"default\"])({}, this.key, scale);\n    }\n  }, {\n    key: \"load\",\n    value: function load(scale, parents, accumulated) {\n      var _parents$slice3 = parents.slice(-1),\n        _parents$slice4 = (0, _slicedToArray2[\"default\"])(_parents$slice3, 1),\n        config = _parents$slice4[0]; // fold into visualChannels to be load by VisualChannelSchemaV1\n\n      if (this.key === 'sizeScale' && config.type === 'geojson') {\n        // sizeScale now split into radiusScale, heightScale\n        // no user customization, just use default\n        return {};\n      }\n      return {\n        visualChannels: _objectSpread(_objectSpread({}, accumulated.visualChannels || {}), {}, (0, _defineProperty2[\"default\"])({}, this.key, scale))\n      };\n    }\n  }]);\n  return DimensionScaleSchemaV0;\n}(_schema[\"default\"]); // used to convert v0 to v1 layer config\n\nvar LayerConfigSchemaV0 = /*#__PURE__*/function (_Schema3) {\n  (0, _inherits2[\"default\"])(LayerConfigSchemaV0, _Schema3);\n  var _super3 = _createSuper(LayerConfigSchemaV0);\n  function LayerConfigSchemaV0() {\n    var _this3;\n    (0, _classCallCheck2[\"default\"])(this, LayerConfigSchemaV0);\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    _this3 = _super3.call.apply(_super3, [this].concat(args));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this3), \"version\", _versions.VERSIONS.v0);\n    return _this3;\n  }\n  (0, _createClass2[\"default\"])(LayerConfigSchemaV0, [{\n    key: \"load\",\n    value: function load(saved, parents, accumulated) {\n      // fold v0 layer property into config.key\n      return {\n        config: _objectSpread(_objectSpread({}, accumulated.config || {}), {}, (0, _defineProperty2[\"default\"])({}, this.key, saved))\n      };\n    }\n  }]);\n  return LayerConfigSchemaV0;\n}(_schema[\"default\"]); // used to convert v0 to v1 layer columns\n// only return column value for each column\n\nvar LayerColumnsSchemaV0 = /*#__PURE__*/function (_Schema4) {\n  (0, _inherits2[\"default\"])(LayerColumnsSchemaV0, _Schema4);\n  var _super4 = _createSuper(LayerColumnsSchemaV0);\n  function LayerColumnsSchemaV0() {\n    var _this4;\n    (0, _classCallCheck2[\"default\"])(this, LayerColumnsSchemaV0);\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    _this4 = _super4.call.apply(_super4, [this].concat(args));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this4), \"version\", _versions.VERSIONS.v0);\n    return _this4;\n  }\n  (0, _createClass2[\"default\"])(LayerColumnsSchemaV0, [{\n    key: \"load\",\n    value: function load(saved, parents, accumulated) {\n      // fold v0 layer property into config.key, flatten columns\n      return {\n        config: _objectSpread(_objectSpread({}, accumulated.config || {}), {}, {\n          columns: Object.keys(saved).reduce(function (accu, key) {\n            return _objectSpread(_objectSpread({}, accu), {}, (0, _defineProperty2[\"default\"])({}, key, saved[key].value));\n          }, {})\n        })\n      };\n    }\n  }]);\n  return LayerColumnsSchemaV0;\n}(_schema[\"default\"]); // used to convert v0 to v1 layer config.visConfig\n\nvar LayerConfigToVisConfigSchemaV0 = /*#__PURE__*/function (_Schema5) {\n  (0, _inherits2[\"default\"])(LayerConfigToVisConfigSchemaV0, _Schema5);\n  var _super5 = _createSuper(LayerConfigToVisConfigSchemaV0);\n  function LayerConfigToVisConfigSchemaV0() {\n    var _this5;\n    (0, _classCallCheck2[\"default\"])(this, LayerConfigToVisConfigSchemaV0);\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n    _this5 = _super5.call.apply(_super5, [this].concat(args));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this5), \"version\", _versions.VERSIONS.v0);\n    return _this5;\n  }\n  (0, _createClass2[\"default\"])(LayerConfigToVisConfigSchemaV0, [{\n    key: \"load\",\n    value: function load(saved, parents, accumulated) {\n      // fold v0 layer property into config.visConfig\n      var accumulatedConfig = accumulated.config || {};\n      return {\n        config: _objectSpread(_objectSpread({}, accumulatedConfig), {}, {\n          visConfig: _objectSpread(_objectSpread({}, accumulatedConfig.visConfig || {}), {}, (0, _defineProperty2[\"default\"])({}, this.key, saved))\n        })\n      };\n    }\n  }]);\n  return LayerConfigToVisConfigSchemaV0;\n}(_schema[\"default\"]);\nvar LayerVisConfigSchemaV0 = /*#__PURE__*/function (_Schema6) {\n  (0, _inherits2[\"default\"])(LayerVisConfigSchemaV0, _Schema6);\n  var _super6 = _createSuper(LayerVisConfigSchemaV0);\n  function LayerVisConfigSchemaV0() {\n    var _this6;\n    (0, _classCallCheck2[\"default\"])(this, LayerVisConfigSchemaV0);\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n    _this6 = _super6.call.apply(_super6, [this].concat(args));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this6), \"version\", _versions.VERSIONS.v0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this6), \"key\", 'visConfig');\n    return _this6;\n  }\n  (0, _createClass2[\"default\"])(LayerVisConfigSchemaV0, [{\n    key: \"load\",\n    value: function load(visConfig, parents, accumulator) {\n      var _parents$slice5 = parents.slice(-1),\n        _parents$slice6 = (0, _slicedToArray2[\"default\"])(_parents$slice5, 1),\n        config = _parents$slice6[0];\n      var rename = {\n        geojson: {\n          extruded: 'enable3d',\n          elevationRange: 'heightRange'\n        }\n      };\n      if (config.type in rename) {\n        var propToRename = rename[config.type];\n        return {\n          config: _objectSpread(_objectSpread({}, accumulator.config || {}), {}, {\n            visConfig: Object.keys(visConfig).reduce(function (accu, key) {\n              return _objectSpread(_objectSpread({}, accu), propToRename[key] ? (0, _defineProperty2[\"default\"])({}, propToRename[key], visConfig[key]) : (0, _defineProperty2[\"default\"])({}, key, visConfig[key]));\n            }, {})\n          })\n        };\n      }\n      return {\n        config: _objectSpread(_objectSpread({}, accumulator.config || {}), {}, {\n          visConfig: visConfig\n        })\n      };\n    }\n  }]);\n  return LayerVisConfigSchemaV0;\n}(_schema[\"default\"]);\nvar LayerConfigSchemaDeleteV0 = /*#__PURE__*/function (_Schema7) {\n  (0, _inherits2[\"default\"])(LayerConfigSchemaDeleteV0, _Schema7);\n  var _super7 = _createSuper(LayerConfigSchemaDeleteV0);\n  function LayerConfigSchemaDeleteV0() {\n    var _this7;\n    (0, _classCallCheck2[\"default\"])(this, LayerConfigSchemaDeleteV0);\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n    _this7 = _super7.call.apply(_super7, [this].concat(args));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this7), \"version\", _versions.VERSIONS.v0);\n    return _this7;\n  }\n  (0, _createClass2[\"default\"])(LayerConfigSchemaDeleteV0, [{\n    key: \"load\",\n    value: function load(value) {\n      return {};\n    }\n  }]);\n  return LayerConfigSchemaDeleteV0;\n}(_schema[\"default\"]);\n/**\n * V0 -> V1 Changes\n * - layer is now a class\n * - config saved in a config object\n * - id, type, isAggregated is outside layer.config\n * - visualChannels is outside config, it defines available visual channel and\n *   property names for field, scale, domain and range of each visual chanel.\n * - enable3d, colorAggregation and sizeAggregation are moved into visConfig\n * - GeojsonLayer - added height, radius specific properties\n */\n\nvar layerPropsV0 = {\n  id: null,\n  type: null,\n  // move into layer.config\n  dataId: new LayerConfigSchemaV0({\n    key: 'dataId'\n  }),\n  label: new LayerConfigSchemaV0({\n    key: 'label'\n  }),\n  color: new LayerConfigSchemaV0({\n    key: 'color'\n  }),\n  isVisible: new LayerConfigSchemaV0({\n    key: 'isVisible'\n  }),\n  hidden: new LayerConfigSchemaV0({\n    key: 'hidden'\n  }),\n  // convert visConfig\n  visConfig: new LayerVisConfigSchemaV0({\n    key: 'visConfig'\n  }),\n  // move into layer.config\n  // flatten\n  columns: new LayerColumnsSchemaV0(),\n  // save into visualChannels\n  colorField: new DimensionFieldSchemaV0({\n    properties: dimensionPropsV0,\n    key: 'colorField'\n  }),\n  colorScale: new DimensionScaleSchemaV0({\n    key: 'colorScale'\n  }),\n  sizeField: new DimensionFieldSchemaV0({\n    properties: dimensionPropsV0,\n    key: 'sizeField'\n  }),\n  sizeScale: new DimensionScaleSchemaV0({\n    key: 'sizeScale'\n  }),\n  // move into config.visConfig\n  enable3d: new LayerConfigToVisConfigSchemaV0({\n    key: 'enable3d'\n  }),\n  colorAggregation: new LayerConfigToVisConfigSchemaV0({\n    key: 'colorAggregation'\n  }),\n  sizeAggregation: new LayerConfigToVisConfigSchemaV0({\n    key: 'sizeAggregation'\n  }),\n  // delete\n  isAggregated: new LayerConfigSchemaDeleteV0()\n};\n/**\n * V1 Schema\n */\n\nexports.layerPropsV0 = layerPropsV0;\nvar ColumnSchemaV1 = /*#__PURE__*/function (_Schema8) {\n  (0, _inherits2[\"default\"])(ColumnSchemaV1, _Schema8);\n  var _super8 = _createSuper(ColumnSchemaV1);\n  function ColumnSchemaV1() {\n    (0, _classCallCheck2[\"default\"])(this, ColumnSchemaV1);\n    return _super8.apply(this, arguments);\n  }\n  (0, _createClass2[\"default\"])(ColumnSchemaV1, [{\n    key: \"save\",\n    value: function save(columns, state) {\n      // starting from v1, only save column value\n      // fieldIdx will be calculated during merge\n      return (0, _defineProperty2[\"default\"])({}, this.key, Object.keys(columns).reduce(function (accu, ckey) {\n        return _objectSpread(_objectSpread({}, accu), {}, (0, _defineProperty2[\"default\"])({}, ckey, columns[ckey].value));\n      }, {}));\n    }\n  }, {\n    key: \"load\",\n    value: function load(columns) {\n      return {\n        columns: columns\n      };\n    }\n  }]);\n  return ColumnSchemaV1;\n}(_schema[\"default\"]);\nvar TextLabelSchemaV1 = /*#__PURE__*/function (_Schema9) {\n  (0, _inherits2[\"default\"])(TextLabelSchemaV1, _Schema9);\n  var _super9 = _createSuper(TextLabelSchemaV1);\n  function TextLabelSchemaV1() {\n    (0, _classCallCheck2[\"default\"])(this, TextLabelSchemaV1);\n    return _super9.apply(this, arguments);\n  }\n  (0, _createClass2[\"default\"])(TextLabelSchemaV1, [{\n    key: \"save\",\n    value: function save(textLabel) {\n      return (0, _defineProperty2[\"default\"])({}, this.key, textLabel.map(function (tl) {\n        return _objectSpread(_objectSpread({}, tl), {}, {\n          field: tl.field ? (0, _lodash[\"default\"])(tl.field, ['name', 'type']) : null\n        });\n      }));\n    }\n  }, {\n    key: \"load\",\n    value: function load(textLabel) {\n      return {\n        textLabel: Array.isArray(textLabel) ? textLabel : [textLabel]\n      };\n    }\n  }]);\n  return TextLabelSchemaV1;\n}(_schema[\"default\"]);\nvar visualChannelModificationV1 = {\n  geojson: function geojson(vc, parents, accumulator) {\n    var _parents$slice7 = parents.slice(-1),\n      _parents$slice8 = (0, _slicedToArray2[\"default\"])(_parents$slice7, 1),\n      layer = _parents$slice8[0];\n    var isOld = !vc.hasOwnProperty('strokeColorField'); // make our best guess if this geojson layer contains point\n\n    var isPoint = vc.radiusField || layer.config.visConfig.radius !== _layerFactory.LAYER_VIS_CONFIGS.radius.defaultValue;\n    if (isOld && !isPoint && layer.config.visConfig.stroked) {\n      // if stroked is true, copy color config to stroke color config\n      return {\n        strokeColorField: vc.colorField,\n        strokeColorScale: vc.colorScale\n      };\n    }\n    return {};\n  }\n};\n/**\n * V1: save [field]: {name, type}, [scale]: '' for each channel\n */\n\nvar VisualChannelSchemaV1 = /*#__PURE__*/function (_Schema10) {\n  (0, _inherits2[\"default\"])(VisualChannelSchemaV1, _Schema10);\n  var _super10 = _createSuper(VisualChannelSchemaV1);\n  function VisualChannelSchemaV1() {\n    (0, _classCallCheck2[\"default\"])(this, VisualChannelSchemaV1);\n    return _super10.apply(this, arguments);\n  }\n  (0, _createClass2[\"default\"])(VisualChannelSchemaV1, [{\n    key: \"save\",\n    value: function save(visualChannels, parents) {\n      // only save field and scale of each channel\n      var _parents$slice9 = parents.slice(-1),\n        _parents$slice10 = (0, _slicedToArray2[\"default\"])(_parents$slice9, 1),\n        layer = _parents$slice10[0];\n      return (0, _defineProperty2[\"default\"])({}, this.key, Object.keys(visualChannels).reduce(\n      //  save channel to null if didn't select any field\n      function (accu, key) {\n        var _objectSpread8;\n        return _objectSpread(_objectSpread({}, accu), {}, (_objectSpread8 = {}, (0, _defineProperty2[\"default\"])(_objectSpread8, visualChannels[key].field, layer.config[visualChannels[key].field] ? (0, _lodash[\"default\"])(layer.config[visualChannels[key].field], ['name', 'type']) : null), (0, _defineProperty2[\"default\"])(_objectSpread8, visualChannels[key].scale, layer.config[visualChannels[key].scale]), _objectSpread8));\n      }, {}));\n    }\n  }, {\n    key: \"load\",\n    value: function load(vc, parents, accumulator) {\n      // fold channels into config\n      var _parents$slice11 = parents.slice(-1),\n        _parents$slice12 = (0, _slicedToArray2[\"default\"])(_parents$slice11, 1),\n        layer = _parents$slice12[0];\n      var modified = visualChannelModificationV1[layer.type] ? visualChannelModificationV1[layer.type](vc, parents, accumulator) : {};\n      return _objectSpread(_objectSpread({}, accumulator), {}, {\n        config: _objectSpread(_objectSpread(_objectSpread({}, accumulator.config || {}), vc), modified)\n      });\n    }\n  }]);\n  return VisualChannelSchemaV1;\n}(_schema[\"default\"]);\nvar visConfigModificationV1 = {\n  point: function point(visConfig, parents, accumulated) {\n    var modified = {};\n    var _parents$slice13 = parents.slice(-2, -1),\n      _parents$slice14 = (0, _slicedToArray2[\"default\"])(_parents$slice13, 1),\n      layer = _parents$slice14[0];\n    var isOld = !visConfig.hasOwnProperty('filled') && !visConfig.strokeColor && !visConfig.strokeColorRange;\n    if (isOld) {\n      // color color & color range to stroke color\n      modified.strokeColor = layer.config.color;\n      modified.strokeColorRange = (0, _lodash2[\"default\"])(visConfig.colorRange);\n      if (visConfig.outline) {\n        // point layer now supports both outline and fill\n        // for older schema where filled has not been added to point layer\n        // set it to false\n        modified.filled = false;\n      }\n    }\n    return modified;\n  },\n  geojson: function geojson(visConfig, parents, accumulated) {\n    // is points?\n    var modified = {};\n    var _parents$slice15 = parents.slice(-2, -1),\n      _parents$slice16 = (0, _slicedToArray2[\"default\"])(_parents$slice15, 1),\n      layer = _parents$slice16[0];\n    var isOld = layer.visualChannels && !layer.visualChannels.hasOwnProperty('strokeColorField') && !visConfig.strokeColor && !visConfig.strokeColorRange; // make our best guess if this geojson layer contains point\n\n    var isPoint = layer.visualChannels && layer.visualChannels.radiusField || visConfig && visConfig.radius !== _layerFactory.LAYER_VIS_CONFIGS.radius.defaultValue;\n    if (isOld) {\n      // color color & color range to stroke color\n      modified.strokeColor = layer.config.color;\n      modified.strokeColorRange = (0, _lodash2[\"default\"])(visConfig.colorRange);\n      if (isPoint) {\n        // if is point, set stroke to false\n        modified.filled = true;\n        modified.stroked = false;\n      }\n    }\n    return modified;\n  }\n};\nvar VisConfigSchemaV1 = /*#__PURE__*/function (_Schema11) {\n  (0, _inherits2[\"default\"])(VisConfigSchemaV1, _Schema11);\n  var _super11 = _createSuper(VisConfigSchemaV1);\n  function VisConfigSchemaV1() {\n    var _this8;\n    (0, _classCallCheck2[\"default\"])(this, VisConfigSchemaV1);\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n    _this8 = _super11.call.apply(_super11, [this].concat(args));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this8), \"key\", 'visConfig');\n    return _this8;\n  }\n  (0, _createClass2[\"default\"])(VisConfigSchemaV1, [{\n    key: \"load\",\n    value: function load(visConfig, parents, accumulated) {\n      var _parents$slice17 = parents.slice(-2, -1),\n        _parents$slice18 = (0, _slicedToArray2[\"default\"])(_parents$slice17, 1),\n        layer = _parents$slice18[0];\n      var modified = visConfigModificationV1[layer.type] ? visConfigModificationV1[layer.type](visConfig, parents, accumulated) : {};\n      return {\n        visConfig: _objectSpread(_objectSpread({}, visConfig), modified)\n      };\n    }\n  }]);\n  return VisConfigSchemaV1;\n}(_schema[\"default\"]);\nvar layerPropsV1 = {\n  id: null,\n  type: null,\n  config: new _schema[\"default\"]({\n    version: _versions.VERSIONS.v1,\n    key: 'config',\n    properties: {\n      dataId: null,\n      label: null,\n      color: null,\n      highlightColor: null,\n      columns: new ColumnSchemaV1({\n        version: _versions.VERSIONS.v1,\n        key: 'columns'\n      }),\n      isVisible: null,\n      visConfig: new VisConfigSchemaV1({\n        version: _versions.VERSIONS.v1\n      }),\n      hidden: null,\n      textLabel: new TextLabelSchemaV1({\n        version: _versions.VERSIONS.v1,\n        key: 'textLabel'\n      })\n    }\n  }),\n  visualChannels: new VisualChannelSchemaV1({\n    version: _versions.VERSIONS.v1,\n    key: 'visualChannels'\n  })\n};\nexports.layerPropsV1 = layerPropsV1;\nvar LayerSchemaV0 = /*#__PURE__*/function (_Schema12) {\n  (0, _inherits2[\"default\"])(LayerSchemaV0, _Schema12);\n  var _super12 = _createSuper(LayerSchemaV0);\n  function LayerSchemaV0() {\n    var _this9;\n    (0, _classCallCheck2[\"default\"])(this, LayerSchemaV0);\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n    _this9 = _super12.call.apply(_super12, [this].concat(args));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this9), \"key\", 'layers');\n    return _this9;\n  }\n  (0, _createClass2[\"default\"])(LayerSchemaV0, [{\n    key: \"save\",\n    value: function save(layers, parents) {\n      var _this10 = this;\n      var _parents$slice19 = parents.slice(-1),\n        _parents$slice20 = (0, _slicedToArray2[\"default\"])(_parents$slice19, 1),\n        visState = _parents$slice20[0];\n      return (0, _defineProperty2[\"default\"])({}, this.key, visState.layerOrder.reduce(function (saved, index) {\n        // save layers according to their rendering order\n        var layer = layers[index];\n        if (layer.isValidToSave()) {\n          saved.push(_this10.savePropertiesOrApplySchema(layer).layers);\n        }\n        return saved;\n      }, []));\n    }\n  }, {\n    key: \"load\",\n    value: function load(layers) {\n      var _this11 = this;\n      return (0, _defineProperty2[\"default\"])({}, this.key, layers.map(function (layer) {\n        return _this11.loadPropertiesOrApplySchema(layer, layers).layers;\n      }));\n    }\n  }]);\n  return LayerSchemaV0;\n}(_schema[\"default\"]);\nexports.LayerSchemaV0 = LayerSchemaV0;\nvar FilterSchemaV0 = /*#__PURE__*/function (_Schema13) {\n  (0, _inherits2[\"default\"])(FilterSchemaV0, _Schema13);\n  var _super13 = _createSuper(FilterSchemaV0);\n  function FilterSchemaV0() {\n    var _this12;\n    (0, _classCallCheck2[\"default\"])(this, FilterSchemaV0);\n    for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n      args[_key10] = arguments[_key10];\n    }\n    _this12 = _super13.call.apply(_super13, [this].concat(args));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this12), \"key\", 'filters');\n    return _this12;\n  }\n  (0, _createClass2[\"default\"])(FilterSchemaV0, [{\n    key: \"save\",\n    value: function save(filters) {\n      var _this13 = this;\n      return {\n        filters: filters.filter(_filterUtils.isValidFilterValue).map(function (filter) {\n          return _this13.savePropertiesOrApplySchema(filter).filters;\n        })\n      };\n    }\n  }, {\n    key: \"load\",\n    value: function load(filters) {\n      return {\n        filters: filters\n      };\n    }\n  }]);\n  return FilterSchemaV0;\n}(_schema[\"default\"]);\nexports.FilterSchemaV0 = FilterSchemaV0;\nvar interactionPropsV0 = ['tooltip', 'brush'];\nvar InteractionSchemaV0 = /*#__PURE__*/function (_Schema14) {\n  (0, _inherits2[\"default\"])(InteractionSchemaV0, _Schema14);\n  var _super14 = _createSuper(InteractionSchemaV0);\n  function InteractionSchemaV0() {\n    var _this14;\n    (0, _classCallCheck2[\"default\"])(this, InteractionSchemaV0);\n    for (var _len11 = arguments.length, args = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n      args[_key11] = arguments[_key11];\n    }\n    _this14 = _super14.call.apply(_super14, [this].concat(args));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this14), \"key\", 'interactionConfig');\n    return _this14;\n  }\n  (0, _createClass2[\"default\"])(InteractionSchemaV0, [{\n    key: \"save\",\n    value: function save(interactionConfig) {\n      return Array.isArray(this.properties) ? (0, _defineProperty2[\"default\"])({}, this.key, this.properties.reduce(function (accu, key) {\n        return _objectSpread(_objectSpread({}, accu), interactionConfig[key].enabled ? (0, _defineProperty2[\"default\"])({}, key, interactionConfig[key].config) : {});\n      }, {})) : {};\n    }\n  }, {\n    key: \"load\",\n    value: function load(interactionConfig) {\n      // convert v0 -> v1\n      // return enabled: false if disabled,\n      return Array.isArray(this.properties) ? (0, _defineProperty2[\"default\"])({}, this.key, this.properties.reduce(function (accu, key) {\n        return _objectSpread(_objectSpread({}, accu), (0, _defineProperty2[\"default\"])({}, key, _objectSpread(_objectSpread({}, interactionConfig[key] || {}), {}, {\n          enabled: Boolean(interactionConfig[key])\n        })));\n      }, {})) : {};\n    }\n  }]);\n  return InteractionSchemaV0;\n}(_schema[\"default\"]);\nvar interactionPropsV1 = [].concat(interactionPropsV0, ['geocoder', 'coordinate']);\nvar InteractionSchemaV1 = /*#__PURE__*/function (_Schema15) {\n  (0, _inherits2[\"default\"])(InteractionSchemaV1, _Schema15);\n  var _super15 = _createSuper(InteractionSchemaV1);\n  function InteractionSchemaV1() {\n    var _this15;\n    (0, _classCallCheck2[\"default\"])(this, InteractionSchemaV1);\n    for (var _len12 = arguments.length, args = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n      args[_key12] = arguments[_key12];\n    }\n    _this15 = _super15.call.apply(_super15, [this].concat(args));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this15), \"key\", 'interactionConfig');\n    return _this15;\n  }\n  (0, _createClass2[\"default\"])(InteractionSchemaV1, [{\n    key: \"save\",\n    value: function save(interactionConfig) {\n      // save config even if disabled,\n      return Array.isArray(this.properties) ? (0, _defineProperty2[\"default\"])({}, this.key, this.properties.reduce(function (accu, key) {\n        return _objectSpread(_objectSpread({}, accu), {}, (0, _defineProperty2[\"default\"])({}, key, _objectSpread(_objectSpread({}, interactionConfig[key].config), {}, {\n          enabled: interactionConfig[key].enabled\n        })));\n      }, {})) : {};\n    }\n  }, {\n    key: \"load\",\n    value: function load(interactionConfig) {\n      var _this16 = this;\n      var modifiedConfig = interactionConfig;\n      Object.keys(interactionConfig).forEach(function (configType) {\n        if (configType === 'tooltip') {\n          var fieldsToShow = modifiedConfig[configType].fieldsToShow;\n          if (!(0, _dataUtils.notNullorUndefined)(fieldsToShow)) {\n            return (0, _defineProperty2[\"default\"])({}, _this16.key, modifiedConfig);\n          }\n          Object.keys(fieldsToShow).forEach(function (key) {\n            fieldsToShow[key] = fieldsToShow[key].map(function (fieldData) {\n              if (!fieldData.name) {\n                return {\n                  name: fieldData,\n                  format: null\n                };\n              }\n              return fieldData;\n            });\n          });\n        }\n        return;\n      });\n      return (0, _defineProperty2[\"default\"])({}, this.key, modifiedConfig);\n    }\n  }]);\n  return InteractionSchemaV1;\n}(_schema[\"default\"]);\nexports.InteractionSchemaV1 = InteractionSchemaV1;\nvar filterPropsV0 = {\n  dataId: null,\n  id: null,\n  name: null,\n  type: null,\n  value: null,\n  enlarged: null\n};\nexports.filterPropsV0 = filterPropsV0;\nvar DimensionFieldSchema = /*#__PURE__*/function (_Schema16) {\n  (0, _inherits2[\"default\"])(DimensionFieldSchema, _Schema16);\n  var _super16 = _createSuper(DimensionFieldSchema);\n  function DimensionFieldSchema() {\n    (0, _classCallCheck2[\"default\"])(this, DimensionFieldSchema);\n    return _super16.apply(this, arguments);\n  }\n  (0, _createClass2[\"default\"])(DimensionFieldSchema, [{\n    key: \"save\",\n    value: function save(field) {\n      return (0, _defineProperty2[\"default\"])({}, this.key, field ? this.savePropertiesOrApplySchema(field)[this.key] : null);\n    }\n  }, {\n    key: \"load\",\n    value: function load(field) {\n      return (0, _defineProperty2[\"default\"])({}, this.key, field);\n    }\n  }]);\n  return DimensionFieldSchema;\n}(_schema[\"default\"]);\nexports.DimensionFieldSchema = DimensionFieldSchema;\nvar SplitMapsSchema = /*#__PURE__*/function (_Schema17) {\n  (0, _inherits2[\"default\"])(SplitMapsSchema, _Schema17);\n  var _super17 = _createSuper(SplitMapsSchema);\n  function SplitMapsSchema() {\n    (0, _classCallCheck2[\"default\"])(this, SplitMapsSchema);\n    return _super17.apply(this, arguments);\n  }\n  (0, _createClass2[\"default\"])(SplitMapsSchema, [{\n    key: \"convertLayerSettings\",\n    value: function convertLayerSettings(accu, _ref18) {\n      var _ref19 = (0, _slicedToArray2[\"default\"])(_ref18, 2),\n        key = _ref19[0],\n        value = _ref19[1];\n      if (typeof value === 'boolean') {\n        return _objectSpread(_objectSpread({}, accu), {}, (0, _defineProperty2[\"default\"])({}, key, value));\n      } else if (value && (0, _typeof2[\"default\"])(value) === 'object' && value.isAvailable) {\n        return _objectSpread(_objectSpread({}, accu), {}, (0, _defineProperty2[\"default\"])({}, key, Boolean(value.isVisible)));\n      }\n      return accu;\n    }\n  }, {\n    key: \"load\",\n    value: function load(splitMaps) {\n      var _this17 = this;\n\n      // previous splitMaps Schema {layers: {layerId: {isVisible, isAvailable}}}\n      if (!Array.isArray(splitMaps) || !splitMaps.length) {\n        return {\n          splitMaps: []\n        };\n      }\n      return {\n        splitMaps: splitMaps.map(function (settings) {\n          return _objectSpread(_objectSpread({}, settings), {}, {\n            layers: Object.entries(settings.layers || {}).reduce(_this17.convertLayerSettings, {})\n          });\n        })\n      };\n    }\n  }]);\n  return SplitMapsSchema;\n}(_schema[\"default\"]);\nexports.SplitMapsSchema = SplitMapsSchema;\nvar filterPropsV1 = _objectSpread(_objectSpread({}, filterPropsV0), {}, {\n  plotType: null,\n  animationWindow: null,\n  yAxis: new DimensionFieldSchema({\n    version: _versions.VERSIONS.v1,\n    key: 'yAxis',\n    properties: {\n      name: null,\n      type: null\n    }\n  }),\n  // polygon filter properties\n  layerId: null,\n  speed: null\n});\nexports.filterPropsV1 = filterPropsV1;\nvar propertiesV0 = {\n  filters: new FilterSchemaV0({\n    version: _versions.VERSIONS.v0,\n    properties: filterPropsV0\n  }),\n  layers: new LayerSchemaV0({\n    version: _versions.VERSIONS.v0,\n    properties: layerPropsV0\n  }),\n  interactionConfig: new InteractionSchemaV0({\n    version: _versions.VERSIONS.v0,\n    properties: interactionPropsV0\n  }),\n  layerBlending: null\n};\nexports.propertiesV0 = propertiesV0;\nvar propertiesV1 = {\n  filters: new FilterSchemaV0({\n    version: _versions.VERSIONS.v1,\n    properties: filterPropsV1\n  }),\n  layers: new LayerSchemaV0({\n    version: _versions.VERSIONS.v1,\n    properties: layerPropsV1\n  }),\n  interactionConfig: new InteractionSchemaV1({\n    version: _versions.VERSIONS.v1,\n    properties: interactionPropsV1\n  }),\n  layerBlending: null,\n  splitMaps: new SplitMapsSchema({\n    key: 'splitMaps',\n    version: _versions.VERSIONS.v1\n  }),\n  animationConfig: new _schema[\"default\"]({\n    version: _versions.VERSIONS.v1,\n    properties: {\n      currentTime: null,\n      speed: null\n    },\n    key: 'animationConfig'\n  })\n};\nexports.propertiesV1 = propertiesV1;\nvar visStateSchemaV0 = new _schema[\"default\"]({\n  version: _versions.VERSIONS.v0,\n  properties: propertiesV0,\n  key: 'visState'\n});\nexports.visStateSchemaV0 = visStateSchemaV0;\nvar visStateSchemaV1 = new _schema[\"default\"]({\n  version: _versions.VERSIONS.v1,\n  properties: propertiesV1,\n  key: 'visState'\n});\nexports.visStateSchemaV1 = visStateSchemaV1;\nvar visStateSchema = (_visStateSchema = {}, (0, _defineProperty2[\"default\"])(_visStateSchema, _versions.VERSIONS.v0, {\n  save: function save(toSave) {\n    return visStateSchemaV0.save(toSave);\n  },\n  load: function load(toLoad) {\n    return visStateSchemaV1.load(visStateSchemaV0.load(toLoad).visState);\n  }\n}), (0, _defineProperty2[\"default\"])(_visStateSchema, _versions.VERSIONS.v1, visStateSchemaV1), _visStateSchema); // test load v0\n\nexports.visStateSchema = visStateSchema;\nvar _default = visStateSchema;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../src/schemas/vis-state-schema.js"],"names":["dimensionPropsV0","geojsonSizeFieldV0ToV1","config","defaultRaiuds","defaultRadiusRange","visConfig","extruded","stroked","radius","radiusRange","some","d","i","DimensionFieldSchemaV0","Schema","VERSIONS","v0","field","key","savePropertiesOrApplySchema","parents","accumulated","slice","fieldName","type","visualChannels","DimensionScaleSchemaV0","scale","LayerConfigSchemaV0","saved","LayerColumnsSchemaV0","columns","keys","reduce","accu","value","LayerConfigToVisConfigSchemaV0","accumulatedConfig","LayerVisConfigSchemaV0","accumulator","rename","geojson","elevationRange","propToRename","LayerConfigSchemaDeleteV0","layerPropsV0","id","dataId","label","color","isVisible","hidden","colorField","properties","colorScale","sizeField","sizeScale","enable3d","colorAggregation","sizeAggregation","isAggregated","ColumnSchemaV1","state","ckey","TextLabelSchemaV1","textLabel","map","tl","Array","isArray","visualChannelModificationV1","vc","layer","isOld","hasOwnProperty","isPoint","radiusField","LAYER_VIS_CONFIGS","defaultValue","strokeColorField","strokeColorScale","VisualChannelSchemaV1","modified","visConfigModificationV1","point","strokeColor","strokeColorRange","colorRange","outline","filled","VisConfigSchemaV1","layerPropsV1","version","v1","highlightColor","LayerSchemaV0","layers","visState","layerOrder","index","isValidToSave","push","loadPropertiesOrApplySchema","FilterSchemaV0","filters","filter","isValidFilterValue","interactionPropsV0","InteractionSchemaV0","interactionConfig","enabled","Boolean","interactionPropsV1","InteractionSchemaV1","modifiedConfig","Object","forEach","configType","fieldsToShow","fieldData","name","format","filterPropsV0","enlarged","DimensionFieldSchema","SplitMapsSchema","isAvailable","splitMaps","length","settings","entries","convertLayerSettings","filterPropsV1","plotType","animationWindow","yAxis","layerId","speed","propertiesV0","layerBlending","propertiesV1","animationConfig","currentTime","visStateSchemaV0","visStateSchemaV1","visStateSchema","save","toSave","load","toLoad"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport pick from 'lodash.pick';\nimport {VERSIONS} from './versions';\nimport {isValidFilterValue} from 'utils/filter-utils';\nimport {LAYER_VIS_CONFIGS} from 'layers/layer-factory';\nimport Schema from './schema';\nimport cloneDeep from 'lodash.clonedeep';\nimport {notNullorUndefined} from 'utils/data-utils';\n\n/**\n * V0 Schema\n */\n\nexport const dimensionPropsV0 = ['name', 'type'];\n\n// in v0 geojson there is only sizeField\n\n// in v1 geojson\n// stroke base on -> sizeField\n// height based on -> heightField\n// radius based on -> radiusField\n// here we make our wiredst guess on which channel sizeField belongs to\nfunction geojsonSizeFieldV0ToV1(config) {\n  const defaultRaiuds = 10;\n  const defaultRadiusRange = [0, 50];\n\n  // if extruded, sizeField is most likely used for height\n  if (config.visConfig.extruded) {\n    return 'heightField';\n  }\n\n  // if show stroke enabled, sizeField is most likely used for stroke\n  if (config.visConfig.stroked) {\n    return 'sizeField';\n  }\n\n  // if radius changed, or radius Range Changed, sizeField is most likely used for radius\n  // this is the most unreliable guess, that's why we put it in the end\n  if (\n    config.visConfig.radius !== defaultRaiuds ||\n    config.visConfig.radiusRange.some((d, i) => d !== defaultRadiusRange[i])\n  ) {\n    return 'radiusField';\n  }\n\n  return 'sizeField';\n}\n\n// convert v0 to v1 layer config\nclass DimensionFieldSchemaV0 extends Schema {\n  version = VERSIONS.v0;\n  save(field) {\n    // should not be called anymore\n    return {\n      [this.key]: field !== null ? this.savePropertiesOrApplySchema(field)[this.key] : null\n    };\n  }\n\n  load(field, parents, accumulated) {\n    const [config] = parents.slice(-1);\n    let fieldName = this.key;\n    if (config.type === 'geojson' && this.key === 'sizeField' && field) {\n      fieldName = geojsonSizeFieldV0ToV1(config);\n    }\n    // fold into visualChannels to be load by VisualChannelSchemaV1\n    return {\n      visualChannels: {\n        ...(accumulated.visualChannels || {}),\n        [fieldName]: field\n      }\n    };\n  }\n}\n\nclass DimensionScaleSchemaV0 extends Schema {\n  version = VERSIONS.v0;\n  save(scale) {\n    return {[this.key]: scale};\n  }\n  load(scale, parents, accumulated) {\n    const [config] = parents.slice(-1);\n    // fold into visualChannels to be load by VisualChannelSchemaV1\n    if (this.key === 'sizeScale' && config.type === 'geojson') {\n      // sizeScale now split into radiusScale, heightScale\n      // no user customization, just use default\n      return {};\n    }\n\n    return {\n      visualChannels: {\n        ...(accumulated.visualChannels || {}),\n        [this.key]: scale\n      }\n    };\n  }\n}\n\n// used to convert v0 to v1 layer config\nclass LayerConfigSchemaV0 extends Schema {\n  version = VERSIONS.v0;\n  load(saved, parents, accumulated) {\n    // fold v0 layer property into config.key\n    return {\n      config: {\n        ...(accumulated.config || {}),\n        [this.key]: saved\n      }\n    };\n  }\n}\n\n// used to convert v0 to v1 layer columns\n// only return column value for each column\nclass LayerColumnsSchemaV0 extends Schema {\n  version = VERSIONS.v0;\n  load(saved, parents, accumulated) {\n    // fold v0 layer property into config.key, flatten columns\n    return {\n      config: {\n        ...(accumulated.config || {}),\n        columns: Object.keys(saved).reduce(\n          (accu, key) => ({\n            ...accu,\n            [key]: saved[key].value\n          }),\n          {}\n        )\n      }\n    };\n  }\n}\n\n// used to convert v0 to v1 layer config.visConfig\nclass LayerConfigToVisConfigSchemaV0 extends Schema {\n  version = VERSIONS.v0;\n  load(saved, parents, accumulated) {\n    // fold v0 layer property into config.visConfig\n    const accumulatedConfig = accumulated.config || {};\n    return {\n      config: {\n        ...accumulatedConfig,\n        visConfig: {\n          ...(accumulatedConfig.visConfig || {}),\n          [this.key]: saved\n        }\n      }\n    };\n  }\n}\n\nclass LayerVisConfigSchemaV0 extends Schema {\n  version = VERSIONS.v0;\n  key = 'visConfig';\n\n  load(visConfig, parents, accumulator) {\n    const [config] = parents.slice(-1);\n    const rename = {\n      geojson: {\n        extruded: 'enable3d',\n        elevationRange: 'heightRange'\n      }\n    };\n\n    if (config.type in rename) {\n      const propToRename = rename[config.type];\n      return {\n        config: {\n          ...(accumulator.config || {}),\n          visConfig: Object.keys(visConfig).reduce(\n            (accu, key) => ({\n              ...accu,\n              ...(propToRename[key]\n                ? {[propToRename[key]]: visConfig[key]}\n                : {[key]: visConfig[key]})\n            }),\n            {}\n          )\n        }\n      };\n    }\n\n    return {\n      config: {\n        ...(accumulator.config || {}),\n        visConfig\n      }\n    };\n  }\n}\n\nclass LayerConfigSchemaDeleteV0 extends Schema {\n  version = VERSIONS.v0;\n  load(value) {\n    return {};\n  }\n}\n\n/**\n * V0 -> V1 Changes\n * - layer is now a class\n * - config saved in a config object\n * - id, type, isAggregated is outside layer.config\n * - visualChannels is outside config, it defines available visual channel and\n *   property names for field, scale, domain and range of each visual chanel.\n * - enable3d, colorAggregation and sizeAggregation are moved into visConfig\n * - GeojsonLayer - added height, radius specific properties\n */\n\nexport const layerPropsV0 = {\n  id: null,\n  type: null,\n\n  // move into layer.config\n  dataId: new LayerConfigSchemaV0({key: 'dataId'}),\n  label: new LayerConfigSchemaV0({key: 'label'}),\n  color: new LayerConfigSchemaV0({key: 'color'}),\n  isVisible: new LayerConfigSchemaV0({key: 'isVisible'}),\n  hidden: new LayerConfigSchemaV0({key: 'hidden'}),\n\n  // convert visConfig\n  visConfig: new LayerVisConfigSchemaV0({key: 'visConfig'}),\n\n  // move into layer.config\n  // flatten\n  columns: new LayerColumnsSchemaV0(),\n\n  // save into visualChannels\n  colorField: new DimensionFieldSchemaV0({\n    properties: dimensionPropsV0,\n    key: 'colorField'\n  }),\n  colorScale: new DimensionScaleSchemaV0({\n    key: 'colorScale'\n  }),\n  sizeField: new DimensionFieldSchemaV0({\n    properties: dimensionPropsV0,\n    key: 'sizeField'\n  }),\n  sizeScale: new DimensionScaleSchemaV0({\n    key: 'sizeScale'\n  }),\n\n  // move into config.visConfig\n  enable3d: new LayerConfigToVisConfigSchemaV0({key: 'enable3d'}),\n  colorAggregation: new LayerConfigToVisConfigSchemaV0({\n    key: 'colorAggregation'\n  }),\n  sizeAggregation: new LayerConfigToVisConfigSchemaV0({key: 'sizeAggregation'}),\n\n  // delete\n  isAggregated: new LayerConfigSchemaDeleteV0()\n};\n\n/**\n * V1 Schema\n */\nclass ColumnSchemaV1 extends Schema {\n  save(columns, state) {\n    // starting from v1, only save column value\n    // fieldIdx will be calculated during merge\n    return {\n      [this.key]: Object.keys(columns).reduce(\n        (accu, ckey) => ({\n          ...accu,\n          [ckey]: columns[ckey].value\n        }),\n        {}\n      )\n    };\n  }\n\n  load(columns) {\n    return {columns};\n  }\n}\n\nclass TextLabelSchemaV1 extends Schema {\n  save(textLabel) {\n    return {\n      [this.key]: textLabel.map(tl => ({\n        ...tl,\n        field: tl.field ? pick(tl.field, ['name', 'type']) : null\n      }))\n    };\n  }\n\n  load(textLabel) {\n    return {textLabel: Array.isArray(textLabel) ? textLabel : [textLabel]};\n  }\n}\n\nconst visualChannelModificationV1 = {\n  geojson: (vc, parents, accumulator) => {\n    const [layer] = parents.slice(-1);\n    const isOld = !vc.hasOwnProperty('strokeColorField');\n    // make our best guess if this geojson layer contains point\n    const isPoint =\n      vc.radiusField || layer.config.visConfig.radius !== LAYER_VIS_CONFIGS.radius.defaultValue;\n\n    if (isOld && !isPoint && layer.config.visConfig.stroked) {\n      // if stroked is true, copy color config to stroke color config\n      return {\n        strokeColorField: vc.colorField,\n        strokeColorScale: vc.colorScale\n      };\n    }\n    return {};\n  }\n};\n/**\n * V1: save [field]: {name, type}, [scale]: '' for each channel\n */\nclass VisualChannelSchemaV1 extends Schema {\n  save(visualChannels, parents) {\n    // only save field and scale of each channel\n    const [layer] = parents.slice(-1);\n    return {\n      [this.key]: Object.keys(visualChannels).reduce(\n        //  save channel to null if didn't select any field\n        (accu, key) => ({\n          ...accu,\n          [visualChannels[key].field]: layer.config[visualChannels[key].field]\n            ? pick(layer.config[visualChannels[key].field], ['name', 'type'])\n            : null,\n          [visualChannels[key].scale]: layer.config[visualChannels[key].scale]\n        }),\n        {}\n      )\n    };\n  }\n  load(vc, parents, accumulator) {\n    // fold channels into config\n    const [layer] = parents.slice(-1);\n    const modified = visualChannelModificationV1[layer.type]\n      ? visualChannelModificationV1[layer.type](vc, parents, accumulator)\n      : {};\n\n    return {\n      ...accumulator,\n      config: {\n        ...(accumulator.config || {}),\n        ...vc,\n        ...modified\n      }\n    };\n  }\n}\nconst visConfigModificationV1 = {\n  point: (visConfig, parents, accumulated) => {\n    const modified = {};\n    const [layer] = parents.slice(-2, -1);\n    const isOld =\n      !visConfig.hasOwnProperty('filled') && !visConfig.strokeColor && !visConfig.strokeColorRange;\n    if (isOld) {\n      // color color & color range to stroke color\n      modified.strokeColor = layer.config.color;\n      modified.strokeColorRange = cloneDeep(visConfig.colorRange);\n      if (visConfig.outline) {\n        // point layer now supports both outline and fill\n        // for older schema where filled has not been added to point layer\n        // set it to false\n        modified.filled = false;\n      }\n    }\n\n    return modified;\n  },\n  geojson: (visConfig, parents, accumulated) => {\n    // is points?\n    const modified = {};\n    const [layer] = parents.slice(-2, -1);\n    const isOld =\n      layer.visualChannels &&\n      !layer.visualChannels.hasOwnProperty('strokeColorField') &&\n      !visConfig.strokeColor &&\n      !visConfig.strokeColorRange;\n    // make our best guess if this geojson layer contains point\n    const isPoint =\n      (layer.visualChannels && layer.visualChannels.radiusField) ||\n      (visConfig && visConfig.radius !== LAYER_VIS_CONFIGS.radius.defaultValue);\n\n    if (isOld) {\n      // color color & color range to stroke color\n      modified.strokeColor = layer.config.color;\n      modified.strokeColorRange = cloneDeep(visConfig.colorRange);\n      if (isPoint) {\n        // if is point, set stroke to false\n        modified.filled = true;\n        modified.stroked = false;\n      }\n    }\n\n    return modified;\n  }\n};\n\nclass VisConfigSchemaV1 extends Schema {\n  key = 'visConfig';\n\n  load(visConfig, parents, accumulated) {\n    const [layer] = parents.slice(-2, -1);\n    const modified = visConfigModificationV1[layer.type]\n      ? visConfigModificationV1[layer.type](visConfig, parents, accumulated)\n      : {};\n\n    return {\n      visConfig: {\n        ...visConfig,\n        ...modified\n      }\n    };\n  }\n}\n\nexport const layerPropsV1 = {\n  id: null,\n  type: null,\n  config: new Schema({\n    version: VERSIONS.v1,\n    key: 'config',\n    properties: {\n      dataId: null,\n      label: null,\n      color: null,\n      highlightColor: null,\n      columns: new ColumnSchemaV1({\n        version: VERSIONS.v1,\n        key: 'columns'\n      }),\n      isVisible: null,\n      visConfig: new VisConfigSchemaV1({\n        version: VERSIONS.v1\n      }),\n      hidden: null,\n      textLabel: new TextLabelSchemaV1({\n        version: VERSIONS.v1,\n        key: 'textLabel'\n      })\n    }\n  }),\n  visualChannels: new VisualChannelSchemaV1({\n    version: VERSIONS.v1,\n    key: 'visualChannels'\n  })\n};\n\nexport class LayerSchemaV0 extends Schema {\n  key = 'layers';\n\n  save(layers, parents) {\n    const [visState] = parents.slice(-1);\n\n    return {\n      [this.key]: visState.layerOrder.reduce((saved, index) => {\n        // save layers according to their rendering order\n        const layer = layers[index];\n        if (layer.isValidToSave()) {\n          saved.push(this.savePropertiesOrApplySchema(layer).layers);\n        }\n        return saved;\n      }, [])\n    };\n  }\n\n  load(layers) {\n    return {\n      [this.key]: layers.map(layer => this.loadPropertiesOrApplySchema(layer, layers).layers)\n    };\n  }\n}\n\nexport class FilterSchemaV0 extends Schema {\n  key = 'filters';\n  save(filters) {\n    return {\n      filters: filters\n        .filter(isValidFilterValue)\n        .map(filter => this.savePropertiesOrApplySchema(filter).filters)\n    };\n  }\n  load(filters) {\n    return {filters};\n  }\n}\n\nconst interactionPropsV0 = ['tooltip', 'brush'];\n\nclass InteractionSchemaV0 extends Schema {\n  key = 'interactionConfig';\n\n  save(interactionConfig) {\n    return Array.isArray(this.properties)\n      ? {\n          [this.key]: this.properties.reduce(\n            (accu, key) => ({\n              ...accu,\n              ...(interactionConfig[key].enabled ? {[key]: interactionConfig[key].config} : {})\n            }),\n            {}\n          )\n        }\n      : {};\n  }\n  load(interactionConfig) {\n    // convert v0 -> v1\n    // return enabled: false if disabled,\n    return Array.isArray(this.properties)\n      ? {\n          [this.key]: this.properties.reduce(\n            (accu, key) => ({\n              ...accu,\n              ...{\n                [key]: {\n                  ...(interactionConfig[key] || {}),\n                  enabled: Boolean(interactionConfig[key])\n                }\n              }\n            }),\n            {}\n          )\n        }\n      : {};\n  }\n}\n\nconst interactionPropsV1 = [...interactionPropsV0, 'geocoder', 'coordinate'];\n\nexport class InteractionSchemaV1 extends Schema {\n  key = 'interactionConfig';\n\n  save(interactionConfig) {\n    // save config even if disabled,\n    return Array.isArray(this.properties)\n      ? {\n          [this.key]: this.properties.reduce(\n            (accu, key) => ({\n              ...accu,\n              [key]: {\n                ...interactionConfig[key].config,\n                enabled: interactionConfig[key].enabled\n              }\n            }),\n            {}\n          )\n        }\n      : {};\n  }\n  load(interactionConfig) {\n    const modifiedConfig = interactionConfig;\n    Object.keys(interactionConfig).forEach(configType => {\n      if (configType === 'tooltip') {\n        const fieldsToShow = modifiedConfig[configType].fieldsToShow;\n        if (!notNullorUndefined(fieldsToShow)) {\n          return {[this.key]: modifiedConfig};\n        }\n        Object.keys(fieldsToShow).forEach(key => {\n          fieldsToShow[key] = fieldsToShow[key].map(fieldData => {\n            if (!fieldData.name) {\n              return {\n                name: fieldData,\n                format: null\n              };\n            }\n            return fieldData;\n          });\n        });\n      }\n      return;\n    });\n    return {[this.key]: modifiedConfig};\n  }\n}\n\nexport const filterPropsV0 = {\n  dataId: null,\n  id: null,\n  name: null,\n  type: null,\n  value: null,\n  enlarged: null\n};\n\nexport class DimensionFieldSchema extends Schema {\n  save(field) {\n    return {\n      [this.key]: field ? this.savePropertiesOrApplySchema(field)[this.key] : null\n    };\n  }\n\n  load(field) {\n    return {[this.key]: field};\n  }\n}\n\nexport class SplitMapsSchema extends Schema {\n  convertLayerSettings(accu, [key, value]) {\n    if (typeof value === 'boolean') {\n      return {\n        ...accu,\n        [key]: value\n      };\n    } else if (value && typeof value === 'object' && value.isAvailable) {\n      return {\n        ...accu,\n        [key]: Boolean(value.isVisible)\n      };\n    }\n    return accu;\n  }\n\n  load(splitMaps) {\n    // previous splitMaps Schema {layers: {layerId: {isVisible, isAvailable}}}\n\n    if (!Array.isArray(splitMaps) || !splitMaps.length) {\n      return {splitMaps: []};\n    }\n\n    return {\n      splitMaps: splitMaps.map(settings => ({\n        ...settings,\n        layers: Object.entries(settings.layers || {}).reduce(this.convertLayerSettings, {})\n      }))\n    };\n  }\n}\n\nexport const filterPropsV1 = {\n  ...filterPropsV0,\n  plotType: null,\n  animationWindow: null,\n  yAxis: new DimensionFieldSchema({\n    version: VERSIONS.v1,\n    key: 'yAxis',\n    properties: {\n      name: null,\n      type: null\n    }\n  }),\n\n  // polygon filter properties\n  layerId: null,\n  speed: null\n};\n\nexport const propertiesV0 = {\n  filters: new FilterSchemaV0({\n    version: VERSIONS.v0,\n    properties: filterPropsV0\n  }),\n  layers: new LayerSchemaV0({\n    version: VERSIONS.v0,\n    properties: layerPropsV0\n  }),\n  interactionConfig: new InteractionSchemaV0({\n    version: VERSIONS.v0,\n    properties: interactionPropsV0\n  }),\n  layerBlending: null\n};\n\nexport const propertiesV1 = {\n  filters: new FilterSchemaV0({\n    version: VERSIONS.v1,\n    properties: filterPropsV1\n  }),\n  layers: new LayerSchemaV0({\n    version: VERSIONS.v1,\n    properties: layerPropsV1\n  }),\n  interactionConfig: new InteractionSchemaV1({\n    version: VERSIONS.v1,\n    properties: interactionPropsV1\n  }),\n  layerBlending: null,\n  splitMaps: new SplitMapsSchema({\n    key: 'splitMaps',\n    version: VERSIONS.v1\n  }),\n  animationConfig: new Schema({\n    version: VERSIONS.v1,\n    properties: {\n      currentTime: null,\n      speed: null\n    },\n    key: 'animationConfig'\n  })\n};\n\nexport const visStateSchemaV0 = new Schema({\n  version: VERSIONS.v0,\n  properties: propertiesV0,\n  key: 'visState'\n});\n\nexport const visStateSchemaV1 = new Schema({\n  version: VERSIONS.v1,\n  properties: propertiesV1,\n  key: 'visState'\n});\n\nexport const visStateSchema = {\n  [VERSIONS.v0]: {\n    save: toSave => visStateSchemaV0.save(toSave),\n    load: toLoad => visStateSchemaV1.load(visStateSchemaV0.load(toLoad).visState)\n  },\n  [VERSIONS.v1]: visStateSchemaV1\n};\n\n// test load v0\nexport default visStateSchema;\n"]},"metadata":{},"sourceType":"script"}
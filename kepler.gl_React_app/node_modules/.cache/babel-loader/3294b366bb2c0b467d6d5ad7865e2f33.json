{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getGeoJSON = getGeoJSON;\nexports[\"default\"] = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _supercluster = _interopRequireDefault(require(\"supercluster\"));\nvar _lodash = _interopRequireDefault(require(\"lodash.memoize\"));\n\n// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nfunction getGeoJSON(data, getPosition, filterData) {\n  var raw = typeof filterData === 'function' ? data.filter(filterData) : data;\n  return raw.map(function (d) {\n    return {\n      type: 'Point',\n      properties: {\n        data: d,\n        points: [d],\n        point_count: 1,\n        point_count_abbreviated: '1'\n      },\n      geometry: {\n        coordinates: getPosition(d)\n      }\n    };\n  }).filter(function (d) {\n    return d.geometry.coordinates.every(Number.isFinite);\n  });\n}\nvar clusterResolver = function clusterResolver(_ref) {\n  var clusterRadius = _ref.clusterRadius;\n  return \"\".concat(clusterRadius);\n};\nvar getClusterer = function getClusterer(_ref2) {\n  var clusterRadius = _ref2.clusterRadius,\n    geoJSON = _ref2.geoJSON;\n  return new _supercluster[\"default\"]({\n    maxZoom: 20,\n    radius: clusterRadius,\n    reduce: function reduce(accumulated, props) {\n      accumulated.points = [].concat((0, _toConsumableArray2[\"default\"])(accumulated.points), (0, _toConsumableArray2[\"default\"])(props.points));\n    },\n    map: function map(props) {\n      return {\n        points: [props.data]\n      };\n    }\n  }).load(geoJSON);\n};\nvar ClusterBuilder = /*#__PURE__*/function () {\n  function ClusterBuilder() {\n    (0, _classCallCheck2[\"default\"])(this, ClusterBuilder);\n    this.clusterer = (0, _lodash[\"default\"])(getClusterer, clusterResolver);\n  }\n  (0, _createClass2[\"default\"])(ClusterBuilder, [{\n    key: \"clustersAtZoom\",\n    value: function clustersAtZoom(_ref3) {\n      var bbox = _ref3.bbox,\n        clusterRadius = _ref3.clusterRadius,\n        geoJSON = _ref3.geoJSON,\n        zoom = _ref3.zoom;\n      var clusterer = this.clusterer({\n        clusterRadius: clusterRadius,\n        geoJSON: geoJSON\n      }); // map clusters to formatted bins to be passed to deck.gl bin-sorter\n\n      var clusters = clusterer.getClusters(bbox, zoom).map(function (c, i) {\n        return {\n          points: c.properties.points,\n          position: c.geometry.coordinates,\n          index: i\n        };\n      });\n      return clusters;\n    }\n  }, {\n    key: \"clearClustererCache\",\n    value: function clearClustererCache() {\n      this.clusterer.cache.clear();\n    }\n  }]);\n  return ClusterBuilder;\n}();\nexports[\"default\"] = ClusterBuilder;","map":{"version":3,"sources":["../../../src/deckgl-layers/layer-utils/cluster-utils.js"],"names":["getGeoJSON","data","getPosition","filterData","raw","filter","map","type","properties","d","points","point_count","point_count_abbreviated","geometry","coordinates","every","Number","isFinite","clusterResolver","clusterRadius","getClusterer","geoJSON","Supercluster","maxZoom","radius","reduce","accumulated","props","load","ClusterBuilder","clusterer","bbox","zoom","clusters","getClusters","c","i","position","index","cache","clear"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport Supercluster from 'supercluster';\nimport memoize from 'lodash.memoize';\n\nexport function getGeoJSON(data, getPosition, filterData) {\n  const raw = typeof filterData === 'function' ? data.filter(filterData) : data;\n\n  return raw\n    .map(d => ({\n      type: 'Point',\n      properties: {\n        data: d,\n        points: [d],\n        point_count: 1,\n        point_count_abbreviated: '1'\n      },\n      geometry: {\n        coordinates: getPosition(d)\n      }\n    }))\n    .filter(d => d.geometry.coordinates.every(Number.isFinite));\n}\n\nconst clusterResolver = ({clusterRadius}) => `${clusterRadius}`;\n\nconst getClusterer = ({clusterRadius, geoJSON}) =>\n  new Supercluster({\n    maxZoom: 20,\n    radius: clusterRadius,\n    reduce: (accumulated, props) => {\n      accumulated.points = [...accumulated.points, ...props.points];\n    },\n    map: props => ({points: [props.data]})\n  }).load(geoJSON);\n\nexport default class ClusterBuilder {\n  constructor() {\n    this.clusterer = memoize(getClusterer, clusterResolver);\n  }\n\n  clustersAtZoom({bbox, clusterRadius, geoJSON, zoom}) {\n    const clusterer = this.clusterer({clusterRadius, geoJSON});\n\n    // map clusters to formatted bins to be passed to deck.gl bin-sorter\n    const clusters = clusterer.getClusters(bbox, zoom).map((c, i) => ({\n      points: c.properties.points,\n      position: c.geometry.coordinates,\n      index: i\n    }));\n\n    return clusters;\n  }\n\n  clearClustererCache() {\n    this.clusterer.cache.clear();\n  }\n}\n"]},"metadata":{},"sourceType":"script"}
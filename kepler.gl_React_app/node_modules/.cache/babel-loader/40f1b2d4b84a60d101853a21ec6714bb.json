{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateHashId = generateHashId;\nexports.isChrome = isChrome;\nexports.isPlainObject = isPlainObject;\nexports.capitalizeFirstLetter = capitalizeFirstLetter;\nexports.camelToTitle = camelToTitle;\nexports.getHTMLMapModeTileUrl = getHTMLMapModeTileUrl;\nexports.toArray = toArray;\nexports.isObject = isObject;\nexports.getError = getError;\nexports.arrayInsert = arrayInsert;\nexports.isTest = isTest;\nexports.set = exports.insertValue = exports.camelize = void 0;\nvar _toArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toArray\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _window = _interopRequireDefault(require(\"global/window\"));\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\n\n/**\n * Generate a hash string based on number of character\n * @param {number} count\n * @returns {string} hash string\n */\nfunction generateHashId() {\n  var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 6;\n  return Math.random().toString(36).substr(count);\n}\n/**\n * Detect chrome\n * @returns {boolean} - yes or no\n */\n\nfunction isChrome() {\n  // Chrome 1+\n  return _window[\"default\"].chrome && _window[\"default\"].chrome.webstore;\n}\n/**\n * whether is an object\n * @returns {boolean} - yes or no\n */\n\nfunction isPlainObject(obj) {\n  return obj === Object(obj) && typeof obj !== 'function' && !Array.isArray(obj);\n}\n/**\n * Capitalize first letter of a string\n * @param {string} str\n * @returns {string}\n */\n\nfunction capitalizeFirstLetter(str) {\n  return typeof str === 'string' ? str.charAt(0).toUpperCase() + str.slice(1) : str;\n}\n/**\n * Convert camel style names to title\n * strokeColor -> Stroke Color\n * @param {string} str\n * @returns {string}\n */\n\nfunction camelToTitle(str) {\n  var breakWord = str.replace(/([A-Z])/g, ' $1');\n  return capitalizeFirstLetter(breakWord);\n}\n/**\n * Convert names to camel style\n * Stroke Color -> strokeColor\n * @param {string} str\n * @returns {string}\n */\n\nvar camelize = function camelize(str) {\n  return str.replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, function (match, index) {\n    if (Number(match) === 0) return ''; // or if (/\\s+/.test(match)) for white spaces\n\n    return index === 0 ? match.toLowerCase() : match.toUpperCase();\n  });\n};\n/**\n * Returns the img url for a given map export option\n * @param mode export option\n * @return {string} url\n */\n\nexports.camelize = camelize;\nfunction getHTMLMapModeTileUrl(mode) {\n  return \"https://d1a3f4spazzrp4.cloudfront.net/kepler.gl/documentation/map-\".concat(mode.toLowerCase(), \"-mode.png\");\n}\n/**\n * Converts non-arrays to arrays.  Leaves arrays alone.  Converts\n * undefined values to empty arrays ([] instead of [undefined]).\n * Otherwise, just returns [item] for non-array items.\n *\n * @param {*} item\n * @returns {array} boom! much array. very indexed. so useful.\n */\n\nfunction toArray(item) {\n  if (Array.isArray(item)) {\n    return item;\n  }\n  if (typeof item === 'undefined' || item === null) {\n    return [];\n  }\n  return [item];\n}\n/**\n * immutably insert value to an Array or Object\n * @param {Array|Object} obj\n * @param {Number|String} key\n * @param {*} value\n * @returns {Array|Object}\n */\n\nvar insertValue = function insertValue(obj, key, value) {\n  if (Array.isArray(obj) && typeof key === 'number') {\n    return [].concat((0, _toConsumableArray2[\"default\"])(obj.slice(0, key)), [value], (0, _toConsumableArray2[\"default\"])(obj.slice(key + 1, obj.length)));\n  }\n  return _objectSpread(_objectSpread({}, obj), {}, (0, _defineProperty2[\"default\"])({}, key, value));\n};\n/**\n * check if value is a loose object including a plain object, array, function\n * @param {*} value\n */\n\nexports.insertValue = insertValue;\nfunction isObject(value) {\n  return value !== null && ((0, _typeof2[\"default\"])(value) === 'object' || typeof value === 'function');\n}\nvar setPath = function setPath(_ref, value, obj) {\n  var _ref2 = (0, _toArray2[\"default\"])(_ref),\n    key = _ref2[0],\n    next = _ref2.slice(1);\n\n  // is Object allows js object, array and function\n  if (!isObject(obj)) {\n    return obj;\n  }\n  if (next.length === 0) {\n    return insertValue(obj, key, value);\n  } // @ts-ignore\n\n  return insertValue(obj, key, setPath(next, value, obj.hasOwnProperty(key) ? obj[key] : {}));\n};\n/**\n * Immutable version of _.set\n * @param {Array<String|Number>} path\n * @param {*} value\n * @param {Object} obj\n * @returns {Object}\n */\n// @ts-ignore\n\nvar set = function set(path, value, obj) {\n  return obj === null ? obj : setPath(path, value, obj);\n};\n/**\n * Get error information of unknown type\n * Extracts as much human readable information as possible\n * Ensure result is an Error object suitable for throw or promise rejection\n *\n * @private\n * @param {*}  err - Unknown error\n * @return {string} - human readable error msg\n */\n\nexports.set = set;\nfunction getError(err) {\n  if (!err) {\n    return 'Something went wrong';\n  }\n  if (typeof err === 'string') {\n    return err;\n  } else if (err instanceof Error) {\n    return err.message;\n  } else if ((0, _typeof2[\"default\"])(err) === 'object') {\n    return err.error ? getError(err.error) : err.err ? getError(err.err) : err.message ? getError(err.message) : JSON.stringify(err);\n  } // @ts-ignore\n\n  return null;\n}\nfunction arrayInsert(arr, index, val) {\n  if (!Array.isArray(arr)) {\n    return arr;\n  }\n  return [].concat((0, _toConsumableArray2[\"default\"])(arr.slice(0, index)), [val], (0, _toConsumableArray2[\"default\"])(arr.slice(index)));\n}\nfunction isTest() {\n  var _process, _process$env;\n  return ((_process = process) === null || _process === void 0 ? void 0 : (_process$env = _process.env) === null || _process$env === void 0 ? void 0 : _process$env.NODE_ENV) === 'test';\n}","map":{"version":3,"sources":["../../src/utils/utils.js"],"names":["generateHashId","count","Math","random","toString","substr","isChrome","window","chrome","webstore","isPlainObject","obj","Object","Array","isArray","capitalizeFirstLetter","str","charAt","toUpperCase","slice","camelToTitle","breakWord","replace","camelize","match","index","Number","toLowerCase","getHTMLMapModeTileUrl","mode","toArray","item","insertValue","key","value","length","isObject","setPath","next","hasOwnProperty","set","path","getError","err","Error","message","error","JSON","stringify","arrayInsert","arr","val","isTest","env","NODE_ENV"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAoBA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,eAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASA,cAAT,GAAmC;EAAA,IAAXC,KAAW,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAH,CAAG;EACxC,OAAOC,IAAI,CAACC,MAALD,EAAAA,CACJE,QADIF,CACK,EADLA,CAAAA,CAEJG,MAFIH,CAEGD,KAFHC,CAAP;AAGD;AAED;AACA;AACA;AACA;;AACO,SAASI,QAAT,GAAoB;EACzB;EACA,OAAOC,OAAAA,CAAAA,SAAAA,CAAAA,CAAOC,MAAPD,IAAiBA,OAAAA,CAAAA,SAAAA,CAAAA,CAAOC,MAAPD,CAAcE,QAAtC;AACD;AAED;AACA;AACA;AACA;;AACO,SAASC,aAAT,CAAuBC,GAAvB,EAA4B;EACjC,OAAOA,GAAG,KAAKC,MAAM,CAACD,GAAD,CAAdA,IAAuB,OAAOA,GAAP,KAAe,UAAtCA,IAAoD,CAACE,KAAK,CAACC,OAAND,CAAcF,GAAdE,CAA5D;AACD;AAED;AACA;AACA;AACA;AACA;;AACO,SAASE,qBAAT,CAA+BC,GAA/B,EAAoC;EACzC,OAAO,OAAOA,GAAP,KAAe,QAAf,GAA0BA,GAAG,CAACC,MAAJD,CAAW,CAAXA,CAAAA,CAAcE,WAAdF,EAAAA,GAA8BA,GAAG,CAACG,KAAJH,CAAU,CAAVA,CAAxD,GAAuEA,GAA9E;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;AACO,SAASI,YAAT,CAAsBJ,GAAtB,EAA2B;EAChC,IAAMK,SAAS,GAAGL,GAAG,CAACM,OAAJN,CAAY,UAAZA,EAAwB,KAAxBA,CAAlB;EACA,OAAOD,qBAAqB,CAACM,SAAD,CAA5B;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;AACO,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAAA,GAAG,EAAI;EAC7B,OAAO,GAAG,CAACD,OAAJ,CAAY,yBAAZ,EAAuC,UAACE,KAAD,EAAQC,KAAR,EAAkB;IAC9D,IAAIC,MAAM,CAACF,KAAD,CAANE,KAAkB,CAAtB,EAAyB,OAAO,EAAP,CADqC,CAC1B;;IACpC,OAAOD,KAAK,KAAK,CAAVA,GAAcD,KAAK,CAACG,WAANH,EAAdC,GAAoCD,KAAK,CAACN,WAANM,EAA3C;EACD,CAHM,CAAP;AAID,CALM;AAOP;AACA;AACA;AACA;AACA;;;AACO,SAASI,qBAAT,CAA+BC,IAA/B,EAAqC;EAC1C,OAAA,oEAAA,CAAA,MAAA,CAA4EA,IAAI,CAACF,WAALE,EAA5E,EAAA,WAAA,CAAA;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;EAC5B,IAAIlB,KAAK,CAACC,OAAND,CAAckB,IAAdlB,CAAJ,EAAyB;IACvB,OAAOkB,IAAP;EACD;EAED,IAAI,OAAOA,IAAP,KAAgB,WAAhB,IAA+BA,IAAI,KAAK,IAA5C,EAAkD;IAChD,OAAO,EAAP;EACD;EAED,OAAO,CAACA,IAAD,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACrB,GAAD,EAAMsB,GAAN,EAAWC,KAAX,EAAqB;EAC9C,IAAIrB,KAAK,CAACC,OAAND,CAAcF,GAAdE,CAAAA,IAAsB,OAAOoB,GAAP,KAAe,QAAzC,EAAmD;IACjD,OAAA,EAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,mBAAA,CAAA,SAAA,CAAA,EAAWtB,GAAG,CAACQ,KAAJR,CAAU,CAAVA,EAAasB,GAAbtB,CAAX,CAAA,EAAA,CAA8BuB,KAA9B,CAAA,EAAA,CAAA,CAAA,EAAA,mBAAA,CAAA,SAAA,CAAA,EAAwCvB,GAAG,CAACQ,KAAJR,CAAUsB,GAAG,GAAG,CAAhBtB,EAAmBA,GAAG,CAACwB,MAAvBxB,CAAxC,CAAA,CAAA;EACD;EAED,OAAA,aAAA,CAAA,aAAA,CAAA,CAAA,CAAA,EAAWA,GAAX,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAiBsB,GAAjB,EAAuBC,KAAvB,CAAA,CAAA;AACD,CANM;AAQP;AACA;AACA;AACA;;;AACO,SAASE,QAAT,CAAkBF,KAAlB,EAAyB;EAC9B,OAAOA,KAAK,KAAK,IAAVA,KAAmB,CAAA,CAAA,EAAA,QAAA,CAAA,SAAA,CAAA,EAAOA,KAAP,CAAA,KAAiB,QAAjB,IAA6B,OAAOA,KAAP,KAAiB,UAAjEA,CAAP;AACD;AAED,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAAA,IAAA,EAAiBH,KAAjB,EAAwBvB,GAAxB,EAAgC;EAAA,IAAA,KAAA,GAAA,CAAA,CAAA,EAAA,SAAA,CAAA,SAAA,CAAA,EAAA,IAAA,CAAA;IAA9BsB,GAA8B,GAAA,KAAA,CAAA,CAAA,CAAA;IAAtBK,IAAsB,GAAA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA;;EAC9C;EACA,IAAI,CAACF,QAAQ,CAACzB,GAAD,CAAb,EAAoB;IAClB,OAAOA,GAAP;EACD;EAED,IAAI2B,IAAI,CAACH,MAALG,KAAgB,CAApB,EAAuB;IACrB,OAAON,WAAW,CAACrB,GAAD,EAAMsB,GAAN,EAAWC,KAAX,CAAlB;EACD,CAR6C,CAU9C;;EACA,OAAOF,WAAW,CAACrB,GAAD,EAAMsB,GAAN,EAAWI,OAAO,CAACC,IAAD,EAAOJ,KAAP,EAAcvB,GAAG,CAAC4B,cAAJ5B,CAAmBsB,GAAnBtB,CAAAA,GAA0BA,GAAG,CAACsB,GAAD,CAA7BtB,GAAqC,CAAA,CAAnD,CAAlB,CAAlB;AACD,CAZD;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,IAAM6B,GAAG,GAAG,SAANA,GAAM,CAACC,IAAD,EAAOP,KAAP,EAAcvB,GAAd,EAAA;EAAA,OAAuBA,GAAG,KAAK,IAARA,GAAeA,GAAfA,GAAqB0B,OAAO,CAACI,IAAD,EAAOP,KAAP,EAAcvB,GAAd,CAAnD;AAAA,CAAZ;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAAS+B,QAAT,CAAkBC,GAAlB,EAAuB;EAC5B,IAAI,CAACA,GAAL,EAAU;IACR,OAAO,sBAAP;EACD;EAED,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;IAC3B,OAAOA,GAAP;EACD,CAFD,MAEO,IAAIA,GAAG,YAAYC,KAAnB,EAA0B;IAC/B,OAAOD,GAAG,CAACE,OAAX;EACD,CAFM,MAEA,IAAI,CAAA,CAAA,EAAA,QAAA,CAAA,SAAA,CAAA,EAAOF,GAAP,CAAA,KAAe,QAAnB,EAA6B;IAClC,OAAOA,GAAG,CAACG,KAAJH,GACHD,QAAQ,CAACC,GAAG,CAACG,KAAL,CADLH,GAEHA,GAAG,CAACA,GAAJA,GACAD,QAAQ,CAACC,GAAG,CAACA,GAAL,CADRA,GAEAA,GAAG,CAACE,OAAJF,GACAD,QAAQ,CAACC,GAAG,CAACE,OAAL,CADRF,GAEAI,IAAI,CAACC,SAALD,CAAeJ,GAAfI,CANJ;EAOD,CAjB2B,CAmB5B;;EACA,OAAO,IAAP;AACD;AAEM,SAASE,WAAT,CAAqBC,GAArB,EAA0BzB,KAA1B,EAAiC0B,GAAjC,EAAsC;EAC3C,IAAI,CAACtC,KAAK,CAACC,OAAND,CAAcqC,GAAdrC,CAAL,EAAyB;IACvB,OAAOqC,GAAP;EACD;EAED,OAAA,EAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,mBAAA,CAAA,SAAA,CAAA,EAAWA,GAAG,CAAC/B,KAAJ+B,CAAU,CAAVA,EAAazB,KAAbyB,CAAX,CAAA,EAAA,CAAgCC,GAAhC,CAAA,EAAA,CAAA,CAAA,EAAA,mBAAA,CAAA,SAAA,CAAA,EAAwCD,GAAG,CAAC/B,KAAJ+B,CAAUzB,KAAVyB,CAAxC,CAAA,CAAA;AACD;AAEM,SAASE,MAAT,GAAkB;EAAA,IAAA,QAAA,EAAA,YAAA;EACvB,OAAO,CAAA,CAAA,QAAA,GAAA,OAAO,MAAA,IAAP,IAAA,QAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,YAAA,GAAA,QAAA,CAASC,GAAT,MAAA,IAAA,IAAA,YAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,YAAA,CAAcC,QAAd,MAA2B,MAAlC;AACD","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport window from 'global/window';\n\n/**\n * Generate a hash string based on number of character\n * @param {number} count\n * @returns {string} hash string\n */\nexport function generateHashId(count = 6) {\n  return Math.random()\n    .toString(36)\n    .substr(count);\n}\n\n/**\n * Detect chrome\n * @returns {boolean} - yes or no\n */\nexport function isChrome() {\n  // Chrome 1+\n  return window.chrome && window.chrome.webstore;\n}\n\n/**\n * whether is an object\n * @returns {boolean} - yes or no\n */\nexport function isPlainObject(obj) {\n  return obj === Object(obj) && typeof obj !== 'function' && !Array.isArray(obj);\n}\n\n/**\n * Capitalize first letter of a string\n * @param {string} str\n * @returns {string}\n */\nexport function capitalizeFirstLetter(str) {\n  return typeof str === 'string' ? str.charAt(0).toUpperCase() + str.slice(1) : str;\n}\n\n/**\n * Convert camel style names to title\n * strokeColor -> Stroke Color\n * @param {string} str\n * @returns {string}\n */\nexport function camelToTitle(str) {\n  const breakWord = str.replace(/([A-Z])/g, ' $1');\n  return capitalizeFirstLetter(breakWord);\n}\n\n/**\n * Convert names to camel style\n * Stroke Color -> strokeColor\n * @param {string} str\n * @returns {string}\n */\nexport const camelize = str => {\n  return str.replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, (match, index) => {\n    if (Number(match) === 0) return ''; // or if (/\\s+/.test(match)) for white spaces\n    return index === 0 ? match.toLowerCase() : match.toUpperCase();\n  });\n};\n\n/**\n * Returns the img url for a given map export option\n * @param mode export option\n * @return {string} url\n */\nexport function getHTMLMapModeTileUrl(mode) {\n  return `https://d1a3f4spazzrp4.cloudfront.net/kepler.gl/documentation/map-${mode.toLowerCase()}-mode.png`;\n}\n\n/**\n * Converts non-arrays to arrays.  Leaves arrays alone.  Converts\n * undefined values to empty arrays ([] instead of [undefined]).\n * Otherwise, just returns [item] for non-array items.\n *\n * @param {*} item\n * @returns {array} boom! much array. very indexed. so useful.\n */\nexport function toArray(item) {\n  if (Array.isArray(item)) {\n    return item;\n  }\n\n  if (typeof item === 'undefined' || item === null) {\n    return [];\n  }\n\n  return [item];\n}\n\n/**\n * immutably insert value to an Array or Object\n * @param {Array|Object} obj\n * @param {Number|String} key\n * @param {*} value\n * @returns {Array|Object}\n */\nexport const insertValue = (obj, key, value) => {\n  if (Array.isArray(obj) && typeof key === 'number') {\n    return [...obj.slice(0, key), value, ...obj.slice(key + 1, obj.length)];\n  }\n\n  return {...obj, [key]: value};\n};\n\n/**\n * check if value is a loose object including a plain object, array, function\n * @param {*} value\n */\nexport function isObject(value) {\n  return value !== null && (typeof value === 'object' || typeof value === 'function');\n}\n\nconst setPath = ([key, ...next], value, obj) => {\n  // is Object allows js object, array and function\n  if (!isObject(obj)) {\n    return obj;\n  }\n\n  if (next.length === 0) {\n    return insertValue(obj, key, value);\n  }\n\n  // @ts-ignore\n  return insertValue(obj, key, setPath(next, value, obj.hasOwnProperty(key) ? obj[key] : {}));\n};\n\n/**\n * Immutable version of _.set\n * @param {Array<String|Number>} path\n * @param {*} value\n * @param {Object} obj\n * @returns {Object}\n */\n// @ts-ignore\nexport const set = (path, value, obj) => (obj === null ? obj : setPath(path, value, obj));\n\n/**\n * Get error information of unknown type\n * Extracts as much human readable information as possible\n * Ensure result is an Error object suitable for throw or promise rejection\n *\n * @private\n * @param {*}  err - Unknown error\n * @return {string} - human readable error msg\n */\nexport function getError(err) {\n  if (!err) {\n    return 'Something went wrong';\n  }\n\n  if (typeof err === 'string') {\n    return err;\n  } else if (err instanceof Error) {\n    return err.message;\n  } else if (typeof err === 'object') {\n    return err.error\n      ? getError(err.error)\n      : err.err\n      ? getError(err.err)\n      : err.message\n      ? getError(err.message)\n      : JSON.stringify(err);\n  }\n\n  // @ts-ignore\n  return null;\n}\n\nexport function arrayInsert(arr, index, val) {\n  if (!Array.isArray(arr)) {\n    return arr;\n  }\n\n  return [...arr.slice(0, index), val, ...arr.slice(index)];\n}\n\nexport function isTest() {\n  return process?.env?.NODE_ENV === 'test';\n}\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _window = _interopRequireDefault(require(\"global/window\"));\nvar _document = _interopRequireDefault(require(\"global/document\"));\nvar _console = _interopRequireDefault(require(\"global/console\"));\nvar _miniSvgDataUri = _interopRequireDefault(require(\"mini-svg-data-uri\"));\nvar _userFeedbacks = require(\"../constants/user-feedbacks\");\nvar _domUtils = require(\"./dom-utils\");\n\n// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/**\n * This file is copied from https://github.com/tsayen/dom-to-image\n * Modified by heshan0131 to allow loading external stylesheets and inline webfonts\n */\nvar inliner = newInliner();\nvar fontFaces = newFontFaces();\nvar images = newImages(); // Default impl options\n\nvar defaultOptions = {\n  // Default is to fail on error, no placeholder\n  imagePlaceholder: undefined,\n  // Default cache bust is false, it will use the cache\n  cacheBust: false\n};\nvar domtoimage = {\n  toSvg: toSvg,\n  toPng: toPng,\n  toJpeg: toJpeg,\n  toBlob: toBlob,\n  toPixelData: toPixelData,\n  impl: {\n    fontFaces: fontFaces,\n    images: images,\n    inliner: inliner,\n    options: {}\n  }\n};\n/**\n   * @param {Node} node - The DOM Node object to render\n   * @param {Object} options - Rendering options\n   * @param {Function} [options.filter] - Should return true if passed node should be included in the output\n   *          (excluding node means excluding it's children as well). Not called on the root node.\n   * @param {String} [options.bgcolor] - color for the background, any valid CSS color value.\n   * @param {Number} [options.width] - width to be applied to node before rendering.\n   * @param {Number} [options.height] - height to be applied to node before rendering.\n   * @param {Object} [options.style] - an object whose properties to be copied to node's style before rendering.\n   * @param {Number} [options.quality] - a Number between 0 and 1 indicating image quality (applicable to JPEG only),\n              defaults to 1.0.\n    * @param {String} [options.imagePlaceholder] - dataURL to use as a placeholder for failed images, default behaviour is to fail fast on images we can't fetch\n    * @param {Boolean} [options.cacheBust] - set to true to cache bust by appending the time to the request url\n    * @return {Promise} - A promise that is fulfilled with a SVG image data URL\n    * */\n\nfunction toSvg(node, options) {\n  options = options || {};\n  copyOptions(options);\n  return Promise.resolve(node).then(function (nd) {\n    return cloneNode(nd, options.filter, true);\n  }).then(embedFonts).then(inlineImages).then(applyOptions).then(function (clone) {\n    return makeSvgDataUri(clone, options.width || (0, _domUtils.getWidth)(node), options.height || (0, _domUtils.getHeight)(node));\n  });\n  function applyOptions(clone) {\n    if (options.bgcolor) clone.style.backgroundColor = options.bgcolor;\n    if (options.width) clone.style.width = \"\".concat(options.width, \"px\");\n    if (options.height) clone.style.height = \"\".concat(options.height, \"px\");\n    if (options.style) Object.keys(options.style).forEach(function (property) {\n      clone.style[property] = options.style[property];\n    });\n    return clone;\n  }\n}\n/**\n * @param {Node} node - The DOM Node object to render\n * @param {Object} options - Rendering options\n * @return {Promise} - A promise that is fulfilled with a Uint8Array containing RGBA pixel data.\n * */\n\nfunction toPixelData(node, options) {\n  return draw(node, options || {}).then(function (canvas) {\n    return canvas.getContext('2d').getImageData(0, 0, (0, _domUtils.getWidth)(node), (0, _domUtils.getHeight)(node)).data;\n  });\n}\n/**\n * @param {Node} node - The DOM Node object to render\n * @param {Object} options - Rendering options\n * @return {Promise} - A promise that is fulfilled with a PNG image data URL\n * */\n\nfunction toPng(node, options) {\n  return draw(node, options || {}).then(function (canvas) {\n    return canvas.toDataURL();\n  });\n}\n/**\n * @param {Node} node - The DOM Node object to render\n * @param {Object} options - Rendering options\n * @return {Promise} - A promise that is fulfilled with a JPEG image data URL\n * */\n\nfunction toJpeg(node, options) {\n  options = options || {};\n  return draw(node, options).then(function (canvas) {\n    return canvas.toDataURL('image/jpeg', options.quality || 1.0);\n  });\n}\n/**\n * @param {Node} node - The DOM Node object to render\n * @param {Object} options - Rendering options\n * @return {Promise} - A promise that is fulfilled with a PNG image blob\n * */\n\nfunction toBlob(node, options) {\n  return draw(node, options || {}).then(_domUtils.canvasToBlob);\n}\nfunction copyOptions(options) {\n  // Copy options to impl options for use in impl\n  if (typeof options.imagePlaceholder === 'undefined') {\n    domtoimage.impl.options.imagePlaceholder = defaultOptions.imagePlaceholder;\n  } else {\n    domtoimage.impl.options.imagePlaceholder = options.imagePlaceholder;\n  }\n  if (typeof options.cacheBust === 'undefined') {\n    domtoimage.impl.options.cacheBust = defaultOptions.cacheBust;\n  } else {\n    domtoimage.impl.options.cacheBust = options.cacheBust;\n  }\n}\nfunction draw(domNode, options) {\n  return toSvg(domNode, options).then(_domUtils.makeImage).then((0, _domUtils.delay)(100)).then(function (image) {\n    var canvas = newCanvas(domNode);\n    canvas.getContext('2d').drawImage(image, 0, 0);\n    return canvas;\n  });\n  function newCanvas(dNode) {\n    var canvas = _document[\"default\"].createElement('canvas');\n    canvas.width = options.width || (0, _domUtils.getWidth)(dNode);\n    canvas.height = options.height || (0, _domUtils.getHeight)(dNode);\n    if (options.bgcolor) {\n      var ctx = canvas.getContext('2d');\n      ctx.fillStyle = options.bgcolor;\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n    }\n    return canvas;\n  }\n}\nfunction cloneNode(node, filter, root) {\n  if (!root && filter && !filter(node)) {\n    return Promise.resolve();\n  }\n  return Promise.resolve(node).then(makeNodeCopy).then(function (clone) {\n    return cloneChildren(node, clone, filter);\n  }).then(function (clone) {\n    return (0, _domUtils.processClone)(node, clone);\n  });\n  function makeNodeCopy(nd) {\n    if (nd instanceof _window[\"default\"].HTMLCanvasElement) {\n      return (0, _domUtils.makeImage)(nd.toDataURL());\n    }\n    return nd.cloneNode(false);\n  }\n  function cloneChildrenInOrder(parent, arrChildren, flt) {\n    var done = Promise.resolve();\n    arrChildren.forEach(function (child) {\n      done = done.then(function () {\n        return cloneNode(child, flt);\n      }).then(function (childClone) {\n        if (childClone) {\n          parent.appendChild(childClone);\n        }\n      });\n    });\n    return done;\n  }\n  function cloneChildren(original, clone, flt) {\n    var children = original.childNodes;\n    if (children.length === 0) {\n      return Promise.resolve(clone);\n    }\n    return cloneChildrenInOrder(clone, (0, _domUtils.asArray)(children), flt).then(function () {\n      return clone;\n    });\n  }\n}\nfunction embedFonts(node) {\n  return fontFaces.resolveAll().then(function (cssText) {\n    var styleNode = _document[\"default\"].createElement('style');\n    node.appendChild(styleNode);\n    styleNode.appendChild(_document[\"default\"].createTextNode(cssText));\n    return node;\n  });\n}\nfunction inlineImages(node) {\n  return images.inlineAll(node).then(function () {\n    return node;\n  });\n}\nfunction makeSvgDataUri(node, width, height) {\n  return Promise.resolve(node).then(function (nd) {\n    nd.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml');\n    var serializedString = new _window[\"default\"].XMLSerializer().serializeToString(nd);\n    var xhtml = (0, _domUtils.escapeXhtml)(serializedString);\n    var foreignObject = \"<foreignObject x=\\\"0\\\" y=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\">\".concat(xhtml, \"</foreignObject>\");\n    var svgStr = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"\".concat(width, \"\\\" height=\\\"\").concat(height, \"\\\">\").concat(foreignObject, \"</svg>\"); // Optimizing SVGs in data URIs\n    // see https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n    // the best way of encoding SVG in a data: URI is data:image/svg+xml,[actual data].\n    // We donâ€™t need the ;charset=utf-8 parameter because the given SVG is ASCII.\n\n    return (0, _miniSvgDataUri[\"default\"])(svgStr);\n  });\n}\nfunction newInliner() {\n  var URL_REGEX = /url\\(['\"]?([^'\"]+?)['\"]?\\)/g;\n  return {\n    inlineAll: inlineAll,\n    shouldProcess: shouldProcess,\n    impl: {\n      readUrls: readUrls,\n      inline: inline\n    }\n  };\n  function shouldProcess(string) {\n    return string.search(URL_REGEX) !== -1;\n  }\n  function readUrls(string) {\n    var result = [];\n    var match;\n    while ((match = URL_REGEX.exec(string)) !== null) {\n      result.push(match[1]);\n    }\n    return result.filter(function (url) {\n      return !(0, _domUtils.isDataUrl)(url);\n    });\n  }\n  function urlAsRegex(url0) {\n    return new RegExp(\"(url\\\\(['\\\"]?)(\".concat((0, _domUtils.escape)(url0), \")(['\\\"]?\\\\))\"), 'g');\n  }\n  function inline(string, url, baseUrl, get) {\n    return Promise.resolve(url).then(function (ul) {\n      return baseUrl ? (0, _domUtils.resolveUrl)(ul, baseUrl) : ul;\n    }).then(function (ul) {\n      return typeof get === 'function' ? get(ul) : (0, _domUtils.getAndEncode)(ul, domtoimage.impl.options);\n    }).then(function (data) {\n      return (0, _domUtils.dataAsUrl)(data, (0, _domUtils.mimeType)(url));\n    }).then(function (dataUrl) {\n      return string.replace(urlAsRegex(url), \"$1\".concat(dataUrl, \"$3\"));\n    });\n  }\n  function inlineAll(string, baseUrl, get) {\n    if (!shouldProcess(string) || (0, _domUtils.isSrcAsDataUrl)(string)) {\n      return Promise.resolve(string);\n    }\n    return Promise.resolve(string).then(readUrls).then(function (urls) {\n      var done = Promise.resolve(string);\n      urls.forEach(function (url) {\n        done = done.then(function (str) {\n          return inline(str, url, baseUrl, get);\n        });\n      });\n      return done;\n    });\n  }\n}\nfunction newFontFaces() {\n  return {\n    resolveAll: resolveAll,\n    impl: {\n      readAll: readAll\n    }\n  };\n  function resolveAll() {\n    return readAll().then(function (webFonts) {\n      return Promise.all(webFonts.map(function (webFont) {\n        return webFont.resolve();\n      }));\n    }).then(function (cssStrings) {\n      return cssStrings.join('\\n');\n    });\n  }\n  function readAll() {\n    return Promise.resolve((0, _domUtils.asArray)(_document[\"default\"].styleSheets)).then(loadExternalStyleSheets).then(getCssRules).then(selectWebFontRules).then(function (rules) {\n      return rules.map(newWebFont);\n    });\n    function selectWebFontRules(cssRules) {\n      return cssRules.filter(function (rule) {\n        return rule.type === _window[\"default\"].CSSRule.FONT_FACE_RULE;\n      }).filter(function (rule) {\n        return inliner.shouldProcess(rule.style.getPropertyValue('src'));\n      });\n    }\n    function loadExternalStyleSheets(styleSheets) {\n      return Promise.all(styleSheets.map(function (sheet) {\n        if (sheet.href) {\n          // cloudfont doesn't have allow origin header properly set\n          // error response will remain in cache\n          var cache = sheet.href.includes('uber-fonts') ? 'no-cache' : 'default';\n          return _window[\"default\"].fetch(sheet.href, {\n            credentials: 'omit',\n            cache: cache\n          }).then(function (response) {\n            return response.text();\n          }).then(setBaseHref(sheet.href)).then(toStyleSheet)[\"catch\"](function (err) {\n            // Handle any error that occurred in any of the previous\n            // promises in the chain. stylesheet failed to load should not stop\n            // the process, hence result in only a warning, instead of reject\n            _console[\"default\"].warn(_userFeedbacks.IMAGE_EXPORT_ERRORS.styleSheet, sheet.href);\n            _console[\"default\"].log(err);\n            return;\n          });\n        }\n        return Promise.resolve(sheet);\n      }));\n      function setBaseHref(base) {\n        base = base.split('/');\n        base.pop();\n        base = base.join('/');\n        function addBaseHrefToUrl(match, p1) {\n          var url = /^http/i.test(p1) ? p1 : concatAndResolveUrl(base, p1);\n          return \"url('\".concat(url, \"')\");\n        } // Source: http://stackoverflow.com/a/2676231/3786856\n\n        function concatAndResolveUrl(url, concat) {\n          var url1 = url.split('/');\n          var url2 = concat.split('/');\n          var url3 = [];\n          for (var i = 0, l = url1.length; i < l; i++) {\n            if (url1[i] === '..') {\n              url3.pop();\n            } else if (url1[i] !== '.') {\n              url3.push(url1[i]);\n            }\n          }\n          for (var _i = 0, _l = url2.length; _i < _l; _i++) {\n            if (url2[_i] === '..') {\n              url3.pop();\n            } else if (url2[_i] !== '.') {\n              url3.push(url2[_i]);\n            }\n          }\n          return url3.join('/');\n        }\n        return function (text) {\n          return (0, _domUtils.isSrcAsDataUrl)(text) ? text : text.replace(/url\\(['\"]?([^'\"]+?)['\"]?\\)/g, addBaseHrefToUrl);\n        };\n      }\n      function toStyleSheet(text) {\n        var doc = _document[\"default\"].implementation.createHTMLDocument('');\n        var styleElement = _document[\"default\"].createElement('style');\n        styleElement.textContent = text;\n        doc.body.appendChild(styleElement);\n        return styleElement.sheet;\n      }\n    }\n    function getCssRules(styleSheets) {\n      var cssRules = [];\n      styleSheets.forEach(function (sheet) {\n        // try...catch because browser may not able to enumerate rules for cross-domain sheets\n        if (!sheet) {\n          return;\n        }\n        var rules;\n        try {\n          rules = sheet.rules || sheet.cssRules;\n        } catch (e) {\n          _console[\"default\"].log(\"'Can't read the css rules of: \".concat(sheet.href), e);\n          return;\n        }\n        if (rules && (0, _typeof2[\"default\"])(rules) === 'object') {\n          try {\n            (0, _domUtils.asArray)(rules || []).forEach(cssRules.push.bind(cssRules));\n          } catch (e) {\n            _console[\"default\"].log(\"Error while reading CSS rules from \".concat(sheet.href), e);\n            return;\n          }\n        } else {\n          _console[\"default\"].log('getCssRules can not find cssRules');\n          return;\n        }\n      });\n      return cssRules;\n    }\n    function newWebFont(webFontRule) {\n      return {\n        resolve: function resolve() {\n          var baseUrl = (webFontRule.parentStyleSheet || {}).href;\n          return inliner.inlineAll(webFontRule.cssText, baseUrl);\n        },\n        src: function src() {\n          return webFontRule.style.getPropertyValue('src');\n        }\n      };\n    }\n  }\n}\nfunction newImages() {\n  return {\n    inlineAll: inlineAll,\n    impl: {\n      newImage: newImage\n    }\n  };\n  function newImage(element) {\n    function inline(get) {\n      if ((0, _domUtils.isDataUrl)(element.src)) {\n        return Promise.resolve();\n      }\n      return Promise.resolve(element.src).then(function (ul) {\n        return typeof get === 'function' ? get(ul) : (0, _domUtils.getAndEncode)(ul, domtoimage.impl.options);\n      }).then(function (data) {\n        return (0, _domUtils.dataAsUrl)(data, (0, _domUtils.mimeType)(element.src));\n      }).then(function (dataUrl) {\n        return new Promise(function (resolve, reject) {\n          element.onload = resolve;\n          element.onerror = reject;\n          element.src = dataUrl;\n        });\n      });\n    }\n    return {\n      inline: inline\n    };\n  }\n  function inlineAll(node) {\n    if (!(node instanceof Element)) {\n      return Promise.resolve(node);\n    }\n    return inlineBackground(node).then(function () {\n      if (node instanceof HTMLImageElement) {\n        return newImage(node).inline();\n      }\n      return Promise.all((0, _domUtils.asArray)(node.childNodes).map(function (child) {\n        return inlineAll(child);\n      }));\n    });\n    function inlineBackground(nd) {\n      var background = nd.style.getPropertyValue('background');\n      if (!background) {\n        return Promise.resolve(nd);\n      }\n      return inliner.inlineAll(background).then(function (inlined) {\n        nd.style.setProperty('background', inlined, nd.style.getPropertyPriority('background'));\n      }).then(function () {\n        return nd;\n      });\n    }\n  }\n}\nvar _default = domtoimage;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../src/utils/dom-to-image.js"],"names":["inliner","newInliner","fontFaces","newFontFaces","images","newImages","defaultOptions","imagePlaceholder","undefined","cacheBust","domtoimage","toSvg","toPng","toJpeg","toBlob","toPixelData","impl","options","node","copyOptions","resolve","then","cloneNode","nd","filter","embedFonts","inlineImages","applyOptions","makeSvgDataUri","clone","width","height","bgcolor","style","backgroundColor","keys","forEach","property","canvas","getContext","getImageData","data","toDataURL","quality","draw","canvasToBlob","domNode","makeImage","newCanvas","drawImage","image","dNode","document","createElement","ctx","fillStyle","fillRect","root","Promise","makeNodeCopy","cloneChildren","window","HTMLCanvasElement","cloneChildrenInOrder","parent","arrChildren","flt","done","child","childClone","appendChild","original","children","childNodes","length","resolveAll","styleNode","createTextNode","cssText","inlineAll","setAttribute","serializedString","XMLSerializer","serializeToString","xhtml","foreignObject","svgStr","URL_REGEX","shouldProcess","readUrls","inline","string","search","result","match","exec","push","url","urlAsRegex","url0","RegExp","baseUrl","get","ul","replace","dataUrl","urls","str","readAll","all","map","webFont","cssStrings","join","styleSheets","loadExternalStyleSheets","getCssRules","selectWebFontRules","rules","newWebFont","cssRules","rule","type","CSSRule","FONT_FACE_RULE","getPropertyValue","sheet","href","cache","includes","fetch","credentials","response","text","setBaseHref","toStyleSheet","console","warn","IMAGE_EXPORT_ERRORS","styleSheet","log","err","base","split","pop","addBaseHrefToUrl","p1","test","concatAndResolveUrl","concat","url1","url2","url3","i","l","doc","implementation","createHTMLDocument","styleElement","textContent","body","e","bind","webFontRule","parentStyleSheet","src","newImage","element","reject","onload","onerror","Element","HTMLImageElement","inlineBackground","background","setProperty","inlined","getPropertyPriority"],"mappings":";;;;;;;;AAyBA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,eAAA,CAAA,CAAA;AACA,IAAA,SAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,iBAAA,CAAA,CAAA;AACA,IAAA,QAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;AACA,IAAA,eAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,6BAAA,CAAA;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AA9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAyBA,IAAMA,OAAO,GAAGC,UAAU,EAA1B;AACA,IAAMC,SAAS,GAAGC,YAAY,EAA9B;AACA,IAAMC,MAAM,GAAGC,SAAS,EAAxB,C,CACA;;AACA,IAAMC,cAAc,GAAG;EACrB;EACAC,gBAAgB,EAAEC,SAFG;EAGrB;EACAC,SAAS,EAAE;AAJU,CAAvB;AAOA,IAAMC,UAAU,GAAG;EACjBC,KAAK,EAALA,KADiB;EAEjBC,KAAK,EAALA,KAFiB;EAGjBC,MAAM,EAANA,MAHiB;EAIjBC,MAAM,EAANA,MAJiB;EAKjBC,WAAW,EAAXA,WALiB;EAMjBC,IAAI,EAAE;IACJd,SAAS,EAATA,SADI;IAEJE,MAAM,EAANA,MAFI;IAGJJ,OAAO,EAAPA,OAHI;IAIJiB,OAAO,EAAE,CAAA;EAJL;AANW,CAAnB;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASN,KAAT,CAAeO,IAAf,EAAqBD,OAArB,EAA8B;EAC5BA,OAAO,GAAGA,OAAO,IAAI,CAAA,CAArBA;EACAE,WAAW,CAACF,OAAD,CAAXE;EACA,OAAO,OAAO,CAACC,OAAR,CAAgBF,IAAhB,CAAA,CACJG,IADI,CACC,UAAA,EAAE,EAAA;IAAA,OAAIC,SAAS,CAACC,EAAD,EAAKN,OAAO,CAACO,MAAb,EAAqB,IAArB,CAAb;EAAA,CADH,CAAA,CAEJH,IAFI,CAECI,UAFD,CAAA,CAGJJ,IAHI,CAGCK,YAHD,CAAA,CAIJL,IAJI,CAICM,YAJD,CAAA,CAKJN,IALI,CAKC,UAAA,KAAK,EAAA;IAAA,OACTO,cAAc,CAACC,KAAD,EAAQZ,OAAO,CAACa,KAARb,IAAiB,CAAA,CAAA,EAAA,SAAA,CAAA,QAAA,EAASC,IAAT,CAAzB,EAAyCD,OAAO,CAACc,MAARd,IAAkB,CAAA,CAAA,EAAA,SAAA,CAAA,SAAA,EAAUC,IAAV,CAA3D,CADL;EAAA,CALN,CAAP;EASA,SAASS,YAAT,CAAsBE,KAAtB,EAA6B;IAC3B,IAAIZ,OAAO,CAACe,OAAZ,EAAqBH,KAAK,CAACI,KAANJ,CAAYK,eAAZL,GAA8BZ,OAAO,CAACe,OAAtCH;IAErB,IAAIZ,OAAO,CAACa,KAAZ,EAAmBD,KAAK,CAACI,KAANJ,CAAYC,KAAZD,GAAAA,EAAAA,CAAAA,MAAAA,CAAuBZ,OAAO,CAACa,KAA/BD,EAAAA,IAAAA,CAAAA;IACnB,IAAIZ,OAAO,CAACc,MAAZ,EAAoBF,KAAK,CAACI,KAANJ,CAAYE,MAAZF,GAAAA,EAAAA,CAAAA,MAAAA,CAAwBZ,OAAO,CAACc,MAAhCF,EAAAA,IAAAA,CAAAA;IAEpB,IAAIZ,OAAO,CAACgB,KAAZ,EACE,MAAM,CAACE,IAAP,CAAYlB,OAAO,CAACgB,KAApB,CAAA,CAA2BG,OAA3B,CAAmC,UAAA,QAAQ,EAAI;MAC7CP,KAAK,CAACI,KAANJ,CAAYQ,QAAZR,CAAAA,GAAwBZ,OAAO,CAACgB,KAARhB,CAAcoB,QAAdpB,CAAxBY;IACD,CAFD,CAAA;IAIF,OAAOA,KAAP;EACD;AACF;AAED;AACA;AACA;AACA;AACA;;AACA,SAASd,WAAT,CAAqBG,IAArB,EAA2BD,OAA3B,EAAoC;EAClC,OAAO,IAAI,CAACC,IAAD,EAAOD,OAAO,IAAI,CAAA,CAAlB,CAAJ,CAA0BI,IAA1B,CACL,UAAA,MAAM,EAAA;IAAA,OAAIiB,MAAM,CAACC,UAAPD,CAAkB,IAAlBA,CAAAA,CAAwBE,YAAxBF,CAAqC,CAArCA,EAAwC,CAAxCA,EAA2C,CAAA,CAAA,EAAA,SAAA,CAAA,QAAA,EAASpB,IAAT,CAA3CoB,EAA2D,CAAA,CAAA,EAAA,SAAA,CAAA,SAAA,EAAUpB,IAAV,CAA3DoB,CAAAA,CAA4EG,IAAhF;EAAA,CADD,CAAP;AAGD;AAED;AACA;AACA;AACA;AACA;;AACA,SAAS7B,KAAT,CAAeM,IAAf,EAAqBD,OAArB,EAA8B;EAC5B,OAAO,IAAI,CAACC,IAAD,EAAOD,OAAO,IAAI,CAAA,CAAlB,CAAJ,CAA0BI,IAA1B,CAA+B,UAAA,MAAM,EAAA;IAAA,OAAIiB,MAAM,CAACI,SAAPJ,EAAJ;EAAA,CAArC,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;;AACA,SAASzB,MAAT,CAAgBK,IAAhB,EAAsBD,OAAtB,EAA+B;EAC7BA,OAAO,GAAGA,OAAO,IAAI,CAAA,CAArBA;EACA,OAAO,IAAI,CAACC,IAAD,EAAOD,OAAP,CAAJ,CAAoBI,IAApB,CAAyB,UAAA,MAAM,EAAA;IAAA,OAAIiB,MAAM,CAACI,SAAPJ,CAAiB,YAAjBA,EAA+BrB,OAAO,CAAC0B,OAAR1B,IAAmB,GAAlDqB,CAAJ;EAAA,CAA/B,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;;AACA,SAASxB,MAAT,CAAgBI,IAAhB,EAAsBD,OAAtB,EAA+B;EAC7B,OAAO2B,IAAI,CAAC1B,IAAD,EAAOD,OAAO,IAAI,CAAA,CAAlB,CAAJ2B,CAA0BvB,IAA1BuB,CAA+BC,SAAAA,CAAAA,YAA/BD,CAAP;AACD;AAED,SAASzB,WAAT,CAAqBF,OAArB,EAA8B;EAC5B;EACA,IAAI,OAAOA,OAAO,CAACV,gBAAf,KAAoC,WAAxC,EAAqD;IACnDG,UAAU,CAACM,IAAXN,CAAgBO,OAAhBP,CAAwBH,gBAAxBG,GAA2CJ,cAAc,CAACC,gBAA1DG;EACD,CAFD,MAEO;IACLA,UAAU,CAACM,IAAXN,CAAgBO,OAAhBP,CAAwBH,gBAAxBG,GAA2CO,OAAO,CAACV,gBAAnDG;EACD;EAED,IAAI,OAAOO,OAAO,CAACR,SAAf,KAA6B,WAAjC,EAA8C;IAC5CC,UAAU,CAACM,IAAXN,CAAgBO,OAAhBP,CAAwBD,SAAxBC,GAAoCJ,cAAc,CAACG,SAAnDC;EACD,CAFD,MAEO;IACLA,UAAU,CAACM,IAAXN,CAAgBO,OAAhBP,CAAwBD,SAAxBC,GAAoCO,OAAO,CAACR,SAA5CC;EACD;AACF;AAED,SAASkC,IAAT,CAAcE,OAAd,EAAuB7B,OAAvB,EAAgC;EAC9B,OAAO,KAAK,CAAC6B,OAAD,EAAU7B,OAAV,CAAL,CACJI,IADI,CACC0B,SAAAA,CAAAA,SADD,CAAA,CAEJ1B,IAFI,CAEC,CAAA,CAAA,EAAA,SAAA,CAAA,KAAA,EAAM,GAAN,CAFD,CAAA,CAGJA,IAHI,CAGC,UAAA,KAAK,EAAI;IACb,IAAMiB,MAAM,GAAGU,SAAS,CAACF,OAAD,CAAxB;IACAR,MAAM,CAACC,UAAPD,CAAkB,IAAlBA,CAAAA,CAAwBW,SAAxBX,CAAkCY,KAAlCZ,EAAyC,CAAzCA,EAA4C,CAA5CA,CAAAA;IACA,OAAOA,MAAP;EACD,CAPI,CAAP;EASA,SAASU,SAAT,CAAmBG,KAAnB,EAA0B;IACxB,IAAMb,MAAM,GAAGc,SAAAA,CAAAA,SAAAA,CAAAA,CAASC,aAATD,CAAuB,QAAvBA,CAAf;IACAd,MAAM,CAACR,KAAPQ,GAAerB,OAAO,CAACa,KAARb,IAAiB,CAAA,CAAA,EAAA,SAAA,CAAA,QAAA,EAASkC,KAAT,CAAhCb;IACAA,MAAM,CAACP,MAAPO,GAAgBrB,OAAO,CAACc,MAARd,IAAkB,CAAA,CAAA,EAAA,SAAA,CAAA,SAAA,EAAUkC,KAAV,CAAlCb;IAEA,IAAIrB,OAAO,CAACe,OAAZ,EAAqB;MACnB,IAAMsB,GAAG,GAAGhB,MAAM,CAACC,UAAPD,CAAkB,IAAlBA,CAAZ;MACAgB,GAAG,CAACC,SAAJD,GAAgBrC,OAAO,CAACe,OAAxBsB;MACAA,GAAG,CAACE,QAAJF,CAAa,CAAbA,EAAgB,CAAhBA,EAAmBhB,MAAM,CAACR,KAA1BwB,EAAiChB,MAAM,CAACP,MAAxCuB,CAAAA;IACD;IAED,OAAOhB,MAAP;EACD;AACF;AAED,SAAShB,SAAT,CAAmBJ,IAAnB,EAAyBM,MAAzB,EAAiCiC,IAAjC,EAAuC;EACrC,IAAI,CAACA,IAAD,IAASjC,MAAT,IAAmB,CAACA,MAAM,CAACN,IAAD,CAA9B,EAAsC;IACpC,OAAOwC,OAAO,CAACtC,OAARsC,EAAP;EACD;EAED,OAAO,OAAO,CAACtC,OAAR,CAAgBF,IAAhB,CAAA,CACJG,IADI,CACCsC,YADD,CAAA,CAEJtC,IAFI,CAEC,UAAA,KAAK,EAAA;IAAA,OAAIuC,aAAa,CAAC1C,IAAD,EAAOW,KAAP,EAAcL,MAAd,CAAjB;EAAA,CAFN,CAAA,CAGJH,IAHI,CAGC,UAAA,KAAK,EAAA;IAAA,OAAI,CAAA,CAAA,EAAA,SAAA,CAAA,YAAA,EAAaH,IAAb,EAAmBW,KAAnB,CAAJ;EAAA,CAHN,CAAP;EAKA,SAAS8B,YAAT,CAAsBpC,EAAtB,EAA0B;IACxB,IAAIA,EAAE,YAAYsC,OAAAA,CAAAA,SAAAA,CAAAA,CAAOC,iBAAzB,EAA4C;MAC1C,OAAO,CAAA,CAAA,EAAA,SAAA,CAAA,SAAA,EAAUvC,EAAE,CAACmB,SAAHnB,EAAV,CAAP;IACD;IACD,OAAOA,EAAE,CAACD,SAAHC,CAAa,KAAbA,CAAP;EACD;EAED,SAASwC,oBAAT,CAA8BC,MAA9B,EAAsCC,WAAtC,EAAmDC,GAAnD,EAAwD;IACtD,IAAIC,IAAI,GAAGT,OAAO,CAACtC,OAARsC,EAAX;IACAO,WAAW,CAAC7B,OAAZ6B,CAAoB,UAAA,KAAK,EAAI;MAC3BE,IAAI,GAAG,IAAI,CACR9C,IADI,CACC,YAAA;QAAA,OAAMC,SAAS,CAAC8C,KAAD,EAAQF,GAAR,CAAf;MAAA,CADD,CAAA,CAEJ7C,IAFI,CAEC,UAAA,UAAU,EAAI;QAClB,IAAIgD,UAAJ,EAAgB;UACdL,MAAM,CAACM,WAAPN,CAAmBK,UAAnBL,CAAAA;QACD;MACF,CANI,CAAPG;IAOD,CARDF,CAAAA;IASA,OAAOE,IAAP;EACD;EAED,SAASP,aAAT,CAAuBW,QAAvB,EAAiC1C,KAAjC,EAAwCqC,GAAxC,EAA6C;IAC3C,IAAMM,QAAQ,GAAGD,QAAQ,CAACE,UAA1B;IACA,IAAID,QAAQ,CAACE,MAATF,KAAoB,CAAxB,EAA2B;MACzB,OAAOd,OAAO,CAACtC,OAARsC,CAAgB7B,KAAhB6B,CAAP;IACD;IAED,OAAO,oBAAoB,CAAC7B,KAAD,EAAQ,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAQ2C,QAAR,CAAR,EAA2BN,GAA3B,CAApB,CAAoD7C,IAApD,CAAyD,YAAA;MAAA,OAAMQ,KAAN;IAAA,CAAzD,CAAP;EACD;AACF;AAED,SAASJ,UAAT,CAAoBP,IAApB,EAA0B;EACxB,OAAO,SAAS,CAACyD,UAAV,EAAA,CAAuBtD,IAAvB,CAA4B,UAAA,OAAO,EAAI;IAC5C,IAAMuD,SAAS,GAAGxB,SAAAA,CAAAA,SAAAA,CAAAA,CAASC,aAATD,CAAuB,OAAvBA,CAAlB;IACAlC,IAAI,CAACoD,WAALpD,CAAiB0D,SAAjB1D,CAAAA;IACA0D,SAAS,CAACN,WAAVM,CAAsBxB,SAAAA,CAAAA,SAAAA,CAAAA,CAASyB,cAATzB,CAAwB0B,OAAxB1B,CAAtBwB,CAAAA;IACA,OAAO1D,IAAP;EACD,CALM,CAAP;AAMD;AAED,SAASQ,YAAT,CAAsBR,IAAtB,EAA4B;EAC1B,OAAO,MAAM,CAAC6D,SAAP,CAAiB7D,IAAjB,CAAA,CAAuBG,IAAvB,CAA4B,YAAA;IAAA,OAAMH,IAAN;EAAA,CAA5B,CAAP;AACD;AAED,SAASU,cAAT,CAAwBV,IAAxB,EAA8BY,KAA9B,EAAqCC,MAArC,EAA6C;EAC3C,OAAO,OAAO,CAACX,OAAR,CAAgBF,IAAhB,CAAA,CAAsBG,IAAtB,CAA2B,UAAA,EAAE,EAAI;IACtCE,EAAE,CAACyD,YAAHzD,CAAgB,OAAhBA,EAAyB,8BAAzBA,CAAAA;IACA,IAAM0D,gBAAgB,GAAG,IAAIpB,OAAAA,CAAAA,SAAAA,CAAAA,CAAOqB,aAAX,EAAA,CAA2BC,iBAA3B,CAA6C5D,EAA7C,CAAzB;IAEA,IAAM6D,KAAK,GAAG,CAAA,CAAA,EAAA,SAAA,CAAA,WAAA,EAAYH,gBAAZ,CAAd;IACA,IAAMI,aAAa,GAAA,gEAAA,CAAA,MAAA,CAA4DD,KAA5D,EAAA,kBAAA,CAAnB;IACA,IAAME,MAAM,GAAA,oDAAA,CAAA,MAAA,CAAqDxD,KAArD,EAAA,cAAA,CAAA,CAAA,MAAA,CAAuEC,MAAvE,EAAA,KAAA,CAAA,CAAA,MAAA,CAAkFsD,aAAlF,EAAA,QAAA,CAAZ,CANsC,CAQtC;IACA;IACA;IACA;;IACA,OAAO,CAAA,CAAA,EAAA,eAAA,CAAA,SAAA,CAAA,EAAiBC,MAAjB,CAAP;EACD,CAbM,CAAP;AAcD;AAED,SAASrF,UAAT,GAAsB;EACpB,IAAMsF,SAAS,GAAG,6BAAlB;EAEA,OAAO;IACLR,SAAS,EAATA,SADK;IAELS,aAAa,EAAbA,aAFK;IAGLxE,IAAI,EAAE;MACJyE,QAAQ,EAARA,QADI;MAEJC,MAAM,EAANA;IAFI;EAHD,CAAP;EASA,SAASF,aAAT,CAAuBG,MAAvB,EAA+B;IAC7B,OAAOA,MAAM,CAACC,MAAPD,CAAcJ,SAAdI,CAAAA,KAA6B,CAAC,CAArC;EACD;EAED,SAASF,QAAT,CAAkBE,MAAlB,EAA0B;IACxB,IAAME,MAAM,GAAG,EAAf;IACA,IAAIC,KAAJ;IACA,OAAO,CAACA,KAAK,GAAGP,SAAS,CAACQ,IAAVR,CAAeI,MAAfJ,CAAT,MAAqC,IAA5C,EAAkD;MAChDM,MAAM,CAACG,IAAPH,CAAYC,KAAK,CAAC,CAAD,CAAjBD,CAAAA;IACD;IACD,OAAO,MAAM,CAACrE,MAAP,CAAc,UAAA,GAAG,EAAI;MAC1B,OAAO,CAAC,CAAA,CAAA,EAAA,SAAA,CAAA,SAAA,EAAUyE,GAAV,CAAR;IACD,CAFM,CAAP;EAGD;EAED,SAASC,UAAT,CAAoBC,IAApB,EAA0B;IACxB,OAAO,IAAIC,MAAJ,CAAA,iBAAA,CAAA,MAAA,CAA6B,CAAA,CAAA,EAAA,SAAA,CAAA,MAAA,EAAOD,IAAP,CAA7B,EAAA,cAAA,CAAA,EAAyD,GAAzD,CAAP;EACD;EAED,SAAST,MAAT,CAAgBC,MAAhB,EAAwBM,GAAxB,EAA6BI,OAA7B,EAAsCC,GAAtC,EAA2C;IACzC,OAAO,OAAO,CAAClF,OAAR,CAAgB6E,GAAhB,CAAA,CACJ5E,IADI,CACC,UAAA,EAAE,EAAA;MAAA,OAAKgF,OAAO,GAAG,CAAA,CAAA,EAAA,SAAA,CAAA,UAAA,EAAWE,EAAX,EAAeF,OAAf,CAAH,GAA6BE,EAAzC;IAAA,CADH,CAAA,CAEJlF,IAFI,CAEC,UAAA,EAAE,EAAA;MAAA,OAAK,OAAOiF,GAAP,KAAe,UAAf,GAA4BA,GAAG,CAACC,EAAD,CAA/B,GAAsC,CAAA,CAAA,EAAA,SAAA,CAAA,YAAA,EAAaA,EAAb,EAAiB7F,UAAU,CAACM,IAAXN,CAAgBO,OAAjC,CAA3C;IAAA,CAFH,CAAA,CAGJI,IAHI,CAGC,UAAA,IAAI,EAAA;MAAA,OAAI,CAAA,CAAA,EAAA,SAAA,CAAA,SAAA,EAAUoB,IAAV,EAAgB,CAAA,CAAA,EAAA,SAAA,CAAA,QAAA,EAASwD,GAAT,CAAhB,CAAJ;IAAA,CAHL,CAAA,CAIJ5E,IAJI,CAIC,UAAA,OAAO,EAAA;MAAA,OAAIsE,MAAM,CAACa,OAAPb,CAAeO,UAAU,CAACD,GAAD,CAAzBN,EAAAA,IAAAA,CAAAA,MAAAA,CAAqCc,OAArCd,EAAAA,IAAAA,CAAAA,CAAJ;IAAA,CAJR,CAAP;EAKD;EAED,SAASZ,SAAT,CAAmBY,MAAnB,EAA2BU,OAA3B,EAAoCC,GAApC,EAAyC;IACvC,IAAI,CAACd,aAAa,CAACG,MAAD,CAAd,IAA0B,CAAA,CAAA,EAAA,SAAA,CAAA,cAAA,EAAeA,MAAf,CAA9B,EAAsD;MACpD,OAAOjC,OAAO,CAACtC,OAARsC,CAAgBiC,MAAhBjC,CAAP;IACD;IACD,OAAO,OAAO,CAACtC,OAAR,CAAgBuE,MAAhB,CAAA,CACJtE,IADI,CACCoE,QADD,CAAA,CAEJpE,IAFI,CAEC,UAAA,IAAI,EAAI;MACZ,IAAI8C,IAAI,GAAGT,OAAO,CAACtC,OAARsC,CAAgBiC,MAAhBjC,CAAX;MACAgD,IAAI,CAACtE,OAALsE,CAAa,UAAA,GAAG,EAAI;QAClBvC,IAAI,GAAG,IAAI,CAAC9C,IAAL,CAAU,UAAA,GAAG,EAAA;UAAA,OAAIqE,MAAM,CAACiB,GAAD,EAAMV,GAAN,EAAWI,OAAX,EAAoBC,GAApB,CAAV;QAAA,CAAb,CAAPnC;MACD,CAFDuC,CAAAA;MAGA,OAAOvC,IAAP;IACD,CARI,CAAP;EASD;AACF;AAED,SAAShE,YAAT,GAAwB;EACtB,OAAO;IACLwE,UAAU,EAAVA,UADK;IAEL3D,IAAI,EAAE;MAAC4F,OAAO,EAAPA;IAAD;EAFD,CAAP;EAKA,SAASjC,UAAT,GAAsB;IACpB,OAAO,OAAO,EAAA,CACXtD,IADI,CACC,UAAA,QAAQ,EAAI;MAChB,OAAO,OAAO,CAACwF,GAAR,CAAY,QAAQ,CAACC,GAAT,CAAa,UAAA,OAAO,EAAA;QAAA,OAAIC,OAAO,CAAC3F,OAAR2F,EAAJ;MAAA,CAApB,CAAZ,CAAP;IACD,CAHI,CAAA,CAIJ1F,IAJI,CAIC,UAAA,UAAU,EAAA;MAAA,OAAI2F,UAAU,CAACC,IAAXD,CAAgB,IAAhBA,CAAJ;IAAA,CAJX,CAAP;EAKD;EAED,SAASJ,OAAT,GAAmB;IACjB,OAAO,OAAO,CAACxF,OAAR,CAAgB,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAQgC,SAAAA,CAAAA,SAAAA,CAAAA,CAAS8D,WAAjB,CAAhB,CAAA,CACJ7F,IADI,CACC8F,uBADD,CAAA,CAEJ9F,IAFI,CAEC+F,WAFD,CAAA,CAGJ/F,IAHI,CAGCgG,kBAHD,CAAA,CAIJhG,IAJI,CAIC,UAAA,KAAK,EAAA;MAAA,OAAIiG,KAAK,CAACR,GAANQ,CAAUC,UAAVD,CAAJ;IAAA,CAJN,CAAP;IAMA,SAASD,kBAAT,CAA4BG,QAA5B,EAAsC;MACpC,OAAO,QAAQ,CACZhG,MADI,CACG,UAAA,IAAI,EAAA;QAAA,OAAIiG,IAAI,CAACC,IAALD,KAAc5D,OAAAA,CAAAA,SAAAA,CAAAA,CAAO8D,OAAP9D,CAAe+D,cAAjC;MAAA,CADP,CAAA,CAEJpG,MAFI,CAEG,UAAA,IAAI,EAAA;QAAA,OAAIxB,OAAO,CAACwF,aAARxF,CAAsByH,IAAI,CAACxF,KAALwF,CAAWI,gBAAXJ,CAA4B,KAA5BA,CAAtBzH,CAAJ;MAAA,CAFP,CAAP;IAGD;IAED,SAASmH,uBAAT,CAAiCD,WAAjC,EAA8C;MAC5C,OAAO,OAAO,CAACL,GAAR,CACL,WAAW,CAACC,GAAZ,CAAgB,UAAA,KAAK,EAAI;QACvB,IAAIgB,KAAK,CAACC,IAAV,EAAgB;UACd;UACA;UACA,IAAMC,KAAK,GAAGF,KAAK,CAACC,IAAND,CAAWG,QAAXH,CAAoB,YAApBA,CAAAA,GAAoC,UAApCA,GAAiD,SAA/D;UACA,OAAO,OAAA,CAAA,SAAA,CAAA,CACJI,KADI,CACEJ,KAAK,CAACC,IADR,EACc;YAACI,WAAW,EAAE,MAAd;YAAsBH,KAAK,EAALA;UAAtB,CADd,CAAA,CAEJ3G,IAFI,CAEC,UAAA,QAAQ,EAAA;YAAA,OAAI+G,QAAQ,CAACC,IAATD,EAAJ;UAAA,CAFT,CAAA,CAGJ/G,IAHI,CAGCiH,WAAW,CAACR,KAAK,CAACC,IAAP,CAHZ,CAAA,CAIJ1G,IAJI,CAICkH,YAJD,CAAA,CAAA,OAAA,CAAA,CAKE,UAAA,GAAG,EAAI;YACZ;YACA;YACA;YACAC,QAAAA,CAAAA,SAAAA,CAAAA,CAAQC,IAARD,CAAaE,cAAAA,CAAAA,mBAAAA,CAAoBC,UAAjCH,EAA6CV,KAAK,CAACC,IAAnDS,CAAAA;YACAA,QAAAA,CAAAA,SAAAA,CAAAA,CAAQI,GAARJ,CAAYK,GAAZL,CAAAA;YACA;UACD,CAZI,CAAP;QAaD;QACD,OAAO9E,OAAO,CAACtC,OAARsC,CAAgBoE,KAAhBpE,CAAP;MACD,CApBD,CADK,CAAP;MAwBA,SAAS4E,WAAT,CAAqBQ,IAArB,EAA2B;QACzBA,IAAI,GAAGA,IAAI,CAACC,KAALD,CAAW,GAAXA,CAAPA;QACAA,IAAI,CAACE,GAALF,EAAAA;QACAA,IAAI,GAAGA,IAAI,CAAC7B,IAAL6B,CAAU,GAAVA,CAAPA;QAEA,SAASG,gBAAT,CAA0BnD,KAA1B,EAAiCoD,EAAjC,EAAqC;UACnC,IAAMjD,GAAG,GAAG,QAAA,CAASkD,IAAT,CAAcD,EAAd,CAAA,GAAoBA,EAApB,GAAyBE,mBAAmB,CAACN,IAAD,EAAOI,EAAP,CAAxD;UACA,OAAA,OAAA,CAAA,MAAA,CAAejD,GAAf,EAAA,IAAA,CAAA;QACD,CARwB,CAUzB;;QACA,SAASmD,mBAAT,CAA6BnD,GAA7B,EAAkCoD,MAAlC,EAA0C;UACxC,IAAMC,IAAI,GAAGrD,GAAG,CAAC8C,KAAJ9C,CAAU,GAAVA,CAAb;UACA,IAAMsD,IAAI,GAAGF,MAAM,CAACN,KAAPM,CAAa,GAAbA,CAAb;UACA,IAAMG,IAAI,GAAG,EAAb;UACA,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGJ,IAAI,CAAC5E,MAAzB,EAAiC+E,CAAC,GAAGC,CAArC,EAAwCD,CAAC,EAAzC,EAA6C;YAC3C,IAAIH,IAAI,CAACG,CAAD,CAAJH,KAAY,IAAhB,EAAsB;cACpBE,IAAI,CAACR,GAALQ,EAAAA;YACD,CAFD,MAEO,IAAIF,IAAI,CAACG,CAAD,CAAJH,KAAY,GAAhB,EAAqB;cAC1BE,IAAI,CAACxD,IAALwD,CAAUF,IAAI,CAACG,CAAD,CAAdD,CAAAA;YACD;UACF;UACD,KAAK,IAAIC,EAAC,GAAG,CAAR,EAAWC,EAAC,GAAGH,IAAI,CAAC7E,MAAzB,EAAiC+E,EAAC,GAAGC,EAArC,EAAwCD,EAAC,EAAzC,EAA6C;YAC3C,IAAIF,IAAI,CAACE,EAAD,CAAJF,KAAY,IAAhB,EAAsB;cACpBC,IAAI,CAACR,GAALQ,EAAAA;YACD,CAFD,MAEO,IAAID,IAAI,CAACE,EAAD,CAAJF,KAAY,GAAhB,EAAqB;cAC1BC,IAAI,CAACxD,IAALwD,CAAUD,IAAI,CAACE,EAAD,CAAdD,CAAAA;YACD;UACF;UACD,OAAOA,IAAI,CAACvC,IAALuC,CAAU,GAAVA,CAAP;QACD;QAED,OAAO,UAAA,IAAI,EAAI;UACb,OAAO,CAAA,CAAA,EAAA,SAAA,CAAA,cAAA,EAAenB,IAAf,CAAA,GACHA,IADG,GAEHA,IAAI,CAAC7B,OAAL6B,CAAa,6BAAbA,EAA4CY,gBAA5CZ,CAFJ;QAGD,CAJD;MAKD;MAED,SAASE,YAAT,CAAsBF,IAAtB,EAA4B;QAC1B,IAAMsB,GAAG,GAAGvG,SAAAA,CAAAA,SAAAA,CAAAA,CAASwG,cAATxG,CAAwByG,kBAAxBzG,CAA2C,EAA3CA,CAAZ;QACA,IAAM0G,YAAY,GAAG1G,SAAAA,CAAAA,SAAAA,CAAAA,CAASC,aAATD,CAAuB,OAAvBA,CAArB;QAEA0G,YAAY,CAACC,WAAbD,GAA2BzB,IAA3ByB;QACAH,GAAG,CAACK,IAAJL,CAASrF,WAATqF,CAAqBG,YAArBH,CAAAA;QAEA,OAAOG,YAAY,CAAChC,KAApB;MACD;IACF;IAED,SAASV,WAAT,CAAqBF,WAArB,EAAkC;MAChC,IAAMM,QAAQ,GAAG,EAAjB;MACAN,WAAW,CAAC9E,OAAZ8E,CAAoB,UAAA,KAAK,EAAI;QAC3B;QACA,IAAI,CAACY,KAAL,EAAY;UACV;QACD;QACD,IAAIR,KAAJ;QACA,IAAI;UACFA,KAAK,GAAGQ,KAAK,CAACR,KAANQ,IAAeA,KAAK,CAACN,QAA7BF;QACD,CAFD,CAEE,OAAO2C,CAAP,EAAU;UACVzB,QAAAA,CAAAA,SAAAA,CAAAA,CAAQI,GAARJ,CAAAA,gCAAAA,CAAAA,MAAAA,CAA6CV,KAAK,CAACC,IAAnDS,CAAAA,EAA2DyB,CAA3DzB,CAAAA;UACA;QACD;QAED,IAAIlB,KAAK,IAAI,CAAA,CAAA,EAAA,QAAA,CAAA,SAAA,CAAA,EAAOA,KAAP,CAAA,KAAiB,QAA9B,EAAwC;UACtC,IAAI;YACF,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAQA,KAAK,IAAI,EAAjB,CAAA,CAAqBlF,OAArB,CAA6BoF,QAAQ,CAACxB,IAATwB,CAAc0C,IAAd1C,CAAmBA,QAAnBA,CAA7B,CAAA;UACD,CAFD,CAEE,OAAOyC,CAAP,EAAU;YACVzB,QAAAA,CAAAA,SAAAA,CAAAA,CAAQI,GAARJ,CAAAA,qCAAAA,CAAAA,MAAAA,CAAkDV,KAAK,CAACC,IAAxDS,CAAAA,EAAgEyB,CAAhEzB,CAAAA;YACA;UACD;QACF,CAPD,MAOO;UACLA,QAAAA,CAAAA,SAAAA,CAAAA,CAAQI,GAARJ,CAAY,mCAAZA,CAAAA;UACA;QACD;MACF,CAxBDtB,CAAAA;MA0BA,OAAOM,QAAP;IACD;IAED,SAASD,UAAT,CAAoB4C,WAApB,EAAiC;MAC/B,OAAO;QACL/I,OAAO,EAAE,SAAA,OAAA,GAAM;UACb,IAAMiF,OAAO,GAAG,CAAC8D,WAAW,CAACC,gBAAZD,IAAgC,CAAA,CAAjC,EAAqCpC,IAArD;UACA,OAAO/H,OAAO,CAAC+E,SAAR/E,CAAkBmK,WAAW,CAACrF,OAA9B9E,EAAuCqG,OAAvCrG,CAAP;QACD,CAJI;QAKLqK,GAAG,EAAE,SAAA,GAAA,GAAA;UAAA,OAAMF,WAAW,CAAClI,KAAZkI,CAAkBtC,gBAAlBsC,CAAmC,KAAnCA,CAAN;QAAA;MALA,CAAP;IAOD;EACF;AACF;AAED,SAAS9J,SAAT,GAAqB;EACnB,OAAO;IACL0E,SAAS,EAATA,SADK;IAEL/D,IAAI,EAAE;MACJsJ,QAAQ,EAARA;IADI;EAFD,CAAP;EAOA,SAASA,QAAT,CAAkBC,OAAlB,EAA2B;IACzB,SAAS7E,MAAT,CAAgBY,GAAhB,EAAqB;MACnB,IAAI,CAAA,CAAA,EAAA,SAAA,CAAA,SAAA,EAAUiE,OAAO,CAACF,GAAlB,CAAJ,EAA4B;QAC1B,OAAO3G,OAAO,CAACtC,OAARsC,EAAP;MACD;MACD,OAAO,OAAO,CAACtC,OAAR,CAAgBmJ,OAAO,CAACF,GAAxB,CAAA,CACJhJ,IADI,CACC,UAAA,EAAE,EAAA;QAAA,OACN,OAAOiF,GAAP,KAAe,UAAf,GAA4BA,GAAG,CAACC,EAAD,CAA/B,GAAsC,CAAA,CAAA,EAAA,SAAA,CAAA,YAAA,EAAaA,EAAb,EAAiB7F,UAAU,CAACM,IAAXN,CAAgBO,OAAjC,CADhC;MAAA,CADH,CAAA,CAIJI,IAJI,CAIC,UAAA,IAAI,EAAA;QAAA,OAAI,CAAA,CAAA,EAAA,SAAA,CAAA,SAAA,EAAUoB,IAAV,EAAgB,CAAA,CAAA,EAAA,SAAA,CAAA,QAAA,EAAS8H,OAAO,CAACF,GAAjB,CAAhB,CAAJ;MAAA,CAJL,CAAA,CAKJhJ,IALI,CAMH,UAAA,OAAO,EAAA;QAAA,OACL,IAAIqC,OAAJ,CAAY,UAACtC,OAAD,EAAUoJ,MAAV,EAAqB;UAC/BD,OAAO,CAACE,MAARF,GAAiBnJ,OAAjBmJ;UACAA,OAAO,CAACG,OAARH,GAAkBC,MAAlBD;UACAA,OAAO,CAACF,GAARE,GAAc9D,OAAd8D;QACD,CAJD,CADK;MAAA,CANJ,CAAP;IAaD;IAED,OAAO;MACL7E,MAAM,EAANA;IADK,CAAP;EAGD;EAED,SAASX,SAAT,CAAmB7D,IAAnB,EAAyB;IACvB,IAAI,EAAEA,IAAI,YAAYyJ,OAAlB,CAAJ,EAAgC;MAC9B,OAAOjH,OAAO,CAACtC,OAARsC,CAAgBxC,IAAhBwC,CAAP;IACD;IAED,OAAO,gBAAgB,CAACxC,IAAD,CAAhB,CAAuBG,IAAvB,CAA4B,YAAM;MACvC,IAAIH,IAAI,YAAY0J,gBAApB,EAAsC;QACpC,OAAON,QAAQ,CAACpJ,IAAD,CAARoJ,CAAe5E,MAAf4E,EAAP;MACD;MACD,OAAO,OAAO,CAACzD,GAAR,CAAY,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAQ3F,IAAI,CAACuD,UAAb,CAAA,CAAyBqC,GAAzB,CAA6B,UAAA,KAAK,EAAA;QAAA,OAAI/B,SAAS,CAACX,KAAD,CAAb;MAAA,CAAlC,CAAZ,CAAP;IACD,CALM,CAAP;IAOA,SAASyG,gBAAT,CAA0BtJ,EAA1B,EAA8B;MAC5B,IAAMuJ,UAAU,GAAGvJ,EAAE,CAACU,KAAHV,CAASsG,gBAATtG,CAA0B,YAA1BA,CAAnB;MAEA,IAAI,CAACuJ,UAAL,EAAiB;QACf,OAAOpH,OAAO,CAACtC,OAARsC,CAAgBnC,EAAhBmC,CAAP;MACD;MAED,OAAO,OAAO,CACXqB,SADI,CACM+F,UADN,CAAA,CAEJzJ,IAFI,CAEC,UAAA,OAAO,EAAI;QACfE,EAAE,CAACU,KAAHV,CAASwJ,WAATxJ,CAAqB,YAArBA,EAAmCyJ,OAAnCzJ,EAA4CA,EAAE,CAACU,KAAHV,CAAS0J,mBAAT1J,CAA6B,YAA7BA,CAA5CA,CAAAA;MACD,CAJI,CAAA,CAKJF,IALI,CAKC,YAAA;QAAA,OAAME,EAAN;MAAA,CALD,CAAP;IAMD;EACF;AACF;eAEcb,U","sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/**\n * This file is copied from https://github.com/tsayen/dom-to-image\n * Modified by heshan0131 to allow loading external stylesheets and inline webfonts\n */\n\nimport window from 'global/window';\nimport document from 'global/document';\nimport console from 'global/console';\nimport svgToMiniDataURI from 'mini-svg-data-uri';\nimport {IMAGE_EXPORT_ERRORS} from 'constants/user-feedbacks';\nimport {\n  canvasToBlob,\n  escape,\n  escapeXhtml,\n  delay,\n  processClone,\n  asArray,\n  makeImage,\n  mimeType,\n  dataAsUrl,\n  isDataUrl,\n  isSrcAsDataUrl,\n  resolveUrl,\n  getWidth,\n  getHeight,\n  getAndEncode\n} from './dom-utils';\n\nconst inliner = newInliner();\nconst fontFaces = newFontFaces();\nconst images = newImages();\n// Default impl options\nconst defaultOptions = {\n  // Default is to fail on error, no placeholder\n  imagePlaceholder: undefined,\n  // Default cache bust is false, it will use the cache\n  cacheBust: false\n};\n\nconst domtoimage = {\n  toSvg,\n  toPng,\n  toJpeg,\n  toBlob,\n  toPixelData,\n  impl: {\n    fontFaces,\n    images,\n    inliner,\n    options: {}\n  }\n};\n\n/**\n   * @param {Node} node - The DOM Node object to render\n   * @param {Object} options - Rendering options\n   * @param {Function} [options.filter] - Should return true if passed node should be included in the output\n   *          (excluding node means excluding it's children as well). Not called on the root node.\n   * @param {String} [options.bgcolor] - color for the background, any valid CSS color value.\n   * @param {Number} [options.width] - width to be applied to node before rendering.\n   * @param {Number} [options.height] - height to be applied to node before rendering.\n   * @param {Object} [options.style] - an object whose properties to be copied to node's style before rendering.\n   * @param {Number} [options.quality] - a Number between 0 and 1 indicating image quality (applicable to JPEG only),\n              defaults to 1.0.\n    * @param {String} [options.imagePlaceholder] - dataURL to use as a placeholder for failed images, default behaviour is to fail fast on images we can't fetch\n    * @param {Boolean} [options.cacheBust] - set to true to cache bust by appending the time to the request url\n    * @return {Promise} - A promise that is fulfilled with a SVG image data URL\n    * */\nfunction toSvg(node, options) {\n  options = options || {};\n  copyOptions(options);\n  return Promise.resolve(node)\n    .then(nd => cloneNode(nd, options.filter, true))\n    .then(embedFonts)\n    .then(inlineImages)\n    .then(applyOptions)\n    .then(clone =>\n      makeSvgDataUri(clone, options.width || getWidth(node), options.height || getHeight(node))\n    );\n\n  function applyOptions(clone) {\n    if (options.bgcolor) clone.style.backgroundColor = options.bgcolor;\n\n    if (options.width) clone.style.width = `${options.width}px`;\n    if (options.height) clone.style.height = `${options.height}px`;\n\n    if (options.style)\n      Object.keys(options.style).forEach(property => {\n        clone.style[property] = options.style[property];\n      });\n\n    return clone;\n  }\n}\n\n/**\n * @param {Node} node - The DOM Node object to render\n * @param {Object} options - Rendering options\n * @return {Promise} - A promise that is fulfilled with a Uint8Array containing RGBA pixel data.\n * */\nfunction toPixelData(node, options) {\n  return draw(node, options || {}).then(\n    canvas => canvas.getContext('2d').getImageData(0, 0, getWidth(node), getHeight(node)).data\n  );\n}\n\n/**\n * @param {Node} node - The DOM Node object to render\n * @param {Object} options - Rendering options\n * @return {Promise} - A promise that is fulfilled with a PNG image data URL\n * */\nfunction toPng(node, options) {\n  return draw(node, options || {}).then(canvas => canvas.toDataURL());\n}\n\n/**\n * @param {Node} node - The DOM Node object to render\n * @param {Object} options - Rendering options\n * @return {Promise} - A promise that is fulfilled with a JPEG image data URL\n * */\nfunction toJpeg(node, options) {\n  options = options || {};\n  return draw(node, options).then(canvas => canvas.toDataURL('image/jpeg', options.quality || 1.0));\n}\n\n/**\n * @param {Node} node - The DOM Node object to render\n * @param {Object} options - Rendering options\n * @return {Promise} - A promise that is fulfilled with a PNG image blob\n * */\nfunction toBlob(node, options) {\n  return draw(node, options || {}).then(canvasToBlob);\n}\n\nfunction copyOptions(options) {\n  // Copy options to impl options for use in impl\n  if (typeof options.imagePlaceholder === 'undefined') {\n    domtoimage.impl.options.imagePlaceholder = defaultOptions.imagePlaceholder;\n  } else {\n    domtoimage.impl.options.imagePlaceholder = options.imagePlaceholder;\n  }\n\n  if (typeof options.cacheBust === 'undefined') {\n    domtoimage.impl.options.cacheBust = defaultOptions.cacheBust;\n  } else {\n    domtoimage.impl.options.cacheBust = options.cacheBust;\n  }\n}\n\nfunction draw(domNode, options) {\n  return toSvg(domNode, options)\n    .then(makeImage)\n    .then(delay(100))\n    .then(image => {\n      const canvas = newCanvas(domNode);\n      canvas.getContext('2d').drawImage(image, 0, 0);\n      return canvas;\n    });\n\n  function newCanvas(dNode) {\n    const canvas = document.createElement('canvas');\n    canvas.width = options.width || getWidth(dNode);\n    canvas.height = options.height || getHeight(dNode);\n\n    if (options.bgcolor) {\n      const ctx = canvas.getContext('2d');\n      ctx.fillStyle = options.bgcolor;\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n    }\n\n    return canvas;\n  }\n}\n\nfunction cloneNode(node, filter, root) {\n  if (!root && filter && !filter(node)) {\n    return Promise.resolve();\n  }\n\n  return Promise.resolve(node)\n    .then(makeNodeCopy)\n    .then(clone => cloneChildren(node, clone, filter))\n    .then(clone => processClone(node, clone));\n\n  function makeNodeCopy(nd) {\n    if (nd instanceof window.HTMLCanvasElement) {\n      return makeImage(nd.toDataURL());\n    }\n    return nd.cloneNode(false);\n  }\n\n  function cloneChildrenInOrder(parent, arrChildren, flt) {\n    let done = Promise.resolve();\n    arrChildren.forEach(child => {\n      done = done\n        .then(() => cloneNode(child, flt))\n        .then(childClone => {\n          if (childClone) {\n            parent.appendChild(childClone);\n          }\n        });\n    });\n    return done;\n  }\n\n  function cloneChildren(original, clone, flt) {\n    const children = original.childNodes;\n    if (children.length === 0) {\n      return Promise.resolve(clone);\n    }\n\n    return cloneChildrenInOrder(clone, asArray(children), flt).then(() => clone);\n  }\n}\n\nfunction embedFonts(node) {\n  return fontFaces.resolveAll().then(cssText => {\n    const styleNode = document.createElement('style');\n    node.appendChild(styleNode);\n    styleNode.appendChild(document.createTextNode(cssText));\n    return node;\n  });\n}\n\nfunction inlineImages(node) {\n  return images.inlineAll(node).then(() => node);\n}\n\nfunction makeSvgDataUri(node, width, height) {\n  return Promise.resolve(node).then(nd => {\n    nd.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml');\n    const serializedString = new window.XMLSerializer().serializeToString(nd);\n\n    const xhtml = escapeXhtml(serializedString);\n    const foreignObject = `<foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">${xhtml}</foreignObject>`;\n    const svgStr = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${width}\" height=\"${height}\">${foreignObject}</svg>`;\n\n    // Optimizing SVGs in data URIs\n    // see https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n    // the best way of encoding SVG in a data: URI is data:image/svg+xml,[actual data].\n    // We donâ€™t need the ;charset=utf-8 parameter because the given SVG is ASCII.\n    return svgToMiniDataURI(svgStr);\n  });\n}\n\nfunction newInliner() {\n  const URL_REGEX = /url\\(['\"]?([^'\"]+?)['\"]?\\)/g;\n\n  return {\n    inlineAll,\n    shouldProcess,\n    impl: {\n      readUrls,\n      inline\n    }\n  };\n\n  function shouldProcess(string) {\n    return string.search(URL_REGEX) !== -1;\n  }\n\n  function readUrls(string) {\n    const result = [];\n    let match;\n    while ((match = URL_REGEX.exec(string)) !== null) {\n      result.push(match[1]);\n    }\n    return result.filter(url => {\n      return !isDataUrl(url);\n    });\n  }\n\n  function urlAsRegex(url0) {\n    return new RegExp(`(url\\\\([\\'\"]?)(${escape(url0)})([\\'\"]?\\\\))`, 'g');\n  }\n\n  function inline(string, url, baseUrl, get) {\n    return Promise.resolve(url)\n      .then(ul => (baseUrl ? resolveUrl(ul, baseUrl) : ul))\n      .then(ul => (typeof get === 'function' ? get(ul) : getAndEncode(ul, domtoimage.impl.options)))\n      .then(data => dataAsUrl(data, mimeType(url)))\n      .then(dataUrl => string.replace(urlAsRegex(url), `$1${dataUrl}$3`));\n  }\n\n  function inlineAll(string, baseUrl, get) {\n    if (!shouldProcess(string) || isSrcAsDataUrl(string)) {\n      return Promise.resolve(string);\n    }\n    return Promise.resolve(string)\n      .then(readUrls)\n      .then(urls => {\n        let done = Promise.resolve(string);\n        urls.forEach(url => {\n          done = done.then(str => inline(str, url, baseUrl, get));\n        });\n        return done;\n      });\n  }\n}\n\nfunction newFontFaces() {\n  return {\n    resolveAll,\n    impl: {readAll}\n  };\n\n  function resolveAll() {\n    return readAll()\n      .then(webFonts => {\n        return Promise.all(webFonts.map(webFont => webFont.resolve()));\n      })\n      .then(cssStrings => cssStrings.join('\\n'));\n  }\n\n  function readAll() {\n    return Promise.resolve(asArray(document.styleSheets))\n      .then(loadExternalStyleSheets)\n      .then(getCssRules)\n      .then(selectWebFontRules)\n      .then(rules => rules.map(newWebFont));\n\n    function selectWebFontRules(cssRules) {\n      return cssRules\n        .filter(rule => rule.type === window.CSSRule.FONT_FACE_RULE)\n        .filter(rule => inliner.shouldProcess(rule.style.getPropertyValue('src')));\n    }\n\n    function loadExternalStyleSheets(styleSheets) {\n      return Promise.all(\n        styleSheets.map(sheet => {\n          if (sheet.href) {\n            // cloudfont doesn't have allow origin header properly set\n            // error response will remain in cache\n            const cache = sheet.href.includes('uber-fonts') ? 'no-cache' : 'default';\n            return window\n              .fetch(sheet.href, {credentials: 'omit', cache})\n              .then(response => response.text())\n              .then(setBaseHref(sheet.href))\n              .then(toStyleSheet)\n              .catch(err => {\n                // Handle any error that occurred in any of the previous\n                // promises in the chain. stylesheet failed to load should not stop\n                // the process, hence result in only a warning, instead of reject\n                console.warn(IMAGE_EXPORT_ERRORS.styleSheet, sheet.href);\n                console.log(err);\n                return;\n              });\n          }\n          return Promise.resolve(sheet);\n        })\n      );\n\n      function setBaseHref(base) {\n        base = base.split('/');\n        base.pop();\n        base = base.join('/');\n\n        function addBaseHrefToUrl(match, p1) {\n          const url = /^http/i.test(p1) ? p1 : concatAndResolveUrl(base, p1);\n          return `url('${url}')`;\n        }\n\n        // Source: http://stackoverflow.com/a/2676231/3786856\n        function concatAndResolveUrl(url, concat) {\n          const url1 = url.split('/');\n          const url2 = concat.split('/');\n          const url3 = [];\n          for (let i = 0, l = url1.length; i < l; i++) {\n            if (url1[i] === '..') {\n              url3.pop();\n            } else if (url1[i] !== '.') {\n              url3.push(url1[i]);\n            }\n          }\n          for (let i = 0, l = url2.length; i < l; i++) {\n            if (url2[i] === '..') {\n              url3.pop();\n            } else if (url2[i] !== '.') {\n              url3.push(url2[i]);\n            }\n          }\n          return url3.join('/');\n        }\n\n        return text => {\n          return isSrcAsDataUrl(text)\n            ? text\n            : text.replace(/url\\(['\"]?([^'\"]+?)['\"]?\\)/g, addBaseHrefToUrl);\n        };\n      }\n\n      function toStyleSheet(text) {\n        const doc = document.implementation.createHTMLDocument('');\n        const styleElement = document.createElement('style');\n\n        styleElement.textContent = text;\n        doc.body.appendChild(styleElement);\n\n        return styleElement.sheet;\n      }\n    }\n\n    function getCssRules(styleSheets) {\n      const cssRules = [];\n      styleSheets.forEach(sheet => {\n        // try...catch because browser may not able to enumerate rules for cross-domain sheets\n        if (!sheet) {\n          return;\n        }\n        let rules;\n        try {\n          rules = sheet.rules || sheet.cssRules;\n        } catch (e) {\n          console.log(`'Can't read the css rules of: ${sheet.href}`, e);\n          return;\n        }\n\n        if (rules && typeof rules === 'object') {\n          try {\n            asArray(rules || []).forEach(cssRules.push.bind(cssRules));\n          } catch (e) {\n            console.log(`Error while reading CSS rules from ${sheet.href}`, e);\n            return;\n          }\n        } else {\n          console.log('getCssRules can not find cssRules');\n          return;\n        }\n      });\n\n      return cssRules;\n    }\n\n    function newWebFont(webFontRule) {\n      return {\n        resolve: () => {\n          const baseUrl = (webFontRule.parentStyleSheet || {}).href;\n          return inliner.inlineAll(webFontRule.cssText, baseUrl);\n        },\n        src: () => webFontRule.style.getPropertyValue('src')\n      };\n    }\n  }\n}\n\nfunction newImages() {\n  return {\n    inlineAll,\n    impl: {\n      newImage\n    }\n  };\n\n  function newImage(element) {\n    function inline(get) {\n      if (isDataUrl(element.src)) {\n        return Promise.resolve();\n      }\n      return Promise.resolve(element.src)\n        .then(ul =>\n          typeof get === 'function' ? get(ul) : getAndEncode(ul, domtoimage.impl.options)\n        )\n        .then(data => dataAsUrl(data, mimeType(element.src)))\n        .then(\n          dataUrl =>\n            new Promise((resolve, reject) => {\n              element.onload = resolve;\n              element.onerror = reject;\n              element.src = dataUrl;\n            })\n        );\n    }\n\n    return {\n      inline\n    };\n  }\n\n  function inlineAll(node) {\n    if (!(node instanceof Element)) {\n      return Promise.resolve(node);\n    }\n\n    return inlineBackground(node).then(() => {\n      if (node instanceof HTMLImageElement) {\n        return newImage(node).inline();\n      }\n      return Promise.all(asArray(node.childNodes).map(child => inlineAll(child)));\n    });\n\n    function inlineBackground(nd) {\n      const background = nd.style.getPropertyValue('background');\n\n      if (!background) {\n        return Promise.resolve(nd);\n      }\n\n      return inliner\n        .inlineAll(background)\n        .then(inlined => {\n          nd.style.setProperty('background', inlined, nd.style.getPropertyPriority('background'));\n        })\n        .then(() => nd);\n    }\n  }\n}\n\nexport default domtoimage;\n"]},"metadata":{},"sourceType":"script"}
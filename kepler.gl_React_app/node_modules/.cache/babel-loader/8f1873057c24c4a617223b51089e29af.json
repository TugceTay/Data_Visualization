{"ast":null,"code":"export function flatten(array) {\n  var filter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {\n    return true;\n  };\n  if (!Array.isArray(array)) {\n    return filter(array) ? [array] : [];\n  }\n  return flattenArray(array, filter, []);\n}\nfunction flattenArray(array, filter, result) {\n  var index = -1;\n  while (++index < array.length) {\n    var value = array[index];\n    if (Array.isArray(value)) {\n      flattenArray(value, filter, result);\n    } else if (filter(value)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\nexport function fillArray(_ref) {\n  var target = _ref.target,\n    source = _ref.source,\n    _ref$start = _ref.start,\n    start = _ref$start === void 0 ? 0 : _ref$start,\n    _ref$count = _ref.count,\n    count = _ref$count === void 0 ? 1 : _ref$count;\n  var length = source.length;\n  var total = count * length;\n  var copied = 0;\n  for (var i = start; copied < length; copied++) {\n    target[i++] = source[copied];\n  }\n  while (copied < total) {\n    if (copied < total - copied) {\n      target.copyWithin(start + copied, start, start + copied);\n      copied *= 2;\n    } else {\n      target.copyWithin(start + copied, start, start + total - copied);\n      copied = total;\n    }\n  }\n  return target;\n}","map":{"version":3,"sources":["../../../src/utils/flatten.js"],"names":["flatten","array","filter","Array","isArray","flattenArray","result","index","length","value","push","fillArray","target","source","start","count","total","copied","i","copyWithin"],"mappings":"AAgCA,OAAO,SAASA,OAAT,CAAiBC,KAAjB,EAA6C;EAAA,IAArBC,MAAqB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAZ,YAAA;IAAA,OAAM,IAAN;EAAA,CAAY;EAElD,IAAI,CAACC,KAAK,CAACC,OAAND,CAAcF,KAAdE,CAAL,EAA2B;IACzB,OAAOD,MAAM,CAACD,KAAD,CAANC,GAAgB,CAACD,KAAD,CAAhBC,GAA0B,EAAjC;EACD;EAED,OAAOG,YAAY,CAACJ,KAAD,EAAQC,MAAR,EAAgB,EAAhB,CAAnB;AACD;AAGD,SAASG,YAAT,CAAsBJ,KAAtB,EAA6BC,MAA7B,EAAqCI,MAArC,EAA6C;EAC3C,IAAIC,KAAK,GAAG,CAAC,CAAb;EACA,OAAO,EAAEA,KAAF,GAAUN,KAAK,CAACO,MAAvB,EAA+B;IAC7B,IAAMC,KAAK,GAAGR,KAAK,CAACM,KAAD,CAAnB;IACA,IAAIJ,KAAK,CAACC,OAAND,CAAcM,KAAdN,CAAJ,EAA0B;MACxBE,YAAY,CAACI,KAAD,EAAQP,MAAR,EAAgBI,MAAhB,CAAZD;IACD,CAFD,MAEO,IAAIH,MAAM,CAACO,KAAD,CAAV,EAAmB;MACxBH,MAAM,CAACI,IAAPJ,CAAYG,KAAZH,CAAAA;IACD;EACF;EACD,OAAOA,MAAP;AACD;AAGD,OAAO,SAASK,SAAT,CAAA,IAAA,EAA2D;EAAA,IAAvCC,MAAuC,GAAA,IAAA,CAAvCA,MAAuC;IAA/BC,MAA+B,GAAA,IAAA,CAA/BA,MAA+B;IAAA,UAAA,GAAA,IAAA,CAAvBC,KAAuB;IAAvBA,KAAuB,GAAA,UAAA,KAAA,KAAA,CAAA,GAAf,CAAe,GAAA,UAAA;IAAA,UAAA,GAAA,IAAA,CAAZC,KAAY;IAAZA,KAAY,GAAA,UAAA,KAAA,KAAA,CAAA,GAAJ,CAAI,GAAA,UAAA;EAChE,IAAMP,MAAM,GAAGK,MAAM,CAACL,MAAtB;EACA,IAAMQ,KAAK,GAAGD,KAAK,GAAGP,MAAtB;EACA,IAAIS,MAAM,GAAG,CAAb;EACA,KAAK,IAAIC,CAAC,GAAGJ,KAAb,EAAoBG,MAAM,GAAGT,MAA7B,EAAqCS,MAAM,EAA3C,EAA+C;IAC7CL,MAAM,CAACM,CAAC,EAAF,CAANN,GAAcC,MAAM,CAACI,MAAD,CAApBL;EACD;EAED,OAAOK,MAAM,GAAGD,KAAhB,EAAuB;IAGrB,IAAIC,MAAM,GAAGD,KAAK,GAAGC,MAArB,EAA6B;MAC3BL,MAAM,CAACO,UAAPP,CAAkBE,KAAK,GAAGG,MAA1BL,EAAkCE,KAAlCF,EAAyCE,KAAK,GAAGG,MAAjDL,CAAAA;MACAK,MAAM,IAAI,CAAVA;IACD,CAHD,MAGO;MACLL,MAAM,CAACO,UAAPP,CAAkBE,KAAK,GAAGG,MAA1BL,EAAkCE,KAAlCF,EAAyCE,KAAK,GAAGE,KAARF,GAAgBG,MAAzDL,CAAAA;MACAK,MAAM,GAAGD,KAATC;IACD;EACF;EAED,OAAOL,MAAP;AACD","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/**\n * Flattens a nested array into a single level array,\n * or a single value into an array with one value\n * @example flatten([[1, [2]], [3], 4]) => [1, 2, 3, 4]\n * @example flatten(1) => [1]\n * @param {Array} array The array to flatten.\n * @param {Function} filter= - Optional predicate called on each `value` to\n *   determine if it should be included (pushed onto) the resulting array.\n * @param {Function} map= - Optional transform applied to each array elements.\n * @param {Array} result=[] - Optional array to push value into\n * @return {Array} Returns the new flattened array (new array or `result` if provided)\n */\nexport function flatten(array, filter = () => true) {\n  // Wrap single object in array\n  if (!Array.isArray(array)) {\n    return filter(array) ? [array] : [];\n  }\n  // Deep flatten and filter the array\n  return flattenArray(array, filter, []);\n}\n\n// Deep flattens an array. Helper to `flatten`, see its parameters\nfunction flattenArray(array, filter, result) {\n  let index = -1;\n  while (++index < array.length) {\n    const value = array[index];\n    if (Array.isArray(value)) {\n      flattenArray(value, filter, result);\n    } else if (filter(value)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\n// Uses copyWithin to significantly speed up typed array value filling\nexport function fillArray({target, source, start = 0, count = 1}) {\n  const length = source.length;\n  const total = count * length;\n  let copied = 0;\n  for (let i = start; copied < length; copied++) {\n    target[i++] = source[copied];\n  }\n\n  while (copied < total) {\n    // If we have copied less than half, copy everything we got\n    // else copy remaining in one operation\n    if (copied < total - copied) {\n      target.copyWithin(start + copied, start, start + copied);\n      copied *= 2;\n    } else {\n      target.copyWithin(start + copied, start, start + total - copied);\n      copied = total;\n    }\n  }\n\n  return target;\n}\n"]},"metadata":{},"sourceType":"module"}